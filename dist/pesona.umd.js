(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["pesona"] = factory();
	else
		root["pesona"] = factory();
})((typeof self !== 'undefined' ? self : this), function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		0: 0
/******/ 	};
/******/
/******/
/******/
/******/ 	// script path function
/******/ 	function jsonpScriptSrc(chunkId) {
/******/ 		return __webpack_require__.p + "pesona.umd." + ({"1":"simplebar-overwrite","2":"simplebar-style","3":"vendors~simplebar"}[chunkId]||chunkId) + ".js"
/******/ 	}
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// JSONP chunk loading for javascript
/******/
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData !== 0) { // 0 means "already installed".
/******/
/******/ 			// a Promise means "currently loading".
/******/ 			if(installedChunkData) {
/******/ 				promises.push(installedChunkData[2]);
/******/ 			} else {
/******/ 				// setup Promise in chunk cache
/******/ 				var promise = new Promise(function(resolve, reject) {
/******/ 					installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 				});
/******/ 				promises.push(installedChunkData[2] = promise);
/******/
/******/ 				// start chunk loading
/******/ 				var script = document.createElement('script');
/******/ 				var onScriptComplete;
/******/
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.src = jsonpScriptSrc(chunkId);
/******/
/******/ 				onScriptComplete = function (event) {
/******/ 					// avoid mem leaks in IE.
/******/ 					script.onerror = script.onload = null;
/******/ 					clearTimeout(timeout);
/******/ 					var chunk = installedChunks[chunkId];
/******/ 					if(chunk !== 0) {
/******/ 						if(chunk) {
/******/ 							var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 							var realSrc = event && event.target && event.target.src;
/******/ 							var error = new Error('Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')');
/******/ 							error.type = errorType;
/******/ 							error.request = realSrc;
/******/ 							chunk[1](error);
/******/ 						}
/******/ 						installedChunks[chunkId] = undefined;
/******/ 					}
/******/ 				};
/******/ 				var timeout = setTimeout(function(){
/******/ 					onScriptComplete({ type: 'timeout', target: script });
/******/ 				}, 120000);
/******/ 				script.onerror = script.onload = onScriptComplete;
/******/ 				document.head.appendChild(script);
/******/ 			}
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	var jsonpArray = (typeof self !== 'undefined' ? self : this)["webpackJsonppesona"] = (typeof self !== 'undefined' ? self : this)["webpackJsonppesona"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "0029":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "0185":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__("e5fa");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "01f9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("2d00");
var $export = __webpack_require__("5ca1");
var redefine = __webpack_require__("2aba");
var hide = __webpack_require__("32e9");
var Iterators = __webpack_require__("84f2");
var $iterCreate = __webpack_require__("41a0");
var setToStringTag = __webpack_require__("7f20");
var getPrototypeOf = __webpack_require__("38fd");
var ITERATOR = __webpack_require__("2b4c")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "02f4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("4588");
var defined = __webpack_require__("be13");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "0390":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var at = __webpack_require__("02f4")(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),

/***/ "04ff":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("5ca1");
var $parseInt = __webpack_require__("3ca5");
// 20.1.2.13 Number.parseInt(string, radix)
$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });


/***/ }),

/***/ "0a0a":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da3c");
var core = __webpack_require__("a7d3");
var LIBRARY = __webpack_require__("b457");
var wksExt = __webpack_require__("fda1");
var defineProperty = __webpack_require__("3adc").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "0a49":
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__("9b43");
var IObject = __webpack_require__("626a");
var toObject = __webpack_require__("4bf8");
var toLength = __webpack_require__("9def");
var asc = __webpack_require__("cd1c");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "0ba5":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("3296");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("6780d878", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "0bfb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__("cb7c");
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "0d58":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__("ce10");
var enumBugKeys = __webpack_require__("e11e");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "0d7d":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("ccf0");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("750688d5", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "0eef":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("848a");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("168b4cdf", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "0f6e":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("4bea");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("971beb70", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "0f89":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("6f8a");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "103a":
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__("da3c").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "1169":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__("2d95");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "11e9":
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__("52a7");
var createDesc = __webpack_require__("4630");
var toIObject = __webpack_require__("6821");
var toPrimitive = __webpack_require__("6a99");
var has = __webpack_require__("69a8");
var IE8_DOM_DEFINE = __webpack_require__("c69a");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__("9e1e") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "12fd":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("6f8a");
var document = __webpack_require__("da3c").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "1495":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("86cc");
var anObject = __webpack_require__("cb7c");
var getKeys = __webpack_require__("0d58");

module.exports = __webpack_require__("9e1e") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "1a37":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("900e");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("20dc70f1", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "1b1e":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".default-padding[data-v-6e5f93c1]{padding:5px}.change-my-color[data-v-6e5f93c1]{background-color:rgba(0,0,0,0)}.pointer[data-v-6e5f93c1]{cursor:pointer}", ""]);

// exports


/***/ }),

/***/ "1b55":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("7772")('wks');
var uid = __webpack_require__("7b00");
var Symbol = __webpack_require__("da3c").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "1b8f":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a812");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "20d6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = __webpack_require__("5ca1");
var $find = __webpack_require__("0a49")(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__("9c6c")(KEY);


/***/ }),

/***/ "214f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__("b0c5");
var redefine = __webpack_require__("2aba");
var hide = __webpack_require__("32e9");
var fails = __webpack_require__("79e5");
var defined = __webpack_require__("be13");
var wks = __webpack_require__("2b4c");
var regexpExec = __webpack_require__("520a");

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),

/***/ "230e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
var document = __webpack_require__("7726").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "2312":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("8ce0");


/***/ }),

/***/ "2350":
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),

/***/ "23c6":
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__("2d95");
var TAG = __webpack_require__("2b4c")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "2418":
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__("6a9b");
var toLength = __webpack_require__("a5ab");
var toAbsoluteIndex = __webpack_require__("1b8f");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "268f":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("2a04");

/***/ }),

/***/ "2695":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("43c8");
var toIObject = __webpack_require__("6a9b");
var arrayIndexOf = __webpack_require__("2418")(false);
var IE_PROTO = __webpack_require__("5d8f")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "27d6":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&("style"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}
function w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(" ").replace(/\s+/g," ").replace(/^\s+|\s+$/,"")}function y(a,b){for(var c=a.className.split(/\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}
function ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,"link",{rel:"stylesheet",href:b,media:"all"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error("Stylesheet failed to load");d()}):setTimeout(function(){e=!0;d()},0);u(a,"head",b)}
function A(a,b,c,d){var e=a.c.getElementsByTagName("head")[0];if(e){var f=t(a,"script",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&"loaded"!=this.readyState&&"complete"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,"HEAD"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error("Script load timeout")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||"-"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\W_]+/g,"").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a="n";var c=(b||"n4").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+" "+(a.f+"00")+" 300px "+I(a.c)}function I(a){var b=[];a=a.split(/,\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/['"]/g,"");-1!=d.indexOf(" ")||/^\d/.test(d)?b.push("'"+d+"'"):b.push(d)}return b.join(",")}function J(a){return a.a+a.f}function H(a){var b="normal";"o"===a.a?b="oblique":"i"===a.a&&(b="italic");return b}
function ga(a){var b=4,c="n",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F("-");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c("wf","loading")]);K(a,"loading")}function L(a){if(a.g){var b=y(a.f,a.a.c("wf","active")),c=[],d=[a.a.c("wf","loading")];b||c.push(a.a.c("wf","inactive"));w(a.f,c,d)}K(a,"inactive")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,"span",{"aria-hidden":"true"},this.f)}function N(a){u(a.c,"body",a.a)}function O(a){return"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:"+I(a.c)+";"+("font-style:"+H(a)+";font-weight:"+(a.f+"00")+";")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||"BESbswy";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+",serif",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+",sans-serif",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G("serif",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G("sans-serif",J(this.a));a=
O(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:"serif",C:"sans-serif"},S=null;function T(){if(null===S){var a=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f["sans-serif"]=this.m.a.offsetWidth;this.A=q();U(this)};
function la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f["sans-serif"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c("wf",a.c,J(a).toString(),"active")],[b.a.c("wf",a.c,J(a).toString(),"loading"),b.a.c("wf",a.c,J(a).toString(),"inactive")]);K(b,"fontactive",a);this.m=!0;na(this)};
W.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c("wf",a.c,J(a).toString(),"active")),d=[],e=[b.a.c("wf",a.c,J(a).toString(),"loading")];c||d.push(b.a.c("wf",a.c,J(a).toString(),"inactive"));w(b.f,d,e)}K(b,"fontinactive",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c("wf","active")],[a.a.c("wf","loading"),a.a.c("wf","inactive")]),K(a,"active")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};
function qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c("wf",x.c,J(x).toString(),"loading")]);K(r,"fontloading",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);
X=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}
ra.prototype.load=function(a){function b(){if(f["__mti_fntLst"+d]){var c=f["__mti_fntLst"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||"https://fast.fonts.net/jsapi")+"/"+d+".js"+(e?"?v="+e:""),function(e){e?a([]):(f["__MonotypeConfiguration__"+
d]=function(){return c.a},b())}).id="__MonotypeAPIScript__"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(":"),d[1])for(var h=d[1].split(","),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||""}var ua="https://fonts.googleapis.com/css";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(":");3==e.length&&a.f.push(e.pop());var f="";2==e.length&&""!=e[1]&&(f=":");a.a.push(e.join(f))}}
function wa(a){if(0==a.a.length)throw Error("No fonts to load!");if(-1!=a.c.indexOf("kit="))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,"+"));b=a.c+"?family="+c.join("%7C");0<a.f.length&&(b+="&subset="+a.f.join(","));0<a.g.length&&(b+="&text="+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}
var za={latin:"BESbswy","latin-ext":"\u00e7\u00f6\u00fc\u011f\u015f",cyrillic:"\u0439\u044f\u0416",greek:"\u03b1\u03b2\u03a3",khmer:"\u1780\u1781\u1782",Hanuman:"\u1780\u1781\u1782"},Aa={thin:"1",extralight:"2","extra-light":"2",ultralight:"2","ultra-light":"2",light:"3",regular:"4",book:"4",medium:"5","semi-bold":"6",semibold:"6","demi-bold":"6",demibold:"6",bold:"7","extra-bold":"8",extrabold:"8","ultra-bold":"8",ultrabold:"8",black:"9",heavy:"9",l:"3",r:"4",b:"7"},Ba={i:"i",italic:"i",n:"n",normal:"n"},
Ca=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;
function Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(":"),e=d[0].replace(/\+/g," "),f=["n4"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(","),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k="";else{k=n[2];k=null==k||""==k?"n":Ba[k];n=n[1];if(null==n||""==n)n="4";else var r=Aa[n],n=r?r:isNaN(n)?"4":n.substr(0,1);k=[k,n].join("")}}else k="";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(","):
g,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||"https://use.typekit.net")+"/"+b+".js",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga("font-weight:"+h.weight+";font-style:"+h.style)))}a(d.a)},A(this.c,(this.f.api||"https://f.fontdeck.com/s/css/js/")+ea(this.c)+"/"+b+".js",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)}; true?!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return Z}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined;}());


/***/ }),

/***/ "28a5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isRegExp = __webpack_require__("aae3");
var anObject = __webpack_require__("cb7c");
var speciesConstructor = __webpack_require__("ebd6");
var advanceStringIndex = __webpack_require__("0390");
var toLength = __webpack_require__("9def");
var callRegExpExec = __webpack_require__("5f1b");
var regexpExec = __webpack_require__("520a");
var fails = __webpack_require__("79e5");
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
__webpack_require__("214f")('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});


/***/ }),

/***/ "2a04":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("4938");
var $Object = __webpack_require__("a7d3").Object;
module.exports = function getOwnPropertyDescriptor(it, key) {
  return $Object.getOwnPropertyDescriptor(it, key);
};


/***/ }),

/***/ "2aba":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7726");
var hide = __webpack_require__("32e9");
var has = __webpack_require__("69a8");
var SRC = __webpack_require__("ca5a")('src');
var $toString = __webpack_require__("fa5b");
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__("8378").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "2aeb":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__("cb7c");
var dPs = __webpack_require__("1495");
var enumBugKeys = __webpack_require__("e11e");
var IE_PROTO = __webpack_require__("613b")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__("230e")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__("fab2").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "2b4c":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("5537")('wks');
var uid = __webpack_require__("ca5a");
var Symbol = __webpack_require__("7726").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "2cbf":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("aff5");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("6437ba3c", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "2d00":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "2d95":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "2ea1":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__("6f8a");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "2ef0":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.15';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.
      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/[\r\n]/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      // Like with sourceURL, we take care to not check the option's prototype,
      // as this configuration is a code injection vector.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}.call(this));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba"), __webpack_require__("62e4")(module)))

/***/ }),

/***/ "2f21":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("79e5");

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};


/***/ }),

/***/ "2f8e":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-layout-center .container[data-v-38d79ba9]{height:100vh;display:grid}.pesona-layout-center .container .content[data-v-38d79ba9]{margin:auto}", ""]);

// exports


/***/ }),

/***/ "2fdb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

var $export = __webpack_require__("5ca1");
var context = __webpack_require__("d2c8");
var INCLUDES = 'includes';

$export($export.P + $export.F * __webpack_require__("5147")(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "31c2":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "3296":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-sidenav-list .container[data-v-3915892d]{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-flow:row nowrap;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-justify-content:space-around;-ms-flex-pack:distribute;justify-content:space-around;-webkit-border-radius:5px;border-radius:5px;padding:4px 8px;margin:0 4%;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.pesona-sidenav-list .container .icon[data-v-3915892d]{opacity:.3}.pesona-sidenav-list .container .text[data-v-3915892d]{-webkit-box-flex:2;-webkit-flex-grow:2;-ms-flex-positive:2;flex-grow:2;padding-left:8px}.pesona-sidenav-list .container .indicator[data-v-3915892d]{opacity:.3}.pesona-sidenav-list .container[data-v-3915892d]:hover{background-color:#007bff}.pesona-sidenav-list .shrink .text[data-v-3915892d]{font-size:10px;font-weight:400}.pesona-sidenav-list .shrink[data-v-3915892d]:hover{background-color:#fff}.bolder[data-v-3915892d]{font-weight:600}", ""]);

// exports


/***/ }),

/***/ "32e9":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("86cc");
var createDesc = __webpack_require__("4630");
module.exports = __webpack_require__("9e1e") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "37a8":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLoDashboard_vue_vue_type_style_index_0_id_0ca8b559_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("0f6e");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLoDashboard_vue_vue_type_style_index_0_id_0ca8b559_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLoDashboard_vue_vue_type_style_index_0_id_0ca8b559_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLoDashboard_vue_vue_type_style_index_0_id_0ca8b559_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "3846":
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__("9e1e") && /./g.flags != 'g') __webpack_require__("86cc").f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__("0bfb")
});


/***/ }),

/***/ "38fd":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__("69a8");
var toObject = __webpack_require__("4bf8");
var IE_PROTO = __webpack_require__("613b")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "3adc":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("0f89");
var IE8_DOM_DEFINE = __webpack_require__("a47f");
var toPrimitive = __webpack_require__("2ea1");
var dP = Object.defineProperty;

exports.f = __webpack_require__("7d95") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "3ca5":
/***/ (function(module, exports, __webpack_require__) {

var $parseInt = __webpack_require__("7726").parseInt;
var $trim = __webpack_require__("aa77").trim;
var ws = __webpack_require__("fdef");
var hex = /^[-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;


/***/ }),

/***/ "3dab":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("927e");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("2fce6146", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "41a0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__("2aeb");
var descriptor = __webpack_require__("4630");
var setToStringTag = __webpack_require__("7f20");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__("32e9")(IteratorPrototype, __webpack_require__("2b4c")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "43c8":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "456d":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__("4bf8");
var $keys = __webpack_require__("0d58");

__webpack_require__("5eda")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "4588":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "4630":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "4851":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("2f8e");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("3d89ac48", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "48bb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xChildNavigator_vue_vue_type_style_index_0_id_079d284d_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("bd23");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xChildNavigator_vue_vue_type_style_index_0_id_079d284d_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xChildNavigator_vue_vue_type_style_index_0_id_079d284d_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xChildNavigator_vue_vue_type_style_index_0_id_079d284d_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "4938":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__("6a9b");
var $getOwnPropertyDescriptor = __webpack_require__("626e").f;

__webpack_require__("c165")('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});


/***/ }),

/***/ "499e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/listToStyles.js
/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/addStylesClient.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return addStylesClient; });
/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/



var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

function addStylesClient (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),

/***/ "4bea":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-layout-dashboard .container[data-v-0ca8b559]{height:100vh;display:grid;grid-template-columns:fit-content(280px) auto;grid-template-rows:auto}.pesona-layout-dashboard .container .side-nav[data-v-0ca8b559]{overflow-y:hidden;-webkit-box-shadow:7px 0 60px rgba(0,0,0,.05);box-shadow:7px 0 60px rgba(0,0,0,.05)}.pesona-layout-dashboard .container .inner-container[data-v-0ca8b559]{position:relative;overflow:auto}.pesona-layout-dashboard .container .inner-container .header-toolbar[data-v-0ca8b559]{height:60px;position:-webkit-sticky;position:sticky;z-index:99999;top:0;background-color:var(--pesona-brand-color-secondary-darken-10);-webkit-box-shadow:0 .46875rem 2.1875rem rgba(4,9,20,.03),0 .9375rem 1.40625rem rgba(4,9,20,.03),0 .25rem .53125rem rgba(4,9,20,.05),0 .125rem .1875rem rgba(4,9,20,.03);box-shadow:0 .46875rem 2.1875rem rgba(4,9,20,.03),0 .9375rem 1.40625rem rgba(4,9,20,.03),0 .25rem .53125rem rgba(4,9,20,.05),0 .125rem .1875rem rgba(4,9,20,.03)}.pesona-layout-dashboard .container .inner-container .content[data-v-0ca8b559]{margin:1.5rem}.pesona-layout-dashboard .container .inner-container .footer[data-v-0ca8b559]{height:200px;border:1px solid #ff0}", ""]);

// exports


/***/ }),

/***/ "4bf8":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__("be13");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "4c60":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xDialog_vue_vue_type_style_index_0_id_7d3f96d7_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("0d7d");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xDialog_vue_vue_type_style_index_0_id_7d3f96d7_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xDialog_vue_vue_type_style_index_0_id_7d3f96d7_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xDialog_vue_vue_type_style_index_0_id_7d3f96d7_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "4cc9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLoCenter_vue_vue_type_style_index_0_id_38d79ba9_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4851");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLoCenter_vue_vue_type_style_index_0_id_38d79ba9_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLoCenter_vue_vue_type_style_index_0_id_38d79ba9_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLoCenter_vue_vue_type_style_index_0_id_38d79ba9_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "4f37":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.1.3.25 String.prototype.trim()
__webpack_require__("aa77")('trim', function ($trim) {
  return function trim() {
    return $trim(this, 3);
  };
});


/***/ }),

/***/ "5147":
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__("2b4c")('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),

/***/ "520a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpFlags = __webpack_require__("0bfb");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "52a7":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "5537":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("8378");
var global = __webpack_require__("7726");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__("2d00") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "565d":
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__("6a9b");
var gOPN = __webpack_require__("d876").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "5698":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("d256");
module.exports = __webpack_require__("a7d3").Object.getOwnPropertySymbols;


/***/ }),

/***/ "57e7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("5ca1");
var $indexOf = __webpack_require__("c366")(false);
var $native = [].indexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__("2f21")($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments[1]);
  }
});


/***/ }),

/***/ "5952":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavTitle_vue_vue_type_style_index_0_id_7fa52edb_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("68f5");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavTitle_vue_vue_type_style_index_0_id_7fa52edb_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavTitle_vue_vue_type_style_index_0_id_7fa52edb_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavTitle_vue_vue_type_style_index_0_id_7fa52edb_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "5962":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/***/ }),

/***/ "5ca1":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7726");
var core = __webpack_require__("8378");
var hide = __webpack_require__("32e9");
var redefine = __webpack_require__("2aba");
var ctx = __webpack_require__("9b43");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "5d8f":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("7772")('keys');
var uid = __webpack_require__("7b00");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "5dbc":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
var setPrototypeOf = __webpack_require__("8b97").set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),

/***/ "5eda":
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__("5ca1");
var core = __webpack_require__("8378");
var fails = __webpack_require__("79e5");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "5f1b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var classof = __webpack_require__("23c6");
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),

/***/ "613b":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("5537")('keys');
var uid = __webpack_require__("ca5a");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "6224":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xCheckbox_vue_vue_type_style_index_0_id_5bf8c154_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("9c71");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xCheckbox_vue_vue_type_style_index_0_id_5bf8c154_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xCheckbox_vue_vue_type_style_index_0_id_5bf8c154_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xCheckbox_vue_vue_type_style_index_0_id_5bf8c154_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "626a":
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__("2d95");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "626e":
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__("d74e");
var createDesc = __webpack_require__("f845");
var toIObject = __webpack_require__("6a9b");
var toPrimitive = __webpack_require__("2ea1");
var has = __webpack_require__("43c8");
var IE8_DOM_DEFINE = __webpack_require__("a47f");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__("7d95") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "6277":
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__("7b00")('meta');
var isObject = __webpack_require__("6f8a");
var has = __webpack_require__("43c8");
var setDesc = __webpack_require__("3adc").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__("d782")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "62e4":
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "6323":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSlidingWindowItem_vue_vue_type_style_index_0_id_21c6431a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("0eef");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSlidingWindowItem_vue_vue_type_style_index_0_id_21c6431a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSlidingWindowItem_vue_vue_type_style_index_0_id_21c6431a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSlidingWindowItem_vue_vue_type_style_index_0_id_21c6431a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "6762":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __webpack_require__("5ca1");
var $includes = __webpack_require__("c366")(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__("9c6c")('includes');


/***/ }),

/***/ "6821":
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__("626a");
var defined = __webpack_require__("be13");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "68f5":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("e98e");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("08357b73", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "69a8":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "6a99":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__("d3f4");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "6a9b":
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__("8bab");
var defined = __webpack_require__("e5fa");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "6b54":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__("3846");
var anObject = __webpack_require__("cb7c");
var $flags = __webpack_require__("0bfb");
var DESCRIPTORS = __webpack_require__("9e1e");
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  __webpack_require__("2aba")(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (__webpack_require__("79e5")(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}


/***/ }),

/***/ "6d67":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("5ca1");
var $map = __webpack_require__("0a49")(1);

$export($export.P + $export.F * !__webpack_require__("2f21")([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "6e1f":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "6f8a":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "7108":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__("0f89");
var dPs = __webpack_require__("f568");
var enumBugKeys = __webpack_require__("0029");
var IE_PROTO = __webpack_require__("5d8f")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__("12fd")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__("103a").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "7633":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__("2695");
var enumBugKeys = __webpack_require__("0029");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "7726":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "7772":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("a7d3");
var global = __webpack_require__("da3c");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__("b457") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "77f1":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("4588");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "79e5":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "7b00":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "7b60":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavItem_vue_vue_type_style_index_0_id_ea4b8d44_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("3dab");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavItem_vue_vue_type_style_index_0_id_ea4b8d44_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavItem_vue_vue_type_style_index_0_id_ea4b8d44_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavItem_vue_vue_type_style_index_0_id_ea4b8d44_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "7d95":
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__("d782")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "7da9":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-sidenav[data-v-3c8281b3]{font-family:sans-serif;font-size:14.0833px;font-weight:400}.pesona-sidenav .container .header[data-v-3c8281b3]{height:60px;line-height:90px;padding:0 22px;background-color:var(--pesona-brand-color-secondary)}.pesona-sidenav .container .header .logo[data-v-3c8281b3]{display:inline}.pesona-sidenav .container .header .logo img[data-v-3c8281b3]{width:auto;height:40px;max-width:150px}.pesona-sidenav .container .header .navigation-action[data-v-3c8281b3]{display:inline;line-height:90px;float:right}.pesona-sidenav .container .header .navigation-action .open-nav[data-v-3c8281b3]{position:absolute;top:50%;z-index:999}.pesona-sidenav .container #navigation-content[data-v-3c8281b3]{margin:0;width:inherit;height:-webkit-calc(100vh - 60px);height:calc(100vh - 60px)}.pesona-sidenav .shrink .logo[data-v-3c8281b3]{display:none}.pesona-sidenav .shrink .header[data-v-3c8281b3]{padding:0 15px}", ""]);

// exports


/***/ }),

/***/ "7f20":
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__("86cc").f;
var has = __webpack_require__("69a8");
var TAG = __webpack_require__("2b4c")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "7f7f":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("86cc").f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || __webpack_require__("9e1e") && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});


/***/ }),

/***/ "81ed":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xTextField_vue_vue_type_style_index_0_id_3b6c567f_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("1a37");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xTextField_vue_vue_type_style_index_0_id_3b6c567f_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xTextField_vue_vue_type_style_index_0_id_3b6c567f_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xTextField_vue_vue_type_style_index_0_id_3b6c567f_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "8378":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "848a":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-sliding-window-item[data-v-21c6431a]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;position:relative}.pesona-sliding-window-item--container[data-v-21c6431a]{font-size:12px;position:absolute}.pesona-sliding-window-item--background[data-v-21c6431a]{width:inherit;height:inherit;-o-object-fit:cover;object-fit:cover;vertical-align:unset}.pesona-sliding-window-item--background-color[data-v-21c6431a]{width:inherit;height:inherit}.unselectable[data-v-21c6431a]{user-drag:none;user-select:none;-moz-user-select:none;-webkit-user-drag:none;-webkit-user-select:none;-ms-user-select:none}", ""]);

// exports


/***/ }),

/***/ "84f2":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "85f2":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("ec5b");

/***/ }),

/***/ "86cc":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("cb7c");
var IE8_DOM_DEFINE = __webpack_require__("c69a");
var toPrimitive = __webpack_require__("6a99");
var dP = Object.defineProperty;

exports.f = __webpack_require__("9e1e") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "874b":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-color-panel[data-v-0e2bd75a]{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-justify-content:space-around;-ms-flex-pack:distribute;justify-content:space-around;-webkit-box-align:stretch;-webkit-align-items:stretch;-ms-flex-align:stretch;align-items:stretch}.area[data-v-0e2bd75a],.pesona-color-panel[data-v-0e2bd75a]{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.area[data-v-0e2bd75a]{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-flow:column nowrap;-ms-flex-flow:column nowrap;flex-flow:column nowrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1}.brand-area[data-v-0e2bd75a]{-webkit-flex-basis:20%;-ms-flex-preferred-size:20%;flex-basis:20%}.brand-area .primary[data-v-0e2bd75a]{background-color:var(--pesona-brand-color-primary);color:var(--pesona-on-color-primary)}.brand-area .secondary[data-v-0e2bd75a]{background-color:var(--pesona-brand-color-secondary);color:var(--pesona-on-color-secondary)}.brand-area .accent[data-v-0e2bd75a]{background-color:var(--pesona-brand-color-accent);color:var(--pesona-on-color-accent)}.shade-area[data-v-0e2bd75a]{-webkit-flex-basis:20%;-ms-flex-preferred-size:20%;flex-basis:20%;border-right:1px solid #fff;border-left:1px solid #fff}.shade-area .black[data-v-0e2bd75a]{background-color:var(--pesona-shade-color-black);color:var(--pesona-shade-color-white)}.shade-area .semi-black[data-v-0e2bd75a]{background-color:var(--pesona-shade-color-semi-black);color:var(--pesona-shade-color-white)}.shade-area .gray[data-v-0e2bd75a]{background-color:var(--pesona-shade-color-gray);color:var(--pesona-shade-color-white)}.shade-area .semi-white[data-v-0e2bd75a]{background-color:var(--pesona-shade-color-semi-white);color:var(--pesona-shade-color-black)}.shade-area .white[data-v-0e2bd75a]{background-color:var(--pesona-shade-color-white);color:var(--pesona-shade-color-black)}.action-area[data-v-0e2bd75a]{-webkit-flex-basis:20%;-ms-flex-preferred-size:20%;flex-basis:20%}.action-area .success[data-v-0e2bd75a]{background-color:var(--pesona-action-color-success);color:var(--pesona-on-color-success)}.action-area .error[data-v-0e2bd75a]{background-color:var(--pesona-action-color-error);color:var(--pesona-on-color-error)}.action-area .warning[data-v-0e2bd75a]{background-color:var(--pesona-action-color-warning);color:var(--pesona-on-color-warning)}.action-area .info[data-v-0e2bd75a]{background-color:var(--pesona-action-color-info);color:var(--pesona-on-color-info)}.form-area[data-v-0e2bd75a]{-webkit-flex-basis:20%;-ms-flex-preferred-size:20%;flex-basis:20%}.form-area .frame[data-v-0e2bd75a]{border:2px solid var(--pesona-form-color-frame);color:var(--pesona-form-color-text)}.color-band[data-v-0e2bd75a]{padding:10px}", ""]);

// exports


/***/ }),

/***/ "87b3":
/***/ (function(module, exports, __webpack_require__) {

var DateProto = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var $toString = DateProto[TO_STRING];
var getTime = DateProto.getTime;
if (new Date(NaN) + '' != INVALID_DATE) {
  __webpack_require__("2aba")(DateProto, TO_STRING, function toString() {
    var value = getTime.call(this);
    // eslint-disable-next-line no-self-compare
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}


/***/ }),

/***/ "8b97":
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__("d3f4");
var anObject = __webpack_require__("cb7c");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__("9b43")(Function.call, __webpack_require__("11e9").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "8bab":
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__("6e1f");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "8ce0":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("3adc");
var createDesc = __webpack_require__("f845");
module.exports = __webpack_require__("7d95") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "900e":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-text-field[data-v-3b6c567f]{font-family:Roboto,sans-serif}.pesona-text-field .material-mode[data-v-3b6c567f]{margin:8px;border-bottom:1px solid var(--pesona-shade-color-gray)}.pesona-text-field .material-mode label[data-v-3b6c567f]{color:var(--pesona-shade-color-gray);font-size:var(--pesona-font-small)}.pesona-text-field .material-mode .floating-label[data-v-3b6c567f]{position:relative;font-size:var(--pesona-font-fair);top:22px}.pesona-text-field .material-mode input[data-v-3b6c567f]{border-style:none;width:100%;padding:6px 3px;font-size:var(--pesona-font-fair)}.pesona-text-field .material-mode input[data-v-3b6c567f]::-webkit-input-placeholder{color:var(--pesona-shade-color-semi-white)}.pesona-text-field .material-mode input[data-v-3b6c567f]::-moz-placeholder{color:var(--pesona-shade-color-semi-white)}.pesona-text-field .material-mode input[data-v-3b6c567f]:-ms-input-placeholder{color:var(--pesona-shade-color-semi-white)}.pesona-text-field .material-mode input[data-v-3b6c567f]::-ms-input-placeholder{color:var(--pesona-shade-color-semi-white)}.pesona-text-field .material-mode input[data-v-3b6c567f]::placeholder{color:var(--pesona-shade-color-semi-white)}.pesona-text-field .material-mode input[data-v-3b6c567f]:focus{outline:none}.pesona-text-field .material-mode .prepend-icon[data-v-3b6c567f]{display:inline-block;top:28px;position:relative}.pesona-text-field .material-mode .any-prepend[data-v-3b6c567f]{margin-left:25px;width:-webkit-calc(99% - 28px);width:calc(99% - 28px)}.pesona-text-field .material-mode.inhover[data-v-3b6c567f]{border-bottom:1px solid var(--pesona-shade-color-black)}.pesona-text-field .material-mode.infocus[data-v-3b6c567f]{border-bottom:1px solid var(--pesona-form-color-frame)}.pesona-text-field .material-mode.infocus label[data-v-3b6c567f]{color:var(--pesona-form-color-frame)}.pesona-text-field .antd-mode[data-v-3b6c567f]{margin:8px}.pesona-text-field .antd-mode label[data-v-3b6c567f]{line-height:21px;font-size:var(--pesona-font-base);color:#376db0;font-weight:500}.pesona-text-field .antd-mode input[data-v-3b6c567f]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;margin:0;margin-top:4px;padding:0;font-variant:tabular-nums;list-style:none;-webkit-font-feature-settings:\"tnum\";-moz-font-feature-settings:\"tnum\";font-feature-settings:\"tnum\";position:relative;display:inline-block;width:100%;padding:10px 12px;color:rgba(0,0,0,.65);font-size:14px;line-height:1;background-color:var(--pesona-shade-color-white);background-image:none;border:1px solid #d9d9d9;border-top-color:#d9d9d9;border-right-color:#d9d9d9;border-right-width:1px;border-bottom-color:#d9d9d9;border-left-color:#d9d9d9;-webkit-border-radius:4px;border-radius:4px;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}.pesona-text-field .antd-mode input[data-v-3b6c567f]::-webkit-input-placeholder{color:var(--pesona-shade-color-semi-white);font-weight:500}.pesona-text-field .antd-mode input[data-v-3b6c567f]::-moz-placeholder{color:var(--pesona-shade-color-semi-white);font-weight:500}.pesona-text-field .antd-mode input[data-v-3b6c567f]:-ms-input-placeholder{color:var(--pesona-shade-color-semi-white);font-weight:500}.pesona-text-field .antd-mode input[data-v-3b6c567f]::-ms-input-placeholder{color:var(--pesona-shade-color-semi-white);font-weight:500}.pesona-text-field .antd-mode input[data-v-3b6c567f]::placeholder{color:var(--pesona-shade-color-semi-white);font-weight:500}.pesona-text-field .antd-mode .prepend-icon[data-v-3b6c567f]{display:inline-block;top:34px;left:15px;position:absolute;z-index:10}.pesona-text-field .antd-mode .any-prepend[data-v-3b6c567f]{padding-left:35px}.pesona-text-field .antd-mode.inhover input[data-v-3b6c567f]{border:1px solid #40a9ff}.pesona-text-field .antd-mode.infocus input[data-v-3b6c567f]{border-style:none;outline-color:rgba(0,0,0,0);border:1px solid #40a9ff;-webkit-transition:none;-o-transition:none;transition:none}", ""]);

// exports


/***/ }),

/***/ "9093":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__("ce10");
var hiddenKeys = __webpack_require__("e11e").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "922b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLayoutTopDown_vue_vue_type_style_index_0_id_7898840a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("c2f2");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLayoutTopDown_vue_vue_type_style_index_0_id_7898840a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLayoutTopDown_vue_vue_type_style_index_0_id_7898840a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xLayoutTopDown_vue_vue_type_style_index_0_id_7898840a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "927e":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-sidenav-item .container[data-v-ea4b8d44]{display:block;-webkit-border-radius:5px;border-radius:5px;padding:4px 8px;margin:0 4%;cursor:pointer}.pesona-sidenav-item .container .item[data-v-ea4b8d44]{display:inline-block}.pesona-sidenav-item .container .icon[data-v-ea4b8d44]{opacity:.3}.pesona-sidenav-item .container .text[data-v-ea4b8d44]{padding-left:4px}.pesona-sidenav-item .container .text a[data-v-ea4b8d44]{text-decoration:none;color:#000}.pesona-sidenav-item .wraped[data-v-ea4b8d44]{padding:6px 8px;width:70%;margin-left:45px}.pesona-sidenav-item .container[data-v-ea4b8d44]:hover{background-color:#007bff}.pesona-sidenav-item .shrink[data-v-ea4b8d44]{text-align:center;margin:10px}.active[data-v-ea4b8d44]{font-weight:600}", ""]);

// exports


/***/ }),

/***/ "9b43":
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__("d8e8");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "9c6c":
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__("2b4c")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__("32e9")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "9c71":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("b5d9");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("37050e8b", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "9def":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__("4588");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "9e1e":
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__("79e5")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "9e5a":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-navbar[data-v-c3bdeef8]{top:0}.pesona-navbar .container[data-v-c3bdeef8]{width:100%}.pesona-navbar .container .topping-wrapper[data-v-c3bdeef8]{background-color:var(--pesona-brand-color-accent);color:var(--pesona-on-color-accent);height:36px}.pesona-navbar .container .topping-wrapper .topping[data-v-c3bdeef8]{display:grid;padding:8px 16px;-webkit-box-pack:end;-webkit-justify-content:end;-ms-flex-pack:end;justify-content:end}.pesona-navbar .container .bottom-wrapper[data-v-c3bdeef8]{font-family:var(--pesona-font-primary);height:64px;display:grid;grid-template-columns:100px auto 800px 100px;grid-template-rows:auto;background-color:var(--pesona-brand-color-primary);color:var(--pesona-on-color-primary)}.pesona-navbar .container .bottom-wrapper .right-side[data-v-c3bdeef8]{justify-self:start;margin-top:24px;margin-left:16px}.pesona-navbar .container .bottom-wrapper .left-action[data-v-c3bdeef8],.pesona-navbar .container .bottom-wrapper .left-side[data-v-c3bdeef8]{margin-top:16px;margin-right:16px;justify-self:end}", ""]);

// exports


/***/ }),

/***/ "a037":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-layout-top-down .container[data-v-7898840a]{width:100%;height:auto}.pesona-layout-top-down .container .header[data-v-7898840a]{position:absolute;top:0;z-index:9999;-webkit-box-shadow:0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.15);box-shadow:0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.15)}.pesona-layout-top-down .container .content-wrapper .footer[data-v-7898840a],.pesona-layout-top-down .container .content-wrapper .main[data-v-7898840a]{display:block}", ""]);

// exports


/***/ }),

/***/ "a47f":
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__("7d95") && !__webpack_require__("d782")(function () {
  return Object.defineProperty(__webpack_require__("12fd")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "a481":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__("cb7c");
var toObject = __webpack_require__("4bf8");
var toLength = __webpack_require__("9def");
var toInteger = __webpack_require__("4588");
var advanceStringIndex = __webpack_require__("0390");
var regExpExec = __webpack_require__("5f1b");
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__webpack_require__("214f")('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "a4bb":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("fda6");

/***/ }),

/***/ "a5ab":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__("a812");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "a7d3":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "a812":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "aa77":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("5ca1");
var defined = __webpack_require__("be13");
var fails = __webpack_require__("79e5");
var spaces = __webpack_require__("fdef");
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;


/***/ }),

/***/ "aae3":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__("d3f4");
var cof = __webpack_require__("2d95");
var MATCH = __webpack_require__("2b4c")('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),

/***/ "ab82":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("7da9");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("670e684a", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "ac6a":
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__("cadf");
var getKeys = __webpack_require__("0d58");
var redefine = __webpack_require__("2aba");
var global = __webpack_require__("7726");
var hide = __webpack_require__("32e9");
var Iterators = __webpack_require__("84f2");
var wks = __webpack_require__("2b4c");
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),

/***/ "aff5":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-sliding-window:hover .round-side-navigation[data-v-71d0e315]{-webkit-transition:opacity 1.5s;-o-transition:opacity 1.5s;transition:opacity 1.5s;opacity:.3}.pesona-sliding-window[data-v-71d0e315]{width:100%}.pesona-sliding-window .window-glass[data-v-71d0e315]{position:relative}.pesona-sliding-window .item-container[data-v-71d0e315]{z-index:1;overflow:hidden;white-space:nowrap;width:100%}.pesona-sliding-window .item-container .sliding-glass[data-v-71d0e315]{font-size:0;-webkit-transition-timing-function:ease-in;-o-transition-timing-function:ease-in;transition-timing-function:ease-in;-webkit-transition:1s;-o-transition:1s;transition:1s}.pesona-sliding-window .item-container .blacken-glass[data-v-71d0e315]{background-color:#000;opacity:.7}.pesona-sliding-window .item-container .side-border[data-v-71d0e315]{display:inline-block}.pesona-sliding-window .item-container .item[data-v-71d0e315]{display:inline-block;position:relative}.pesona-sliding-window .item-container .item--label[data-v-71d0e315]{font-size:12px;position:absolute}.pesona-sliding-window .item-container .item--slot[data-v-71d0e315]{-o-object-fit:cover;object-fit:cover}.pesona-sliding-window .side-nav[data-v-71d0e315]{position:absolute;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;z-index:2}.pesona-sliding-window .side-nav--left[data-v-71d0e315]{top:0;left:0;background:#000;background:-webkit-gradient(linear,right top,left top,from(rgba(0,0,0,0)),color-stop(70%,rgba(0,0,0,.773547)),to(#000));background:-webkit-linear-gradient(right,rgba(0,0,0,0),rgba(0,0,0,.773547) 70%,#000);background:-o-linear-gradient(right,rgba(0,0,0,0) 0,rgba(0,0,0,.773547) 70%,#000 100%);background:linear-gradient(270deg,rgba(0,0,0,0),rgba(0,0,0,.773547) 70%,#000)}.pesona-sliding-window .side-nav--right[data-v-71d0e315]{top:0;right:-1px;background:#000;background:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,0)),color-stop(70%,rgba(0,0,0,.773547)),to(#000));background:-webkit-linear-gradient(left,rgba(0,0,0,0),rgba(0,0,0,.773547) 70%,#000);background:-o-linear-gradient(left,rgba(0,0,0,0) 0,rgba(0,0,0,.773547) 70%,#000 100%);background:linear-gradient(90deg,rgba(0,0,0,0),rgba(0,0,0,.773547) 70%,#000);overflow:hidden}.pesona-sliding-window .side-nav--right svg[data-v-71d0e315]{-webkit-transform:translateX(55%);-ms-transform:translateX(55%);transform:translateX(55%)}.pesona-sliding-window .side-nav--action[data-v-71d0e315]{cursor:pointer}.pesona-sliding-window .round-side-navigation[data-v-71d0e315]:hover{-webkit-transition:opacity 1.5s;-o-transition:opacity 1.5s;transition:opacity 1.5s;opacity:1}.pesona-sliding-window .round-side-navigation[data-v-71d0e315]{-webkit-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s;opacity:0;position:absolute;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:10%;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);z-index:2;overflow:hidden;background:#fff;cursor:pointer}.pesona-sliding-window .round-side-navigation--left[data-v-71d0e315]{-webkit-border-bottom-right-radius:60px;border-bottom-right-radius:60px;-webkit-border-top-right-radius:60px;border-top-right-radius:60px}.pesona-sliding-window .round-side-navigation--left svg[data-v-71d0e315]{-webkit-transform:translateX(15%);-ms-transform:translateX(15%);transform:translateX(15%)}.pesona-sliding-window .round-side-navigation--right[data-v-71d0e315]{right:-1px;overflow:hidden;-webkit-border-bottom-left-radius:60px;border-bottom-left-radius:60px;-webkit-border-top-left-radius:60px;border-top-left-radius:60px}.pesona-sliding-window .round-side-navigation--right svg[data-v-71d0e315]{-webkit-transform:translateX(35%);-ms-transform:translateX(35%);transform:translateX(35%)}.pesona-sliding-window .bottom-nav[data-v-71d0e315]{margin-top:10px}.pesona-sliding-window .embed-bottom-nav[data-v-71d0e315]{position:relative;top:-35px}.pesona-sliding-window .global-title-box[data-v-71d0e315]{position:absolute;color:var(--pesona-shade-color-white);font-size:var(--pesona-font-xlarge);font-family:var(--pesona-font-primary);font-weight:600;text-align:center;z-index:999;max-width:60%;white-space:normal;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%)}.pesona-sliding-window .global-title-box span[data-v-71d0e315]{display:block}.unselectable[data-v-71d0e315]{user-drag:none;user-select:none;-moz-user-select:none;-webkit-user-drag:none;-webkit-user-select:none;-ms-user-select:none}", ""]);

// exports


/***/ }),

/***/ "b0c5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpExec = __webpack_require__("520a");
__webpack_require__("5ca1")({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),

/***/ "b457":
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "b54b":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-child-navigator[data-v-079d284d]{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}.item[data-v-079d284d]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-size:small;background-color:#a1a9b2;min-width:7px;min-height:7px;margin:3px;text-align:center}.item-chevron[data-v-079d284d]{height:0;background-color:rgba(0,0,0,0);-webkit-transform:translateY(-4px);-ms-transform:translateY(-4px);transform:translateY(-4px)}.item-chevron svg[data-v-079d284d]{fill:#a1a9b2!important}.active[data-v-079d284d]{background-color:#fff}.item__round[data-v-079d284d]{-webkit-border-radius:50%;border-radius:50%}.item--text[data-v-079d284d]{-webkit-transform:translateY(15%);-ms-transform:translateY(15%);transform:translateY(15%)}.pointer[data-v-079d284d]{cursor:pointer}", ""]);

// exports


/***/ }),

/***/ "b5aa":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__("6e1f");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "b5d9":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-checkbox .antd-container[data-v-5bf8c154]{display:inline-block;position:relative;padding-left:25px;margin:5px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:rgba(0,0,0,.65);font-size:14px;font-variant:tabular-nums;line-height:1.5;list-style:none;-webkit-font-feature-settings:\"tnum\";-moz-font-feature-settings:\"tnum\";font-feature-settings:\"tnum\"}.pesona-checkbox .antd-container input[data-v-5bf8c154]{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.pesona-checkbox .antd-checkbox[data-v-5bf8c154]{position:absolute;top:0;left:0;width:16px;height:16px;background-color:#fff;border:1px solid #d9d9d9;-webkit-border-radius:2px;border-radius:2px;border-collapse:separate;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}.pesona-checkbox .container:hover input~.antd-checkbox[data-v-5bf8c154]{background-color:#fff;border:1px solid #2196f3}.pesona-checkbox .container input:checked~.antd-checkbox[data-v-5bf8c154]{background-color:#2196f3}.pesona-checkbox .antd-checkbox[data-v-5bf8c154]:after{content:\"\";position:absolute;display:none}.pesona-checkbox .container input:checked~.antd-checkbox[data-v-5bf8c154]:after{display:block}.pesona-checkbox .container .antd-checkbox[data-v-5bf8c154]:after{left:30%;top:9%;width:2.714286px;height:8.142857px;border:2px solid #fff;border-width:0 3px 3px 0;border-top:0;border-left:0;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);-webkit-transition:all .2s cubic-bezier(.71,-.46,.88,.6),opacity .1s;-o-transition:all .2s cubic-bezier(.71,-.46,.88,.6),opacity .1s;transition:all .2s cubic-bezier(.71,-.46,.88,.6),opacity .1s}", ""]);

// exports


/***/ }),

/***/ "b77e":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("5962");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("1aa66976", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "b8e6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenav_vue_vue_type_style_index_0_id_3c8281b3_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ab82");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenav_vue_vue_type_style_index_0_id_3c8281b3_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenav_vue_vue_type_style_index_0_id_3c8281b3_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenav_vue_vue_type_style_index_0_id_3c8281b3_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "bc25":
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__("f2fe");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "bc90":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xColorPanel_vue_vue_type_style_index_0_id_0e2bd75a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("e6dc");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xColorPanel_vue_vue_type_style_index_0_id_0e2bd75a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xColorPanel_vue_vue_type_style_index_0_id_0e2bd75a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xColorPanel_vue_vue_type_style_index_0_id_0e2bd75a_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "bc9e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xButton_vue_vue_type_style_index_0_id_bd3ba3b8_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("f32d");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xButton_vue_vue_type_style_index_0_id_bd3ba3b8_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xButton_vue_vue_type_style_index_0_id_bd3ba3b8_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xButton_vue_vue_type_style_index_0_id_bd3ba3b8_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "bd23":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("b54b");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("0d8b80c3", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "be13":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "c0d8":
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__("3adc").f;
var has = __webpack_require__("43c8");
var TAG = __webpack_require__("1b55")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "c165":
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__("d13f");
var core = __webpack_require__("a7d3");
var fails = __webpack_require__("d782");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "c2f2":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("a037");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("bbf46a98", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "c366":
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__("6821");
var toLength = __webpack_require__("9def");
var toAbsoluteIndex = __webpack_require__("77f1");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "c5f6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("7726");
var has = __webpack_require__("69a8");
var cof = __webpack_require__("2d95");
var inheritIfRequired = __webpack_require__("5dbc");
var toPrimitive = __webpack_require__("6a99");
var fails = __webpack_require__("79e5");
var gOPN = __webpack_require__("9093").f;
var gOPD = __webpack_require__("11e9").f;
var dP = __webpack_require__("86cc").f;
var $trim = __webpack_require__("aa77").trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(__webpack_require__("2aeb")(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = __webpack_require__("9e1e") ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  __webpack_require__("2aba")(global, NUMBER, $Number);
}


/***/ }),

/***/ "c69a":
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__("9e1e") && !__webpack_require__("79e5")(function () {
  return Object.defineProperty(__webpack_require__("230e")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "c725":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("9e5a");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("419bc021", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "c8b5":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22
 * http://hammerjs.github.io/
 *
 * Copyright (c) 2016 Jorik Tangelder;
 * Licensed under the MIT license */
(function(window, document, exportName, undefined) {
  'use strict';

var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];
var TEST_ELEMENT = document.createElement('div');

var TYPE_FUNCTION = 'function';

var round = Math.round;
var abs = Math.abs;
var now = Date.now;

/**
 * set a timeout with a given scope
 * @param {Function} fn
 * @param {Number} timeout
 * @param {Object} context
 * @returns {number}
 */
function setTimeoutContext(fn, timeout, context) {
    return setTimeout(bindFn(fn, context), timeout);
}

/**
 * if the argument is an array, we want to execute the fn on each entry
 * if it aint an array we don't want to do a thing.
 * this is used by all the methods that accept a single and array argument.
 * @param {*|Array} arg
 * @param {String} fn
 * @param {Object} [context]
 * @returns {Boolean}
 */
function invokeArrayArg(arg, fn, context) {
    if (Array.isArray(arg)) {
        each(arg, context[fn], context);
        return true;
    }
    return false;
}

/**
 * walk objects and arrays
 * @param {Object} obj
 * @param {Function} iterator
 * @param {Object} context
 */
function each(obj, iterator, context) {
    var i;

    if (!obj) {
        return;
    }

    if (obj.forEach) {
        obj.forEach(iterator, context);
    } else if (obj.length !== undefined) {
        i = 0;
        while (i < obj.length) {
            iterator.call(context, obj[i], i, obj);
            i++;
        }
    } else {
        for (i in obj) {
            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);
        }
    }
}

/**
 * wrap a method with a deprecation warning and stack trace
 * @param {Function} method
 * @param {String} name
 * @param {String} message
 * @returns {Function} A new function wrapping the supplied method.
 */
function deprecate(method, name, message) {
    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\n' + message + ' AT \n';
    return function() {
        var e = new Error('get-stack-trace');
        var stack = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, '')
            .replace(/^\s+at\s+/gm, '')
            .replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';

        var log = window.console && (window.console.warn || window.console.log);
        if (log) {
            log.call(window.console, deprecationMessage, stack);
        }
        return method.apply(this, arguments);
    };
}

/**
 * extend object.
 * means that properties in dest will be overwritten by the ones in src.
 * @param {Object} target
 * @param {...Object} objects_to_assign
 * @returns {Object} target
 */
var assign;
if (typeof Object.assign !== 'function') {
    assign = function assign(target) {
        if (target === undefined || target === null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }

        var output = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source !== undefined && source !== null) {
                for (var nextKey in source) {
                    if (source.hasOwnProperty(nextKey)) {
                        output[nextKey] = source[nextKey];
                    }
                }
            }
        }
        return output;
    };
} else {
    assign = Object.assign;
}

/**
 * extend object.
 * means that properties in dest will be overwritten by the ones in src.
 * @param {Object} dest
 * @param {Object} src
 * @param {Boolean} [merge=false]
 * @returns {Object} dest
 */
var extend = deprecate(function extend(dest, src, merge) {
    var keys = Object.keys(src);
    var i = 0;
    while (i < keys.length) {
        if (!merge || (merge && dest[keys[i]] === undefined)) {
            dest[keys[i]] = src[keys[i]];
        }
        i++;
    }
    return dest;
}, 'extend', 'Use `assign`.');

/**
 * merge the values from src in the dest.
 * means that properties that exist in dest will not be overwritten by src
 * @param {Object} dest
 * @param {Object} src
 * @returns {Object} dest
 */
var merge = deprecate(function merge(dest, src) {
    return extend(dest, src, true);
}, 'merge', 'Use `assign`.');

/**
 * simple class inheritance
 * @param {Function} child
 * @param {Function} base
 * @param {Object} [properties]
 */
function inherit(child, base, properties) {
    var baseP = base.prototype,
        childP;

    childP = child.prototype = Object.create(baseP);
    childP.constructor = child;
    childP._super = baseP;

    if (properties) {
        assign(childP, properties);
    }
}

/**
 * simple function bind
 * @param {Function} fn
 * @param {Object} context
 * @returns {Function}
 */
function bindFn(fn, context) {
    return function boundFn() {
        return fn.apply(context, arguments);
    };
}

/**
 * let a boolean value also be a function that must return a boolean
 * this first item in args will be used as the context
 * @param {Boolean|Function} val
 * @param {Array} [args]
 * @returns {Boolean}
 */
function boolOrFn(val, args) {
    if (typeof val == TYPE_FUNCTION) {
        return val.apply(args ? args[0] || undefined : undefined, args);
    }
    return val;
}

/**
 * use the val2 when val1 is undefined
 * @param {*} val1
 * @param {*} val2
 * @returns {*}
 */
function ifUndefined(val1, val2) {
    return (val1 === undefined) ? val2 : val1;
}

/**
 * addEventListener with multiple events at once
 * @param {EventTarget} target
 * @param {String} types
 * @param {Function} handler
 */
function addEventListeners(target, types, handler) {
    each(splitStr(types), function(type) {
        target.addEventListener(type, handler, false);
    });
}

/**
 * removeEventListener with multiple events at once
 * @param {EventTarget} target
 * @param {String} types
 * @param {Function} handler
 */
function removeEventListeners(target, types, handler) {
    each(splitStr(types), function(type) {
        target.removeEventListener(type, handler, false);
    });
}

/**
 * find if a node is in the given parent
 * @method hasParent
 * @param {HTMLElement} node
 * @param {HTMLElement} parent
 * @return {Boolean} found
 */
function hasParent(node, parent) {
    while (node) {
        if (node == parent) {
            return true;
        }
        node = node.parentNode;
    }
    return false;
}

/**
 * small indexOf wrapper
 * @param {String} str
 * @param {String} find
 * @returns {Boolean} found
 */
function inStr(str, find) {
    return str.indexOf(find) > -1;
}

/**
 * split string on whitespace
 * @param {String} str
 * @returns {Array} words
 */
function splitStr(str) {
    return str.trim().split(/\s+/g);
}

/**
 * find if a array contains the object using indexOf or a simple polyFill
 * @param {Array} src
 * @param {String} find
 * @param {String} [findByKey]
 * @return {Boolean|Number} false when not found, or the index
 */
function inArray(src, find, findByKey) {
    if (src.indexOf && !findByKey) {
        return src.indexOf(find);
    } else {
        var i = 0;
        while (i < src.length) {
            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {
                return i;
            }
            i++;
        }
        return -1;
    }
}

/**
 * convert array-like objects to real arrays
 * @param {Object} obj
 * @returns {Array}
 */
function toArray(obj) {
    return Array.prototype.slice.call(obj, 0);
}

/**
 * unique array with objects based on a key (like 'id') or just by the array's value
 * @param {Array} src [{id:1},{id:2},{id:1}]
 * @param {String} [key]
 * @param {Boolean} [sort=False]
 * @returns {Array} [{id:1},{id:2}]
 */
function uniqueArray(src, key, sort) {
    var results = [];
    var values = [];
    var i = 0;

    while (i < src.length) {
        var val = key ? src[i][key] : src[i];
        if (inArray(values, val) < 0) {
            results.push(src[i]);
        }
        values[i] = val;
        i++;
    }

    if (sort) {
        if (!key) {
            results = results.sort();
        } else {
            results = results.sort(function sortUniqueArray(a, b) {
                return a[key] > b[key];
            });
        }
    }

    return results;
}

/**
 * get the prefixed property
 * @param {Object} obj
 * @param {String} property
 * @returns {String|Undefined} prefixed
 */
function prefixed(obj, property) {
    var prefix, prop;
    var camelProp = property[0].toUpperCase() + property.slice(1);

    var i = 0;
    while (i < VENDOR_PREFIXES.length) {
        prefix = VENDOR_PREFIXES[i];
        prop = (prefix) ? prefix + camelProp : property;

        if (prop in obj) {
            return prop;
        }
        i++;
    }
    return undefined;
}

/**
 * get a unique id
 * @returns {number} uniqueId
 */
var _uniqueId = 1;
function uniqueId() {
    return _uniqueId++;
}

/**
 * get the window object of an element
 * @param {HTMLElement} element
 * @returns {DocumentView|Window}
 */
function getWindowForElement(element) {
    var doc = element.ownerDocument || element;
    return (doc.defaultView || doc.parentWindow || window);
}

var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;

var SUPPORT_TOUCH = ('ontouchstart' in window);
var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;
var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);

var INPUT_TYPE_TOUCH = 'touch';
var INPUT_TYPE_PEN = 'pen';
var INPUT_TYPE_MOUSE = 'mouse';
var INPUT_TYPE_KINECT = 'kinect';

var COMPUTE_INTERVAL = 25;

var INPUT_START = 1;
var INPUT_MOVE = 2;
var INPUT_END = 4;
var INPUT_CANCEL = 8;

var DIRECTION_NONE = 1;
var DIRECTION_LEFT = 2;
var DIRECTION_RIGHT = 4;
var DIRECTION_UP = 8;
var DIRECTION_DOWN = 16;

var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;

var PROPS_XY = ['x', 'y'];
var PROPS_CLIENT_XY = ['clientX', 'clientY'];

/**
 * create new input type manager
 * @param {Manager} manager
 * @param {Function} callback
 * @returns {Input}
 * @constructor
 */
function Input(manager, callback) {
    var self = this;
    this.manager = manager;
    this.callback = callback;
    this.element = manager.element;
    this.target = manager.options.inputTarget;

    // smaller wrapper around the handler, for the scope and the enabled state of the manager,
    // so when disabled the input events are completely bypassed.
    this.domHandler = function(ev) {
        if (boolOrFn(manager.options.enable, [manager])) {
            self.handler(ev);
        }
    };

    this.init();

}

Input.prototype = {
    /**
     * should handle the inputEvent data and trigger the callback
     * @virtual
     */
    handler: function() { },

    /**
     * bind the events
     */
    init: function() {
        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    },

    /**
     * unbind the events
     */
    destroy: function() {
        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    }
};

/**
 * create new input type manager
 * called by the Manager constructor
 * @param {Hammer} manager
 * @returns {Input}
 */
function createInputInstance(manager) {
    var Type;
    var inputClass = manager.options.inputClass;

    if (inputClass) {
        Type = inputClass;
    } else if (SUPPORT_POINTER_EVENTS) {
        Type = PointerEventInput;
    } else if (SUPPORT_ONLY_TOUCH) {
        Type = TouchInput;
    } else if (!SUPPORT_TOUCH) {
        Type = MouseInput;
    } else {
        Type = TouchMouseInput;
    }
    return new (Type)(manager, inputHandler);
}

/**
 * handle input events
 * @param {Manager} manager
 * @param {String} eventType
 * @param {Object} input
 */
function inputHandler(manager, eventType, input) {
    var pointersLen = input.pointers.length;
    var changedPointersLen = input.changedPointers.length;
    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));
    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));

    input.isFirst = !!isFirst;
    input.isFinal = !!isFinal;

    if (isFirst) {
        manager.session = {};
    }

    // source event is the normalized value of the domEvents
    // like 'touchstart, mouseup, pointerdown'
    input.eventType = eventType;

    // compute scale, rotation etc
    computeInputData(manager, input);

    // emit secret event
    manager.emit('hammer.input', input);

    manager.recognize(input);
    manager.session.prevInput = input;
}

/**
 * extend the data with some usable properties like scale, rotate, velocity etc
 * @param {Object} manager
 * @param {Object} input
 */
function computeInputData(manager, input) {
    var session = manager.session;
    var pointers = input.pointers;
    var pointersLength = pointers.length;

    // store the first input to calculate the distance and direction
    if (!session.firstInput) {
        session.firstInput = simpleCloneInputData(input);
    }

    // to compute scale and rotation we need to store the multiple touches
    if (pointersLength > 1 && !session.firstMultiple) {
        session.firstMultiple = simpleCloneInputData(input);
    } else if (pointersLength === 1) {
        session.firstMultiple = false;
    }

    var firstInput = session.firstInput;
    var firstMultiple = session.firstMultiple;
    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;

    var center = input.center = getCenter(pointers);
    input.timeStamp = now();
    input.deltaTime = input.timeStamp - firstInput.timeStamp;

    input.angle = getAngle(offsetCenter, center);
    input.distance = getDistance(offsetCenter, center);

    computeDeltaXY(session, input);
    input.offsetDirection = getDirection(input.deltaX, input.deltaY);

    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);
    input.overallVelocityX = overallVelocity.x;
    input.overallVelocityY = overallVelocity.y;
    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;

    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;

    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >
        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);

    computeIntervalInputData(session, input);

    // find the correct target
    var target = manager.element;
    if (hasParent(input.srcEvent.target, target)) {
        target = input.srcEvent.target;
    }
    input.target = target;
}

function computeDeltaXY(session, input) {
    var center = input.center;
    var offset = session.offsetDelta || {};
    var prevDelta = session.prevDelta || {};
    var prevInput = session.prevInput || {};

    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
        prevDelta = session.prevDelta = {
            x: prevInput.deltaX || 0,
            y: prevInput.deltaY || 0
        };

        offset = session.offsetDelta = {
            x: center.x,
            y: center.y
        };
    }

    input.deltaX = prevDelta.x + (center.x - offset.x);
    input.deltaY = prevDelta.y + (center.y - offset.y);
}

/**
 * velocity is calculated every x ms
 * @param {Object} session
 * @param {Object} input
 */
function computeIntervalInputData(session, input) {
    var last = session.lastInterval || input,
        deltaTime = input.timeStamp - last.timeStamp,
        velocity, velocityX, velocityY, direction;

    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {
        var deltaX = input.deltaX - last.deltaX;
        var deltaY = input.deltaY - last.deltaY;

        var v = getVelocity(deltaTime, deltaX, deltaY);
        velocityX = v.x;
        velocityY = v.y;
        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;
        direction = getDirection(deltaX, deltaY);

        session.lastInterval = input;
    } else {
        // use latest velocity info if it doesn't overtake a minimum period
        velocity = last.velocity;
        velocityX = last.velocityX;
        velocityY = last.velocityY;
        direction = last.direction;
    }

    input.velocity = velocity;
    input.velocityX = velocityX;
    input.velocityY = velocityY;
    input.direction = direction;
}

/**
 * create a simple clone from the input used for storage of firstInput and firstMultiple
 * @param {Object} input
 * @returns {Object} clonedInputData
 */
function simpleCloneInputData(input) {
    // make a simple copy of the pointers because we will get a reference if we don't
    // we only need clientXY for the calculations
    var pointers = [];
    var i = 0;
    while (i < input.pointers.length) {
        pointers[i] = {
            clientX: round(input.pointers[i].clientX),
            clientY: round(input.pointers[i].clientY)
        };
        i++;
    }

    return {
        timeStamp: now(),
        pointers: pointers,
        center: getCenter(pointers),
        deltaX: input.deltaX,
        deltaY: input.deltaY
    };
}

/**
 * get the center of all the pointers
 * @param {Array} pointers
 * @return {Object} center contains `x` and `y` properties
 */
function getCenter(pointers) {
    var pointersLength = pointers.length;

    // no need to loop when only one touch
    if (pointersLength === 1) {
        return {
            x: round(pointers[0].clientX),
            y: round(pointers[0].clientY)
        };
    }

    var x = 0, y = 0, i = 0;
    while (i < pointersLength) {
        x += pointers[i].clientX;
        y += pointers[i].clientY;
        i++;
    }

    return {
        x: round(x / pointersLength),
        y: round(y / pointersLength)
    };
}

/**
 * calculate the velocity between two points. unit is in px per ms.
 * @param {Number} deltaTime
 * @param {Number} x
 * @param {Number} y
 * @return {Object} velocity `x` and `y`
 */
function getVelocity(deltaTime, x, y) {
    return {
        x: x / deltaTime || 0,
        y: y / deltaTime || 0
    };
}

/**
 * get the direction between two points
 * @param {Number} x
 * @param {Number} y
 * @return {Number} direction
 */
function getDirection(x, y) {
    if (x === y) {
        return DIRECTION_NONE;
    }

    if (abs(x) >= abs(y)) {
        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
    }
    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
}

/**
 * calculate the absolute distance between two points
 * @param {Object} p1 {x, y}
 * @param {Object} p2 {x, y}
 * @param {Array} [props] containing x and y keys
 * @return {Number} distance
 */
function getDistance(p1, p2, props) {
    if (!props) {
        props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]],
        y = p2[props[1]] - p1[props[1]];

    return Math.sqrt((x * x) + (y * y));
}

/**
 * calculate the angle between two coordinates
 * @param {Object} p1
 * @param {Object} p2
 * @param {Array} [props] containing x and y keys
 * @return {Number} angle
 */
function getAngle(p1, p2, props) {
    if (!props) {
        props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]],
        y = p2[props[1]] - p1[props[1]];
    return Math.atan2(y, x) * 180 / Math.PI;
}

/**
 * calculate the rotation degrees between two pointersets
 * @param {Array} start array of pointers
 * @param {Array} end array of pointers
 * @return {Number} rotation
 */
function getRotation(start, end) {
    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);
}

/**
 * calculate the scale factor between two pointersets
 * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
 * @param {Array} start array of pointers
 * @param {Array} end array of pointers
 * @return {Number} scale
 */
function getScale(start, end) {
    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
}

var MOUSE_INPUT_MAP = {
    mousedown: INPUT_START,
    mousemove: INPUT_MOVE,
    mouseup: INPUT_END
};

var MOUSE_ELEMENT_EVENTS = 'mousedown';
var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';

/**
 * Mouse events input
 * @constructor
 * @extends Input
 */
function MouseInput() {
    this.evEl = MOUSE_ELEMENT_EVENTS;
    this.evWin = MOUSE_WINDOW_EVENTS;

    this.pressed = false; // mousedown state

    Input.apply(this, arguments);
}

inherit(MouseInput, Input, {
    /**
     * handle mouse events
     * @param {Object} ev
     */
    handler: function MEhandler(ev) {
        var eventType = MOUSE_INPUT_MAP[ev.type];

        // on start we want to have the left mouse button down
        if (eventType & INPUT_START && ev.button === 0) {
            this.pressed = true;
        }

        if (eventType & INPUT_MOVE && ev.which !== 1) {
            eventType = INPUT_END;
        }

        // mouse must be down
        if (!this.pressed) {
            return;
        }

        if (eventType & INPUT_END) {
            this.pressed = false;
        }

        this.callback(this.manager, eventType, {
            pointers: [ev],
            changedPointers: [ev],
            pointerType: INPUT_TYPE_MOUSE,
            srcEvent: ev
        });
    }
});

var POINTER_INPUT_MAP = {
    pointerdown: INPUT_START,
    pointermove: INPUT_MOVE,
    pointerup: INPUT_END,
    pointercancel: INPUT_CANCEL,
    pointerout: INPUT_CANCEL
};

// in IE10 the pointer types is defined as an enum
var IE10_POINTER_TYPE_ENUM = {
    2: INPUT_TYPE_TOUCH,
    3: INPUT_TYPE_PEN,
    4: INPUT_TYPE_MOUSE,
    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
};

var POINTER_ELEMENT_EVENTS = 'pointerdown';
var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';

// IE10 has prefixed support, and case-sensitive
if (window.MSPointerEvent && !window.PointerEvent) {
    POINTER_ELEMENT_EVENTS = 'MSPointerDown';
    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';
}

/**
 * Pointer events input
 * @constructor
 * @extends Input
 */
function PointerEventInput() {
    this.evEl = POINTER_ELEMENT_EVENTS;
    this.evWin = POINTER_WINDOW_EVENTS;

    Input.apply(this, arguments);

    this.store = (this.manager.session.pointerEvents = []);
}

inherit(PointerEventInput, Input, {
    /**
     * handle mouse events
     * @param {Object} ev
     */
    handler: function PEhandler(ev) {
        var store = this.store;
        var removePointer = false;

        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');
        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;

        var isTouch = (pointerType == INPUT_TYPE_TOUCH);

        // get index of the event in the store
        var storeIndex = inArray(store, ev.pointerId, 'pointerId');

        // start and mouse must be down
        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
            if (storeIndex < 0) {
                store.push(ev);
                storeIndex = store.length - 1;
            }
        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
            removePointer = true;
        }

        // it not found, so the pointer hasn't been down (so it's probably a hover)
        if (storeIndex < 0) {
            return;
        }

        // update the event in the store
        store[storeIndex] = ev;

        this.callback(this.manager, eventType, {
            pointers: store,
            changedPointers: [ev],
            pointerType: pointerType,
            srcEvent: ev
        });

        if (removePointer) {
            // remove from the store
            store.splice(storeIndex, 1);
        }
    }
});

var SINGLE_TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
};

var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';

/**
 * Touch events input
 * @constructor
 * @extends Input
 */
function SingleTouchInput() {
    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
    this.started = false;

    Input.apply(this, arguments);
}

inherit(SingleTouchInput, Input, {
    handler: function TEhandler(ev) {
        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];

        // should we handle the touch events?
        if (type === INPUT_START) {
            this.started = true;
        }

        if (!this.started) {
            return;
        }

        var touches = normalizeSingleTouches.call(this, ev, type);

        // when done, reset the started state
        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
            this.started = false;
        }

        this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
        });
    }
});

/**
 * @this {TouchInput}
 * @param {Object} ev
 * @param {Number} type flag
 * @returns {undefined|Array} [all, changed]
 */
function normalizeSingleTouches(ev, type) {
    var all = toArray(ev.touches);
    var changed = toArray(ev.changedTouches);

    if (type & (INPUT_END | INPUT_CANCEL)) {
        all = uniqueArray(all.concat(changed), 'identifier', true);
    }

    return [all, changed];
}

var TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
};

var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';

/**
 * Multi-user touch events input
 * @constructor
 * @extends Input
 */
function TouchInput() {
    this.evTarget = TOUCH_TARGET_EVENTS;
    this.targetIds = {};

    Input.apply(this, arguments);
}

inherit(TouchInput, Input, {
    handler: function MTEhandler(ev) {
        var type = TOUCH_INPUT_MAP[ev.type];
        var touches = getTouches.call(this, ev, type);
        if (!touches) {
            return;
        }

        this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
        });
    }
});

/**
 * @this {TouchInput}
 * @param {Object} ev
 * @param {Number} type flag
 * @returns {undefined|Array} [all, changed]
 */
function getTouches(ev, type) {
    var allTouches = toArray(ev.touches);
    var targetIds = this.targetIds;

    // when there is only one touch, the process can be simplified
    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
        targetIds[allTouches[0].identifier] = true;
        return [allTouches, allTouches];
    }

    var i,
        targetTouches,
        changedTouches = toArray(ev.changedTouches),
        changedTargetTouches = [],
        target = this.target;

    // get target touches from touches
    targetTouches = allTouches.filter(function(touch) {
        return hasParent(touch.target, target);
    });

    // collect touches
    if (type === INPUT_START) {
        i = 0;
        while (i < targetTouches.length) {
            targetIds[targetTouches[i].identifier] = true;
            i++;
        }
    }

    // filter changed touches to only contain touches that exist in the collected target ids
    i = 0;
    while (i < changedTouches.length) {
        if (targetIds[changedTouches[i].identifier]) {
            changedTargetTouches.push(changedTouches[i]);
        }

        // cleanup removed touches
        if (type & (INPUT_END | INPUT_CANCEL)) {
            delete targetIds[changedTouches[i].identifier];
        }
        i++;
    }

    if (!changedTargetTouches.length) {
        return;
    }

    return [
        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),
        changedTargetTouches
    ];
}

/**
 * Combined touch and mouse input
 *
 * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
 * This because touch devices also emit mouse events while doing a touch.
 *
 * @constructor
 * @extends Input
 */

var DEDUP_TIMEOUT = 2500;
var DEDUP_DISTANCE = 25;

function TouchMouseInput() {
    Input.apply(this, arguments);

    var handler = bindFn(this.handler, this);
    this.touch = new TouchInput(this.manager, handler);
    this.mouse = new MouseInput(this.manager, handler);

    this.primaryTouch = null;
    this.lastTouches = [];
}

inherit(TouchMouseInput, Input, {
    /**
     * handle mouse and touch events
     * @param {Hammer} manager
     * @param {String} inputEvent
     * @param {Object} inputData
     */
    handler: function TMEhandler(manager, inputEvent, inputData) {
        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),
            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);

        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {
            return;
        }

        // when we're in a touch event, record touches to  de-dupe synthetic mouse event
        if (isTouch) {
            recordTouches.call(this, inputEvent, inputData);
        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {
            return;
        }

        this.callback(manager, inputEvent, inputData);
    },

    /**
     * remove the event listeners
     */
    destroy: function destroy() {
        this.touch.destroy();
        this.mouse.destroy();
    }
});

function recordTouches(eventType, eventData) {
    if (eventType & INPUT_START) {
        this.primaryTouch = eventData.changedPointers[0].identifier;
        setLastTouch.call(this, eventData);
    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
        setLastTouch.call(this, eventData);
    }
}

function setLastTouch(eventData) {
    var touch = eventData.changedPointers[0];

    if (touch.identifier === this.primaryTouch) {
        var lastTouch = {x: touch.clientX, y: touch.clientY};
        this.lastTouches.push(lastTouch);
        var lts = this.lastTouches;
        var removeLastTouch = function() {
            var i = lts.indexOf(lastTouch);
            if (i > -1) {
                lts.splice(i, 1);
            }
        };
        setTimeout(removeLastTouch, DEDUP_TIMEOUT);
    }
}

function isSyntheticEvent(eventData) {
    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;
    for (var i = 0; i < this.lastTouches.length; i++) {
        var t = this.lastTouches[i];
        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);
        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {
            return true;
        }
    }
    return false;
}

var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');
var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;

// magical touchAction value
var TOUCH_ACTION_COMPUTE = 'compute';
var TOUCH_ACTION_AUTO = 'auto';
var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented
var TOUCH_ACTION_NONE = 'none';
var TOUCH_ACTION_PAN_X = 'pan-x';
var TOUCH_ACTION_PAN_Y = 'pan-y';
var TOUCH_ACTION_MAP = getTouchActionProps();

/**
 * Touch Action
 * sets the touchAction property or uses the js alternative
 * @param {Manager} manager
 * @param {String} value
 * @constructor
 */
function TouchAction(manager, value) {
    this.manager = manager;
    this.set(value);
}

TouchAction.prototype = {
    /**
     * set the touchAction value on the element or enable the polyfill
     * @param {String} value
     */
    set: function(value) {
        // find out the touch-action by the event handlers
        if (value == TOUCH_ACTION_COMPUTE) {
            value = this.compute();
        }

        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {
            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
        }
        this.actions = value.toLowerCase().trim();
    },

    /**
     * just re-set the touchAction value
     */
    update: function() {
        this.set(this.manager.options.touchAction);
    },

    /**
     * compute the value for the touchAction property based on the recognizer's settings
     * @returns {String} value
     */
    compute: function() {
        var actions = [];
        each(this.manager.recognizers, function(recognizer) {
            if (boolOrFn(recognizer.options.enable, [recognizer])) {
                actions = actions.concat(recognizer.getTouchAction());
            }
        });
        return cleanTouchActions(actions.join(' '));
    },

    /**
     * this method is called on each input cycle and provides the preventing of the browser behavior
     * @param {Object} input
     */
    preventDefaults: function(input) {
        var srcEvent = input.srcEvent;
        var direction = input.offsetDirection;

        // if the touch action did prevented once this session
        if (this.manager.session.prevented) {
            srcEvent.preventDefault();
            return;
        }

        var actions = this.actions;
        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];
        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];
        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];

        if (hasNone) {
            //do not prevent defaults if this is a tap gesture

            var isTapPointer = input.pointers.length === 1;
            var isTapMovement = input.distance < 2;
            var isTapTouchTime = input.deltaTime < 250;

            if (isTapPointer && isTapMovement && isTapTouchTime) {
                return;
            }
        }

        if (hasPanX && hasPanY) {
            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent
            return;
        }

        if (hasNone ||
            (hasPanY && direction & DIRECTION_HORIZONTAL) ||
            (hasPanX && direction & DIRECTION_VERTICAL)) {
            return this.preventSrc(srcEvent);
        }
    },

    /**
     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
     * @param {Object} srcEvent
     */
    preventSrc: function(srcEvent) {
        this.manager.session.prevented = true;
        srcEvent.preventDefault();
    }
};

/**
 * when the touchActions are collected they are not a valid value, so we need to clean things up. *
 * @param {String} actions
 * @returns {*}
 */
function cleanTouchActions(actions) {
    // none
    if (inStr(actions, TOUCH_ACTION_NONE)) {
        return TOUCH_ACTION_NONE;
    }

    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);

    // if both pan-x and pan-y are set (different recognizers
    // for different directions, e.g. horizontal pan but vertical swipe?)
    // we need none (as otherwise with pan-x pan-y combined none of these
    // recognizers will work, since the browser would handle all panning
    if (hasPanX && hasPanY) {
        return TOUCH_ACTION_NONE;
    }

    // pan-x OR pan-y
    if (hasPanX || hasPanY) {
        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
    }

    // manipulation
    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
        return TOUCH_ACTION_MANIPULATION;
    }

    return TOUCH_ACTION_AUTO;
}

function getTouchActionProps() {
    if (!NATIVE_TOUCH_ACTION) {
        return false;
    }
    var touchMap = {};
    var cssSupports = window.CSS && window.CSS.supports;
    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {

        // If css.supports is not supported but there is native touch-action assume it supports
        // all values. This is the case for IE 10 and 11.
        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;
    });
    return touchMap;
}

/**
 * Recognizer flow explained; *
 * All recognizers have the initial state of POSSIBLE when a input session starts.
 * The definition of a input session is from the first input until the last input, with all it's movement in it. *
 * Example session for mouse-input: mousedown -> mousemove -> mouseup
 *
 * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
 * which determines with state it should be.
 *
 * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
 * POSSIBLE to give it another change on the next cycle.
 *
 *               Possible
 *                  |
 *            +-----+---------------+
 *            |                     |
 *      +-----+-----+               |
 *      |           |               |
 *   Failed      Cancelled          |
 *                          +-------+------+
 *                          |              |
 *                      Recognized       Began
 *                                         |
 *                                      Changed
 *                                         |
 *                                  Ended/Recognized
 */
var STATE_POSSIBLE = 1;
var STATE_BEGAN = 2;
var STATE_CHANGED = 4;
var STATE_ENDED = 8;
var STATE_RECOGNIZED = STATE_ENDED;
var STATE_CANCELLED = 16;
var STATE_FAILED = 32;

/**
 * Recognizer
 * Every recognizer needs to extend from this class.
 * @constructor
 * @param {Object} options
 */
function Recognizer(options) {
    this.options = assign({}, this.defaults, options || {});

    this.id = uniqueId();

    this.manager = null;

    // default is enable true
    this.options.enable = ifUndefined(this.options.enable, true);

    this.state = STATE_POSSIBLE;

    this.simultaneous = {};
    this.requireFail = [];
}

Recognizer.prototype = {
    /**
     * @virtual
     * @type {Object}
     */
    defaults: {},

    /**
     * set options
     * @param {Object} options
     * @return {Recognizer}
     */
    set: function(options) {
        assign(this.options, options);

        // also update the touchAction, in case something changed about the directions/enabled state
        this.manager && this.manager.touchAction.update();
        return this;
    },

    /**
     * recognize simultaneous with an other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    recognizeWith: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
            return this;
        }

        var simultaneous = this.simultaneous;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (!simultaneous[otherRecognizer.id]) {
            simultaneous[otherRecognizer.id] = otherRecognizer;
            otherRecognizer.recognizeWith(this);
        }
        return this;
    },

    /**
     * drop the simultaneous link. it doesnt remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    dropRecognizeWith: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
            return this;
        }

        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        delete this.simultaneous[otherRecognizer.id];
        return this;
    },

    /**
     * recognizer can only run when an other is failing
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    requireFailure: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
            return this;
        }

        var requireFail = this.requireFail;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (inArray(requireFail, otherRecognizer) === -1) {
            requireFail.push(otherRecognizer);
            otherRecognizer.requireFailure(this);
        }
        return this;
    },

    /**
     * drop the requireFailure link. it does not remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    dropRequireFailure: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
            return this;
        }

        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        var index = inArray(this.requireFail, otherRecognizer);
        if (index > -1) {
            this.requireFail.splice(index, 1);
        }
        return this;
    },

    /**
     * has require failures boolean
     * @returns {boolean}
     */
    hasRequireFailures: function() {
        return this.requireFail.length > 0;
    },

    /**
     * if the recognizer can recognize simultaneous with an other recognizer
     * @param {Recognizer} otherRecognizer
     * @returns {Boolean}
     */
    canRecognizeWith: function(otherRecognizer) {
        return !!this.simultaneous[otherRecognizer.id];
    },

    /**
     * You should use `tryEmit` instead of `emit` directly to check
     * that all the needed recognizers has failed before emitting.
     * @param {Object} input
     */
    emit: function(input) {
        var self = this;
        var state = this.state;

        function emit(event) {
            self.manager.emit(event, input);
        }

        // 'panstart' and 'panmove'
        if (state < STATE_ENDED) {
            emit(self.options.event + stateStr(state));
        }

        emit(self.options.event); // simple 'eventName' events

        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)
            emit(input.additionalEvent);
        }

        // panend and pancancel
        if (state >= STATE_ENDED) {
            emit(self.options.event + stateStr(state));
        }
    },

    /**
     * Check that all the require failure recognizers has failed,
     * if true, it emits a gesture event,
     * otherwise, setup the state to FAILED.
     * @param {Object} input
     */
    tryEmit: function(input) {
        if (this.canEmit()) {
            return this.emit(input);
        }
        // it's failing anyway
        this.state = STATE_FAILED;
    },

    /**
     * can we emit?
     * @returns {boolean}
     */
    canEmit: function() {
        var i = 0;
        while (i < this.requireFail.length) {
            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {
                return false;
            }
            i++;
        }
        return true;
    },

    /**
     * update the recognizer
     * @param {Object} inputData
     */
    recognize: function(inputData) {
        // make a new copy of the inputData
        // so we can change the inputData without messing up the other recognizers
        var inputDataClone = assign({}, inputData);

        // is is enabled and allow recognizing?
        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
            this.reset();
            this.state = STATE_FAILED;
            return;
        }

        // reset when we've reached the end
        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
            this.state = STATE_POSSIBLE;
        }

        this.state = this.process(inputDataClone);

        // the recognizer has recognized a gesture
        // so trigger an event
        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
            this.tryEmit(inputDataClone);
        }
    },

    /**
     * return the state of the recognizer
     * the actual recognizing happens in this method
     * @virtual
     * @param {Object} inputData
     * @returns {Const} STATE
     */
    process: function(inputData) { }, // jshint ignore:line

    /**
     * return the preferred touch-action
     * @virtual
     * @returns {Array}
     */
    getTouchAction: function() { },

    /**
     * called when the gesture isn't allowed to recognize
     * like when another is being recognized or it is disabled
     * @virtual
     */
    reset: function() { }
};

/**
 * get a usable string, used as event postfix
 * @param {Const} state
 * @returns {String} state
 */
function stateStr(state) {
    if (state & STATE_CANCELLED) {
        return 'cancel';
    } else if (state & STATE_ENDED) {
        return 'end';
    } else if (state & STATE_CHANGED) {
        return 'move';
    } else if (state & STATE_BEGAN) {
        return 'start';
    }
    return '';
}

/**
 * direction cons to string
 * @param {Const} direction
 * @returns {String}
 */
function directionStr(direction) {
    if (direction == DIRECTION_DOWN) {
        return 'down';
    } else if (direction == DIRECTION_UP) {
        return 'up';
    } else if (direction == DIRECTION_LEFT) {
        return 'left';
    } else if (direction == DIRECTION_RIGHT) {
        return 'right';
    }
    return '';
}

/**
 * get a recognizer by name if it is bound to a manager
 * @param {Recognizer|String} otherRecognizer
 * @param {Recognizer} recognizer
 * @returns {Recognizer}
 */
function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
    var manager = recognizer.manager;
    if (manager) {
        return manager.get(otherRecognizer);
    }
    return otherRecognizer;
}

/**
 * This recognizer is just used as a base for the simple attribute recognizers.
 * @constructor
 * @extends Recognizer
 */
function AttrRecognizer() {
    Recognizer.apply(this, arguments);
}

inherit(AttrRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof AttrRecognizer
     */
    defaults: {
        /**
         * @type {Number}
         * @default 1
         */
        pointers: 1
    },

    /**
     * Used to check if it the recognizer receives valid input, like input.distance > 10.
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {Boolean} recognized
     */
    attrTest: function(input) {
        var optionPointers = this.options.pointers;
        return optionPointers === 0 || input.pointers.length === optionPointers;
    },

    /**
     * Process the input and return the state for the recognizer
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {*} State
     */
    process: function(input) {
        var state = this.state;
        var eventType = input.eventType;

        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
        var isValid = this.attrTest(input);

        // on cancel input and we've recognized before, return STATE_CANCELLED
        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
            return state | STATE_CANCELLED;
        } else if (isRecognized || isValid) {
            if (eventType & INPUT_END) {
                return state | STATE_ENDED;
            } else if (!(state & STATE_BEGAN)) {
                return STATE_BEGAN;
            }
            return state | STATE_CHANGED;
        }
        return STATE_FAILED;
    }
});

/**
 * Pan
 * Recognized when the pointer is down and moved in the allowed direction.
 * @constructor
 * @extends AttrRecognizer
 */
function PanRecognizer() {
    AttrRecognizer.apply(this, arguments);

    this.pX = null;
    this.pY = null;
}

inherit(PanRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof PanRecognizer
     */
    defaults: {
        event: 'pan',
        threshold: 10,
        pointers: 1,
        direction: DIRECTION_ALL
    },

    getTouchAction: function() {
        var direction = this.options.direction;
        var actions = [];
        if (direction & DIRECTION_HORIZONTAL) {
            actions.push(TOUCH_ACTION_PAN_Y);
        }
        if (direction & DIRECTION_VERTICAL) {
            actions.push(TOUCH_ACTION_PAN_X);
        }
        return actions;
    },

    directionTest: function(input) {
        var options = this.options;
        var hasMoved = true;
        var distance = input.distance;
        var direction = input.direction;
        var x = input.deltaX;
        var y = input.deltaY;

        // lock to axis?
        if (!(direction & options.direction)) {
            if (options.direction & DIRECTION_HORIZONTAL) {
                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;
                hasMoved = x != this.pX;
                distance = Math.abs(input.deltaX);
            } else {
                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;
                hasMoved = y != this.pY;
                distance = Math.abs(input.deltaY);
            }
        }
        input.direction = direction;
        return hasMoved && distance > options.threshold && direction & options.direction;
    },

    attrTest: function(input) {
        return AttrRecognizer.prototype.attrTest.call(this, input) &&
            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));
    },

    emit: function(input) {

        this.pX = input.deltaX;
        this.pY = input.deltaY;

        var direction = directionStr(input.direction);

        if (direction) {
            input.additionalEvent = this.options.event + direction;
        }
        this._super.emit.call(this, input);
    }
});

/**
 * Pinch
 * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
 * @constructor
 * @extends AttrRecognizer
 */
function PinchRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(PinchRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof PinchRecognizer
     */
    defaults: {
        event: 'pinch',
        threshold: 0,
        pointers: 2
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_NONE];
    },

    attrTest: function(input) {
        return this._super.attrTest.call(this, input) &&
            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
    },

    emit: function(input) {
        if (input.scale !== 1) {
            var inOut = input.scale < 1 ? 'in' : 'out';
            input.additionalEvent = this.options.event + inOut;
        }
        this._super.emit.call(this, input);
    }
});

/**
 * Press
 * Recognized when the pointer is down for x ms without any movement.
 * @constructor
 * @extends Recognizer
 */
function PressRecognizer() {
    Recognizer.apply(this, arguments);

    this._timer = null;
    this._input = null;
}

inherit(PressRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof PressRecognizer
     */
    defaults: {
        event: 'press',
        pointers: 1,
        time: 251, // minimal time of the pointer to be pressed
        threshold: 9 // a minimal movement is ok, but keep it low
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_AUTO];
    },

    process: function(input) {
        var options = this.options;
        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTime = input.deltaTime > options.time;

        this._input = input;

        // we only allow little movement
        // and we've reached an end event, so a tap is possible
        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {
            this.reset();
        } else if (input.eventType & INPUT_START) {
            this.reset();
            this._timer = setTimeoutContext(function() {
                this.state = STATE_RECOGNIZED;
                this.tryEmit();
            }, options.time, this);
        } else if (input.eventType & INPUT_END) {
            return STATE_RECOGNIZED;
        }
        return STATE_FAILED;
    },

    reset: function() {
        clearTimeout(this._timer);
    },

    emit: function(input) {
        if (this.state !== STATE_RECOGNIZED) {
            return;
        }

        if (input && (input.eventType & INPUT_END)) {
            this.manager.emit(this.options.event + 'up', input);
        } else {
            this._input.timeStamp = now();
            this.manager.emit(this.options.event, this._input);
        }
    }
});

/**
 * Rotate
 * Recognized when two or more pointer are moving in a circular motion.
 * @constructor
 * @extends AttrRecognizer
 */
function RotateRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(RotateRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof RotateRecognizer
     */
    defaults: {
        event: 'rotate',
        threshold: 0,
        pointers: 2
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_NONE];
    },

    attrTest: function(input) {
        return this._super.attrTest.call(this, input) &&
            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
    }
});

/**
 * Swipe
 * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
 * @constructor
 * @extends AttrRecognizer
 */
function SwipeRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(SwipeRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof SwipeRecognizer
     */
    defaults: {
        event: 'swipe',
        threshold: 10,
        velocity: 0.3,
        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
        pointers: 1
    },

    getTouchAction: function() {
        return PanRecognizer.prototype.getTouchAction.call(this);
    },

    attrTest: function(input) {
        var direction = this.options.direction;
        var velocity;

        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
            velocity = input.overallVelocity;
        } else if (direction & DIRECTION_HORIZONTAL) {
            velocity = input.overallVelocityX;
        } else if (direction & DIRECTION_VERTICAL) {
            velocity = input.overallVelocityY;
        }

        return this._super.attrTest.call(this, input) &&
            direction & input.offsetDirection &&
            input.distance > this.options.threshold &&
            input.maxPointers == this.options.pointers &&
            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
    },

    emit: function(input) {
        var direction = directionStr(input.offsetDirection);
        if (direction) {
            this.manager.emit(this.options.event + direction, input);
        }

        this.manager.emit(this.options.event, input);
    }
});

/**
 * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
 * between the given interval and position. The delay option can be used to recognize multi-taps without firing
 * a single tap.
 *
 * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
 * multi-taps being recognized.
 * @constructor
 * @extends Recognizer
 */
function TapRecognizer() {
    Recognizer.apply(this, arguments);

    // previous time and center,
    // used for tap counting
    this.pTime = false;
    this.pCenter = false;

    this._timer = null;
    this._input = null;
    this.count = 0;
}

inherit(TapRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof PinchRecognizer
     */
    defaults: {
        event: 'tap',
        pointers: 1,
        taps: 1,
        interval: 300, // max time between the multi-tap taps
        time: 250, // max time of the pointer to be down (like finger on the screen)
        threshold: 9, // a minimal movement is ok, but keep it low
        posThreshold: 10 // a multi-tap can be a bit off the initial position
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_MANIPULATION];
    },

    process: function(input) {
        var options = this.options;

        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTouchTime = input.deltaTime < options.time;

        this.reset();

        if ((input.eventType & INPUT_START) && (this.count === 0)) {
            return this.failTimeout();
        }

        // we only allow little movement
        // and we've reached an end event, so a tap is possible
        if (validMovement && validTouchTime && validPointers) {
            if (input.eventType != INPUT_END) {
                return this.failTimeout();
            }

            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;
            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;

            this.pTime = input.timeStamp;
            this.pCenter = input.center;

            if (!validMultiTap || !validInterval) {
                this.count = 1;
            } else {
                this.count += 1;
            }

            this._input = input;

            // if tap count matches we have recognized it,
            // else it has began recognizing...
            var tapCount = this.count % options.taps;
            if (tapCount === 0) {
                // no failing requirements, immediately trigger the tap event
                // or wait as long as the multitap interval to trigger
                if (!this.hasRequireFailures()) {
                    return STATE_RECOGNIZED;
                } else {
                    this._timer = setTimeoutContext(function() {
                        this.state = STATE_RECOGNIZED;
                        this.tryEmit();
                    }, options.interval, this);
                    return STATE_BEGAN;
                }
            }
        }
        return STATE_FAILED;
    },

    failTimeout: function() {
        this._timer = setTimeoutContext(function() {
            this.state = STATE_FAILED;
        }, this.options.interval, this);
        return STATE_FAILED;
    },

    reset: function() {
        clearTimeout(this._timer);
    },

    emit: function() {
        if (this.state == STATE_RECOGNIZED) {
            this._input.tapCount = this.count;
            this.manager.emit(this.options.event, this._input);
        }
    }
});

/**
 * Simple way to create a manager with a default set of recognizers.
 * @param {HTMLElement} element
 * @param {Object} [options]
 * @constructor
 */
function Hammer(element, options) {
    options = options || {};
    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);
    return new Manager(element, options);
}

/**
 * @const {string}
 */
Hammer.VERSION = '2.0.7';

/**
 * default settings
 * @namespace
 */
Hammer.defaults = {
    /**
     * set if DOM events are being triggered.
     * But this is slower and unused by simple implementations, so disabled by default.
     * @type {Boolean}
     * @default false
     */
    domEvents: false,

    /**
     * The value for the touchAction property/fallback.
     * When set to `compute` it will magically set the correct value based on the added recognizers.
     * @type {String}
     * @default compute
     */
    touchAction: TOUCH_ACTION_COMPUTE,

    /**
     * @type {Boolean}
     * @default true
     */
    enable: true,

    /**
     * EXPERIMENTAL FEATURE -- can be removed/changed
     * Change the parent input target element.
     * If Null, then it is being set the to main element.
     * @type {Null|EventTarget}
     * @default null
     */
    inputTarget: null,

    /**
     * force an input class
     * @type {Null|Function}
     * @default null
     */
    inputClass: null,

    /**
     * Default recognizer setup when calling `Hammer()`
     * When creating a new Manager these will be skipped.
     * @type {Array}
     */
    preset: [
        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
        [RotateRecognizer, {enable: false}],
        [PinchRecognizer, {enable: false}, ['rotate']],
        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],
        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],
        [TapRecognizer],
        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],
        [PressRecognizer]
    ],

    /**
     * Some CSS properties can be used to improve the working of Hammer.
     * Add them to this method and they will be set when creating a new Manager.
     * @namespace
     */
    cssProps: {
        /**
         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
         * @type {String}
         * @default 'none'
         */
        userSelect: 'none',

        /**
         * Disable the Windows Phone grippers when pressing an element.
         * @type {String}
         * @default 'none'
         */
        touchSelect: 'none',

        /**
         * Disables the default callout shown when you touch and hold a touch target.
         * On iOS, when you touch and hold a touch target such as a link, Safari displays
         * a callout containing information about the link. This property allows you to disable that callout.
         * @type {String}
         * @default 'none'
         */
        touchCallout: 'none',

        /**
         * Specifies whether zooming is enabled. Used by IE10>
         * @type {String}
         * @default 'none'
         */
        contentZooming: 'none',

        /**
         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
         * @type {String}
         * @default 'none'
         */
        userDrag: 'none',

        /**
         * Overrides the highlight color shown when the user taps a link or a JavaScript
         * clickable element in iOS. This property obeys the alpha value, if specified.
         * @type {String}
         * @default 'rgba(0,0,0,0)'
         */
        tapHighlightColor: 'rgba(0,0,0,0)'
    }
};

var STOP = 1;
var FORCED_STOP = 2;

/**
 * Manager
 * @param {HTMLElement} element
 * @param {Object} [options]
 * @constructor
 */
function Manager(element, options) {
    this.options = assign({}, Hammer.defaults, options || {});

    this.options.inputTarget = this.options.inputTarget || element;

    this.handlers = {};
    this.session = {};
    this.recognizers = [];
    this.oldCssProps = {};

    this.element = element;
    this.input = createInputInstance(this);
    this.touchAction = new TouchAction(this, this.options.touchAction);

    toggleCssProps(this, true);

    each(this.options.recognizers, function(item) {
        var recognizer = this.add(new (item[0])(item[1]));
        item[2] && recognizer.recognizeWith(item[2]);
        item[3] && recognizer.requireFailure(item[3]);
    }, this);
}

Manager.prototype = {
    /**
     * set options
     * @param {Object} options
     * @returns {Manager}
     */
    set: function(options) {
        assign(this.options, options);

        // Options that need a little more setup
        if (options.touchAction) {
            this.touchAction.update();
        }
        if (options.inputTarget) {
            // Clean up existing event listeners and reinitialize
            this.input.destroy();
            this.input.target = options.inputTarget;
            this.input.init();
        }
        return this;
    },

    /**
     * stop recognizing for this session.
     * This session will be discarded, when a new [input]start event is fired.
     * When forced, the recognizer cycle is stopped immediately.
     * @param {Boolean} [force]
     */
    stop: function(force) {
        this.session.stopped = force ? FORCED_STOP : STOP;
    },

    /**
     * run the recognizers!
     * called by the inputHandler function on every movement of the pointers (touches)
     * it walks through all the recognizers and tries to detect the gesture that is being made
     * @param {Object} inputData
     */
    recognize: function(inputData) {
        var session = this.session;
        if (session.stopped) {
            return;
        }

        // run the touch-action polyfill
        this.touchAction.preventDefaults(inputData);

        var recognizer;
        var recognizers = this.recognizers;

        // this holds the recognizer that is being recognized.
        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
        // if no recognizer is detecting a thing, it is set to `null`
        var curRecognizer = session.curRecognizer;

        // reset when the last recognizer is recognized
        // or when we're in a new session
        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {
            curRecognizer = session.curRecognizer = null;
        }

        var i = 0;
        while (i < recognizers.length) {
            recognizer = recognizers[i];

            // find out if we are allowed try to recognize the input for this one.
            // 1.   allow if the session is NOT forced stopped (see the .stop() method)
            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
            //      that is being recognized.
            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
            //      this can be setup with the `recognizeWith()` method on the recognizer.
            if (session.stopped !== FORCED_STOP && ( // 1
                    !curRecognizer || recognizer == curRecognizer || // 2
                    recognizer.canRecognizeWith(curRecognizer))) { // 3
                recognizer.recognize(inputData);
            } else {
                recognizer.reset();
            }

            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
            // current active recognizer. but only if we don't already have an active recognizer
            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
                curRecognizer = session.curRecognizer = recognizer;
            }
            i++;
        }
    },

    /**
     * get a recognizer by its event name.
     * @param {Recognizer|String} recognizer
     * @returns {Recognizer|Null}
     */
    get: function(recognizer) {
        if (recognizer instanceof Recognizer) {
            return recognizer;
        }

        var recognizers = this.recognizers;
        for (var i = 0; i < recognizers.length; i++) {
            if (recognizers[i].options.event == recognizer) {
                return recognizers[i];
            }
        }
        return null;
    },

    /**
     * add a recognizer to the manager
     * existing recognizers with the same event name will be removed
     * @param {Recognizer} recognizer
     * @returns {Recognizer|Manager}
     */
    add: function(recognizer) {
        if (invokeArrayArg(recognizer, 'add', this)) {
            return this;
        }

        // remove existing
        var existing = this.get(recognizer.options.event);
        if (existing) {
            this.remove(existing);
        }

        this.recognizers.push(recognizer);
        recognizer.manager = this;

        this.touchAction.update();
        return recognizer;
    },

    /**
     * remove a recognizer by name or instance
     * @param {Recognizer|String} recognizer
     * @returns {Manager}
     */
    remove: function(recognizer) {
        if (invokeArrayArg(recognizer, 'remove', this)) {
            return this;
        }

        recognizer = this.get(recognizer);

        // let's make sure this recognizer exists
        if (recognizer) {
            var recognizers = this.recognizers;
            var index = inArray(recognizers, recognizer);

            if (index !== -1) {
                recognizers.splice(index, 1);
                this.touchAction.update();
            }
        }

        return this;
    },

    /**
     * bind event
     * @param {String} events
     * @param {Function} handler
     * @returns {EventEmitter} this
     */
    on: function(events, handler) {
        if (events === undefined) {
            return;
        }
        if (handler === undefined) {
            return;
        }

        var handlers = this.handlers;
        each(splitStr(events), function(event) {
            handlers[event] = handlers[event] || [];
            handlers[event].push(handler);
        });
        return this;
    },

    /**
     * unbind event, leave emit blank to remove all handlers
     * @param {String} events
     * @param {Function} [handler]
     * @returns {EventEmitter} this
     */
    off: function(events, handler) {
        if (events === undefined) {
            return;
        }

        var handlers = this.handlers;
        each(splitStr(events), function(event) {
            if (!handler) {
                delete handlers[event];
            } else {
                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);
            }
        });
        return this;
    },

    /**
     * emit event to the listeners
     * @param {String} event
     * @param {Object} data
     */
    emit: function(event, data) {
        // we also want to trigger dom events
        if (this.options.domEvents) {
            triggerDomEvent(event, data);
        }

        // no handlers, so skip it all
        var handlers = this.handlers[event] && this.handlers[event].slice();
        if (!handlers || !handlers.length) {
            return;
        }

        data.type = event;
        data.preventDefault = function() {
            data.srcEvent.preventDefault();
        };

        var i = 0;
        while (i < handlers.length) {
            handlers[i](data);
            i++;
        }
    },

    /**
     * destroy the manager and unbinds all events
     * it doesn't unbind dom events, that is the user own responsibility
     */
    destroy: function() {
        this.element && toggleCssProps(this, false);

        this.handlers = {};
        this.session = {};
        this.input.destroy();
        this.element = null;
    }
};

/**
 * add/remove the css properties as defined in manager.options.cssProps
 * @param {Manager} manager
 * @param {Boolean} add
 */
function toggleCssProps(manager, add) {
    var element = manager.element;
    if (!element.style) {
        return;
    }
    var prop;
    each(manager.options.cssProps, function(value, name) {
        prop = prefixed(element.style, name);
        if (add) {
            manager.oldCssProps[prop] = element.style[prop];
            element.style[prop] = value;
        } else {
            element.style[prop] = manager.oldCssProps[prop] || '';
        }
    });
    if (!add) {
        manager.oldCssProps = {};
    }
}

/**
 * trigger dom event
 * @param {String} event
 * @param {Object} data
 */
function triggerDomEvent(event, data) {
    var gestureEvent = document.createEvent('Event');
    gestureEvent.initEvent(event, true, true);
    gestureEvent.gesture = data;
    data.target.dispatchEvent(gestureEvent);
}

assign(Hammer, {
    INPUT_START: INPUT_START,
    INPUT_MOVE: INPUT_MOVE,
    INPUT_END: INPUT_END,
    INPUT_CANCEL: INPUT_CANCEL,

    STATE_POSSIBLE: STATE_POSSIBLE,
    STATE_BEGAN: STATE_BEGAN,
    STATE_CHANGED: STATE_CHANGED,
    STATE_ENDED: STATE_ENDED,
    STATE_RECOGNIZED: STATE_RECOGNIZED,
    STATE_CANCELLED: STATE_CANCELLED,
    STATE_FAILED: STATE_FAILED,

    DIRECTION_NONE: DIRECTION_NONE,
    DIRECTION_LEFT: DIRECTION_LEFT,
    DIRECTION_RIGHT: DIRECTION_RIGHT,
    DIRECTION_UP: DIRECTION_UP,
    DIRECTION_DOWN: DIRECTION_DOWN,
    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
    DIRECTION_VERTICAL: DIRECTION_VERTICAL,
    DIRECTION_ALL: DIRECTION_ALL,

    Manager: Manager,
    Input: Input,
    TouchAction: TouchAction,

    TouchInput: TouchInput,
    MouseInput: MouseInput,
    PointerEventInput: PointerEventInput,
    TouchMouseInput: TouchMouseInput,
    SingleTouchInput: SingleTouchInput,

    Recognizer: Recognizer,
    AttrRecognizer: AttrRecognizer,
    Tap: TapRecognizer,
    Pan: PanRecognizer,
    Swipe: SwipeRecognizer,
    Pinch: PinchRecognizer,
    Rotate: RotateRecognizer,
    Press: PressRecognizer,

    on: addEventListeners,
    off: removeEventListeners,
    each: each,
    merge: merge,
    extend: extend,
    assign: assign,
    inherit: inherit,
    bindFn: bindFn,
    prefixed: prefixed
});

// this prevents errors when Hammer is loaded in the presence of an AMD
//  style loader but by script tag, not by the loader.
var freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line
freeGlobal.Hammer = Hammer;

if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
        return Hammer;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {}

})(window, document, 'Hammer');


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "ca5a":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "ca6b":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-button-wrapper[data-v-bd3ba3b8]{display:inline-block}.pesona-button[data-v-bd3ba3b8]{font-family:var(--pesona-font-primary);position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;background-color:var(--bg-color-value);text-align:center;letter-spacing:.5px;outline:0;border:none;-webkit-border-radius:2px;border-radius:2px}.pesona-button[data-v-bd3ba3b8],.pesona-button a[data-v-bd3ba3b8]{text-decoration:none;color:var(--color-value)}.pesona-button a[data-v-bd3ba3b8]{padding:var(--size-half-value) var(--size-value);pointer-events:var(--pointer-events-value)}.pesona-button[data-v-bd3ba3b8]:hover{background-color:var(--pesona-brand-color-accent)}.block[data-v-bd3ba3b8]{display:block}.uppercase[data-v-bd3ba3b8]{text-transform:uppercase}.ripple[data-v-bd3ba3b8]{background-position:50%;-webkit-transition:background .4s;-o-transition:background .4s;transition:background .4s}.ripple[data-v-bd3ba3b8]:hover{background:var(--bg-color-value) -webkit-radial-gradient(circle,rgba(0,0,0,0) 1%,var(--bg-color-value) 1%) 50%/15000%;background:var(--bg-color-value) -o-radial-gradient(circle,rgba(0,0,0,0) 1%,var(--bg-color-value) 1%) 50%/15000%;background:var(--bg-color-value) radial-gradient(circle,rgba(0,0,0,0) 1%,var(--bg-color-value) 0) 50%/15000%}.ripple[data-v-bd3ba3b8]:active{background-color:var(--color-value);-webkit-background-size:100% 100%;background-size:100%;-webkit-transition:background 0s;-o-transition:background 0s;transition:background 0s}.disabled[data-v-bd3ba3b8]{opacity:.5;cursor:not-allowed}.ghost[data-v-bd3ba3b8]{border:1px solid var(--bg-color-value)}.ghost[data-v-bd3ba3b8],.no-border[data-v-bd3ba3b8]{background-color:rgba(0,0,0,0)}.no-border[data-v-bd3ba3b8]{border:none}.shape-round[data-v-bd3ba3b8]{-webkit-border-radius:50%;border-radius:50%}.shape-pill[data-v-bd3ba3b8]{-webkit-border-radius:var(--size-double-value);border-radius:var(--size-double-value)}.shape-rectangle[data-v-bd3ba3b8]{-webkit-border-radius:2px;border-radius:2px}.texture-flat[data-v-bd3ba3b8]{-webkit-box-shadow:none;box-shadow:none}.texture-emboss[data-v-bd3ba3b8]{-webkit-box-shadow:0 2px 10px 0 rgba(0,0,0,.75);box-shadow:0 2px 10px 0 rgba(0,0,0,.75)}.texture-engrave[data-v-bd3ba3b8]{-webkit-box-shadow:inset .02em .08em .2em .08em rgba(0,0,0,.5);box-shadow:inset .02em .08em .2em .08em rgba(0,0,0,.5)}.downdown-indicator[data-v-bd3ba3b8]{display:inline-block;text-align:center;margin:0 2px;-webkit-transform:translateY(15%);-ms-transform:translateY(15%);transform:translateY(15%)}.downdown-indicator .caret-icon[data-v-bd3ba3b8]{fill:var(--color-value)!important}.dropdown-option[data-v-bd3ba3b8]{display:block;position:absolute;margin-top:3px;z-index:999;background-color:var(--pesona-brand-color-secondary);-webkit-animation-name:opacity-data-v-bd3ba3b8;animation-name:opacity-data-v-bd3ba3b8;-webkit-animation-duration:.4s;animation-duration:.4s;border:1px solid rgba(34,36,38,.15);-webkit-box-shadow:0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.15);box-shadow:0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.15);-webkit-border-radius:3px;border-radius:3px}@-webkit-keyframes opacity-data-v-bd3ba3b8{0%{opacity:0}to{opacity:1}}@keyframes opacity-data-v-bd3ba3b8{0%{opacity:0}to{opacity:1}}.dropdown-option a[data-v-bd3ba3b8]{display:block;padding:6px 8px;padding-left:10px;text-decoration:none;color:var(--pesona-on-color-secondary);cursor:pointer}.dropdown-option a[data-v-bd3ba3b8]:hover{background-color:var(--pesona-brand-color-secondary-darken-10)}.dropdown-option[data-v-bd3ba3b8]:after{content:\"\";position:absolute;left:12px;top:-6px;width:0;height:0;border-style:solid;border-width:0 6px 6px 6px;border-color:rgba(0,0,0,0) rgba(0,0,0,0) var(--pesona-brand-color-secondary) rgba(0,0,0,0);z-index:9998}", ""]);

// exports


/***/ }),

/***/ "cadf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__("9c6c");
var step = __webpack_require__("d53b");
var Iterators = __webpack_require__("84f2");
var toIObject = __webpack_require__("6821");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__("01f9")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "cb7c":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "ccf0":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-dialog .container[data-v-7d3f96d7]{overflow:hidden}.pesona-dialog .container .activator-space[data-v-7d3f96d7]{position:absolute}.pesona-dialog .container .content-wrapper[data-v-7d3f96d7]{position:fixed;top:0;z-index:9999;width:100%}.pesona-dialog .container .content[data-v-7d3f96d7]{position:relative;z-index:999}.pesona-dialog .container .overlay[data-v-7d3f96d7]{width:100vw;height:100vh;position:absolute;top:0;right:0;background-color:#212121;opacity:.46}.pesona-dialog .twitching[data-v-7d3f96d7]{-webkit-animation:twitch-data-v-7d3f96d7 .1s;animation:twitch-data-v-7d3f96d7 .1s}.pesona-dialog .fade-enter-active[data-v-7d3f96d7],.pesona-dialog .fade-leave-active[data-v-7d3f96d7]{-webkit-transition:opacity .2s;-o-transition:opacity .2s;transition:opacity .2s}.pesona-dialog .fade-enter[data-v-7d3f96d7],.pesona-dialog .fade-leave-to[data-v-7d3f96d7]{opacity:0}@-webkit-keyframes twitch-data-v-7d3f96d7{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes twitch-data-v-7d3f96d7{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}to{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes fade-in-data-v-7d3f96d7{0%{opacity:0}to{opacity:1}}@keyframes fade-in-data-v-7d3f96d7{0%{opacity:0}to{opacity:1}}@-webkit-keyframes fade-out-data-v-7d3f96d7{0%{opacity:1}to{opacity:0}}@keyframes fade-out-data-v-7d3f96d7{0%{opacity:1}to{opacity:0}}", ""]);

// exports


/***/ }),

/***/ "cd1c":
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__("e853");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "ce10":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("69a8");
var toIObject = __webpack_require__("6821");
var arrayIndexOf = __webpack_require__("c366")(false);
var IE_PROTO = __webpack_require__("613b")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "d13f":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da3c");
var core = __webpack_require__("a7d3");
var ctx = __webpack_require__("bc25");
var hide = __webpack_require__("8ce0");
var has = __webpack_require__("43c8");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "d256":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__("da3c");
var has = __webpack_require__("43c8");
var DESCRIPTORS = __webpack_require__("7d95");
var $export = __webpack_require__("d13f");
var redefine = __webpack_require__("2312");
var META = __webpack_require__("6277").KEY;
var $fails = __webpack_require__("d782");
var shared = __webpack_require__("7772");
var setToStringTag = __webpack_require__("c0d8");
var uid = __webpack_require__("7b00");
var wks = __webpack_require__("1b55");
var wksExt = __webpack_require__("fda1");
var wksDefine = __webpack_require__("0a0a");
var enumKeys = __webpack_require__("d2d6");
var isArray = __webpack_require__("b5aa");
var anObject = __webpack_require__("0f89");
var isObject = __webpack_require__("6f8a");
var toObject = __webpack_require__("0185");
var toIObject = __webpack_require__("6a9b");
var toPrimitive = __webpack_require__("2ea1");
var createDesc = __webpack_require__("f845");
var _create = __webpack_require__("7108");
var gOPNExt = __webpack_require__("565d");
var $GOPD = __webpack_require__("626e");
var $GOPS = __webpack_require__("31c2");
var $DP = __webpack_require__("3adc");
var $keys = __webpack_require__("7633");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__("d876").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__("d74e").f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__("b457")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__("8ce0")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "d2c8":
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__("aae3");
var defined = __webpack_require__("be13");

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),

/***/ "d2d6":
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__("7633");
var gOPS = __webpack_require__("31c2");
var pIE = __webpack_require__("d74e");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "d3f4":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "d53b":
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "d74e":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "d782":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "d7c8":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xIcon_vue_vue_type_style_index_0_id_6e5f93c1_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("e90e");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xIcon_vue_vue_type_style_index_0_id_6e5f93c1_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xIcon_vue_vue_type_style_index_0_id_6e5f93c1_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xIcon_vue_vue_type_style_index_0_id_6e5f93c1_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "d876":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__("2695");
var hiddenKeys = __webpack_require__("0029").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "d8e8":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "da3c":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "e11e":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "e12c":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-card .container[data-v-bc086f08]{margin:4px 24px;-webkit-border-radius:5px;border-radius:5px;min-width:300px;min-height:250px;background-color:#fff;-webkit-transition:-webkit-box-shadow .28s cubic-bezier(.4,0,.2,1);transition:-webkit-box-shadow .28s cubic-bezier(.4,0,.2,1);-o-transition:box-shadow .28s cubic-bezier(.4,0,.2,1);transition:box-shadow .28s cubic-bezier(.4,0,.2,1);transition:box-shadow .28s cubic-bezier(.4,0,.2,1),-webkit-box-shadow .28s cubic-bezier(.4,0,.2,1);will-change:box-shadow;-webkit-box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);display:grid;grid-template-columns:auto;grid-template-rows:auto auto 64px}.pesona-card .container .header[data-v-bc086f08]{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;font-size:1.25rem;font-weight:500;letter-spacing:.0125em;padding:24px}.pesona-card .container .content[data-v-bc086f08]{padding:8px 24px;background-color:#fff;overflow-y:auto;overflow-x:hidden}.pesona-card .container .actions[data-v-bc086f08]{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:8px;-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-webkit-flex-direction:row-reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}", ""]);

// exports


/***/ }),

/***/ "e265":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("5698");

/***/ }),

/***/ "e341":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("d13f");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__("7d95"), 'Object', { defineProperty: __webpack_require__("3adc").f });


/***/ }),

/***/ "e5d3":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("e12c");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("452c863e", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "e5fa":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "e6dc":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("874b");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("a97c8d96", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "e853":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
var isArray = __webpack_require__("1169");
var SPECIES = __webpack_require__("2b4c")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "e90e":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("1b1e");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("0e2bbfdc", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "e98e":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("2350")(false);
// imports


// module
exports.push([module.i, ".pesona-sidenav-title .container[data-v-7fa52edb]{text-transform:uppercase;font-size:.8rem;margin:16px;font-weight:700;color:#3f6ad8;white-space:nowrap;position:relative}.pesona-sidenav-title .shrink-container[data-v-7fa52edb]{width:100%;height:4px;margin-bottom:10px;background-color:var(--pesona-brand-color-secondary)}", ""]);

// exports


/***/ }),

/***/ "ea85":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xNavbar_vue_vue_type_style_index_0_id_c3bdeef8_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("c725");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xNavbar_vue_vue_type_style_index_0_id_c3bdeef8_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xNavbar_vue_vue_type_style_index_0_id_c3bdeef8_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xNavbar_vue_vue_type_style_index_0_id_c3bdeef8_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "ebd6":
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__("cb7c");
var aFunction = __webpack_require__("d8e8");
var SPECIES = __webpack_require__("2b4c")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "ec5b":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("e341");
var $Object = __webpack_require__("a7d3").Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),

/***/ "ecbe":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavList_vue_vue_type_style_index_0_id_3915892d_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("0ba5");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavList_vue_vue_type_style_index_0_id_3915892d_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavList_vue_vue_type_style_index_0_id_3915892d_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSidenavList_vue_vue_type_style_index_0_id_3915892d_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "f2fe":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "f32d":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("ca6b");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("202bac98", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "f3e0":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__("0185");
var $keys = __webpack_require__("7633");

__webpack_require__("c165")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "f3e2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("5ca1");
var $forEach = __webpack_require__("0a49")(0);
var STRICT = __webpack_require__("2f21")([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn /* , thisArg */) {
    return $forEach(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "f568":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("3adc");
var anObject = __webpack_require__("0f89");
var getKeys = __webpack_require__("7633");

module.exports = __webpack_require__("7d95") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "f6fd":
/***/ (function(module, exports) {

// document.currentScript polyfill by Adam Miller

// MIT license

(function(document){
  var currentScript = "currentScript",
      scripts = document.getElementsByTagName('script'); // Live NodeList collection

  // If browser needs currentScript polyfill, add get currentScript() to the document object
  if (!(currentScript in document)) {
    Object.defineProperty(document, currentScript, {
      get: function(){

        // IE 6-10 supports script readyState
        // IE 10+ support stack trace
        try { throw new Error(); }
        catch (err) {

          // Find the second match for the "at" string to get file src url from stack.
          // Specifically works with the format of stack traces in IE.
          var i, res = ((/.*at [^\(]*\((.*):.+:.+\)$/ig).exec(err.stack) || [false])[1];

          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag
          for(i in scripts){
            if(scripts[i].src == res || scripts[i].readyState == "interactive"){
              return scripts[i];
            }
          }

          // If no match, return null
          return null;
        }
      }
    });
  }
})(document);


/***/ }),

/***/ "f798":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xCard_vue_vue_type_style_index_0_id_bc086f08_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("e5d3");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xCard_vue_vue_type_style_index_0_id_bc086f08_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xCard_vue_vue_type_style_index_0_id_bc086f08_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xCard_vue_vue_type_style_index_0_id_bc086f08_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "f845":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "fa5b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("5537")('native-function-to-string', Function.toString);


/***/ }),

/***/ "fab2":
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__("7726").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  if (true) {
    __webpack_require__("f6fd")
  }

  var setPublicPath_i
  if ((setPublicPath_i = window.document.currentScript) && (setPublicPath_i = setPublicPath_i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/))) {
    __webpack_require__.p = setPublicPath_i[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("7f7f");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/themes/xTheme.vue?vue&type=template&id=09c96fd6&scoped=true&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-theme"},[_c('div',{key:_vm.componentKey},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/themes/xTheme.vue?vue&type=template&id=09c96fd6&scoped=true&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("6b54");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("87b3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__("a481");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("ac6a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("cadf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("456d");

// EXTERNAL MODULE: ./node_modules/webfontloader/webfontloader.js
var webfontloader = __webpack_require__("27d6");
var webfontloader_default = /*#__PURE__*/__webpack_require__.n(webfontloader);

// CONCATENATED MODULE: ./src/mixins/styleMixin.js







/* harmony default export */ var styleMixin = ({
  data: function data() {
    return {
      xPESONA_COLORS: {
        // brands
        brandPrimary: "#FF420E",
        brandSecondary: "#F98866",
        brandAccent: "#80BD9E",
        onPrimary: "#FFF",
        onSecondary: "#FFF",
        onAccent: "#FFF",
        // shades
        shadeBlack: "#000",
        shadeSemiBlack: "#454545",
        shadeGray: "#888",
        shadeSemiWhite: "#BCBCBC",
        shadeWhite: "#FFF",
        // actions
        actionSuccess: "#4bf442",
        actionError: "#f44141",
        actionWarning: "#f4ee41",
        actionInfo: "#41f4ee",
        onSuccess: "#000",
        onError: "#FFF",
        onWarning: "#000",
        onInfo: "#000",
        // form
        formFrame: "#336B87",
        formText: "#000"
      },
      xPESONA_FONTS: {
        fallback: 'Arial',
        primary: 'Roboto',
        secondary: 'Oswald',
        tertiary: 'Mansalva'
      }
    };
  },
  mounted: function mounted() {
    this._loadFont();

    document.documentElement.style.setProperty("--pesona-brand-color-primary", this.xPESONA_COLORS.brandPrimary);
    document.documentElement.style.setProperty("--pesona-brand-color-secondary", this.xPESONA_COLORS.brandSecondary);
    document.documentElement.style.setProperty("--pesona-brand-color-accent", this.xPESONA_COLORS.brandAccent);
    document.documentElement.style.setProperty("--pesona-on-color-primary", this.xPESONA_COLORS.onPrimary);
    document.documentElement.style.setProperty("--pesona-on-color-secondary", this.xPESONA_COLORS.onSecondary);
    document.documentElement.style.setProperty("--pesona-on-color-accent", this.xPESONA_COLORS.onAccent);
    document.documentElement.style.setProperty("--pesona-shade-color-black", this.xPESONA_COLORS.shadeBlack);
    document.documentElement.style.setProperty("--pesona-shade-color-semi-black", this.xPESONA_COLORS.shadeSemiBlack);
    document.documentElement.style.setProperty("--pesona-shade-color-gray", this.xPESONA_COLORS.shadeGray);
    document.documentElement.style.setProperty("--pesona-shade-color-semi-white", this.xPESONA_COLORS.shadeSemiWhite);
    document.documentElement.style.setProperty("--pesona-shade-color-white", this.xPESONA_COLORS.shadeWhite);
    document.documentElement.style.setProperty("--pesona-action-color-success", this.xPESONA_COLORS.actionSuccess);
    document.documentElement.style.setProperty("--pesona-action-color-error", this.xPESONA_COLORS.actionError);
    document.documentElement.style.setProperty("--pesona-action-color-warning", this.xPESONA_COLORS.actionWarning);
    document.documentElement.style.setProperty("--pesona-action-color-info", this.xPESONA_COLORS.actionInfo);
    document.documentElement.style.setProperty("--pesona-on-color-success", this.xPESONA_COLORS.onSuccess);
    document.documentElement.style.setProperty("--pesona-on-color-error", this.xPESONA_COLORS.onError);
    document.documentElement.style.setProperty("--pesona-on-color-warning", this.xPESONA_COLORS.onWarning);
    document.documentElement.style.setProperty("--pesona-on-color-info", this.xPESONA_COLORS.onInfo);
    document.documentElement.style.setProperty("--pesona-form-color-frame", this.xPESONA_COLORS.formFrame);
    document.documentElement.style.setProperty("--pesona-form-color-text", this.xPESONA_COLORS.formText);
    document.documentElement.style.setProperty("--pesona-font-primary", "".concat(this.xPESONA_FONTS.primary, ", ").concat(this.xPESONA_FONTS.fallback));
    document.documentElement.style.setProperty("--pesona-font-secondary", "".concat(this.xPESONA_FONTS.secondary, ", ").concat(this.xPESONA_FONTS.fallback));
    document.documentElement.style.setProperty("--pesona-font-tertiary", "".concat(this.xPESONA_FONTS.tertiary, ", ").concat(this.xPESONA_FONTS.fallback));
  },
  methods: {
    _loadFont: function _loadFont() {
      var fonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var self = this;
      webfontloader_default.a.load({
        google: {
          families: [fonts.primary || self.xPESONA_FONTS.primary, fonts.secondary || self.xPESONA_FONTS.secondary, fonts.tertiary || self.xPESONA_FONTS.tertiary]
        }
      });
    },
    _setLocalCssVariables: function _setLocalCssVariables(variables) {
      var self = this;
      var keys = Object.keys(variables);

      for (var index = 0; index < keys.length; index++) {
        var key = keys[index];
        self.$el.style.setProperty(key, variables[key]);
      }
    },
    _setGlobalCssVariables: function _setGlobalCssVariables(variables) {
      var keys = Object.keys(variables);

      for (var index = 0; index < keys.length; index++) {
        var key = keys[index];
        document.documentElement.style.setProperty(key, variables[key]);
      }
    },
    _colorLuminance: function _colorLuminance(hex, lum) {
      // validate hex string
      hex = String(hex).replace(/[^0-9a-f]/gi, '');

      if (hex.length < 6) {
        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
      }

      lum = lum || 0; // convert to decimal and change luminosity

      var rgb = "#",
          c,
          i;

      for (i = 0; i < 3; i++) {
        c = parseInt(hex.substr(i * 2, 2), 16);
        c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);
        rgb += ("00" + c).substr(c.length);
      }

      return rgb;
    },
    _findNearestxThemeorHTML: function _findNearestxThemeorHTML() {
      var element = this.$el;
      var searchEl = true;

      while (searchEl) {
        if (!element) {
          searchEl = false;
        } else {
          if (element.tagName === 'HTML' || element.tagName === 'DIV' && element.className === 'pesona-theme') {
            if (element.tagName !== 'HTML') {
              // test if any css variable value available
              if (element.style.getPropertyValue("--pesona-brand-color-primary") === "") {
                element = element.parentElement;
              } else {
                searchEl = false;
              }
            } else {
              searchEl = false;
            }
          } else {
            element = element.parentElement;
          }
        }
      }

      return element;
    },
    _getCurrentColors: function _getCurrentColors() {
      var element = this._findNearestxThemeorHTML();

      if (element) {
        return {
          brands: {
            primary: element.style.getPropertyValue("--pesona-brand-color-primary"),
            secondary: element.style.getPropertyValue("--pesona-brand-color-secondary"),
            accent: element.style.getPropertyValue("--pesona-brand-color-accent")
          },
          onBrands: {
            primary: element.style.getPropertyValue("--pesona-on-color-primary"),
            secondary: element.style.getPropertyValue("--pesona-on-color-secondary"),
            accent: element.style.getPropertyValue("--pesona-on-color-accent")
          },
          shade: {
            black: element.style.getPropertyValue("--pesona-shade-color-black"),
            semiBlack: element.style.getPropertyValue("--pesona-shade-color-semi-black"),
            gray: element.style.getPropertyValue("--pesona-shade-color-gray"),
            semiWhite: element.style.getPropertyValue("--pesona-shade-color-semi-white"),
            white: element.style.getPropertyValue("--pesona-shade-color-white")
          },
          actions: {
            success: element.style.getPropertyValue("--pesona-action-color-success"),
            error: element.style.getPropertyValue("--pesona-action-color-error"),
            warning: element.style.getPropertyValue("--pesona-action-color-warning"),
            info: element.style.getPropertyValue("--pesona-action-color-info")
          },
          onActions: {
            success: element.style.getPropertyValue("--pesona-on-color-success"),
            error: element.style.getPropertyValue("--pesona-on-color-error"),
            warning: element.style.getPropertyValue("--pesona-on-color-warning"),
            info: element.style.getPropertyValue("--pesona-on-color-info")
          },
          forms: {
            frame: element.style.getPropertyValue("--pesona-form-color-frame"),
            text: element.style.getPropertyValue("--pesona-form-color-text")
          }
        };
      } else {
        return {};
      }
    },
    _setLuminacesColor: function _setLuminacesColor() {
      var currentColor = this._getCurrentColors();

      var luminanceObj = {};

      if (currentColor.brands) {
        var brandPrimaryDarken10Percent = this._colorLuminance(currentColor.brands.primary, -0.1);

        var brandPrimaryLighten10Percent = this._colorLuminance(currentColor.brands.primary, 0.1);

        luminanceObj['--pesona-brand-color-primary-darken-10'] = brandPrimaryDarken10Percent;
        luminanceObj['--pesona-brand-color-primary-lighten-10'] = brandPrimaryLighten10Percent;
      }

      if (currentColor.brands) {
        var brandSecondaryDarken10Percent = this._colorLuminance(currentColor.brands.secondary, -0.1);

        var brandSecondaryLighten10Percent = this._colorLuminance(currentColor.brands.secondary, 0.1);

        luminanceObj['--pesona-brand-color-secondary-darken-10'] = brandSecondaryDarken10Percent;
        luminanceObj['--pesona-brand-color-secondary-lighten-10'] = brandSecondaryLighten10Percent;
      }

      if (currentColor.brands) {
        var brandAccentDarken10Percent = this._colorLuminance(currentColor.brands.accent, -0.1);

        var brandAccentLighten10Percent = this._colorLuminance(currentColor.brands.accent, 0.1);

        luminanceObj['--pesona-brand-color-accent-darken-10'] = brandAccentDarken10Percent;
        luminanceObj['--pesona-brand-color-accent-lighten-10'] = brandAccentLighten10Percent;
      }

      this._setLocalCssVariables(luminanceObj);
    },
    _getCurrentFonts: function _getCurrentFonts() {
      var element = this._findNearestxThemeorHTML();

      if (element) {
        return {
          fonts: {
            primary: element.style.getPropertyValue("--pesona-font-primary"),
            secondary: element.style.getPropertyValue("--pesona-font-secondary"),
            tertiary: element.style.getPropertyValue("--pesona-font-tertiary")
          }
        };
      } else {
        return {};
      }
    }
  }
});
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/themes/xTheme.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var xThemevue_type_script_lang_js_ = ({
  name: 'x-theme',
  mixins: [styleMixin],
  props: {
    brandColors: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    actionColors: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    shadeColors: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    formColors: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    fonts: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  data: function data() {
    return {
      componentKey: 1
    };
  },
  mounted: function mounted() {
    this.setColors();
    this.setFonts();
  },
  methods: {
    setColors: function setColors() {
      var brandColors = {
        primary: this.brandColors.primary || this.xPESONA_COLORS.brandPrimary,
        secondary: this.brandColors.secondary || this.xPESONA_COLORS.brandSecondary,
        accent: this.brandColors.accent || this.xPESONA_COLORS.brandAccent,
        onPrimary: this.brandColors.onPrimary || this.xPESONA_COLORS.onPrimary,
        onSecondary: this.brandColors.onSecondary || this.xPESONA_COLORS.onSecondary,
        onAccent: this.brandColors.onAccent || this.xPESONA_COLORS.onAccent
      };
      var shadeColors = {
        black: this.shadeColors.primary || this.xPESONA_COLORS.shadeBlack,
        semiBlack: this.shadeColors.semiBlack || this.xPESONA_COLORS.shadeSemiBlack,
        gray: this.shadeColors.secondary || this.xPESONA_COLORS.shadeGray,
        semiWhite: this.shadeColors.semiWhite || this.xPESONA_COLORS.shadeSemiWhite,
        white: this.shadeColors.accent || this.xPESONA_COLORS.shadeWhite
      };
      var actionColors = {
        success: this.actionColors.success || this.xPESONA_COLORS.actionSuccess,
        info: this.actionColors.info || this.xPESONA_COLORS.actionInfo,
        error: this.actionColors.error || this.xPESONA_COLORS.actionError,
        warning: this.actionColors.warning || this.xPESONA_COLORS.actionWarning,
        onSuccess: this.actionColors.onSuccess || this.xPESONA_COLORS.onSuccess,
        onInfo: this.actionColors.onInfo || this.xPESONA_COLORS.onInfo,
        onWarning: this.actionColors.onWarning || this.xPESONA_COLORS.onWarning,
        onError: this.actionColors.onError || this.xPESONA_COLORS.onError
      };
      var formColors = {
        frame: this.formColors.frame || this.xPESONA_COLORS.formFrame,
        text: this.formColors.text || this.xPESONA_COLORS.formText
      };

      this._setLocalCssVariables({
        '--pesona-brand-color-primary': brandColors.primary,
        '--pesona-brand-color-secondary': brandColors.secondary,
        '--pesona-brand-color-accent': brandColors.accent,
        '--pesona-on-color-primary': brandColors.onPrimary,
        '--pesona-on-color-secondary': brandColors.onSecondary,
        '--pesona-on-color-accent': brandColors.onAccent,
        '--pesona-shade-color-black': shadeColors.black,
        '--pesona-shade-color-semi-black': shadeColors.semiBlack,
        '--pesona-shade-color-gray': shadeColors.gray,
        '--pesona-shade-color-semi-white': shadeColors.semiWhite,
        '--pesona-shade-color-white': shadeColors.white,
        '--pesona-action-color-success': actionColors.success,
        '--pesona-action-color-error': actionColors.error,
        '--pesona-action-color-warning': actionColors.warning,
        '--pesona-action-color-info': actionColors.info,
        '--pesona-on-color-success': actionColors.onSuccess,
        '--pesona-on-color-error': actionColors.onError,
        '--pesona-on-color-warning': actionColors.onWarning,
        '--pesona-on-color-info': actionColors.onInfo,
        '--pesona-form-color-frame': formColors.frame,
        '--pesona-form-color-text': formColors.text
      });

      this.componentKey++;
    },
    setFonts: function setFonts() {
      var fonts = {
        primary: this.fonts.primary || this.xPESONA_FONTS.primary,
        secondary: this.fonts.secondary || this.xPESONA_FONTS.secondary,
        tertiary: this.fonts.tertiary || this.xPESONA_FONTS.tertiary
      };

      this._loadFont({
        primary: fonts.primary,
        secondary: fonts.secondary,
        tertiary: fonts.tertiary
      });

      this._setLocalCssVariables({
        '--pesona-font-primary': "".concat(fonts.primary, ", ").concat(this.xPESONA_FONTS.fallback),
        '--pesona-font-secondary': "".concat(fonts.secondary, ", ").concat(this.xPESONA_FONTS.fallback),
        '--pesona-font-tertiary': "".concat(fonts.tertiary, ", ").concat(this.xPESONA_FONTS.fallback)
      });
    }
  },
  watch: {
    brandColors: function brandColors() {
      this.setColors();
    }
  }
});
// CONCATENATED MODULE: ./src/components/themes/xTheme.vue?vue&type=script&lang=js&
 /* harmony default export */ var themes_xThemevue_type_script_lang_js_ = (xThemevue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/themes/xTheme.vue?vue&type=style&index=0&id=09c96fd6&lang=scss&scoped=true&
var xThemevue_type_style_index_0_id_09c96fd6_lang_scss_scoped_true_ = __webpack_require__("fe47");

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./src/components/themes/xTheme.vue






/* normalize component */

var component = normalizeComponent(
  themes_xThemevue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  "09c96fd6",
  null
  
)

/* harmony default export */ var xTheme = (component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/buttons/xButton.vue?vue&type=template&id=bd3ba3b8&scoped=true&
var xButtonvue_type_template_id_bd3ba3b8_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-button-wrapper",on:{"mouseenter":_vm.hoverChange,"mouseleave":_vm.hoverChange}},[_c('div',_vm._g({staticClass:"pesona-button",class:{
        'ripple': _vm.ripple, 
        'uppercase': _vm.uppercase,
        'block': _vm.block,
        'disabled': _vm.disabled,
        'ghost': _vm.ghost,
        'no-border': _vm.noBorder,
        'shape-round': (_vm.shape === 'round'),
        'shape-pill': (_vm.shape === 'pill'),
        'shape-rectangle': (_vm.shape === 'rectangle'),
        'texture-flat': (_vm.texture === 'flat'),
        'texture-emboss': (_vm.texture === 'emboss'),
        'texture-engrave': (_vm.texture === 'engrave')
      },style:({ 
        'font-size': _vm.sizeValue,  
        'padding': (_vm.sizeHalfValue + " " + _vm.sizeValueByAncorCalc),
        'margin': _vm.margin,
        'padding-right': ("" + _vm.sizeQuarterValue)
      }),attrs:{"href":_vm.href},on:{"click":_vm.onClick}},_vm.$listeners),[_vm._t("default"),_c('div',{staticClass:"downdown-indicator"},[(_vm.dropdown && _vm.showOption)?_c('x-icon',{staticClass:"caret-icon",attrs:{"padding":"0","name":"caret-up","size":_vm.sizeValue}}):_vm._e(),(_vm.dropdown && !_vm.showOption)?_c('x-icon',{staticClass:"caret-icon",attrs:{"padding":"0","name":"caret-down","size":_vm.sizeValue}}):_vm._e()],1)],2),(_vm.dropdown && _vm.showOption)?_c('div',{staticClass:"dropdown-option"},[_vm._t("options")],2):_vm._e()])}
var xButtonvue_type_template_id_bd3ba3b8_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/buttons/xButton.vue?vue&type=template&id=bd3ba3b8&scoped=true&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("28a5");

// CONCATENATED MODULE: ./src/mixins/dimensionMixin.js

/* harmony default export */ var dimensionMixin = ({
  data: function data() {
    return {
      xPESONA_SIZE_VALUE: {
        HERO: "40px",
        XXLARGE: "32px",
        XLARGE: "28px",
        LARGE: "22px",
        MEDIUM: "18px",
        FAIR: "16px",
        BASE: "14px",
        SMALL: "12px",
        TINY: "10px"
      }
    };
  },
  mounted: function mounted() {
    document.documentElement.style.setProperty("--pesona-font-hero", this.xPESONA_SIZE_VALUE.HERO);
    document.documentElement.style.setProperty("--pesona-font-xxlarge", this.xPESONA_SIZE_VALUE.XXLARGE);
    document.documentElement.style.setProperty("--pesona-font-xlarge", this.xPESONA_SIZE_VALUE.XLARGE);
    document.documentElement.style.setProperty("--pesona-font-large", this.xPESONA_SIZE_VALUE.LARGE);
    document.documentElement.style.setProperty("--pesona-font-medium", this.xPESONA_SIZE_VALUE.MEDIUM);
    document.documentElement.style.setProperty("--pesona-font-fair", this.xPESONA_SIZE_VALUE.FAIR);
    document.documentElement.style.setProperty("--pesona-font-base", this.xPESONA_SIZE_VALUE.BASE);
    document.documentElement.style.setProperty("--pesona-font-small", this.xPESONA_SIZE_VALUE.SMALL);
    document.documentElement.style.setProperty("--pesona-font-tiny", this.xPESONA_SIZE_VALUE.TINY);
  },
  methods: {
    _normalizeValue: function _normalizeValue(size) {
      var templateValue = this.xPESONA_SIZE_VALUE[size.toUpperCase()];

      if (templateValue) {
        return templateValue;
      } else {
        var sizeValue = parseInt(size);

        if (sizeValue) {
          return "".concat(sizeValue, "px");
        } else {
          return this.xPESONA_SIZE_VALUE.BASE;
        }
      }
    },
    _normalizeHalfValue: function _normalizeHalfValue(size) {
      var templateValue = this.xPESONA_SIZE_VALUE[size.toUpperCase()];

      if (templateValue) {
        return "".concat(Math.floor(parseInt(templateValue) / 2), "px");
      } else {
        var sizeValue = parseInt(size);

        if (sizeValue) {
          return "".concat(Math.floor(sizeValue / 2), "px");
        } else {
          return "".concat(Math.floor(parseInt(this.xPESONA_SIZE_VALUE.BASE) / 2), "px");
        }
      }
    },
    _normalizeHalfInHalfValue: function _normalizeHalfInHalfValue(size) {
      var templateValue = this.xPESONA_SIZE_VALUE[size.toUpperCase()];
      var halfValue = 0;
      var inHalfValue = 0;

      if (templateValue) {
        halfValue = Math.floor(parseInt(templateValue) / 2);
      } else {
        var sizeValue = parseInt(size);

        if (sizeValue) {
          halfValue = Math.floor(sizeValue / 2);
        } else {
          halfValue = this.xPESONA_SIZE_VALUE.BASE / 2;
        }
      }

      inHalfValue = Math.floor(halfValue / 2);
      return "".concat(halfValue + inHalfValue, "px");
    },
    _normalizeQuarterValue: function _normalizeQuarterValue(size) {
      var templateValue = this.xPESONA_SIZE_VALUE[size.toUpperCase()];

      if (templateValue) {
        return "".concat(Math.floor(parseInt(templateValue) / 4), "px");
      } else {
        var sizeValue = parseInt(size);

        if (sizeValue) {
          return "".concat(Math.floor(sizeValue / 4), "px");
        } else {
          return "".concat(Math.floor(parseInt(this.xPESONA_SIZE_VALUE.BASE) / 4), "px");
        }
      }
    },
    _normalizeDoubleValue: function _normalizeDoubleValue(size) {
      var templateValue = this.xPESONA_SIZE_VALUE[size.toUpperCase()];

      if (templateValue) {
        return "".concat(Math.floor(parseInt(templateValue) * 2), "px");
      } else {
        var sizeValue = parseInt(size);

        if (sizeValue) {
          return "".concat(Math.floor(sizeValue * 2), "px");
        } else {
          return "".concat(Math.floor(parseInt(this.xPESONA_SIZE_VALUE.BASE) * 2), "px");
        }
      }
    },
    _getMeasurementUnit: function _getMeasurementUnit(strValue) {
      var value = parseFloat(strValue);
      return strValue.split(value)[1];
    }
  }
});
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/icons/xIcon.vue?vue&type=template&id=6e5f93c1&scoped=true&
var xIconvue_type_template_id_6e5f93c1_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('svg',{staticClass:"default-padding",class:{ 'pointer': _vm.clickable },style:({ fill: _vm.color, 'background-color': _vm.background, padding: _vm.padding}),attrs:{"width":_vm.sizeValue,"height":_vm.sizeValue,"viewBox":"0 0 1024 1024"},on:{"click":function($event){return _vm.$emit('click')}}},[_c('path',{attrs:{"d":_vm.pathValue}})])}
var xIconvue_type_template_id_6e5f93c1_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/icons/xIcon.vue?vue&type=template&id=6e5f93c1&scoped=true&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("57e7");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.trim.js
var es6_string_trim = __webpack_require__("4f37");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("6d67");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.find-index.js
var es6_array_find_index = __webpack_require__("20d6");

// CONCATENATED MODULE: ./src/components/icons/sources/font-awesome.js
var fontAwesome={"selection":[{"name":"asterisk","order":493},{"name":"plus","order":494},{"name":"question","order":495},{"name":"minus","order":496},{"name":"glass","order":497},{"name":"music","order":498},{"name":"search","order":499},{"name":"envelope-o","order":500},{"name":"heart","order":501},{"name":"star","order":502},{"name":"star-o","order":503},{"name":"user","order":504},{"name":"film","order":505},{"name":"th-large","order":506},{"name":"th","order":507},{"name":"th-list","order":508},{"name":"check","order":509},{"name":"close, remove, times","order":510},{"name":"search-plus","order":511},{"name":"search-minus","order":512},{"name":"power-off","order":513},{"name":"signal","order":514},{"name":"cog, gear","order":515},{"name":"trash-o","order":516},{"name":"home","order":517},{"name":"file-o","order":518},{"name":"clock-o","order":519},{"name":"road","order":520},{"name":"download","order":521},{"name":"arrow-circle-o-down","order":522},{"name":"arrow-circle-o-up","order":523},{"name":"inbox","order":524},{"name":"play-circle-o","order":525},{"name":"repeat, rotate-right","order":526},{"name":"refresh","order":527},{"name":"list-alt","order":528},{"name":"lock","order":529},{"name":"flag","order":530},{"name":"headphones","order":531},{"name":"volume-off","order":532},{"name":"volume-down","order":533},{"name":"volume-up","order":534},{"name":"qrcode","order":535},{"name":"barcode","order":536},{"name":"tag","order":537},{"name":"tags","order":538},{"name":"book","order":539},{"name":"bookmark","order":540},{"name":"print","order":541},{"name":"camera","order":542},{"name":"font","order":543},{"name":"bold","order":544},{"name":"italic","order":545},{"name":"text-height","order":546},{"name":"text-width","order":547},{"name":"align-left","order":548},{"name":"align-center","order":549},{"name":"align-right","order":550},{"name":"align-justify","order":551},{"name":"list","order":552},{"name":"dedent, outdent","order":553},{"name":"indent","order":554},{"name":"video-camera","order":555},{"name":"image, photo, picture-o","order":556},{"name":"pencil","order":557},{"name":"map-marker","order":558},{"name":"adjust","order":559},{"name":"tint","order":560},{"name":"edit, pencil-square-o","order":561},{"name":"share-square-o","order":562},{"name":"check-square-o","order":563},{"name":"arrows","order":564},{"name":"step-backward","order":565},{"name":"fast-backward","order":566},{"name":"backward","order":567},{"name":"play","order":568},{"name":"pause","order":569},{"name":"stop","order":570},{"name":"forward","order":571},{"name":"fast-forward","order":572},{"name":"step-forward","order":573},{"name":"eject","order":574},{"name":"chevron-left","order":575},{"name":"chevron-right","order":576},{"name":"plus-circle","order":577},{"name":"minus-circle","order":578},{"name":"times-circle","order":579},{"name":"check-circle","order":580},{"name":"question-circle","order":581},{"name":"info-circle","order":582},{"name":"crosshairs","order":583},{"name":"times-circle-o","order":584},{"name":"check-circle-o","order":585},{"name":"ban","order":586},{"name":"arrow-left","order":587},{"name":"arrow-right","order":588},{"name":"arrow-up","order":589},{"name":"arrow-down","order":590},{"name":"mail-forward, share","order":591},{"name":"expand","order":592},{"name":"compress","order":593},{"name":"exclamation-circle","order":594},{"name":"gift","order":595},{"name":"leaf","order":596},{"name":"fire","order":597},{"name":"eye","order":598},{"name":"eye-slash","order":599},{"name":"exclamation-triangle, warning","order":600},{"name":"plane","order":601},{"name":"calendar","order":602},{"name":"random","order":603},{"name":"comment","order":604},{"name":"magnet","order":605},{"name":"chevron-up","order":606},{"name":"chevron-down","order":607},{"name":"retweet","order":608},{"name":"shopping-cart","order":609},{"name":"folder","order":610},{"name":"folder-open","order":611},{"name":"arrows-v","order":612},{"name":"arrows-h","order":613},{"name":"bar-chart, bar-chart-o","order":614},{"name":"twitter-square","order":615},{"name":"facebook-square","order":616},{"name":"camera-retro","order":617},{"name":"key","order":618},{"name":"cogs, gears","order":619},{"name":"comments","order":620},{"name":"thumbs-o-up","order":621},{"name":"thumbs-o-down","order":622},{"name":"star-half","order":623},{"name":"heart-o","order":624},{"name":"sign-out","order":625},{"name":"linkedin-square","order":626},{"name":"thumb-tack","order":627},{"name":"external-link","order":628},{"name":"sign-in","order":629},{"name":"trophy","order":630},{"name":"github-square","order":631},{"name":"upload","order":632},{"name":"lemon-o","order":633},{"name":"phone","order":634},{"name":"square-o","order":635},{"name":"bookmark-o","order":636},{"name":"phone-square","order":637},{"name":"twitter","order":638},{"name":"facebook, facebook-f","order":639},{"name":"github","order":640},{"name":"unlock","order":641},{"name":"credit-card","order":642},{"name":"feed, rss","order":643},{"name":"hdd-o","order":644},{"name":"bullhorn","order":645},{"name":"bell-o","order":646},{"name":"certificate","order":647},{"name":"hand-o-right","order":648},{"name":"hand-o-left","order":649},{"name":"hand-o-up","order":650},{"name":"hand-o-down","order":651},{"name":"arrow-circle-left","order":652},{"name":"arrow-circle-right","order":653},{"name":"arrow-circle-up","order":654},{"name":"arrow-circle-down","order":655},{"name":"globe","order":656},{"name":"wrench","order":657},{"name":"tasks","order":658},{"name":"filter","order":659},{"name":"briefcase","order":660},{"name":"arrows-alt","order":661},{"name":"group, users","order":662},{"name":"chain, link","order":663},{"name":"cloud","order":664},{"name":"flask","order":665},{"name":"cut, scissors","order":666},{"name":"copy, files-o","order":667},{"name":"paperclip","order":668},{"name":"floppy-o, save","order":669},{"name":"square","order":670},{"name":"bars, navicon, reorder","order":671},{"name":"list-ul","order":672},{"name":"list-ol","order":673},{"name":"strikethrough","order":674},{"name":"underline","order":675},{"name":"table","order":676},{"name":"magic","order":677},{"name":"truck","order":678},{"name":"pinterest","order":679},{"name":"pinterest-square","order":680},{"name":"google-plus-square","order":681},{"name":"google-plus","order":682},{"name":"money","order":683},{"name":"caret-down","order":684},{"name":"caret-up","order":685},{"name":"caret-left","order":686},{"name":"caret-right","order":687},{"name":"columns","order":688},{"name":"sort, unsorted","order":689},{"name":"sort-desc, sort-down","order":690},{"name":"sort-asc, sort-up","order":691},{"name":"envelope","order":692},{"name":"linkedin","order":693},{"name":"rotate-left, undo","order":694},{"name":"gavel, legal","order":695},{"name":"dashboard, tachometer","order":696},{"name":"comment-o","order":697},{"name":"comments-o","order":698},{"name":"bolt, flash","order":699},{"name":"sitemap","order":700},{"name":"umbrella","order":701},{"name":"clipboard, paste","order":702},{"name":"lightbulb-o","order":703},{"name":"exchange","order":704},{"name":"cloud-download","order":705},{"name":"cloud-upload","order":706},{"name":"user-md","order":707},{"name":"stethoscope","order":708},{"name":"suitcase","order":709},{"name":"bell","order":710},{"name":"coffee","order":711},{"name":"cutlery","order":712},{"name":"file-text-o","order":713},{"name":"building-o","order":714},{"name":"hospital-o","order":715},{"name":"ambulance","order":716},{"name":"medkit","order":717},{"name":"fighter-jet","order":718},{"name":"beer","order":719},{"name":"h-square","order":720},{"name":"plus-square","order":721},{"name":"angle-double-left","order":722},{"name":"angle-double-right","order":723},{"name":"angle-double-up","order":724},{"name":"angle-double-down","order":725},{"name":"angle-left","order":726},{"name":"angle-right","order":727},{"name":"angle-up","order":728},{"name":"angle-down","order":729},{"name":"desktop","order":730},{"name":"laptop","order":731},{"name":"tablet","order":732},{"name":"mobile, mobile-phone","order":733},{"name":"circle-o","order":734},{"name":"quote-left","order":735},{"name":"quote-right","order":736},{"name":"spinner","order":737},{"name":"circle","order":738},{"name":"mail-reply, reply","order":739},{"name":"github-alt","order":740},{"name":"folder-o","order":741},{"name":"folder-open-o","order":742},{"name":"smile-o","order":743},{"name":"frown-o","order":744},{"name":"meh-o","order":745},{"name":"gamepad","order":746},{"name":"keyboard-o","order":747},{"name":"flag-o","order":748},{"name":"flag-checkered","order":749},{"name":"terminal","order":750},{"name":"code","order":751},{"name":"mail-reply-all, reply-all","order":752},{"name":"star-half-empty, star-half-full, star-half-o","order":753},{"name":"location-arrow","order":754},{"name":"crop","order":755},{"name":"code-fork","order":756},{"name":"chain-broken, unlink","order":757},{"name":"info","order":758},{"name":"exclamation","order":759},{"name":"superscript","order":760},{"name":"subscript","order":761},{"name":"eraser","order":762},{"name":"puzzle-piece","order":763},{"name":"microphone","order":764},{"name":"microphone-slash","order":765},{"name":"shield","order":766},{"name":"calendar-o","order":767},{"name":"fire-extinguisher","order":768},{"name":"rocket","order":769},{"name":"maxcdn","order":770},{"name":"chevron-circle-left","order":771},{"name":"chevron-circle-right","order":772},{"name":"chevron-circle-up","order":773},{"name":"chevron-circle-down","order":774},{"name":"html5","order":775},{"name":"css3","order":776},{"name":"anchor","order":777},{"name":"unlock-alt","order":778},{"name":"bullseye","order":779},{"name":"ellipsis-h","order":780},{"name":"ellipsis-v","order":781},{"name":"rss-square","order":782},{"name":"play-circle","order":783},{"name":"ticket","order":784},{"name":"minus-square","order":785},{"name":"minus-square-o","order":786},{"name":"level-up","order":787},{"name":"level-down","order":788},{"name":"check-square","order":789},{"name":"pencil-square","order":790},{"name":"external-link-square","order":791},{"name":"share-square","order":792},{"name":"compass","order":793},{"name":"caret-square-o-down, toggle-down","order":794},{"name":"caret-square-o-up, toggle-up","order":795},{"name":"caret-square-o-right, toggle-right","order":796},{"name":"eur, euro","order":797},{"name":"gbp","order":798},{"name":"dollar, usd","order":799},{"name":"inr, rupee","order":800},{"name":"cny, jpy, rmb, yen","order":801},{"name":"rouble, rub, ruble","order":802},{"name":"krw, won","order":803},{"name":"bitcoin, btc","order":804},{"name":"file","order":805},{"name":"file-text","order":806},{"name":"sort-alpha-asc","order":807},{"name":"sort-alpha-desc","order":808},{"name":"sort-amount-asc","order":809},{"name":"sort-amount-desc","order":810},{"name":"sort-numeric-asc","order":811},{"name":"sort-numeric-desc","order":812},{"name":"thumbs-up","order":813},{"name":"thumbs-down","order":814},{"name":"youtube-square","order":815},{"name":"youtube","order":816},{"name":"xing","order":817},{"name":"xing-square","order":818},{"name":"youtube-play","order":819},{"name":"dropbox","order":820},{"name":"stack-overflow","order":821},{"name":"instagram","order":822},{"name":"flickr","order":823},{"name":"adn","order":824},{"name":"bitbucket","order":825},{"name":"bitbucket-square","order":826},{"name":"tumblr","order":827},{"name":"tumblr-square","order":828},{"name":"long-arrow-down","order":829},{"name":"long-arrow-up","order":830},{"name":"long-arrow-left","order":831},{"name":"long-arrow-right","order":832},{"name":"apple","order":833},{"name":"windows","order":834},{"name":"android","order":835},{"name":"linux","order":836},{"name":"dribbble","order":837},{"name":"skype","order":838},{"name":"foursquare","order":839},{"name":"trello","order":840},{"name":"female","order":841},{"name":"male","order":842},{"name":"gittip, gratipay","order":843},{"name":"sun-o","order":844},{"name":"moon-o","order":845},{"name":"archive","order":846},{"name":"bug","order":847},{"name":"vk","order":848},{"name":"weibo","order":849},{"name":"renren","order":850},{"name":"pagelines","order":851},{"name":"stack-exchange","order":852},{"name":"arrow-circle-o-right","order":853},{"name":"arrow-circle-o-left","order":854},{"name":"caret-square-o-left, toggle-left","order":855},{"name":"dot-circle-o","order":856},{"name":"wheelchair","order":857},{"name":"vimeo-square","order":858},{"name":"try, turkish-lira","order":859},{"name":"plus-square-o","order":860},{"name":"space-shuttle","order":861},{"name":"slack","order":862},{"name":"envelope-square","order":863},{"name":"wordpress","order":864},{"name":"openid","order":865},{"name":"bank, institution, university","order":866},{"name":"graduation-cap, mortar-board","order":867},{"name":"yahoo","order":868},{"name":"google","order":869},{"name":"reddit","order":870},{"name":"reddit-square","order":871},{"name":"stumbleupon-circle","order":872},{"name":"stumbleupon","order":873},{"name":"delicious","order":874},{"name":"digg","order":875},{"name":"pied-piper-pp","order":876},{"name":"pied-piper-alt","order":877},{"name":"drupal","order":878},{"name":"joomla","order":879},{"name":"language","order":880},{"name":"fax","order":881},{"name":"building","order":882},{"name":"child","order":883},{"name":"paw","order":884},{"name":"spoon","order":885},{"name":"cube","order":886},{"name":"cubes","order":887},{"name":"behance","order":888},{"name":"behance-square","order":889},{"name":"steam","order":890},{"name":"steam-square","order":891},{"name":"recycle","order":892},{"name":"automobile, car","order":893},{"name":"cab, taxi","order":894},{"name":"tree","order":895},{"name":"spotify","order":896},{"name":"deviantart","order":897},{"name":"soundcloud","order":898},{"name":"database","order":899},{"name":"file-pdf-o","order":900},{"name":"file-word-o","order":901},{"name":"file-excel-o","order":902},{"name":"file-powerpoint-o","order":903},{"name":"file-image-o, file-photo-o, file-picture-o","order":904},{"name":"file-archive-o, file-zip-o","order":905},{"name":"file-audio-o, file-sound-o","order":906},{"name":"file-movie-o, file-video-o","order":907},{"name":"file-code-o","order":908},{"name":"vine","order":909},{"name":"codepen","order":910},{"name":"jsfiddle","order":911},{"name":"life-bouy, life-buoy, life-ring, life-saver, support","order":912},{"name":"circle-o-notch","order":913},{"name":"ra, rebel, resistance","order":914},{"name":"empire, ge","order":915},{"name":"git-square","order":916},{"name":"git","order":917},{"name":"hacker-news, y-combinator-square, yc-square","order":918},{"name":"tencent-weibo","order":919},{"name":"qq","order":920},{"name":"wechat, weixin","order":921},{"name":"paper-plane, send","order":922},{"name":"paper-plane-o, send-o","order":923},{"name":"history","order":924},{"name":"circle-thin","order":925},{"name":"header","order":926},{"name":"paragraph","order":927},{"name":"sliders","order":928},{"name":"share-alt","order":929},{"name":"share-alt-square","order":930},{"name":"bomb","order":931},{"name":"futbol-o, soccer-ball-o","order":932},{"name":"tty","order":933},{"name":"binoculars","order":934},{"name":"plug","order":935},{"name":"slideshare","order":936},{"name":"twitch","order":937},{"name":"yelp","order":938},{"name":"newspaper-o","order":939},{"name":"wifi","order":940},{"name":"calculator","order":941},{"name":"paypal","order":942},{"name":"google-wallet","order":943},{"name":"cc-visa","order":944},{"name":"cc-mastercard","order":945},{"name":"cc-discover","order":946},{"name":"cc-amex","order":947},{"name":"cc-paypal","order":948},{"name":"cc-stripe","order":949},{"name":"bell-slash","order":950},{"name":"bell-slash-o","order":951},{"name":"trash","order":952},{"name":"copyright","order":953},{"name":"at","order":954},{"name":"eyedropper","order":955},{"name":"paint-brush","order":956},{"name":"birthday-cake","order":957},{"name":"area-chart","order":958},{"name":"pie-chart","order":959},{"name":"line-chart","order":960},{"name":"lastfm","order":961},{"name":"lastfm-square","order":962},{"name":"toggle-off","order":963},{"name":"toggle-on","order":964},{"name":"bicycle","order":965},{"name":"bus","order":966},{"name":"ioxhost","order":967},{"name":"angellist","order":968},{"name":"cc","order":969},{"name":"ils, shekel, sheqel","order":970},{"name":"meanpath","order":971},{"name":"buysellads","order":972},{"name":"connectdevelop","order":973},{"name":"dashcube","order":974},{"name":"forumbee","order":975},{"name":"leanpub","order":976},{"name":"sellsy","order":977},{"name":"shirtsinbulk","order":978},{"name":"simplybuilt","order":979},{"name":"skyatlas","order":980},{"name":"cart-plus","order":981},{"name":"cart-arrow-down","order":982},{"name":"diamond","order":983},{"name":"ship","order":984},{"name":"user-secret","order":985},{"name":"motorcycle","order":986},{"name":"street-view","order":987},{"name":"heartbeat","order":988},{"name":"venus","order":989},{"name":"mars","order":990},{"name":"mercury","order":991},{"name":"intersex, transgender","order":992},{"name":"transgender-alt","order":993},{"name":"venus-double","order":994},{"name":"mars-double","order":995},{"name":"venus-mars","order":996},{"name":"mars-stroke","order":997},{"name":"mars-stroke-v","order":998},{"name":"mars-stroke-h","order":999},{"name":"neuter","order":1000},{"name":"genderless","order":1001},{"name":"facebook-official","order":1002},{"name":"pinterest-p","order":1003},{"name":"whatsapp","order":1004},{"name":"server","order":1005},{"name":"user-plus","order":1006},{"name":"user-times","order":1007},{"name":"bed, hotel","order":1008},{"name":"viacoin","order":1009},{"name":"train","order":1010},{"name":"subway","order":1011},{"name":"medium","order":1012},{"name":"y-combinator, yc","order":1013},{"name":"optin-monster","order":1014},{"name":"opencart","order":1015},{"name":"expeditedssl","order":1016},{"name":"battery, battery-4, battery-full","order":1017},{"name":"battery-3, battery-three-quarters","order":1018},{"name":"battery-2, battery-half","order":1019},{"name":"battery-1, battery-quarter","order":1020},{"name":"battery-0, battery-empty","order":1021},{"name":"mouse-pointer","order":1022},{"name":"i-cursor","order":1023},{"name":"object-group","order":1024},{"name":"object-ungroup","order":1025},{"name":"sticky-note","order":1026},{"name":"sticky-note-o","order":1027},{"name":"cc-jcb","order":1028},{"name":"cc-diners-club","order":1029},{"name":"clone","order":1030},{"name":"balance-scale","order":1031},{"name":"hourglass-o","order":1032},{"name":"hourglass-1, hourglass-start","order":1033},{"name":"hourglass-2, hourglass-half","order":1034},{"name":"hourglass-3, hourglass-end","order":1035},{"name":"hourglass","order":1036},{"name":"hand-grab-o, hand-rock-o","order":1037},{"name":"hand-paper-o, hand-stop-o","order":1038},{"name":"hand-scissors-o","order":1039},{"name":"hand-lizard-o","order":1040},{"name":"hand-spock-o","order":1041},{"name":"hand-pointer-o","order":1042},{"name":"hand-peace-o","order":1043},{"name":"trademark","order":1044},{"name":"registered","order":1045},{"name":"creative-commons","order":1046},{"name":"gg","order":1047},{"name":"gg-circle","order":1048},{"name":"tripadvisor","order":1049},{"name":"odnoklassniki","order":1050},{"name":"odnoklassniki-square","order":1051},{"name":"get-pocket","order":1052},{"name":"wikipedia-w","order":1053},{"name":"safari","order":1054},{"name":"chrome","order":1055},{"name":"firefox","order":1056},{"name":"opera","order":1057},{"name":"internet-explorer","order":1058},{"name":"television, tv","order":1059},{"name":"contao","order":1060},{"name":"500px","order":1061},{"name":"amazon","order":1062},{"name":"calendar-plus-o","order":1063},{"name":"calendar-minus-o","order":1064},{"name":"calendar-times-o","order":1065},{"name":"calendar-check-o","order":1066},{"name":"industry","order":1067},{"name":"map-pin","order":1068},{"name":"map-signs","order":1069},{"name":"map-o","order":1070},{"name":"map","order":1071},{"name":"commenting","order":1072},{"name":"commenting-o","order":1073},{"name":"houzz","order":1074},{"name":"vimeo","order":1075},{"name":"black-tie","order":1076},{"name":"fonticons","order":1077},{"name":"reddit-alien","order":1078},{"name":"edge","order":1079},{"name":"credit-card-alt","order":1080},{"name":"codiepie","order":1081},{"name":"modx","order":1082},{"name":"fort-awesome","order":1083},{"name":"usb","order":1084},{"name":"product-hunt","order":1085},{"name":"mixcloud","order":1086},{"name":"scribd","order":1087},{"name":"pause-circle","order":1088},{"name":"pause-circle-o","order":1089},{"name":"stop-circle","order":1090},{"name":"stop-circle-o","order":1091},{"name":"shopping-bag","order":1092},{"name":"shopping-basket","order":1093},{"name":"hashtag","order":1094},{"name":"bluetooth","order":1095},{"name":"bluetooth-b","order":1096},{"name":"percent","order":1097},{"name":"gitlab","order":1098},{"name":"wpbeginner","order":1099},{"name":"wpforms","order":1100},{"name":"envira","order":1101},{"name":"universal-access","order":1102},{"name":"wheelchair-alt","order":1103},{"name":"question-circle-o","order":1104},{"name":"blind","order":1105},{"name":"audio-description","order":1106},{"name":"volume-control-phone","order":1107},{"name":"braille","order":1108},{"name":"assistive-listening-systems","order":1109},{"name":"american-sign-language-interpreting, asl-interpreting","order":1110},{"name":"deaf, deafness, hard-of-hearing","order":1111},{"name":"glide","order":1112},{"name":"glide-g","order":1113},{"name":"sign-language, signing","order":1114},{"name":"low-vision","order":1115},{"name":"viadeo","order":1116},{"name":"viadeo-square","order":1117},{"name":"snapchat","order":1118},{"name":"snapchat-ghost","order":1119},{"name":"snapchat-square","order":1120},{"name":"pied-piper","order":1121},{"name":"first-order","order":1122},{"name":"yoast","order":1123},{"name":"themeisle","order":1124},{"name":"google-plus-circle, google-plus-official","order":1125},{"name":"fa, font-awesome","order":1126},{"name":"handshake-o","order":1127},{"name":"envelope-open","order":1128},{"name":"envelope-open-o","order":1129},{"name":"linode","order":1130},{"name":"address-book","order":1131},{"name":"address-book-o","order":1132},{"name":"address-card, vcard","order":1133},{"name":"address-card-o, vcard-o","order":1134},{"name":"user-circle","order":1135},{"name":"user-circle-o","order":1136},{"name":"user-o","order":1137},{"name":"id-badge","order":1138},{"name":"drivers-license, id-card","order":1139},{"name":"drivers-license-o, id-card-o","order":1140},{"name":"quora","order":1141},{"name":"free-code-camp","order":1142},{"name":"telegram","order":1143},{"name":"thermometer, thermometer-4, thermometer-full","order":1144},{"name":"thermometer-3, thermometer-three-quarters","order":1145},{"name":"thermometer-2, thermometer-half","order":1146},{"name":"thermometer-1, thermometer-quarter","order":1147},{"name":"thermometer-0, thermometer-empty","order":1148},{"name":"shower","order":1149},{"name":"bath, bathtub, s15","order":1150},{"name":"podcast","order":1151},{"name":"window-maximize","order":1152},{"name":"window-minimize","order":1153},{"name":"window-restore","order":1154},{"name":"times-rectangle, window-close","order":1155},{"name":"times-rectangle-o, window-close-o","order":1156},{"name":"bandcamp","order":1157},{"name":"grav","order":1158},{"name":"etsy","order":1159},{"name":"imdb","order":1160},{"name":"ravelry","order":1161},{"name":"eercast","order":1162},{"name":"microchip","order":1163},{"name":"snowflake-o","order":1164},{"name":"superpowers","order":1165},{"name":"wpexplorer","order":1166},{"name":"meetup","order":1167}],"metadata":{"name":"Font Awesome","url":"https://github.com/FortAwesome/Font-Awesome","designer":"Dave Gandy","designerURL":"https://github.com/davegandy","license":"Custom","licenseURL":"https://github.com/FortAwesome/Font-Awesome#license","iconsHash":309851062},"height":1024,"prevSize":28,"icons":[{"paths":["M846.857 600c34.857 20 46.857 65.143 26.857 100l-36.571 62.857c-20 34.857-65.143 46.857-100 26.857l-152-87.429v175.429c0 40-33.143 73.143-73.143 73.143h-73.143c-40 0-73.143-33.143-73.143-73.143v-175.429l-152 87.429c-34.857 20-80 8-100-26.857l-36.571-62.857c-20-34.857-8-80 26.857-100l152-88-152-88c-34.857-20-46.857-65.143-26.857-100l36.571-62.857c20-34.857 65.143-46.857 100-26.857l152 87.429v-175.429c0-40 33.143-73.143 73.143-73.143h73.143c40 0 73.143 33.143 73.143 73.143v175.429l152-87.429c34.857-20 80-8 100 26.857l36.571 62.857c20 34.857 8 80-26.857 100l-152 88z"],"width":950.8571428571428,"tags":["asterisk"],"defaultCode":61545,"grid":14},{"paths":["M804.571 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-237.714v237.714c0 30.286-24.571 54.857-54.857 54.857h-109.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h237.714v-237.714c0-30.286 24.571-54.857 54.857-54.857h109.714c30.286 0 54.857 24.571 54.857 54.857v237.714h237.714c30.286 0 54.857 24.571 54.857 54.857z"],"width":804.5714285714286,"tags":["plus"],"defaultCode":61543,"grid":14},{"paths":["M402.286 717.714v137.143c0 12.571-10.286 22.857-22.857 22.857h-137.143c-12.571 0-22.857-10.286-22.857-22.857v-137.143c0-12.571 10.286-22.857 22.857-22.857h137.143c12.571 0 22.857 10.286 22.857 22.857zM582.857 374.857c0 108.571-73.714 150.286-128 180.571-33.714 19.429-54.857 58.857-54.857 75.429v0c0 12.571-9.714 27.429-22.857 27.429h-137.143c-12.571 0-20.571-19.429-20.571-32v-25.714c0-69.143 68.571-128.571 118.857-151.429 44-20 62.286-38.857 62.286-75.429 0-32-41.714-60.571-88-60.571-25.714 0-49.143 8-61.714 16.571-13.714 9.714-27.429 23.429-61.143 65.714-4.571 5.714-11.429 9.143-17.714 9.143-5.143 0-9.714-1.714-14.286-4.571l-93.714-71.429c-9.714-7.429-12-20-5.714-30.286 61.714-102.286 148.571-152 265.143-152 122.286 0 259.429 97.714 259.429 228.571z"],"width":634.88,"tags":["question"],"defaultCode":61736,"grid":14},{"paths":["M804.571 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-694.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h694.857c30.286 0 54.857 24.571 54.857 54.857z"],"width":804.5714285714286,"tags":["minus"],"defaultCode":61544,"grid":14},{"paths":["M970.857 106.286c0 16.571-13.143 33.143-24.571 44.571l-361.143 361.143v438.857h182.857c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571h-512c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h182.857v-438.857l-361.143-361.143c-11.429-11.429-24.571-28-24.571-44.571 0-28 35.429-33.143 56.571-33.143h804.571c21.143 0 56.571 5.143 56.571 33.143z"],"width":1024,"tags":["glass"],"defaultCode":61440,"grid":14},{"paths":["M877.714 128v640c0 80.571-120.571 109.714-182.857 109.714s-182.857-29.143-182.857-109.714 120.571-109.714 182.857-109.714c37.714 0 75.429 6.857 109.714 22.286v-306.857l-438.857 135.429v405.143c0 80.571-120.571 109.714-182.857 109.714s-182.857-29.143-182.857-109.714 120.571-109.714 182.857-109.714c37.714 0 75.429 6.857 109.714 22.286v-552.571c0-24 16-45.143 38.857-52.571l475.429-146.286c5.143-1.714 10.286-2.286 16-2.286 30.286 0 54.857 24.571 54.857 54.857z"],"width":877.7142857142857,"tags":["music"],"defaultCode":61441,"grid":14},{"paths":["M658.286 475.429c0-141.143-114.857-256-256-256s-256 114.857-256 256 114.857 256 256 256 256-114.857 256-256zM950.857 950.857c0 40-33.143 73.143-73.143 73.143-19.429 0-38.286-8-51.429-21.714l-196-195.429c-66.857 46.286-146.857 70.857-228 70.857-222.286 0-402.286-180-402.286-402.286s180-402.286 402.286-402.286 402.286 180 402.286 402.286c0 81.143-24.571 161.143-70.857 228l196 196c13.143 13.143 21.143 32 21.143 51.429z"],"width":950.8571428571428,"tags":["search"],"defaultCode":61442,"grid":14},{"paths":["M950.857 859.429v-438.857c-12 13.714-25.143 26.286-39.429 37.714-81.714 62.857-164 126.857-243.429 193.143-42.857 36-96 80-155.429 80h-1.143c-59.429 0-112.571-44-155.429-80-79.429-66.286-161.714-130.286-243.429-193.143-14.286-11.429-27.429-24-39.429-37.714v438.857c0 9.714 8.571 18.286 18.286 18.286h841.143c9.714 0 18.286-8.571 18.286-18.286zM950.857 258.857c0-14.286 3.429-39.429-18.286-39.429h-841.143c-9.714 0-18.286 8.571-18.286 18.286 0 65.143 32.571 121.714 84 162.286 76.571 60 153.143 120.571 229.143 181.143 30.286 24.571 85.143 77.143 125.143 77.143h1.143c40 0 94.857-52.571 125.143-77.143 76-60.571 152.571-121.143 229.143-181.143 37.143-29.143 84-92.571 84-141.143zM1024 237.714v621.714c0 50.286-41.143 91.429-91.429 91.429h-841.143c-50.286 0-91.429-41.143-91.429-91.429v-621.714c0-50.286 41.143-91.429 91.429-91.429h841.143c50.286 0 91.429 41.143 91.429 91.429z"],"width":1024,"tags":["envelope-o"],"defaultCode":61443,"grid":14},{"paths":["M512 950.857c-9.143 0-18.286-3.429-25.143-10.286l-356.571-344c-4.571-4-130.286-118.857-130.286-256 0-167.429 102.286-267.429 273.143-267.429 100 0 193.714 78.857 238.857 123.429 45.143-44.571 138.857-123.429 238.857-123.429 170.857 0 273.143 100 273.143 267.429 0 137.143-125.714 252-130.857 257.143l-356 342.857c-6.857 6.857-16 10.286-25.143 10.286z"],"width":1024,"tags":["heart"],"defaultCode":61444,"grid":14},{"paths":["M950.857 369.714c0 10.286-7.429 20-14.857 27.429l-207.429 202.286 49.143 285.714c0.571 4 0.571 7.429 0.571 11.429 0 14.857-6.857 28.571-23.429 28.571-8 0-16-2.857-22.857-6.857l-256.571-134.857-256.571 134.857c-7.429 4-14.857 6.857-22.857 6.857-16.571 0-24-13.714-24-28.571 0-4 0.571-7.429 1.143-11.429l49.143-285.714-208-202.286c-6.857-7.429-14.286-17.143-14.286-27.429 0-17.143 17.714-24 32-26.286l286.857-41.714 128.571-260c5.143-10.857 14.857-23.429 28-23.429s22.857 12.571 28 23.429l128.571 260 286.857 41.714c13.714 2.286 32 9.143 32 26.286z"],"width":950.8571428571428,"tags":["star"],"defaultCode":61445,"grid":14},{"paths":["M649.714 573.714l174.857-169.714-241.143-35.429-108-218.286-108 218.286-241.143 35.429 174.857 169.714-41.714 240.571 216-113.714 215.429 113.714zM950.857 369.714c0 10.286-7.429 20-14.857 27.429l-207.429 202.286 49.143 285.714c0.571 4 0.571 7.429 0.571 11.429 0 15.429-6.857 28.571-23.429 28.571-8 0-16-2.857-22.857-6.857l-256.571-134.857-256.571 134.857c-7.429 4-14.857 6.857-22.857 6.857-16.571 0-24-13.714-24-28.571 0-4 0.571-7.429 1.143-11.429l49.143-285.714-208-202.286c-6.857-7.429-14.286-17.143-14.286-27.429 0-17.143 17.714-24 32-26.286l286.857-41.714 128.571-260c5.143-10.857 14.857-23.429 28-23.429s22.857 12.571 28 23.429l128.571 260 286.857 41.714c13.714 2.286 32 9.143 32 26.286z"],"width":950.8571428571428,"tags":["star-o"],"defaultCode":61446,"grid":14},{"paths":["M731.429 799.429c0 83.429-54.857 151.429-121.714 151.429h-488c-66.857 0-121.714-68-121.714-151.429 0-150.286 37.143-324 186.857-324 46.286 45.143 109.143 73.143 178.857 73.143s132.571-28 178.857-73.143c149.714 0 186.857 173.714 186.857 324zM585.143 292.571c0 121.143-98.286 219.429-219.429 219.429s-219.429-98.286-219.429-219.429 98.286-219.429 219.429-219.429 219.429 98.286 219.429 219.429z"],"width":731.4285714285713,"tags":["user"],"defaultCode":61447,"grid":14},{"paths":["M219.429 914.286v-73.143c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571zM219.429 694.857v-73.143c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571zM219.429 475.429v-73.143c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571zM804.571 914.286v-292.571c0-20-16.571-36.571-36.571-36.571h-438.857c-20 0-36.571 16.571-36.571 36.571v292.571c0 20 16.571 36.571 36.571 36.571h438.857c20 0 36.571-16.571 36.571-36.571zM219.429 256v-73.143c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571zM1024 914.286v-73.143c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571zM804.571 475.429v-292.571c0-20-16.571-36.571-36.571-36.571h-438.857c-20 0-36.571 16.571-36.571 36.571v292.571c0 20 16.571 36.571 36.571 36.571h438.857c20 0 36.571-16.571 36.571-36.571zM1024 694.857v-73.143c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571zM1024 475.429v-73.143c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571zM1024 256v-73.143c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571zM1097.143 164.571v768c0 50.286-41.143 91.429-91.429 91.429h-914.286c-50.286 0-91.429-41.143-91.429-91.429v-768c0-50.286 41.143-91.429 91.429-91.429h914.286c50.286 0 91.429 41.143 91.429 91.429z"],"width":1097.142857142857,"tags":["film"],"defaultCode":61448,"grid":14},{"paths":["M438.857 585.143v219.429c0 40-33.143 73.143-73.143 73.143h-292.571c-40 0-73.143-33.143-73.143-73.143v-219.429c0-40 33.143-73.143 73.143-73.143h292.571c40 0 73.143 33.143 73.143 73.143zM438.857 146.286v219.429c0 40-33.143 73.143-73.143 73.143h-292.571c-40 0-73.143-33.143-73.143-73.143v-219.429c0-40 33.143-73.143 73.143-73.143h292.571c40 0 73.143 33.143 73.143 73.143zM950.857 585.143v219.429c0 40-33.143 73.143-73.143 73.143h-292.571c-40 0-73.143-33.143-73.143-73.143v-219.429c0-40 33.143-73.143 73.143-73.143h292.571c40 0 73.143 33.143 73.143 73.143zM950.857 146.286v219.429c0 40-33.143 73.143-73.143 73.143h-292.571c-40 0-73.143-33.143-73.143-73.143v-219.429c0-40 33.143-73.143 73.143-73.143h292.571c40 0 73.143 33.143 73.143 73.143z"],"width":950.8571428571428,"tags":["th-large"],"defaultCode":61449,"grid":14},{"paths":["M292.571 713.143v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM292.571 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM658.286 713.143v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM292.571 128v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM658.286 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM1024 713.143v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM658.286 128v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM1024 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM1024 128v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857z"],"width":1024,"tags":["th"],"defaultCode":61450,"grid":14},{"paths":["M292.571 713.143v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM292.571 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM1024 713.143v109.714c0 30.286-24.571 54.857-54.857 54.857h-548.571c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h548.571c30.286 0 54.857 24.571 54.857 54.857zM292.571 128v109.714c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857zM1024 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-548.571c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h548.571c30.286 0 54.857 24.571 54.857 54.857zM1024 128v109.714c0 30.286-24.571 54.857-54.857 54.857h-548.571c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h548.571c30.286 0 54.857 24.571 54.857 54.857z"],"width":1024,"tags":["th-list"],"defaultCode":61451,"grid":14},{"paths":["M954.857 323.429c0 14.286-5.714 28.571-16 38.857l-491.429 491.429c-10.286 10.286-24.571 16-38.857 16s-28.571-5.714-38.857-16l-284.571-284.571c-10.286-10.286-16-24.571-16-38.857s5.714-28.571 16-38.857l77.714-77.714c10.286-10.286 24.571-16 38.857-16s28.571 5.714 38.857 16l168 168.571 374.857-375.429c10.286-10.286 24.571-16 38.857-16s28.571 5.714 38.857 16l77.714 77.714c10.286 10.286 16 24.571 16 38.857z"],"width":1024,"tags":["check"],"defaultCode":61452,"grid":14},{"paths":["M741.714 755.429c0 14.286-5.714 28.571-16 38.857l-77.714 77.714c-10.286 10.286-24.571 16-38.857 16s-28.571-5.714-38.857-16l-168-168-168 168c-10.286 10.286-24.571 16-38.857 16s-28.571-5.714-38.857-16l-77.714-77.714c-10.286-10.286-16-24.571-16-38.857s5.714-28.571 16-38.857l168-168-168-168c-10.286-10.286-16-24.571-16-38.857s5.714-28.571 16-38.857l77.714-77.714c10.286-10.286 24.571-16 38.857-16s28.571 5.714 38.857 16l168 168 168-168c10.286-10.286 24.571-16 38.857-16s28.571 5.714 38.857 16l77.714 77.714c10.286 10.286 16 24.571 16 38.857s-5.714 28.571-16 38.857l-168 168 168 168c10.286 10.286 16 24.571 16 38.857z"],"width":804.5714285714286,"tags":["close","remove","times"],"defaultCode":61453,"grid":14},{"paths":["M585.143 457.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-128v128c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-128h-128c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h128v-128c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286v128h128c9.714 0 18.286 8.571 18.286 18.286zM658.286 475.429c0-141.143-114.857-256-256-256s-256 114.857-256 256 114.857 256 256 256 256-114.857 256-256zM950.857 950.857c0 40.571-32.571 73.143-73.143 73.143-19.429 0-38.286-8-51.429-21.714l-196-195.429c-66.857 46.286-146.857 70.857-228 70.857-222.286 0-402.286-180-402.286-402.286s180-402.286 402.286-402.286 402.286 180 402.286 402.286c0 81.143-24.571 161.143-70.857 228l196 196c13.143 13.143 21.143 32 21.143 51.429z"],"width":950.8571428571428,"tags":["search-plus"],"defaultCode":61454,"grid":14},{"paths":["M585.143 457.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-329.143c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h329.143c9.714 0 18.286 8.571 18.286 18.286zM658.286 475.429c0-141.143-114.857-256-256-256s-256 114.857-256 256 114.857 256 256 256 256-114.857 256-256zM950.857 950.857c0 40.571-32.571 73.143-73.143 73.143-19.429 0-38.286-8-51.429-21.714l-196-195.429c-66.857 46.286-146.857 70.857-228 70.857-222.286 0-402.286-180-402.286-402.286s180-402.286 402.286-402.286 402.286 180 402.286 402.286c0 81.143-24.571 161.143-70.857 228l196 196c13.143 13.143 21.143 32 21.143 51.429z"],"width":950.8571428571428,"tags":["search-minus"],"defaultCode":61456,"grid":14},{"paths":["M877.714 512c0 241.714-197.143 438.857-438.857 438.857s-438.857-197.143-438.857-438.857c0-138.857 64-266.857 175.429-350.286 32.571-24.571 78.286-18.286 102.286 14.286 24.571 32 17.714 78.286-14.286 102.286-74.286 56-117.143 141.143-117.143 233.714 0 161.143 131.429 292.571 292.571 292.571s292.571-131.429 292.571-292.571c0-92.571-42.857-177.714-117.143-233.714-32-24-38.857-70.286-14.286-102.286 24-32.571 70.286-38.857 102.286-14.286 111.429 83.429 175.429 211.429 175.429 350.286zM512 73.143v365.714c0 40-33.143 73.143-73.143 73.143s-73.143-33.143-73.143-73.143v-365.714c0-40 33.143-73.143 73.143-73.143s73.143 33.143 73.143 73.143z"],"width":877.7142857142857,"tags":["power-off"],"defaultCode":61457,"grid":14},{"paths":["M146.286 822.857v109.714c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM365.714 749.714v182.857c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-182.857c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM585.143 603.429v329.143c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-329.143c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM804.571 384v548.571c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-548.571c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM1024 91.429v841.143c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-841.143c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286z"],"width":1024,"tags":["signal"],"defaultCode":61458,"grid":14},{"paths":["M585.143 512c0-80.571-65.714-146.286-146.286-146.286s-146.286 65.714-146.286 146.286 65.714 146.286 146.286 146.286 146.286-65.714 146.286-146.286zM877.714 449.714v126.857c0 8.571-6.857 18.857-16 20.571l-105.714 16c-6.286 18.286-13.143 35.429-22.286 52 19.429 28 40 53.143 61.143 78.857 3.429 4 5.714 9.143 5.714 14.286s-1.714 9.143-5.143 13.143c-13.714 18.286-90.857 102.286-110.286 102.286-5.143 0-10.286-2.286-14.857-5.143l-78.857-61.714c-16.571 8.571-34.286 16-52 21.714-4 34.857-7.429 72-16.571 106.286-2.286 9.143-10.286 16-20.571 16h-126.857c-10.286 0-19.429-7.429-20.571-17.143l-16-105.143c-17.714-5.714-34.857-12.571-51.429-21.143l-80.571 61.143c-4 3.429-9.143 5.143-14.286 5.143s-10.286-2.286-14.286-6.286c-30.286-27.429-70.286-62.857-94.286-96-2.857-4-4-8.571-4-13.143 0-5.143 1.714-9.143 4.571-13.143 19.429-26.286 40.571-51.429 60-78.286-9.714-18.286-17.714-37.143-23.429-56.571l-104.571-15.429c-9.714-1.714-16.571-10.857-16.571-20.571v-126.857c0-8.571 6.857-18.857 15.429-20.571l106.286-16c5.714-18.286 13.143-35.429 22.286-52.571-19.429-27.429-40-53.143-61.143-78.857-3.429-4-5.714-8.571-5.714-13.714s2.286-9.143 5.143-13.143c13.714-18.857 90.857-102.286 110.286-102.286 5.143 0 10.286 2.286 14.857 5.714l78.857 61.143c16.571-8.571 34.286-16 52-21.714 4-34.857 7.429-72 16.571-106.286 2.286-9.143 10.286-16 20.571-16h126.857c10.286 0 19.429 7.429 20.571 17.143l16 105.143c17.714 5.714 34.857 12.571 51.429 21.143l81.143-61.143c3.429-3.429 8.571-5.143 13.714-5.143s10.286 2.286 14.286 5.714c30.286 28 70.286 63.429 94.286 97.143 2.857 3.429 4 8 4 12.571 0 5.143-1.714 9.143-4.571 13.143-19.429 26.286-40.571 51.429-60 78.286 9.714 18.286 17.714 37.143 23.429 56l104.571 16c9.714 1.714 16.571 10.857 16.571 20.571z"],"width":877.7142857142857,"tags":["cog","gear"],"defaultCode":61459,"grid":14},{"paths":["M292.571 420.571v329.143c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-329.143c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286zM438.857 420.571v329.143c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-329.143c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286zM585.143 420.571v329.143c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-329.143c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286zM658.286 834.286v-541.714h-512v541.714c0 27.429 15.429 43.429 18.286 43.429h475.429c2.857 0 18.286-16 18.286-43.429zM274.286 219.429h256l-27.429-66.857c-1.714-2.286-6.857-5.714-9.714-6.286h-181.143c-3.429 0.571-8 4-9.714 6.286zM804.571 237.714v36.571c0 10.286-8 18.286-18.286 18.286h-54.857v541.714c0 62.857-41.143 116.571-91.429 116.571h-475.429c-50.286 0-91.429-51.429-91.429-114.286v-544h-54.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h176.571l40-95.429c11.429-28 45.714-50.857 76-50.857h182.857c30.286 0 64.571 22.857 76 50.857l40 95.429h176.571c10.286 0 18.286 8 18.286 18.286z"],"width":804.5714285714286,"tags":["trash-o"],"defaultCode":61460,"grid":14},{"paths":["M804.571 566.857v274.286c0 20-16.571 36.571-36.571 36.571h-219.429v-219.429h-146.286v219.429h-219.429c-20 0-36.571-16.571-36.571-36.571v-274.286c0-1.143 0.571-2.286 0.571-3.429l328.571-270.857 328.571 270.857c0.571 1.143 0.571 2.286 0.571 3.429zM932 527.429l-35.429 42.286c-2.857 3.429-7.429 5.714-12 6.286h-1.714c-4.571 0-8.571-1.143-12-4l-395.429-329.714-395.429 329.714c-4 2.857-8.571 4.571-13.714 4-4.571-0.571-9.143-2.857-12-6.286l-35.429-42.286c-6.286-7.429-5.143-19.429 2.286-25.714l410.857-342.286c24-20 62.857-20 86.857 0l139.429 116.571v-111.429c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v233.143l125.143 104c7.429 6.286 8.571 18.286 2.286 25.714z"],"width":950.8571428571428,"tags":["home"],"defaultCode":61461,"grid":14},{"paths":["M838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-438.857v877.714h731.429z"],"width":877.7142857142857,"tags":["file-o"],"defaultCode":61462,"grid":14},{"paths":["M512 310.857v256c0 10.286-8 18.286-18.286 18.286h-182.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h128v-201.143c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286zM749.714 512c0-171.429-139.429-310.857-310.857-310.857s-310.857 139.429-310.857 310.857 139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["clock-o"],"defaultCode":61463,"grid":14},{"paths":["M634.857 569.143v-2.286l-13.714-182.857c-0.571-10.286-9.714-18.286-19.429-18.286h-106.286c-9.714 0-18.857 8-19.429 18.286l-13.714 182.857v2.286c-0.571 9.143 8 16 16.571 16h139.429c8.571 0 17.143-6.857 16.571-16zM1068.571 836c0 16.571-4.571 41.714-26.286 41.714h-402.286c9.714 0 17.714-8 17.143-18.286l-11.429-146.286c-0.571-10.286-9.714-18.286-19.429-18.286h-155.429c-9.714 0-18.857 8-19.429 18.286l-11.429 146.286c-0.571 10.286 7.429 18.286 17.143 18.286h-402.286c-21.714 0-26.286-25.143-26.286-41.714 0-22.857 6.286-45.714 14.857-66.286l238.286-596.571c5.714-14.286 21.143-26.857 36.571-26.857h193.714c-9.714 0-18.857 8-19.429 18.286l-8.571 109.714c-0.571 10.286 6.857 18.286 17.143 18.286h94.857c10.286 0 17.714-8 17.143-18.286l-8.571-109.714c-0.571-10.286-9.714-18.286-19.429-18.286h193.714c15.429 0 30.857 12.571 36.571 26.857l238.286 596.571c8.571 20.571 14.857 43.429 14.857 66.286z"],"width":1097.142857142857,"tags":["road"],"defaultCode":61464,"grid":14},{"paths":["M731.429 768c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM877.714 768c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM950.857 640v182.857c0 30.286-24.571 54.857-54.857 54.857h-841.143c-30.286 0-54.857-24.571-54.857-54.857v-182.857c0-30.286 24.571-54.857 54.857-54.857h265.714l77.143 77.714c21.143 20.571 48.571 32 77.714 32s56.571-11.429 77.714-32l77.714-77.714h265.143c30.286 0 54.857 24.571 54.857 54.857zM765.143 314.857c5.714 13.714 2.857 29.714-8 40l-256 256c-6.857 7.429-16.571 10.857-25.714 10.857s-18.857-3.429-25.714-10.857l-256-256c-10.857-10.286-13.714-26.286-8-40 5.714-13.143 18.857-22.286 33.714-22.286h146.286v-256c0-20 16.571-36.571 36.571-36.571h146.286c20 0 36.571 16.571 36.571 36.571v256h146.286c14.857 0 28 9.143 33.714 22.286z"],"width":950.8571428571428,"tags":["download"],"defaultCode":61465,"grid":14},{"paths":["M640 530.286c0 5.143-2.286 9.714-5.714 13.714l-182.286 182.286c-4 3.429-8.571 5.143-13.143 5.143s-9.143-1.714-13.143-5.143l-182.857-182.857c-5.143-5.714-6.857-13.143-4-20s9.714-11.429 17.143-11.429h109.714v-201.143c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v201.143h109.714c10.286 0 18.286 8 18.286 18.286zM438.857 201.143c-171.429 0-310.857 139.429-310.857 310.857s139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857-139.429-310.857-310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857v0c242.286 0 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["arrow-circle-o-down"],"defaultCode":61466,"grid":14},{"paths":["M638.857 500.571c-2.857 6.857-9.714 11.429-17.143 11.429h-109.714v201.143c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-201.143h-109.714c-10.286 0-18.286-8-18.286-18.286 0-5.143 2.286-9.714 5.714-13.714l182.286-182.286c4-3.429 8.571-5.143 13.143-5.143s9.143 1.714 13.143 5.143l182.857 182.857c5.143 5.714 6.857 13.143 4 20zM438.857 201.143c-171.429 0-310.857 139.429-310.857 310.857s139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857-139.429-310.857-310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857v0c242.286 0 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["arrow-circle-o-up"],"defaultCode":61467,"grid":14},{"paths":["M584.571 548.571h180.571c-1.143-2.857-1.714-6.286-2.857-9.143l-121.143-283.429h-404.571l-121.143 283.429c-1.143 2.857-1.714 6.286-2.857 9.143h180.571l54.286 109.714h182.857zM877.714 565.714v275.429c0 20-16.571 36.571-36.571 36.571h-804.571c-20 0-36.571-16.571-36.571-36.571v-275.429c0-20.571 6.286-50.857 14.286-70.286l136-315.429c8-18.857 30.857-33.714 50.857-33.714h475.429c20 0 42.857 14.857 50.857 33.714l136 315.429c8 19.429 14.286 49.714 14.286 70.286z"],"width":877.7142857142857,"tags":["inbox"],"defaultCode":61468,"grid":14},{"paths":["M676.571 512c0 13.143-6.857 25.143-18.286 31.429l-310.857 182.857c-5.714 3.429-12 5.143-18.286 5.143s-12.571-1.714-18.286-4.571c-11.429-6.857-18.286-18.857-18.286-32v-365.714c0-13.143 6.857-25.143 18.286-32 11.429-6.286 25.714-6.286 36.571 0.571l310.857 182.857c11.429 6.286 18.286 18.286 18.286 31.429zM749.714 512c0-171.429-139.429-310.857-310.857-310.857s-310.857 139.429-310.857 310.857 139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["play-circle-o"],"defaultCode":61469,"grid":14},{"paths":["M877.714 146.286v256c0 20-16.571 36.571-36.571 36.571h-256c-14.857 0-28-9.143-33.714-22.857-5.714-13.143-2.857-29.143 8-39.429l78.857-78.857c-53.714-49.714-124.571-78.286-199.429-78.286-161.143 0-292.571 131.429-292.571 292.571s131.429 292.571 292.571 292.571c90.857 0 174.857-41.143 230.857-113.714 2.857-4 8-6.286 13.143-6.857 5.143 0 10.286 1.714 14.286 5.143l78.286 78.857c6.857 6.286 6.857 17.143 1.143 24.571-83.429 100.571-206.857 158.286-337.714 158.286-241.714 0-438.857-197.143-438.857-438.857s197.143-438.857 438.857-438.857c112.571 0 221.714 45.143 302.286 121.143l74.286-73.714c10.286-10.857 26.286-13.714 40-8 13.143 5.714 22.286 18.857 22.286 33.714z"],"width":877.7142857142857,"tags":["repeat","rotate-right"],"defaultCode":61470,"grid":14},{"paths":["M863.429 603.429c0 1.143 0 2.857-0.571 4-48.571 202.286-215.429 343.429-426.286 343.429-111.429 0-219.429-44-300.571-121.143l-73.714 73.714c-6.857 6.857-16 10.857-25.714 10.857-20 0-36.571-16.571-36.571-36.571v-256c0-20 16.571-36.571 36.571-36.571h256c20 0 36.571 16.571 36.571 36.571 0 9.714-4 18.857-10.857 25.714l-78.286 78.286c53.714 50.286 125.143 78.857 198.857 78.857 101.714 0 196-52.571 249.143-139.429 13.714-22.286 20.571-44 30.286-66.857 2.857-8 8.571-13.143 17.143-13.143h109.714c10.286 0 18.286 8.571 18.286 18.286zM877.714 146.286v256c0 20-16.571 36.571-36.571 36.571h-256c-20 0-36.571-16.571-36.571-36.571 0-9.714 4-18.857 10.857-25.714l78.857-78.857c-54.286-50.286-125.714-78.286-199.429-78.286-101.714 0-196 52.571-249.143 139.429-13.714 22.286-20.571 44-30.286 66.857-2.857 8-8.571 13.143-17.143 13.143h-113.714c-10.286 0-18.286-8.571-18.286-18.286v-4c49.143-202.857 217.714-343.429 428.571-343.429 112 0 221.143 44.571 302.286 121.143l74.286-73.714c6.857-6.857 16-10.857 25.714-10.857 20 0 36.571 16.571 36.571 36.571z"],"width":877.7142857142857,"tags":["refresh"],"defaultCode":61473,"grid":14},{"paths":["M219.429 676.571v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM219.429 530.286v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM219.429 384v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM877.714 676.571v36.571c0 9.714-8.571 18.286-18.286 18.286h-548.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h548.571c9.714 0 18.286 8.571 18.286 18.286zM877.714 530.286v36.571c0 9.714-8.571 18.286-18.286 18.286h-548.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h548.571c9.714 0 18.286 8.571 18.286 18.286zM877.714 384v36.571c0 9.714-8.571 18.286-18.286 18.286h-548.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h548.571c9.714 0 18.286 8.571 18.286 18.286zM950.857 786.286v-475.429c0-9.714-8.571-18.286-18.286-18.286h-841.143c-9.714 0-18.286 8.571-18.286 18.286v475.429c0 9.714 8.571 18.286 18.286 18.286h841.143c9.714 0 18.286-8.571 18.286-18.286zM1024 164.571v621.714c0 50.286-41.143 91.429-91.429 91.429h-841.143c-50.286 0-91.429-41.143-91.429-91.429v-621.714c0-50.286 41.143-91.429 91.429-91.429h841.143c50.286 0 91.429 41.143 91.429 91.429z"],"width":1024,"tags":["list-alt"],"defaultCode":61474,"grid":14},{"paths":["M182.857 438.857h292.571v-109.714c0-80.571-65.714-146.286-146.286-146.286s-146.286 65.714-146.286 146.286v109.714zM658.286 493.714v329.143c0 30.286-24.571 54.857-54.857 54.857h-548.571c-30.286 0-54.857-24.571-54.857-54.857v-329.143c0-30.286 24.571-54.857 54.857-54.857h18.286v-109.714c0-140.571 115.429-256 256-256s256 115.429 256 256v109.714h18.286c30.286 0 54.857 24.571 54.857 54.857z"],"width":658.2857142857142,"tags":["lock"],"defaultCode":61475,"grid":14},{"paths":["M182.857 146.286c0 26.286-14.286 49.714-36.571 62.857v723.429c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-723.429c-22.286-13.143-36.571-36.571-36.571-62.857 0-40.571 32.571-73.143 73.143-73.143s73.143 32.571 73.143 73.143zM1024 182.857v436c0 21.143-13.143 29.143-29.714 37.714-64.571 34.857-136 66.286-210.857 66.286-105.143 0-155.429-80-280-80-90.857 0-186.286 41.143-265.143 83.429-6.286 3.429-12 5.143-18.857 5.143-20 0-36.571-16.571-36.571-36.571v-424c0-13.714 6.857-23.429 17.714-31.429 13.714-9.143 30.286-17.143 45.143-24.571 72-36.571 159.429-68.571 240.571-68.571 89.714 0 160 29.714 239.429 66.857 16 8 32.571 10.857 50.286 10.857 89.714 0 186.286-77.714 211.429-77.714 20 0 36.571 16.571 36.571 36.571z"],"width":1060.5714285714284,"tags":["flag"],"defaultCode":61476,"grid":14},{"paths":["M950.857 506.286c0 62.286-11.429 122.857-34.286 179.429l-11.429 28-105.714 18.857c-16.571 62.286-73.143 108.571-141.143 108.571v18.286c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-329.143c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286v18.286c54.857 0 102.286 30.286 127.429 74.857l38.857-6.857c10.857-35.429 16.571-72 16.571-110.286 0-172.571-170.857-323.429-365.714-323.429s-365.714 150.857-365.714 323.429c0 38.286 5.714 74.857 16.571 110.286l38.857 6.857c25.143-44.571 72.571-74.857 127.429-74.857v-18.286c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286v329.143c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-18.286c-68 0-124.571-46.286-141.143-108.571l-105.714-18.857-11.429-28c-22.857-56.571-34.286-117.143-34.286-179.429 0-234.857 217.714-433.143 475.429-433.143s475.429 198.286 475.429 433.143z"],"width":950.8571428571428,"tags":["headphones"],"defaultCode":61477,"grid":14},{"paths":["M438.857 201.143v621.714c0 20-16.571 36.571-36.571 36.571-9.714 0-18.857-4-25.714-10.857l-190.286-190.286h-149.714c-20 0-36.571-16.571-36.571-36.571v-219.429c0-20 16.571-36.571 36.571-36.571h149.714l190.286-190.286c6.857-6.857 16-10.857 25.714-10.857 20 0 36.571 16.571 36.571 36.571z"],"width":438.85714285714283,"tags":["volume-off"],"defaultCode":61478,"grid":14},{"paths":["M438.857 201.143v621.714c0 20-16.571 36.571-36.571 36.571-9.714 0-18.857-4-25.714-10.857l-190.286-190.286h-149.714c-20 0-36.571-16.571-36.571-36.571v-219.429c0-20 16.571-36.571 36.571-36.571h149.714l190.286-190.286c6.857-6.857 16-10.857 25.714-10.857 20 0 36.571 16.571 36.571 36.571zM658.286 512c0 57.143-34.857 112.571-88.571 134.286-4.571 2.286-9.714 2.857-14.286 2.857-20 0-36.571-16-36.571-36.571 0-43.429 66.286-31.429 66.286-100.571s-66.286-57.143-66.286-100.571c0-20.571 16.571-36.571 36.571-36.571 4.571 0 9.714 0.571 14.286 2.857 53.714 21.143 88.571 77.143 88.571 134.286z"],"width":658.2857142857142,"tags":["volume-down"],"defaultCode":61479,"grid":14},{"paths":["M438.857 201.143v621.714c0 20-16.571 36.571-36.571 36.571-9.714 0-18.857-4-25.714-10.857l-190.286-190.286h-149.714c-20 0-36.571-16.571-36.571-36.571v-219.429c0-20 16.571-36.571 36.571-36.571h149.714l190.286-190.286c6.857-6.857 16-10.857 25.714-10.857 20 0 36.571 16.571 36.571 36.571zM658.286 512c0 57.143-34.857 112.571-88.571 134.286-4.571 2.286-9.714 2.857-14.286 2.857-20 0-36.571-16-36.571-36.571 0-43.429 66.286-31.429 66.286-100.571s-66.286-57.143-66.286-100.571c0-20.571 16.571-36.571 36.571-36.571 4.571 0 9.714 0.571 14.286 2.857 53.714 21.143 88.571 77.143 88.571 134.286zM804.571 512c0 116-69.714 224-177.143 269.143-4.571 1.714-9.714 2.857-14.286 2.857-20.571 0-37.143-16.571-37.143-36.571 0-16 9.143-26.857 22.286-33.714 15.429-8 29.714-14.857 43.429-25.143 56.571-41.143 89.714-106.857 89.714-176.571s-33.143-135.429-89.714-176.571c-13.714-10.286-28-17.143-43.429-25.143-13.143-6.857-22.286-17.714-22.286-33.714 0-20 16.571-36.571 36.571-36.571 5.143 0 10.286 1.143 14.857 2.857 107.429 45.143 177.143 153.143 177.143 269.143zM950.857 512c0 175.429-104.571 334.286-265.714 403.429-4.571 1.714-9.714 2.857-14.857 2.857-20 0-36.571-16.571-36.571-36.571 0-16.571 8.571-25.714 22.286-33.714 8-4.571 17.143-7.429 25.714-12 16-8.571 32-18.286 46.857-29.143 93.714-69.143 149.143-178.286 149.143-294.857s-55.429-225.714-149.143-294.857c-14.857-10.857-30.857-20.571-46.857-29.143-8.571-4.571-17.714-7.429-25.714-12-13.714-8-22.286-17.143-22.286-33.714 0-20 16.571-36.571 36.571-36.571 5.143 0 10.286 1.143 14.857 2.857 161.143 69.143 265.714 228 265.714 403.429z"],"width":950.8571428571428,"tags":["volume-up"],"defaultCode":61480,"grid":14},{"paths":["M219.429 658.286v73.143h-73.143v-73.143h73.143zM219.429 219.429v73.143h-73.143v-73.143h73.143zM658.286 219.429v73.143h-73.143v-73.143h73.143zM73.143 804h219.429v-218.857h-219.429v218.857zM73.143 365.714h219.429v-219.429h-219.429v219.429zM512 365.714h219.429v-219.429h-219.429v219.429zM365.714 512v365.714h-365.714v-365.714h365.714zM658.286 804.571v73.143h-73.143v-73.143h73.143zM804.571 804.571v73.143h-73.143v-73.143h73.143zM804.571 512v219.429h-219.429v-73.143h-73.143v219.429h-73.143v-365.714h219.429v73.143h73.143v-73.143h73.143zM365.714 73.143v365.714h-365.714v-365.714h365.714zM804.571 73.143v365.714h-365.714v-365.714h365.714z"],"width":804.5714285714286,"tags":["qrcode"],"defaultCode":61481,"grid":14},{"paths":["M36 877.714h-36v-804.571h36v804.571zM72 877.143h-18.286v-804h18.286v804zM125.714 877.143h-17.714v-804h17.714v804zM215.429 877.143h-17.714v-804h17.714v804zM305.143 877.143h-35.429v-804h35.429v804zM377.143 877.143h-17.714v-804h17.714v804zM413.143 877.143h-17.714v-804h17.714v804zM449.143 877.143h-17.714v-804h17.714v804zM538.857 877.143h-36v-804h36v804zM628.571 877.143h-36v-804h36v804zM700.571 877.143h-36v-804h36v804zM772.571 877.143h-36v-804h36v804zM826.286 877.143h-36v-804h36v804zM934.286 877.143h-53.714v-804h53.714v804zM970.286 877.143h-18.286v-804h18.286v804zM1024 877.714h-36v-804.571h36v804.571z"],"width":1024,"tags":["barcode"],"defaultCode":61482,"grid":14},{"paths":["M256 256c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM865.714 585.143c0 19.429-8 38.286-21.143 51.429l-280.571 281.143c-13.714 13.143-32.571 21.143-52 21.143s-38.286-8-51.429-21.143l-408.571-409.143c-29.143-28.571-52-84-52-124.571v-237.714c0-40 33.143-73.143 73.143-73.143h237.714c40.571 0 96 22.857 125.143 52l408.571 408c13.143 13.714 21.143 32.571 21.143 52z"],"width":865.7188571428571,"tags":["tag"],"defaultCode":61483,"grid":14},{"paths":["M256 256c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM865.714 585.143c0 19.429-8 38.286-21.143 51.429l-280.571 281.143c-13.714 13.143-32.571 21.143-52 21.143s-38.286-8-51.429-21.143l-408.571-409.143c-29.143-28.571-52-84-52-124.571v-237.714c0-40 33.143-73.143 73.143-73.143h237.714c40.571 0 96 22.857 125.143 52l408.571 408c13.143 13.714 21.143 32.571 21.143 52zM1085.143 585.143c0 19.429-8 38.286-21.143 51.429l-280.571 281.143c-13.714 13.143-32.571 21.143-52 21.143-29.714 0-44.571-13.714-64-33.714l268.571-268.571c13.143-13.143 21.143-32 21.143-51.429s-8-38.286-21.143-52l-408.571-408c-29.143-29.143-84.571-52-125.143-52h128c40.571 0 96 22.857 125.143 52l408.571 408c13.143 13.714 21.143 32.571 21.143 52z"],"width":1085.1474285714285,"tags":["tags"],"defaultCode":61484,"grid":14},{"paths":["M936.571 273.143c14.286 20.571 18.286 47.429 10.286 73.714l-157.143 517.714c-14.286 48.571-64.571 86.286-113.714 86.286h-527.429c-58.286 0-120.571-46.286-141.714-105.714-9.143-25.714-9.143-50.857-1.143-72.571 1.143-11.429 3.429-22.857 4-36.571 0.571-9.143-4.571-16.571-3.429-23.429 2.286-13.714 14.286-23.429 23.429-38.857 17.143-28.571 36.571-74.857 42.857-104.571 2.857-10.857-2.857-23.429 0-33.143 2.857-10.857 13.714-18.857 19.429-29.143 15.429-26.286 35.429-77.143 38.286-104 1.143-12-4.571-25.143-1.143-34.286 4-13.143 16.571-18.857 25.143-30.286 13.714-18.857 36.571-73.143 40-103.429 1.143-9.714-4.571-19.429-2.857-29.714 2.286-10.857 16-22.286 25.143-35.429 24-35.429 28.571-113.714 101.143-93.143l-0.571 1.714c9.714-2.286 19.429-5.143 29.143-5.143h434.857c26.857 0 50.857 12 65.143 32 14.857 20.571 18.286 47.429 10.286 74.286l-156.571 517.714c-26.857 88-41.714 107.429-114.286 107.429h-496.571c-7.429 0-16.571 1.714-21.714 8.571-4.571 6.857-5.143 12-0.571 24.571 11.429 33.143 50.857 40 82.286 40h527.429c21.143 0 45.714-12 52-32.571l171.429-564c3.429-10.857 3.429-22.286 2.857-32.571 13.143 5.143 25.143 13.143 33.714 24.571zM328.571 274.286c-3.429 10.286 2.286 18.286 12.571 18.286h347.429c9.714 0 20.571-8 24-18.286l12-36.571c3.429-10.286-2.286-18.286-12.571-18.286h-347.429c-9.714 0-20.571 8-24 18.286zM281.143 420.571c-3.429 10.286 2.286 18.286 12.571 18.286h347.429c9.714 0 20.571-8 24-18.286l12-36.571c3.429-10.286-2.286-18.286-12.571-18.286h-347.429c-9.714 0-20.571 8-24 18.286z"],"width":952.5394285714285,"tags":["book"],"defaultCode":61485,"grid":14},{"paths":["M665.143 73.143c8.571 0 17.143 1.714 25.143 5.143 25.143 9.714 41.143 33.143 41.143 58.857v736.571c0 25.714-16 49.143-41.143 58.857-8 3.429-16.571 4.571-25.143 4.571-17.714 0-34.286-6.286-47.429-18.286l-252-242.286-252 242.286c-13.143 12-29.714 18.857-47.429 18.857-8.571 0-17.143-1.714-25.143-5.143-25.143-9.714-41.143-33.143-41.143-58.857v-736.571c0-25.714 16-49.143 41.143-58.857 8-3.429 16.571-5.143 25.143-5.143h598.857z"],"width":731.4285714285713,"tags":["bookmark"],"defaultCode":61486,"grid":14},{"paths":["M219.429 877.714h512v-146.286h-512v146.286zM219.429 512h512v-219.429h-91.429c-30.286 0-54.857-24.571-54.857-54.857v-91.429h-365.714v365.714zM877.714 548.571c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM950.857 548.571v237.714c0 9.714-8.571 18.286-18.286 18.286h-128v91.429c0 30.286-24.571 54.857-54.857 54.857h-548.571c-30.286 0-54.857-24.571-54.857-54.857v-91.429h-128c-9.714 0-18.286-8.571-18.286-18.286v-237.714c0-60 49.714-109.714 109.714-109.714h36.571v-310.857c0-30.286 24.571-54.857 54.857-54.857h384c30.286 0 72 17.143 93.714 38.857l86.857 86.857c21.714 21.714 38.857 63.429 38.857 93.714v146.286h36.571c60 0 109.714 49.714 109.714 109.714z"],"width":950.8571428571428,"tags":["print"],"defaultCode":61487,"grid":14},{"paths":["M548.571 384c90.857 0 164.571 73.714 164.571 164.571s-73.714 164.571-164.571 164.571-164.571-73.714-164.571-164.571 73.714-164.571 164.571-164.571zM950.857 146.286c80.571 0 146.286 65.714 146.286 146.286v512c0 80.571-65.714 146.286-146.286 146.286h-804.571c-80.571 0-146.286-65.714-146.286-146.286v-512c0-80.571 65.714-146.286 146.286-146.286h128l29.143-77.714c14.286-37.714 58.857-68.571 98.857-68.571h292.571c40 0 84.571 30.857 98.857 68.571l29.143 77.714h128zM548.571 804.571c141.143 0 256-114.857 256-256s-114.857-256-256-256-256 114.857-256 256 114.857 256 256 256z"],"width":1097.142857142857,"tags":["camera"],"defaultCode":61488,"grid":14},{"paths":["M414.286 319.429l-97.143 257.143c56.571 0.571 113.143 2.286 169.714 2.286 10.857 0 21.714-0.571 32.571-1.143-29.714-86.857-64.571-175.429-105.143-258.286zM0 950.857l1.143-45.143c53.714-16.571 112-5.143 136-66.857l135.429-352 160-413.714h73.143c2.286 4 4.571 8 6.286 12l117.143 274.286c42.857 101.143 82.286 203.429 125.714 304 25.714 59.429 45.714 120.571 74.286 178.857 4 9.143 12 26.286 20 32.571 18.857 14.857 71.429 18.286 98.286 28.571 1.714 10.857 3.429 21.714 3.429 32.571 0 5.143-0.571 9.714-0.571 14.857-72.571 0-145.143-9.143-217.714-9.143-74.857 0-149.714 6.286-224.571 8.571 0-14.857 0.571-29.714 2.286-44.571l74.857-16c15.429-3.429 45.714-7.429 45.714-28.571 0-20.571-73.714-190.286-82.857-213.714l-257.143-1.143c-14.857 33.143-72.571 182.857-72.571 204.571 0 44 84 45.714 116.571 50.286 0.571 10.857 0.571 21.714 0.571 33.143 0 5.143-0.571 10.286-1.143 15.429-66.286 0-133.143-11.429-199.429-11.429-8 0-19.429 3.429-27.429 4.571-36 6.286-71.429 8-107.429 8z"],"width":950.8571428571428,"tags":["font"],"defaultCode":61489,"grid":14},{"paths":["M317.143 869.143c25.143 10.857 52.571 18.286 80 18.286 130.286 0 214.857-52 214.857-191.429 0-35.429-4.571-72.571-23.429-102.857-53.143-85.714-129.714-90.286-221.714-90.286-17.143 0-41.714 0-57.714 5.714 0 60.571-0.571 121.143-0.571 181.143 0 39.429-5.143 146.286 8.571 179.429zM309.143 442.857c20.571 3.429 41.714 4 62.286 4 117.714 0 201.714-33.143 201.714-165.143 0-111.429-98.857-149.714-194.286-149.714-25.143 0-49.714 3.429-74.286 7.429 0 57.714 4.571 115.429 4.571 173.143 0 30.286-0.571 60.571-0.571 90.857 0 13.143 0 26.286 0.571 39.429zM0 950.857l1.143-53.714c36.571-9.143 73.714-9.714 109.143-24.571 20-33.714 17.143-93.143 17.143-131.429 0-12.571 1.143-558.857-12.571-585.714-8.571-16.571-92.571-20.571-111.429-22.857l-2.286-47.429c136-2.286 272-12 407.429-12 25.714 0 52 0.571 77.714 0.571 129.143 0 271.429 61.714 271.429 210.286 0 102.286-77.714 140.571-158.286 177.143 108.571 24.571 205.143 98.286 205.143 218.286 0 196.571-178.857 261.714-346.286 261.714-50.286 0-100.571-3.429-150.857-3.429-102.286 0-205.714 9.143-307.429 13.143z"],"width":804.5714285714286,"tags":["bold"],"defaultCode":61490,"grid":14},{"paths":["M0 949.714l9.714-48.571c36.571-11.429 76-16 110.286-33.714 13.143-16.571 19.429-37.714 23.429-57.714 7.429-38.857 132-599.429 130.286-645.143v-14.286c-31.429-17.143-69.714-12.571-104-18.286l10.857-58.857c73.714 3.429 148.571 9.143 222.857 9.143 60.571 0 121.143-5.714 181.714-9.143-2.286 17.143-6.286 34.286-10.857 50.857-39.429 13.714-81.143 20-120 35.429-12.571 30.857-15.429 64.571-21.143 97.143-27.429 148-64 296-94.286 442.857-5.714 27.429-33.714 141.143-31.429 165.143l0.571 10.286c34.857 8 70.286 12 105.714 17.714-1.143 18.857-4.571 37.714-9.143 56.571-12.571 0-24.571 1.714-37.143 1.714-32.571 0-66.286-10.857-98.857-11.429-39.429-0.571-78.857-1.143-117.714-1.143-50.857 0-100.571 8.571-150.857 11.429z"],"width":585.1428571428571,"tags":["italic"],"defaultCode":61491,"grid":14},{"paths":["M996.571 804.571c25.143 0 33.143 16 17.714 36l-72 92.571c-15.429 20-40.571 20-56 0l-72-92.571c-15.429-20-7.429-36 17.714-36h45.714v-585.143h-45.714c-25.143 0-33.143-16-17.714-36l72-92.571c15.429-20 40.571-20 56 0l72 92.571c15.429 20 7.429 36-17.714 36h-45.714v585.143h45.714zM46.286 73.714l30.857 15.429c4 1.714 108.571 2.857 120.571 2.857 50.286 0 100.571-2.286 150.857-2.286 41.143 0 81.714 0.571 122.857 0.571h167.429c22.857 0 36 5.143 51.429-16.571l24-0.571c5.143 0 10.857 0.571 16 0.571 1.143 64 1.143 128 1.143 192 0 20 0.571 42.286-2.857 62.286-12.571 4.571-25.714 8.571-38.857 10.286-13.143-22.857-22.286-48-30.857-73.143-4-11.429-17.714-88.571-18.857-89.714-12-14.857-25.143-12-42.857-12-52 0-106.286-2.286-157.714 4-2.857 25.143-5.143 52-4.571 77.714 0.571 160.571 2.286 321.143 2.286 481.714 0 44-6.857 90.286 5.714 132.571 43.429 22.286 94.857 25.714 139.429 45.714 1.143 9.143 2.857 18.857 2.857 28.571 0 5.143-0.571 10.857-1.714 16.571l-19.429 0.571c-81.143 2.286-161.143-10.286-242.857-10.286-57.714 0-115.429 10.286-173.143 10.286-0.571-9.714-1.714-20-1.714-29.714v-5.143c21.714-34.857 100-35.429 136-56.571 12.571-28 10.857-182.857 10.857-218.857 0-115.429-3.429-230.857-3.429-346.286v-66.857c0-10.286 2.286-51.429-4.571-59.429-8-8.571-82.857-6.857-92.571-6.857-21.143 0-82.286 9.714-98.857 21.714-27.429 18.857-27.429 133.143-61.714 135.429-10.286-6.286-24.571-15.429-32-25.143v-218.857z"],"width":1029.7051428571428,"tags":["text-height"],"defaultCode":61492,"grid":14},{"paths":["M46.286 73.714l30.857 15.429c4 1.714 108.571 2.857 120.571 2.857 50.286 0 100.571-2.286 150.857-2.286 151.429 0 304.571-3.429 456 1.714 12.571 0.571 24.571-7.429 32-17.714l24-0.571c5.143 0 10.857 0.571 16 0.571 1.143 64 1.143 128 1.143 192 0 20.571 0.571 42.286-2.857 62.286-12.571 4.571-25.714 8.571-38.857 10.286-13.143-22.857-22.286-48-30.857-73.143-4-11.429-18.286-88.571-18.857-89.714-4-5.143-9.143-8.571-15.429-10.857-4.571-1.714-32-1.143-37.714-1.143-70.286 0-151.429-4-220.571 4-2.857 25.143-5.143 52-4.571 77.714l0.571 86.857v-29.714c0.571 93.143 1.714 185.714 1.714 278.286 0 44-6.857 90.286 5.714 132.571 43.429 22.286 94.857 25.714 139.429 45.714 1.143 9.143 2.857 18.857 2.857 28.571 0 5.143-0.571 10.857-1.714 16.571l-19.429 0.571c-81.143 2.286-161.143-10.286-242.857-10.286-57.714 0-115.429 10.286-173.143 10.286-0.571-9.714-1.714-20-1.714-29.714v-5.143c21.714-34.857 100-35.429 136-56.571 14.286-32 10.286-302.286 10.286-352.571 0-8-2.857-16.571-2.857-25.143 0-23.429 4-157.714-4.571-167.429-8-8.571-82.857-6.857-92.571-6.857-24 0-158.286 12.571-172 21.714-26.857 17.714-27.429 132.571-61.714 135.429-10.286-6.286-24.571-15.429-32-25.143v-218.857zM748.571 806.286c20 0 96 68 111.429 80 8.571 6.857 14.857 16.571 14.857 28s-6.286 21.143-14.857 28c-15.429 12-91.429 80-111.429 80-26.286 0-17.143-61.143-17.143-71.429h-585.143c0 10.286 9.143 71.429-17.143 71.429-20 0-96-68-111.429-80-8.571-6.857-14.857-16.571-14.857-28s6.286-21.143 14.857-28c15.429-12 91.429-80 111.429-80 26.286 0 17.143 61.143 17.143 71.429h585.143c0-10.286-9.143-71.429 17.143-71.429z"],"width":878.2994285714285,"tags":["text-width"],"defaultCode":61493,"grid":14},{"paths":["M1024 768v73.143c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h950.857c20 0 36.571 16.571 36.571 36.571zM804.571 548.571v73.143c0 20-16.571 36.571-36.571 36.571h-731.429c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h731.429c20 0 36.571 16.571 36.571 36.571zM950.857 329.143v73.143c0 20-16.571 36.571-36.571 36.571h-877.714c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h877.714c20 0 36.571 16.571 36.571 36.571zM731.429 109.714v73.143c0 20-16.571 36.571-36.571 36.571h-658.286c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h658.286c20 0 36.571 16.571 36.571 36.571z"],"width":1024,"tags":["align-left"],"defaultCode":61494,"grid":14},{"paths":["M1024 768v73.143c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h950.857c20 0 36.571 16.571 36.571 36.571zM804.571 548.571v73.143c0 20-16.571 36.571-36.571 36.571h-512c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h512c20 0 36.571 16.571 36.571 36.571zM950.857 329.143v73.143c0 20-16.571 36.571-36.571 36.571h-804.571c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h804.571c20 0 36.571 16.571 36.571 36.571zM731.429 109.714v73.143c0 20-16.571 36.571-36.571 36.571h-365.714c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h365.714c20 0 36.571 16.571 36.571 36.571z"],"width":1024,"tags":["align-center"],"defaultCode":61495,"grid":14},{"paths":["M1024 768v73.143c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h950.857c20 0 36.571 16.571 36.571 36.571zM1024 548.571v73.143c0 20-16.571 36.571-36.571 36.571h-731.429c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h731.429c20 0 36.571 16.571 36.571 36.571zM1024 329.143v73.143c0 20-16.571 36.571-36.571 36.571h-877.714c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h877.714c20 0 36.571 16.571 36.571 36.571zM1024 109.714v73.143c0 20-16.571 36.571-36.571 36.571h-658.286c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h658.286c20 0 36.571 16.571 36.571 36.571z"],"width":1024,"tags":["align-right"],"defaultCode":61496,"grid":14},{"paths":["M1024 768v73.143c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h950.857c20 0 36.571 16.571 36.571 36.571zM1024 548.571v73.143c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h950.857c20 0 36.571 16.571 36.571 36.571zM1024 329.143v73.143c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h950.857c20 0 36.571 16.571 36.571 36.571zM1024 109.714v73.143c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h950.857c20 0 36.571 16.571 36.571 36.571z"],"width":1024,"tags":["align-justify"],"defaultCode":61497,"grid":14},{"paths":["M146.286 749.714v109.714c0 9.714-8.571 18.286-18.286 18.286h-109.714c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h109.714c9.714 0 18.286 8.571 18.286 18.286zM146.286 530.286v109.714c0 9.714-8.571 18.286-18.286 18.286h-109.714c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h109.714c9.714 0 18.286 8.571 18.286 18.286zM146.286 310.857v109.714c0 9.714-8.571 18.286-18.286 18.286h-109.714c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h109.714c9.714 0 18.286 8.571 18.286 18.286zM1024 749.714v109.714c0 9.714-8.571 18.286-18.286 18.286h-768c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h768c9.714 0 18.286 8.571 18.286 18.286zM146.286 91.429v109.714c0 9.714-8.571 18.286-18.286 18.286h-109.714c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h109.714c9.714 0 18.286 8.571 18.286 18.286zM1024 530.286v109.714c0 9.714-8.571 18.286-18.286 18.286h-768c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h768c9.714 0 18.286 8.571 18.286 18.286zM1024 310.857v109.714c0 9.714-8.571 18.286-18.286 18.286h-768c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h768c9.714 0 18.286 8.571 18.286 18.286zM1024 91.429v109.714c0 9.714-8.571 18.286-18.286 18.286h-768c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h768c9.714 0 18.286 8.571 18.286 18.286z"],"width":1024,"tags":["list"],"defaultCode":61498,"grid":14},{"paths":["M219.429 310.857v329.143c0 9.714-8.571 18.286-18.286 18.286-4.571 0-9.714-1.714-13.143-5.143l-164.571-164.571c-3.429-3.429-5.143-8.571-5.143-13.143s1.714-9.714 5.143-13.143l164.571-164.571c3.429-3.429 8.571-5.143 13.143-5.143 9.714 0 18.286 8.571 18.286 18.286zM1024 749.714v109.714c0 9.714-8.571 18.286-18.286 18.286h-987.429c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h987.429c9.714 0 18.286 8.571 18.286 18.286zM1024 530.286v109.714c0 9.714-8.571 18.286-18.286 18.286h-621.714c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h621.714c9.714 0 18.286 8.571 18.286 18.286zM1024 310.857v109.714c0 9.714-8.571 18.286-18.286 18.286h-621.714c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h621.714c9.714 0 18.286 8.571 18.286 18.286zM1024 91.429v109.714c0 9.714-8.571 18.286-18.286 18.286h-987.429c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h987.429c9.714 0 18.286 8.571 18.286 18.286z"],"width":1024,"tags":["dedent","outdent"],"defaultCode":61499,"grid":14},{"paths":["M201.143 475.429c0 4.571-1.714 9.714-5.143 13.143l-164.571 164.571c-3.429 3.429-8.571 5.143-13.143 5.143-9.714 0-18.286-8.571-18.286-18.286v-329.143c0-9.714 8.571-18.286 18.286-18.286 4.571 0 9.714 1.714 13.143 5.143l164.571 164.571c3.429 3.429 5.143 8.571 5.143 13.143zM1024 749.714v109.714c0 9.714-8.571 18.286-18.286 18.286h-987.429c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h987.429c9.714 0 18.286 8.571 18.286 18.286zM1024 530.286v109.714c0 9.714-8.571 18.286-18.286 18.286h-621.714c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h621.714c9.714 0 18.286 8.571 18.286 18.286zM1024 310.857v109.714c0 9.714-8.571 18.286-18.286 18.286h-621.714c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h621.714c9.714 0 18.286 8.571 18.286 18.286zM1024 91.429v109.714c0 9.714-8.571 18.286-18.286 18.286h-987.429c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h987.429c9.714 0 18.286 8.571 18.286 18.286z"],"width":1024,"tags":["indent"],"defaultCode":61500,"grid":14},{"paths":["M1024 201.143v621.714c0 14.857-9.143 28-22.286 33.714-4.571 1.714-9.714 2.857-14.286 2.857-9.714 0-18.857-3.429-25.714-10.857l-230.286-230.286v94.857c0 90.857-73.714 164.571-164.571 164.571h-402.286c-90.857 0-164.571-73.714-164.571-164.571v-402.286c0-90.857 73.714-164.571 164.571-164.571h402.286c90.857 0 164.571 73.714 164.571 164.571v94.286l230.286-229.714c6.857-7.429 16-10.857 25.714-10.857 4.571 0 9.714 1.143 14.286 2.857 13.143 5.714 22.286 18.857 22.286 33.714z"],"width":1024,"tags":["video-camera"],"defaultCode":61501,"grid":14},{"paths":["M365.714 329.143c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM950.857 548.571v256h-804.571v-109.714l182.857-182.857 91.429 91.429 292.571-292.571zM1005.714 146.286h-914.286c-9.714 0-18.286 8.571-18.286 18.286v694.857c0 9.714 8.571 18.286 18.286 18.286h914.286c9.714 0 18.286-8.571 18.286-18.286v-694.857c0-9.714-8.571-18.286-18.286-18.286zM1097.143 164.571v694.857c0 50.286-41.143 91.429-91.429 91.429h-914.286c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h914.286c50.286 0 91.429 41.143 91.429 91.429z"],"width":1097.142857142857,"tags":["image","photo","picture-o"],"defaultCode":61502,"grid":14},{"paths":["M207.429 877.714l52-52-134.286-134.286-52 52v61.143h73.143v73.143h61.143zM506.286 347.429c0-7.429-5.143-12.571-12.571-12.571-3.429 0-6.857 1.143-9.714 4l-309.714 309.714c-2.857 2.857-4 6.286-4 9.714 0 7.429 5.143 12.571 12.571 12.571 3.429 0 6.857-1.143 9.714-4l309.714-309.714c2.857-2.857 4-6.286 4-9.714zM475.429 237.714l237.714 237.714-475.429 475.429h-237.714v-237.714zM865.714 292.571c0 19.429-8 38.286-21.143 51.429l-94.857 94.857-237.714-237.714 94.857-94.286c13.143-13.714 32-21.714 51.429-21.714s38.286 8 52 21.714l134.286 133.714c13.143 13.714 21.143 32.571 21.143 52z"],"width":865.7188571428571,"tags":["pencil"],"defaultCode":61504,"grid":14},{"paths":["M438.857 365.714c0-80.571-65.714-146.286-146.286-146.286s-146.286 65.714-146.286 146.286 65.714 146.286 146.286 146.286 146.286-65.714 146.286-146.286zM585.143 365.714c0 34.857-4 70.857-18.857 102.286l-208 442.286c-12 25.143-38.286 40.571-65.714 40.571s-53.714-15.429-65.143-40.571l-208.571-442.286c-14.857-31.429-18.857-67.429-18.857-102.286 0-161.714 130.857-292.571 292.571-292.571s292.571 130.857 292.571 292.571z"],"width":585.1428571428571,"tags":["map-marker"],"defaultCode":61505,"grid":14},{"paths":["M438.857 822.857v-621.714c-171.429 0-310.857 139.429-310.857 310.857s139.429 310.857 310.857 310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["adjust"],"defaultCode":61506,"grid":14},{"paths":["M292.571 658.286c0-14.286-4.571-28-11.429-39.429-7.429-11.429-37.714-50.286-49.714-88.571-1.714-6.286-7.429-9.143-12-9.143s-10.286 2.857-12 9.143c-12 38.286-42.286 77.143-49.714 88.571-6.857 11.429-11.429 25.143-11.429 39.429 0 40.571 32.571 73.143 73.143 73.143s73.143-32.571 73.143-73.143zM585.143 585.143c0 161.714-130.857 292.571-292.571 292.571s-292.571-130.857-292.571-292.571c0-57.714 17.714-111.429 46.286-157.143 29.143-45.714 151.429-200.571 197.714-354.857 7.429-24.571 30.286-36.571 48.571-36.571s41.714 12 48.571 36.571c46.286 154.286 168.571 309.143 197.714 354.857s46.286 99.429 46.286 157.143z"],"width":585.1428571428571,"tags":["tint"],"defaultCode":61507,"grid":14},{"paths":["M507.429 676.571l66.286-66.286-86.857-86.857-66.286 66.286v32h54.857v54.857h32zM758.857 265.143c-5.143-5.143-13.714-4.571-18.857 0.571l-200 200c-5.143 5.143-5.714 13.714-0.571 18.857s13.714 4.571 18.857-0.571l200-200c5.143-5.143 5.714-13.714 0.571-18.857zM804.571 604.571v108.571c0 90.857-73.714 164.571-164.571 164.571h-475.429c-90.857 0-164.571-73.714-164.571-164.571v-475.429c0-90.857 73.714-164.571 164.571-164.571h475.429c22.857 0 45.714 4.571 66.857 14.286 5.143 2.286 9.143 7.429 10.286 13.143 1.143 6.286-0.571 12-5.143 16.571l-28 28c-5.143 5.143-12 6.857-18.286 4.571-8.571-2.286-17.143-3.429-25.714-3.429h-475.429c-50.286 0-91.429 41.143-91.429 91.429v475.429c0 50.286 41.143 91.429 91.429 91.429h475.429c50.286 0 91.429-41.143 91.429-91.429v-72c0-4.571 1.714-9.143 5.143-12.571l36.571-36.571c5.714-5.714 13.143-6.857 20-4s11.429 9.143 11.429 16.571zM749.714 182.857l164.571 164.571-384 384h-164.571v-164.571zM1003.429 258.286l-52.571 52.571-164.571-164.571 52.571-52.571c21.143-21.143 56.571-21.143 77.714 0l86.857 86.857c21.143 21.143 21.143 56.571 0 77.714z"],"width":1024.5851428571427,"tags":["edit","pencil-square-o"],"defaultCode":61508,"grid":14},{"paths":["M804.571 565.143v148c0 90.857-73.714 164.571-164.571 164.571h-475.429c-90.857 0-164.571-73.714-164.571-164.571v-475.429c0-90.857 73.714-164.571 164.571-164.571h145.714c9.714 0 18.286 8 18.286 18.286 0 9.143-6.286 16.571-14.857 18.286-28.571 9.714-54.286 21.143-76 34.286-2.857 1.143-5.714 2.286-9.143 2.286h-64c-50.286 0-91.429 41.143-91.429 91.429v475.429c0 50.286 41.143 91.429 91.429 91.429h475.429c50.286 0 91.429-41.143 91.429-91.429v-122.286c0-6.857 4-13.143 10.286-16.571 11.429-5.143 21.714-12.571 30.857-21.143 5.143-5.143 13.143-7.429 20-4.571s12 9.143 12 16.571zM940 281.714l-219.429 219.429c-6.857 7.429-16 10.857-25.714 10.857-4.571 0-9.714-1.143-14.286-2.857-13.143-5.714-22.286-18.857-22.286-33.714v-109.714h-91.429c-125.714 0-205.714 24-250.286 74.857-46.286 53.143-60 138.857-42.286 270.286 1.143 8-4 16-11.429 19.429-2.286 0.571-4.571 1.143-6.857 1.143-5.714 0-11.429-2.857-14.857-7.429-4-5.714-94.857-134.286-94.857-248.571 0-153.143 48-329.143 420.571-329.143h91.429v-109.714c0-14.857 9.143-28 22.286-33.714 4.571-1.714 9.714-2.857 14.286-2.857 9.714 0 18.857 4 25.714 10.857l219.429 219.429c14.286 14.286 14.286 37.143 0 51.429z"],"width":954.2948571428572,"tags":["share-square-o"],"defaultCode":61509,"grid":14},{"paths":["M804.571 531.429v181.714c0 90.857-73.714 164.571-164.571 164.571h-475.429c-90.857 0-164.571-73.714-164.571-164.571v-475.429c0-90.857 73.714-164.571 164.571-164.571h475.429c22.857 0 45.714 4.571 66.857 14.286 5.143 2.286 9.143 7.429 10.286 13.143 1.143 6.286-0.571 12-5.143 16.571l-28 28c-3.429 3.429-8.571 5.714-13.143 5.714-1.714 0-3.429-0.571-5.143-1.143-8.571-2.286-17.143-3.429-25.714-3.429h-475.429c-50.286 0-91.429 41.143-91.429 91.429v475.429c0 50.286 41.143 91.429 91.429 91.429h475.429c50.286 0 91.429-41.143 91.429-91.429v-145.143c0-4.571 1.714-9.143 5.143-12.571l36.571-36.571c4-4 8.571-5.714 13.143-5.714 2.286 0 4.571 0.571 6.857 1.714 6.857 2.857 11.429 9.143 11.429 16.571zM936.571 252l-465.143 465.143c-18.286 18.286-46.857 18.286-65.143 0l-245.714-245.714c-18.286-18.286-18.286-46.857 0-65.143l62.857-62.857c18.286-18.286 46.857-18.286 65.143 0l150.286 150.286 369.714-369.714c18.286-18.286 46.857-18.286 65.143 0l62.857 62.857c18.286 18.286 18.286 46.857 0 65.143z"],"width":954.8799999999999,"tags":["check-square-o"],"defaultCode":61510,"grid":14},{"paths":["M1024 512c0 9.714-4 18.857-10.857 25.714l-146.286 146.286c-6.857 6.857-16 10.857-25.714 10.857-20 0-36.571-16.571-36.571-36.571v-73.143h-219.429v219.429h73.143c20 0 36.571 16.571 36.571 36.571 0 9.714-4 18.857-10.857 25.714l-146.286 146.286c-6.857 6.857-16 10.857-25.714 10.857s-18.857-4-25.714-10.857l-146.286-146.286c-6.857-6.857-10.857-16-10.857-25.714 0-20 16.571-36.571 36.571-36.571h73.143v-219.429h-219.429v73.143c0 20-16.571 36.571-36.571 36.571-9.714 0-18.857-4-25.714-10.857l-146.286-146.286c-6.857-6.857-10.857-16-10.857-25.714s4-18.857 10.857-25.714l146.286-146.286c6.857-6.857 16-10.857 25.714-10.857 20 0 36.571 16.571 36.571 36.571v73.143h219.429v-219.429h-73.143c-20 0-36.571-16.571-36.571-36.571 0-9.714 4-18.857 10.857-25.714l146.286-146.286c6.857-6.857 16-10.857 25.714-10.857s18.857 4 25.714 10.857l146.286 146.286c6.857 6.857 10.857 16 10.857 25.714 0 20-16.571 36.571-36.571 36.571h-73.143v219.429h219.429v-73.143c0-20 16.571-36.571 36.571-36.571 9.714 0 18.857 4 25.714 10.857l146.286 146.286c6.857 6.857 10.857 16 10.857 25.714z"],"width":1024,"tags":["arrows"],"defaultCode":61511,"grid":14},{"paths":["M559.429 80.571c14.286-14.286 25.714-9.143 25.714 10.857v841.143c0 20-11.429 25.143-25.714 10.857l-405.714-405.714c-3.429-3.429-5.714-6.857-7.429-10.857v387.429c0 20-16.571 36.571-36.571 36.571h-73.143c-20 0-36.571-16.571-36.571-36.571v-804.571c0-20 16.571-36.571 36.571-36.571h73.143c20 0 36.571 16.571 36.571 36.571v387.429c1.714-4 4-7.429 7.429-10.857z"],"width":585.1428571428571,"tags":["step-backward"],"defaultCode":61512,"grid":14},{"paths":["M998.286 80.571c14.286-14.286 25.714-9.143 25.714 10.857v841.143c0 20-11.429 25.143-25.714 10.857l-405.714-405.714c-3.429-3.429-5.714-6.857-7.429-10.857v405.714c0 20-11.429 25.143-25.714 10.857l-405.714-405.714c-3.429-3.429-5.714-6.857-7.429-10.857v387.429c0 20-16.571 36.571-36.571 36.571h-73.143c-20 0-36.571-16.571-36.571-36.571v-804.571c0-20 16.571-36.571 36.571-36.571h73.143c20 0 36.571 16.571 36.571 36.571v387.429c1.714-4 4-7.429 7.429-10.857l405.714-405.714c14.286-14.286 25.714-9.143 25.714 10.857v405.714c1.714-4 4-7.429 7.429-10.857z"],"width":1024,"tags":["fast-backward"],"defaultCode":61513,"grid":14},{"paths":["M925.143 80.571c14.286-14.286 25.714-9.143 25.714 10.857v841.143c0 20-11.429 25.143-25.714 10.857l-405.714-405.714c-3.429-3.429-5.714-6.857-7.429-10.857v405.714c0 20-11.429 25.143-25.714 10.857l-405.714-405.714c-14.286-14.286-14.286-37.143 0-51.429l405.714-405.714c14.286-14.286 25.714-9.143 25.714 10.857v405.714c1.714-4 4-7.429 7.429-10.857z"],"width":1017.1245714285715,"tags":["backward"],"defaultCode":61514,"grid":14},{"paths":["M790.857 529.714l-758.857 421.714c-17.714 9.714-32 1.143-32-18.857v-841.143c0-20 14.286-28.571 32-18.857l758.857 421.714c17.714 9.714 17.714 25.714 0 35.429z"],"width":808.5942857142857,"tags":["play"],"defaultCode":61515,"grid":14},{"paths":["M877.714 109.714v804.571c0 20-16.571 36.571-36.571 36.571h-292.571c-20 0-36.571-16.571-36.571-36.571v-804.571c0-20 16.571-36.571 36.571-36.571h292.571c20 0 36.571 16.571 36.571 36.571zM365.714 109.714v804.571c0 20-16.571 36.571-36.571 36.571h-292.571c-20 0-36.571-16.571-36.571-36.571v-804.571c0-20 16.571-36.571 36.571-36.571h292.571c20 0 36.571 16.571 36.571 36.571z"],"width":877.7142857142857,"tags":["pause"],"defaultCode":61516,"grid":14},{"paths":["M877.714 109.714v804.571c0 20-16.571 36.571-36.571 36.571h-804.571c-20 0-36.571-16.571-36.571-36.571v-804.571c0-20 16.571-36.571 36.571-36.571h804.571c20 0 36.571 16.571 36.571 36.571z"],"width":877.7142857142857,"tags":["stop"],"defaultCode":61517,"grid":14},{"paths":["M25.714 943.429c-14.286 14.286-25.714 9.143-25.714-10.857v-841.143c0-20 11.429-25.143 25.714-10.857l405.714 405.714c3.429 3.429 5.714 6.857 7.429 10.857v-405.714c0-20 11.429-25.143 25.714-10.857l405.714 405.714c14.286 14.286 14.286 37.143 0 51.429l-405.714 405.714c-14.286 14.286-25.714 9.143-25.714-10.857v-405.714c-1.714 4-4 7.429-7.429 10.857z"],"width":884.5897142857142,"tags":["forward"],"defaultCode":61518,"grid":14},{"paths":["M25.714 943.429c-14.286 14.286-25.714 9.143-25.714-10.857v-841.143c0-20 11.429-25.143 25.714-10.857l405.714 405.714c3.429 3.429 5.714 6.857 7.429 10.857v-405.714c0-20 11.429-25.143 25.714-10.857l405.714 405.714c3.429 3.429 5.714 6.857 7.429 10.857v-387.429c0-20 16.571-36.571 36.571-36.571h73.143c20 0 36.571 16.571 36.571 36.571v804.571c0 20-16.571 36.571-36.571 36.571h-73.143c-20 0-36.571-16.571-36.571-36.571v-387.429c-1.714 4-4 7.429-7.429 10.857l-405.714 405.714c-14.286 14.286-25.714 9.143-25.714-10.857v-405.714c-1.714 4-4 7.429-7.429 10.857z"],"width":1024,"tags":["fast-forward"],"defaultCode":61520,"grid":14},{"paths":["M25.714 943.429c-14.286 14.286-25.714 9.143-25.714-10.857v-841.143c0-20 11.429-25.143 25.714-10.857l405.714 405.714c3.429 3.429 5.714 6.857 7.429 10.857v-387.429c0-20 16.571-36.571 36.571-36.571h73.143c20 0 36.571 16.571 36.571 36.571v804.571c0 20-16.571 36.571-36.571 36.571h-73.143c-20 0-36.571-16.571-36.571-36.571v-387.429c-1.714 4-4 7.429-7.429 10.857z"],"width":585.1428571428571,"tags":["step-forward"],"defaultCode":61521,"grid":14},{"paths":["M8 559.429l405.714-405.714c14.286-14.286 37.143-14.286 51.429 0l405.714 405.714c14.286 14.286 9.143 25.714-10.857 25.714h-841.143c-20 0-25.143-11.429-10.857-25.714zM841.714 877.714h-804.571c-20 0-36.571-16.571-36.571-36.571v-146.286c0-20 16.571-36.571 36.571-36.571h804.571c20 0 36.571 16.571 36.571 36.571v146.286c0 20-16.571 36.571-36.571 36.571z"],"width":878.8845714285713,"tags":["eject"],"defaultCode":61522,"grid":14},{"paths":["M669.143 172l-303.429 303.429 303.429 303.429c14.286 14.286 14.286 37.143 0 51.429l-94.857 94.857c-14.286 14.286-37.143 14.286-51.429 0l-424-424c-14.286-14.286-14.286-37.143 0-51.429l424-424c14.286-14.286 37.143-14.286 51.429 0l94.857 94.857c14.286 14.286 14.286 37.143 0 51.429z"],"width":768,"tags":["chevron-left"],"defaultCode":61523,"grid":14},{"paths":["M632.571 501.143l-424 424c-14.286 14.286-37.143 14.286-51.429 0l-94.857-94.857c-14.286-14.286-14.286-37.143 0-51.429l303.429-303.429-303.429-303.429c-14.286-14.286-14.286-37.143 0-51.429l94.857-94.857c14.286-14.286 37.143-14.286 51.429 0l424 424c14.286 14.286 14.286 37.143 0 51.429z"],"width":694.8571428571428,"tags":["chevron-right"],"defaultCode":61524,"grid":14},{"paths":["M694.857 548.571v-73.143c0-20-16.571-36.571-36.571-36.571h-146.286v-146.286c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v146.286h-146.286c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h146.286v146.286c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571v-146.286h146.286c20 0 36.571-16.571 36.571-36.571zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["plus-circle"],"defaultCode":61525,"grid":14},{"paths":["M694.857 548.571v-73.143c0-20-16.571-36.571-36.571-36.571h-438.857c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h438.857c20 0 36.571-16.571 36.571-36.571zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["minus-circle"],"defaultCode":61526,"grid":14},{"paths":["M656.571 641.143c0-9.714-4-18.857-10.857-25.714l-103.429-103.429 103.429-103.429c6.857-6.857 10.857-16 10.857-25.714s-4-19.429-10.857-26.286l-51.429-51.429c-6.857-6.857-16.571-10.857-26.286-10.857s-18.857 4-25.714 10.857l-103.429 103.429-103.429-103.429c-6.857-6.857-16-10.857-25.714-10.857s-19.429 4-26.286 10.857l-51.429 51.429c-6.857 6.857-10.857 16.571-10.857 26.286s4 18.857 10.857 25.714l103.429 103.429-103.429 103.429c-6.857 6.857-10.857 16-10.857 25.714s4 19.429 10.857 26.286l51.429 51.429c6.857 6.857 16.571 10.857 26.286 10.857s18.857-4 25.714-10.857l103.429-103.429 103.429 103.429c6.857 6.857 16 10.857 25.714 10.857s19.429-4 26.286-10.857l51.429-51.429c6.857-6.857 10.857-16.571 10.857-26.286zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["times-circle"],"defaultCode":61527,"grid":14},{"paths":["M733.714 419.429c0-9.714-3.429-19.429-10.286-26.286l-52-51.429c-6.857-6.857-16-10.857-25.714-10.857s-18.857 4-25.714 10.857l-233.143 232.571-129.143-129.143c-6.857-6.857-16-10.857-25.714-10.857s-18.857 4-25.714 10.857l-52 51.429c-6.857 6.857-10.286 16.571-10.286 26.286s3.429 18.857 10.286 25.714l206.857 206.857c6.857 6.857 16.571 10.857 25.714 10.857 9.714 0 19.429-4 26.286-10.857l310.286-310.286c6.857-6.857 10.286-16 10.286-25.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["check-circle"],"defaultCode":61528,"grid":14},{"paths":["M512 786.286v-109.714c0-10.286-8-18.286-18.286-18.286h-109.714c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h109.714c10.286 0 18.286-8 18.286-18.286zM658.286 402.286c0-104.571-109.714-182.857-208-182.857-93.143 0-162.857 40-212 121.714-5.143 8-2.857 18.286 4.571 24l75.429 57.143c2.857 2.286 6.857 3.429 10.857 3.429 5.143 0 10.857-2.286 14.286-6.857 26.857-34.286 38.286-44.571 49.143-52.571 9.714-6.857 28.571-13.714 49.143-13.714 36.571 0 70.286 23.429 70.286 48.571 0 29.714-15.429 44.571-50.286 60.571-40.571 18.286-96 65.714-96 121.143v20.571c0 10.286 8 18.286 18.286 18.286h109.714c10.286 0 18.286-8 18.286-18.286v0c0-13.143 16.571-41.143 43.429-56.571 43.429-24.571 102.857-57.714 102.857-144.571zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["question-circle"],"defaultCode":61529,"grid":14},{"paths":["M585.143 786.286v-91.429c0-10.286-8-18.286-18.286-18.286h-54.857v-292.571c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v91.429c0 10.286 8 18.286 18.286 18.286h54.857v182.857h-54.857c-10.286 0-18.286 8-18.286 18.286v91.429c0 10.286 8 18.286 18.286 18.286h256c10.286 0 18.286-8 18.286-18.286zM512 274.286v-91.429c0-10.286-8-18.286-18.286-18.286h-109.714c-10.286 0-18.286 8-18.286 18.286v91.429c0 10.286 8 18.286 18.286 18.286h109.714c10.286 0 18.286-8 18.286-18.286zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["info-circle"],"defaultCode":61530,"grid":14},{"paths":["M684 585.143h-62.286c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h62.286c-24.571-82.286-89.714-147.429-172-172v62.286c0 20-16.571 36.571-36.571 36.571h-73.143c-20 0-36.571-16.571-36.571-36.571v-62.286c-82.286 24.571-147.429 89.714-172 172h62.286c20 0 36.571 16.571 36.571 36.571v73.143c0 20-16.571 36.571-36.571 36.571h-62.286c24.571 82.286 89.714 147.429 172 172v-62.286c0-20 16.571-36.571 36.571-36.571h73.143c20 0 36.571 16.571 36.571 36.571v62.286c82.286-24.571 147.429-89.714 172-172zM877.714 475.429v73.143c0 20-16.571 36.571-36.571 36.571h-81.714c-28 122.857-124.571 219.429-247.429 247.429v81.714c0 20-16.571 36.571-36.571 36.571h-73.143c-20 0-36.571-16.571-36.571-36.571v-81.714c-122.857-28-219.429-124.571-247.429-247.429h-81.714c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h81.714c28-122.857 124.571-219.429 247.429-247.429v-81.714c0-20 16.571-36.571 36.571-36.571h73.143c20 0 36.571 16.571 36.571 36.571v81.714c122.857 28 219.429 124.571 247.429 247.429h81.714c20 0 36.571 16.571 36.571 36.571z"],"width":877.7142857142857,"tags":["crosshairs"],"defaultCode":61531,"grid":14},{"paths":["M626.857 616.571l-83.429 83.429c-7.429 7.429-18.857 7.429-26.286 0l-78.286-78.286-78.286 78.286c-7.429 7.429-18.857 7.429-26.286 0l-83.429-83.429c-7.429-7.429-7.429-18.857 0-26.286l78.286-78.286-78.286-78.286c-7.429-7.429-7.429-18.857 0-26.286l83.429-83.429c7.429-7.429 18.857-7.429 26.286 0l78.286 78.286 78.286-78.286c7.429-7.429 18.857-7.429 26.286 0l83.429 83.429c7.429 7.429 7.429 18.857 0 26.286l-78.286 78.286 78.286 78.286c7.429 7.429 7.429 18.857 0 26.286zM749.714 512c0-171.429-139.429-310.857-310.857-310.857s-310.857 139.429-310.857 310.857 139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["times-circle-o"],"defaultCode":61532,"grid":14},{"paths":["M669.143 464.571l-241.143 241.143c-14.286 14.286-37.143 14.286-51.429 0l-168-168c-14.286-14.286-14.286-37.143 0-51.429l58.286-58.286c14.286-14.286 37.143-14.286 51.429 0l84 84 157.143-157.143c14.286-14.286 37.143-14.286 51.429 0l58.286 58.286c14.286 14.286 14.286 37.143 0 51.429zM749.714 512c0-171.429-139.429-310.857-310.857-310.857s-310.857 139.429-310.857 310.857 139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["check-circle-o"],"defaultCode":61533,"grid":14},{"paths":["M749.714 510.286c0-62.286-18.286-120-49.714-168.571l-430.857 430.286c49.143 32 107.429 50.857 169.714 50.857 171.429 0 310.857-140 310.857-312.571zM178.857 681.143l431.429-430.857c-49.143-33.143-108-52-171.429-52-171.429 0-310.857 140-310.857 312 0 63.429 18.857 121.714 50.857 170.857zM877.714 510.286c0 243.429-196.571 440.571-438.857 440.571s-438.857-197.143-438.857-440.571c0-242.857 196.571-440 438.857-440s438.857 197.143 438.857 440z"],"width":877.7142857142857,"tags":["ban"],"defaultCode":61534,"grid":14},{"paths":["M877.714 512v73.143c0 38.857-25.714 73.143-66.857 73.143h-402.286l167.429 168c13.714 13.143 21.714 32 21.714 51.429s-8 38.286-21.714 51.429l-42.857 43.429c-13.143 13.143-32 21.143-51.429 21.143s-38.286-8-52-21.143l-372-372.571c-13.143-13.143-21.143-32-21.143-51.429s8-38.286 21.143-52l372-371.429c13.714-13.714 32.571-21.714 52-21.714s37.714 8 51.429 21.714l42.857 42.286c13.714 13.714 21.714 32.571 21.714 52s-8 38.286-21.714 52l-167.429 167.429h402.286c41.143 0 66.857 34.286 66.857 73.143z"],"width":914.2857142857142,"tags":["arrow-left"],"defaultCode":61536,"grid":14},{"paths":["M841.143 548.571c0 19.429-7.429 38.286-21.143 52l-372 372c-13.714 13.143-32.571 21.143-52 21.143s-37.714-8-51.429-21.143l-42.857-42.857c-13.714-13.714-21.714-32.571-21.714-52s8-38.286 21.714-52l167.429-167.429h-402.286c-41.143 0-66.857-34.286-66.857-73.143v-73.143c0-38.857 25.714-73.143 66.857-73.143h402.286l-167.429-168c-13.714-13.143-21.714-32-21.714-51.429s8-38.286 21.714-51.429l42.857-42.857c13.714-13.714 32-21.714 51.429-21.714s38.286 8 52 21.714l372 372c13.714 13.143 21.143 32 21.143 51.429z"],"width":841.1428571428571,"tags":["arrow-right"],"defaultCode":61537,"grid":14},{"paths":["M920.571 554.857c0 19.429-8 37.714-21.143 51.429l-42.857 42.857c-13.714 13.714-32.571 21.714-52 21.714s-38.286-8-51.429-21.714l-168-167.429v402.286c0 41.143-34.286 66.857-73.143 66.857h-73.143c-38.857 0-73.143-25.714-73.143-66.857v-402.286l-168 167.429c-13.143 13.714-32 21.714-51.429 21.714s-38.286-8-51.429-21.714l-42.857-42.857c-13.714-13.714-21.714-32-21.714-51.429s8-38.286 21.714-52l372-372c13.143-13.714 32-21.143 51.429-21.143s38.286 7.429 52 21.143l372 372c13.143 13.714 21.143 32.571 21.143 52z"],"width":950.8571428571428,"tags":["arrow-up"],"defaultCode":61538,"grid":14},{"paths":["M920.571 475.429c0 19.429-8 38.286-21.143 51.429l-372 372.571c-13.714 13.143-32.571 21.143-52 21.143s-38.286-8-51.429-21.143l-372-372.571c-13.714-13.143-21.714-32-21.714-51.429s8-38.286 21.714-52l42.286-42.857c13.714-13.143 32.571-21.143 52-21.143s38.286 8 51.429 21.143l168 168v-402.286c0-40 33.143-73.143 73.143-73.143h73.143c40 0 73.143 33.143 73.143 73.143v402.286l168-168c13.143-13.143 32-21.143 51.429-21.143s38.286 8 52 21.143l42.857 42.857c13.143 13.714 21.143 32.571 21.143 52z"],"width":950.8571428571428,"tags":["arrow-down"],"defaultCode":61539,"grid":14},{"paths":["M1024 365.714c0 9.714-4 18.857-10.857 25.714l-292.571 292.571c-6.857 6.857-16 10.857-25.714 10.857-20 0-36.571-16.571-36.571-36.571v-146.286h-128c-246.286 0-408 47.429-408 320 0 23.429 1.143 46.857 2.857 70.286 0.571 9.143 2.857 19.429 2.857 28.571 0 10.857-6.857 20-18.286 20-8 0-12-4-16-9.714-8.571-12-14.857-30.286-21.143-43.429-32.571-73.143-72.571-177.714-72.571-257.714 0-64 6.286-129.714 30.286-190.286 79.429-197.143 312.571-230.286 500-230.286h128v-146.286c0-20 16.571-36.571 36.571-36.571 9.714 0 18.857 4 25.714 10.857l292.571 292.571c6.857 6.857 10.857 16 10.857 25.714z"],"width":1024,"tags":["mail-forward","share"],"defaultCode":61540,"grid":14},{"paths":["M431.429 603.429c0 4.571-2.286 9.714-5.714 13.143l-189.714 189.714 82.286 82.286c6.857 6.857 10.857 16 10.857 25.714 0 20-16.571 36.571-36.571 36.571h-256c-20 0-36.571-16.571-36.571-36.571v-256c0-20 16.571-36.571 36.571-36.571 9.714 0 18.857 4 25.714 10.857l82.286 82.286 189.714-189.714c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l65.143 65.143c3.429 3.429 5.714 8.571 5.714 13.143zM877.714 109.714v256c0 20-16.571 36.571-36.571 36.571-9.714 0-18.857-4-25.714-10.857l-82.286-82.286-189.714 189.714c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-65.143-65.143c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l189.714-189.714-82.286-82.286c-6.857-6.857-10.857-16-10.857-25.714 0-20 16.571-36.571 36.571-36.571h256c20 0 36.571 16.571 36.571 36.571z"],"width":877.7142857142857,"tags":["expand"],"defaultCode":61541,"grid":14},{"paths":["M438.857 548.571v256c0 20-16.571 36.571-36.571 36.571-9.714 0-18.857-4-25.714-10.857l-82.286-82.286-189.714 189.714c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-65.143-65.143c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l189.714-189.714-82.286-82.286c-6.857-6.857-10.857-16-10.857-25.714 0-20 16.571-36.571 36.571-36.571h256c20 0 36.571 16.571 36.571 36.571zM870.286 164.571c0 4.571-2.286 9.714-5.714 13.143l-189.714 189.714 82.286 82.286c6.857 6.857 10.857 16 10.857 25.714 0 20-16.571 36.571-36.571 36.571h-256c-20 0-36.571-16.571-36.571-36.571v-256c0-20 16.571-36.571 36.571-36.571 9.714 0 18.857 4 25.714 10.857l82.286 82.286 189.714-189.714c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l65.143 65.143c3.429 3.429 5.714 8.571 5.714 13.143z"],"width":877.7142857142857,"tags":["compress"],"defaultCode":61542,"grid":14},{"paths":["M438.857 73.143c242.286 0 438.857 196.571 438.857 438.857s-196.571 438.857-438.857 438.857-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857zM512 785.714v-108.571c0-10.286-8-18.857-17.714-18.857h-109.714c-10.286 0-18.857 8.571-18.857 18.857v108.571c0 10.286 8.571 18.857 18.857 18.857h109.714c9.714 0 17.714-8.571 17.714-18.857zM510.857 589.143l10.286-354.857c0-4-1.714-8-5.714-10.286-3.429-2.857-8.571-4.571-13.714-4.571h-125.714c-5.143 0-10.286 1.714-13.714 4.571-4 2.286-5.714 6.286-5.714 10.286l9.714 354.857c0 8 8.571 14.286 19.429 14.286h105.714c10.286 0 18.857-6.286 19.429-14.286z"],"width":877.7142857142857,"tags":["exclamation-circle"],"defaultCode":61546,"grid":14},{"paths":["M530.286 774.857v-409.143h-182.857v409.143c0 20 16.571 29.714 36.571 29.714h109.714c20 0 36.571-9.714 36.571-29.714zM269.714 292.571h111.429l-72-92c-6.286-7.429-20-17.714-39.429-17.714-30.286 0-54.857 24.571-54.857 54.857s24.571 54.857 54.857 54.857zM662.857 237.714c0-30.286-24.571-54.857-54.857-54.857-19.429 0-33.143 10.286-39.429 17.714l-71.429 92h110.857c30.286 0 54.857-24.571 54.857-54.857zM877.714 384v182.857c0 10.286-8 18.286-18.286 18.286h-54.857v237.714c0 30.286-24.571 54.857-54.857 54.857h-621.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-54.857c-10.286 0-18.286-8-18.286-18.286v-182.857c0-10.286 8-18.286 18.286-18.286h251.429c-70.857 0-128-57.143-128-128s57.143-128 128-128c38.286 0 73.714 16 96 44l73.143 94.286 73.143-94.286c22.286-28 57.714-44 96-44 70.857 0 128 57.143 128 128s-57.143 128-128 128h251.429c10.286 0 18.286 8 18.286 18.286z"],"width":877.7142857142857,"tags":["gift"],"defaultCode":61547,"grid":14},{"paths":["M731.429 402.286c0-20-16.571-36.571-36.571-36.571-202.286 0-332.571 84.571-464.571 230.286-6.857 7.429-10.857 15.429-10.857 25.714 0 20 16.571 36.571 36.571 36.571 10.286 0 18.286-4 25.714-10.857 28-25.143 53.143-52.571 80.571-78.286 103.429-93.143 192-130.286 332.571-130.286 20 0 36.571-16.571 36.571-36.571zM1024 289.143c0 36.571-4 73.714-11.429 110.286-36.571 177.714-150.857 293.143-309.714 372-77.143 38.857-163.429 61.714-250.286 61.714-54.857 0-111.429-9.143-163.429-26.857-27.429-9.143-82.286-45.143-105.143-45.143-28.571 0-62.857 116.571-112.571 116.571-36 0-46.857-17.714-62.286-44-5.143-9.714-9.143-13.143-9.143-25.143 0-59.429 113.143-105.714 113.143-138.857 0-5.143-14.857-35.429-17.143-46.857-3.429-19.429-5.143-39.429-5.143-59.429 0-181.714 144.571-311.429 306.857-365.143 117.143-38.857 366.286 6.286 445.714-69.143 31.429-29.143 46.857-56 94.857-56 64.571 0 85.714 167.429 85.714 216z"],"width":1024,"tags":["leaf"],"defaultCode":61548,"grid":14},{"paths":["M804.571 969.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-768c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h768c9.714 0 18.286 8.571 18.286 18.286zM658.286 365.714c0 218.857-256 238.286-256 384 0 40 20 93.143 38.286 128l-2.286-0.571 0.571 0.571c-157.714-72.571-292.571-172.571-292.571-365.714 0-218.857 256-238.286 256-384 0-40-20-93.143-37.714-128l1.714 0.571-0.571-0.571c157.714 72.571 292.571 172.571 292.571 365.714z"],"width":804.5714285714286,"tags":["fire"],"defaultCode":61549,"grid":14},{"paths":["M950.857 548.571c-54.286-84-128.571-156-217.714-201.714 22.857 38.857 34.857 83.429 34.857 128.571 0 141.143-114.857 256-256 256s-256-114.857-256-256c0-45.143 12-89.714 34.857-128.571-89.143 45.714-163.429 117.714-217.714 201.714 97.714 150.857 255.429 256 438.857 256s341.143-105.143 438.857-256zM539.429 329.143c0-14.857-12.571-27.429-27.429-27.429-95.429 0-173.714 78.286-173.714 173.714 0 14.857 12.571 27.429 27.429 27.429s27.429-12.571 27.429-27.429c0-65.143 53.714-118.857 118.857-118.857 14.857 0 27.429-12.571 27.429-27.429zM1024 548.571c0 14.286-4.571 27.429-11.429 39.429-105.143 173.143-297.714 289.714-500.571 289.714s-395.429-117.143-500.571-289.714c-6.857-12-11.429-25.143-11.429-39.429s4.571-27.429 11.429-39.429c105.143-172.571 297.714-289.714 500.571-289.714s395.429 117.143 500.571 289.714c6.857 12 11.429 25.143 11.429 39.429z"],"width":1024,"tags":["eye"],"defaultCode":61550,"grid":14},{"paths":["M317.143 762.857l44.571-80.571c-66.286-48-105.714-125.143-105.714-206.857 0-45.143 12-89.714 34.857-128.571-89.143 45.714-163.429 117.714-217.714 201.714 59.429 92 143.429 169.143 244 214.286zM539.429 329.143c0-14.857-12.571-27.429-27.429-27.429-95.429 0-173.714 78.286-173.714 173.714 0 14.857 12.571 27.429 27.429 27.429s27.429-12.571 27.429-27.429c0-65.714 53.714-118.857 118.857-118.857 14.857 0 27.429-12.571 27.429-27.429zM746.857 220c0 1.143 0 4-0.571 5.143-120.571 215.429-240 432-360.571 647.429l-28 50.857c-3.429 5.714-9.714 9.143-16 9.143-10.286 0-64.571-33.143-76.571-40-5.714-3.429-9.143-9.143-9.143-16 0-9.143 19.429-40 25.143-49.714-110.857-50.286-204-136-269.714-238.857-7.429-11.429-11.429-25.143-11.429-39.429 0-13.714 4-28 11.429-39.429 113.143-173.714 289.714-289.714 500.571-289.714 34.286 0 69.143 3.429 102.857 9.714l30.857-55.429c3.429-5.714 9.143-9.143 16-9.143 10.286 0 64 33.143 76 40 5.714 3.429 9.143 9.143 9.143 15.429zM768 475.429c0 106.286-65.714 201.143-164.571 238.857l160-286.857c2.857 16 4.571 32 4.571 48zM1024 548.571c0 14.857-4 26.857-11.429 39.429-17.714 29.143-40 57.143-62.286 82.857-112 128.571-266.286 206.857-438.286 206.857l42.286-75.429c166.286-14.286 307.429-115.429 396.571-253.714-42.286-65.714-96.571-123.429-161.143-168l36-64c70.857 47.429 142.286 118.857 186.857 192.571 7.429 12.571 11.429 24.571 11.429 39.429z"],"width":1024,"tags":["eye-slash"],"defaultCode":61552,"grid":14},{"paths":["M585.143 785.714v-108.571c0-10.286-8-18.857-18.286-18.857h-109.714c-10.286 0-18.286 8.571-18.286 18.857v108.571c0 10.286 8 18.857 18.286 18.857h109.714c10.286 0 18.286-8.571 18.286-18.857zM584 572l10.286-262.286c0-3.429-1.714-8-5.714-10.857-3.429-2.857-8.571-6.286-13.714-6.286h-125.714c-5.143 0-10.286 3.429-13.714 6.286-4 2.857-5.714 8.571-5.714 12l9.714 261.143c0 7.429 8.571 13.143 19.429 13.143h105.714c10.286 0 18.857-5.714 19.429-13.143zM576 38.286l438.857 804.571c12.571 22.286 12 49.714-1.143 72s-37.143 36-62.857 36h-877.714c-25.714 0-49.714-13.714-62.857-36s-13.714-49.714-1.143-72l438.857-804.571c12.571-23.429 37.143-38.286 64-38.286s51.429 14.857 64 38.286z"],"width":1024,"tags":["exclamation-triangle","warning"],"defaultCode":61553,"grid":14},{"paths":["M786.286 91.429c36.571 36.571 0 128-54.857 182.857l-92 92 91.429 397.714c1.714 6.857-1.143 14.286-6.857 18.857l-73.143 54.857c-2.857 2.286-6.857 3.429-10.857 3.429-1.143 0-2.286 0-4-0.571-5.143-1.143-9.714-4-12-9.143l-159.429-290.286-148 148 30.286 110.857c1.714 6.286 0 12.571-4.571 17.714l-54.857 54.857c-3.429 3.429-8.571 5.143-13.143 5.143h-1.143c-5.714-0.571-10.286-2.857-13.714-7.429l-108-144-144-108c-4.571-2.857-6.857-8-7.429-13.143s1.714-10.286 5.143-14.286l54.857-55.429c3.429-3.429 8.571-5.143 13.143-5.143 1.714 0 3.429 0 4.571 0.571l110.857 30.286 148-148-290.286-159.429c-5.143-2.857-8.571-8-9.714-13.714-0.571-5.143 1.143-11.429 5.143-15.429l73.143-73.143c4.571-4 11.429-6.286 17.143-4.571l380 90.857 91.429-91.429c54.857-54.857 146.286-91.429 182.857-54.857z"],"width":822.272,"tags":["plane"],"defaultCode":61554,"grid":14},{"paths":["M73.143 950.857h164.571v-164.571h-164.571v164.571zM274.286 950.857h182.857v-164.571h-182.857v164.571zM73.143 749.714h164.571v-182.857h-164.571v182.857zM274.286 749.714h182.857v-182.857h-182.857v182.857zM73.143 530.286h164.571v-164.571h-164.571v164.571zM493.714 950.857h182.857v-164.571h-182.857v164.571zM274.286 530.286h182.857v-164.571h-182.857v164.571zM713.143 950.857h164.571v-164.571h-164.571v164.571zM493.714 749.714h182.857v-182.857h-182.857v182.857zM292.571 256v-164.571c0-9.714-8.571-18.286-18.286-18.286h-36.571c-9.714 0-18.286 8.571-18.286 18.286v164.571c0 9.714 8.571 18.286 18.286 18.286h36.571c9.714 0 18.286-8.571 18.286-18.286zM713.143 749.714h164.571v-182.857h-164.571v182.857zM493.714 530.286h182.857v-164.571h-182.857v164.571zM713.143 530.286h164.571v-164.571h-164.571v164.571zM731.429 256v-164.571c0-9.714-8.571-18.286-18.286-18.286h-36.571c-9.714 0-18.286 8.571-18.286 18.286v164.571c0 9.714 8.571 18.286 18.286 18.286h36.571c9.714 0 18.286-8.571 18.286-18.286zM950.857 219.429v731.429c0 40-33.143 73.143-73.143 73.143h-804.571c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h73.143v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h219.429v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h73.143c40 0 73.143 33.143 73.143 73.143z"],"width":950.8571428571428,"tags":["calendar"],"defaultCode":61555,"grid":14},{"paths":["M380.571 274.857c-32 49.143-55.429 102.286-78.286 156-33.143-69.143-69.714-138.286-156-138.286h-128c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h128c101.714 0 176.571 47.429 234.286 128.571zM1024 731.429c0 4.571-1.714 9.714-5.143 13.143l-182.857 182.857c-3.429 3.429-8.571 5.143-13.143 5.143-9.714 0-18.286-8.571-18.286-18.286v-109.714c-169.714 0-274.286 20-380-128.571 31.429-49.143 54.857-102.286 77.714-156 33.143 69.143 69.714 138.286 156 138.286h146.286v-109.714c0-10.286 8-18.286 18.286-18.286 5.143 0 9.714 2.286 13.714 5.714l182.286 182.286c3.429 3.429 5.143 8.571 5.143 13.143zM1024 219.429c0 4.571-1.714 9.714-5.143 13.143l-182.857 182.857c-3.429 3.429-8.571 5.143-13.143 5.143-9.714 0-18.286-8-18.286-18.286v-109.714h-146.286c-76 0-112 52-144 113.714-16.571 32-30.857 65.143-44.571 97.714-63.429 147.429-137.714 300.571-323.429 300.571h-128c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h128c76 0 112-52 144-113.714 16.571-32 30.857-65.143 44.571-97.714 63.429-147.429 137.714-300.571 323.429-300.571h146.286v-109.714c0-10.286 8-18.286 18.286-18.286 5.143 0 9.714 2.286 13.714 5.714l182.286 182.286c3.429 3.429 5.143 8.571 5.143 13.143z"],"width":1024,"tags":["random"],"defaultCode":61556,"grid":14},{"paths":["M1024 512c0 202.286-229.143 365.714-512 365.714-28 0-56-1.714-82.857-4.571-74.857 66.286-164 113.143-262.857 138.286-20.571 5.714-42.857 9.714-65.143 12.571-12.571 1.143-24.571-8-27.429-21.714v-0.571c-2.857-14.286 6.857-22.857 15.429-33.143 36-40.571 77.143-74.857 104-170.286-117.714-66.857-193.143-170.286-193.143-286.286 0-201.714 229.143-365.714 512-365.714s512 163.429 512 365.714z"],"width":1024,"tags":["comment"],"defaultCode":61557,"grid":14},{"paths":["M877.714 475.429v73.143c0 233.143-184.571 402.286-438.857 402.286s-438.857-169.143-438.857-402.286v-73.143c0-20 16.571-36.571 36.571-36.571h219.429c20 0 36.571 16.571 36.571 36.571v73.143c0 104.571 121.714 109.714 146.286 109.714s146.286-5.143 146.286-109.714v-73.143c0-20 16.571-36.571 36.571-36.571h219.429c20 0 36.571 16.571 36.571 36.571zM292.571 109.714v219.429c0 20-16.571 36.571-36.571 36.571h-219.429c-20 0-36.571-16.571-36.571-36.571v-219.429c0-20 16.571-36.571 36.571-36.571h219.429c20 0 36.571 16.571 36.571 36.571zM877.714 109.714v219.429c0 20-16.571 36.571-36.571 36.571h-219.429c-20 0-36.571-16.571-36.571-36.571v-219.429c0-20 16.571-36.571 36.571-36.571h219.429c20 0 36.571 16.571 36.571 36.571z"],"width":877.7142857142857,"tags":["magnet"],"defaultCode":61558,"grid":14},{"paths":["M961.714 760.571l-94.857 94.286c-14.286 14.286-37.143 14.286-51.429 0l-303.429-303.429-303.429 303.429c-14.286 14.286-37.143 14.286-51.429 0l-94.857-94.286c-14.286-14.286-14.286-37.714 0-52l424-423.429c14.286-14.286 37.143-14.286 51.429 0l424 423.429c14.286 14.286 14.286 37.714 0 52z"],"width":1024,"tags":["chevron-up"],"defaultCode":61559,"grid":14},{"paths":["M961.714 461.714l-424 423.429c-14.286 14.286-37.143 14.286-51.429 0l-424-423.429c-14.286-14.286-14.286-37.714 0-52l94.857-94.286c14.286-14.286 37.143-14.286 51.429 0l303.429 303.429 303.429-303.429c14.286-14.286 37.143-14.286 51.429 0l94.857 94.286c14.286 14.286 14.286 37.714 0 52z"],"width":1024,"tags":["chevron-down"],"defaultCode":61560,"grid":14},{"paths":["M731.429 859.429c0 9.714-8.571 18.286-18.286 18.286h-548.571c-21.143 0-18.286-22.286-18.286-36.571v-329.143h-109.714c-20 0-36.571-16.571-36.571-36.571 0-8.571 2.857-17.143 8.571-23.429l182.857-219.429c6.857-8 17.143-12.571 28-12.571s21.143 4.571 28 12.571l182.857 219.429c5.714 6.286 8.571 14.857 8.571 23.429 0 20-16.571 36.571-36.571 36.571h-109.714v219.429h329.143c5.143 0 10.857 2.286 14.286 6.286l91.429 109.714c2.286 3.429 4 8 4 12zM1097.143 621.714c0 8.571-2.857 17.143-8.571 23.429l-182.857 219.429c-6.857 8-17.143 13.143-28 13.143s-21.143-5.143-28-13.143l-182.857-219.429c-5.714-6.286-8.571-14.857-8.571-23.429 0-20 16.571-36.571 36.571-36.571h109.714v-219.429h-329.143c-5.143 0-10.857-2.286-14.286-6.857l-91.429-109.714c-2.286-2.857-4-7.429-4-11.429 0-9.714 8.571-18.286 18.286-18.286h548.571c21.143 0 18.286 22.286 18.286 36.571v329.143h109.714c20 0 36.571 16.571 36.571 36.571z"],"width":1097.142857142857,"tags":["retweet"],"defaultCode":61561,"grid":14},{"paths":["M365.714 877.714c0 40-33.143 73.143-73.143 73.143s-73.143-33.143-73.143-73.143 33.143-73.143 73.143-73.143 73.143 33.143 73.143 73.143zM877.714 877.714c0 40-33.143 73.143-73.143 73.143s-73.143-33.143-73.143-73.143 33.143-73.143 73.143-73.143 73.143 33.143 73.143 73.143zM950.857 256v292.571c0 18.286-14.286 34.286-32.571 36.571l-596.571 69.714c2.857 13.143 7.429 26.286 7.429 40 0 13.143-8 25.143-13.714 36.571h525.714c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571h-585.143c-20 0-36.571-16.571-36.571-36.571 0-17.714 25.714-60.571 34.857-78.286l-101.143-470.286h-116.571c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h146.286c38.286 0 39.429 45.714 45.143 73.143h686.286c20 0 36.571 16.571 36.571 36.571z"],"width":950.8571428571428,"tags":["shopping-cart"],"defaultCode":61562,"grid":14},{"paths":["M950.857 347.429v402.286c0 70.286-57.714 128-128 128h-694.857c-70.286 0-128-57.714-128-128v-548.571c0-70.286 57.714-128 128-128h182.857c70.286 0 128 57.714 128 128v18.286h384c70.286 0 128 57.714 128 128z"],"width":950.8571428571428,"tags":["folder"],"defaultCode":61563,"grid":14},{"paths":["M1073.714 544c0 13.714-8.571 27.429-17.714 37.714l-192 226.286c-33.143 38.857-100.571 69.714-150.857 69.714h-621.714c-20.571 0-49.714-6.286-49.714-32 0-13.714 8.571-27.429 17.714-37.714l192-226.286c33.143-38.857 100.571-69.714 150.857-69.714h621.714c20.571 0 49.714 6.286 49.714 32zM877.714 347.429v91.429h-475.429c-71.429 0-160 40.571-206.286 95.429l-195.429 229.714c0-4.571-0.571-9.714-0.571-14.286v-548.571c0-70.286 57.714-128 128-128h182.857c70.286 0 128 57.714 128 128v18.286h310.857c70.286 0 128 57.714 128 128z"],"width":1073.7371428571428,"tags":["folder-open"],"defaultCode":61564,"grid":14},{"paths":["M402.286 182.857c0 20-16.571 36.571-36.571 36.571h-73.143v585.143h73.143c20 0 36.571 16.571 36.571 36.571 0 9.714-4 18.857-10.857 25.714l-146.286 146.286c-6.857 6.857-16 10.857-25.714 10.857s-18.857-4-25.714-10.857l-146.286-146.286c-6.857-6.857-10.857-16-10.857-25.714 0-20 16.571-36.571 36.571-36.571h73.143v-585.143h-73.143c-20 0-36.571-16.571-36.571-36.571 0-9.714 4-18.857 10.857-25.714l146.286-146.286c6.857-6.857 16-10.857 25.714-10.857s18.857 4 25.714 10.857l146.286 146.286c6.857 6.857 10.857 16 10.857 25.714z"],"width":438.85714285714283,"tags":["arrows-v"],"defaultCode":61565,"grid":14},{"paths":["M1024 512c0 9.714-4 18.857-10.857 25.714l-146.286 146.286c-6.857 6.857-16 10.857-25.714 10.857-20 0-36.571-16.571-36.571-36.571v-73.143h-585.143v73.143c0 20-16.571 36.571-36.571 36.571-9.714 0-18.857-4-25.714-10.857l-146.286-146.286c-6.857-6.857-10.857-16-10.857-25.714s4-18.857 10.857-25.714l146.286-146.286c6.857-6.857 16-10.857 25.714-10.857 20 0 36.571 16.571 36.571 36.571v73.143h585.143v-73.143c0-20 16.571-36.571 36.571-36.571 9.714 0 18.857 4 25.714 10.857l146.286 146.286c6.857 6.857 10.857 16 10.857 25.714z"],"width":1024,"tags":["arrows-h"],"defaultCode":61566,"grid":14},{"paths":["M365.714 512v292.571h-146.286v-292.571h146.286zM585.143 219.429v585.143h-146.286v-585.143h146.286zM1170.286 877.714v73.143h-1170.286v-877.714h73.143v804.571h1097.143zM804.571 365.714v438.857h-146.286v-438.857h146.286zM1024 146.286v658.286h-146.286v-658.286h146.286z"],"width":1170.2857142857142,"tags":["bar-chart","bar-chart-o"],"defaultCode":61568,"grid":14},{"paths":["M731.429 348.571c-21.714 9.714-44.571 16-69.143 19.429 25.143-14.857 44-38.857 53.143-66.857-23.429 13.714-49.143 24-76.571 29.143-21.714-23.429-53.143-37.714-87.429-37.714-66.286 0-120 53.714-120 120 0 9.143 0.571 18.857 2.857 27.429-100-5.143-188.571-52.571-248-125.714-10.286 17.714-16.571 38.857-16.571 60.571 0 41.714 19.429 78.286 52 100-20-0.571-38.857-6.286-57.143-14.857v1.143c0 58.286 44 106.857 98.857 117.714-10.286 2.857-18.286 4.571-29.143 4.571-7.429 0-14.857-1.143-22.286-2.286 15.429 47.429 59.429 82.286 112 83.429-41.143 32-92.571 51.429-149.143 51.429-9.714 0-19.429-0.571-28.571-1.714 53.143 33.714 116 53.714 184 53.714 220.571 0 341.714-182.857 341.714-341.714 0-5.143 0-10.286-0.571-15.429 23.429-16.571 44-37.714 60-62.286zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["twitter-square"],"defaultCode":61569,"grid":14},{"paths":["M713.143 73.143c90.857 0 164.571 73.714 164.571 164.571v548.571c0 90.857-73.714 164.571-164.571 164.571h-107.429v-340h113.714l17.143-132.571h-130.857v-84.571c0-38.286 10.286-64 65.714-64l69.714-0.571v-118.286c-12-1.714-53.714-5.143-101.714-5.143-101.143 0-170.857 61.714-170.857 174.857v97.714h-114.286v132.571h114.286v340h-304c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571z"],"width":877.7142857142857,"tags":["facebook-square"],"defaultCode":61570,"grid":14},{"paths":["M530.286 475.429c0-10.286-8-18.286-18.286-18.286-50.286 0-91.429 41.143-91.429 91.429 0 10.286 8 18.286 18.286 18.286s18.286-8 18.286-18.286c0-30.286 24.571-54.857 54.857-54.857 10.286 0 18.286-8 18.286-18.286zM658.286 549.714c0 80.571-65.714 146.286-146.286 146.286s-146.286-65.714-146.286-146.286 65.714-146.286 146.286-146.286 146.286 65.714 146.286 146.286zM73.143 877.714h877.714v-73.143h-877.714v73.143zM731.429 549.714c0-121.143-98.286-219.429-219.429-219.429s-219.429 98.286-219.429 219.429 98.286 219.429 219.429 219.429 219.429-98.286 219.429-219.429zM146.286 182.857h219.429v-73.143h-219.429v73.143zM73.143 292.571h877.714v-146.286h-473.143l-36.571 73.143h-368v73.143zM1024 146.286v731.429c0 40.571-32.571 73.143-73.143 73.143h-877.714c-40.571 0-73.143-32.571-73.143-73.143v-731.429c0-40.571 32.571-73.143 73.143-73.143h877.714c40.571 0 73.143 32.571 73.143 73.143z"],"width":1024,"tags":["camera-retro"],"defaultCode":61571,"grid":14},{"paths":["M475.429 292.571c0-60.571-49.143-109.714-109.714-109.714s-109.714 49.143-109.714 109.714c0 16.571 4 32.571 10.857 47.429-14.857-6.857-30.857-10.857-47.429-10.857-60.571 0-109.714 49.143-109.714 109.714s49.143 109.714 109.714 109.714 109.714-49.143 109.714-109.714c0-16.571-4-32.571-10.857-47.429 14.857 6.857 30.857 10.857 47.429 10.857 60.571 0 109.714-49.143 109.714-109.714zM961.714 694.857c0 13.143-52.571 65.714-65.714 65.714-14.857 0-61.143-53.714-73.143-65.714l-54.857 54.857 125.714 125.714c10.286 10.286 16 24.571 16 38.857 0 32-36.571 68.571-68.571 68.571-14.286 0-28.571-5.714-38.857-16l-383.429-383.429c-60 44.571-133.143 74.857-208.571 74.857-124.571 0-210.286-86.286-210.286-210.286 0-187.429 187.429-374.857 374.857-374.857 124 0 210.286 85.714 210.286 210.286 0 75.429-30.286 148.571-74.857 208.571l202.857 202.857 54.857-54.857c-12-12-65.714-58.286-65.714-73.143 0-13.143 52.571-65.714 65.714-65.714 4.571 0 9.714 2.286 13.143 5.714 21.143 21.143 180.571 171.429 180.571 188z"],"width":961.6822857142856,"tags":["key"],"defaultCode":61572,"grid":14},{"paths":["M512 512c0-80.571-65.714-146.286-146.286-146.286s-146.286 65.714-146.286 146.286 65.714 146.286 146.286 146.286 146.286-65.714 146.286-146.286zM950.857 804.571c0-40-33.143-73.143-73.143-73.143s-73.143 33.143-73.143 73.143c0 40.571 33.143 73.143 73.143 73.143 40.571 0 73.143-33.143 73.143-73.143zM950.857 219.429c0-40-33.143-73.143-73.143-73.143s-73.143 33.143-73.143 73.143c0 40.571 33.143 73.143 73.143 73.143 40.571 0 73.143-33.143 73.143-73.143zM731.429 460v105.714c0 7.429-5.714 16-13.143 17.143l-88.571 13.714c-4.571 14.857-10.857 29.143-18.286 43.429 16 22.857 33.143 44 51.429 65.714 2.286 3.429 4 6.857 4 11.429 0 4-1.143 8-4 10.857-11.429 15.429-75.429 85.143-92 85.143-4.571 0-8.571-1.714-12-4l-65.714-51.429c-14.286 7.429-28.571 13.143-44 17.714-2.857 29.143-5.714 60.571-13.143 88.571-2.286 8-9.143 13.714-17.143 13.714h-106.286c-8 0-16-6.286-17.143-14.286l-13.143-87.429c-14.857-4.571-29.143-10.857-42.857-17.714l-67.429 50.857c-2.857 2.857-7.429 4-11.429 4-4.571 0-8.571-1.714-12-4.571-14.857-13.714-82.286-74.857-82.286-91.429 0-4 1.714-7.429 4-10.857 16.571-21.714 33.714-42.857 50.286-65.143-8-15.429-14.857-30.857-20-46.857l-86.857-13.714c-8-1.143-13.714-8.571-13.714-16.571v-105.714c0-7.429 5.714-16 13.143-17.143l88.571-13.714c4.571-14.857 10.857-29.143 18.286-43.429-16-22.857-33.143-44-51.429-65.714-2.286-3.429-4-7.429-4-11.429s1.143-8 4-11.429c11.429-15.429 75.429-84.571 92-84.571 4.571 0 8.571 1.714 12 4l65.714 51.429c14.286-7.429 28.571-13.143 44-18.286 2.857-28.571 5.714-60 13.143-88 2.286-8 9.143-13.714 17.143-13.714h106.286c8 0 16 6.286 17.143 14.286l13.143 87.429c14.857 4.571 29.143 10.857 42.857 17.714l67.429-50.857c3.429-2.857 7.429-4 11.429-4 4.571 0 8.571 1.714 12 4.571 14.857 13.714 82.286 75.429 82.286 91.429 0 4-1.714 7.429-4 10.857-16.571 22.286-33.714 42.857-49.714 65.143 7.429 15.429 14.286 30.857 19.429 46.857l86.857 13.143c8 1.714 13.714 9.143 13.714 17.143zM1097.143 764.571v80c0 8.571-73.714 16.571-85.143 17.714-4.571 10.857-10.286 20.571-17.143 29.714 5.143 11.429 29.143 68.571 29.143 78.857 0 1.714-0.571 2.857-2.286 4-6.857 4-68 40.571-70.857 40.571-7.429 0-50.286-57.143-56-65.714-5.714 0.571-11.429 1.143-17.143 1.143s-11.429-0.571-17.143-1.143c-5.714 8.571-48.571 65.714-56 65.714-2.857 0-64-36.571-70.857-40.571-1.714-1.143-2.286-2.857-2.286-4 0-9.714 24-67.429 29.143-78.857-6.857-9.143-12.571-18.857-17.143-29.714-11.429-1.143-85.143-9.143-85.143-17.714v-80c0-8.571 73.714-16.571 85.143-17.714 4.571-10.286 10.286-20.571 17.143-29.714-5.143-11.429-29.143-69.143-29.143-78.857 0-1.143 0.571-2.857 2.286-4 6.857-3.429 68-40 70.857-40 7.429 0 50.286 56.571 56 65.143 5.714-0.571 11.429-1.143 17.143-1.143s11.429 0.571 17.143 1.143c16-22.286 33.143-44.571 52.571-64l3.429-1.143c2.857 0 64 36 70.857 40 1.714 1.143 2.286 2.857 2.286 4 0 10.286-24 67.429-29.143 78.857 6.857 9.143 12.571 19.429 17.143 29.714 11.429 1.143 85.143 9.143 85.143 17.714zM1097.143 179.429v80c0 8.571-73.714 16.571-85.143 17.714-4.571 10.857-10.286 20.571-17.143 29.714 5.143 11.429 29.143 68.571 29.143 78.857 0 1.714-0.571 2.857-2.286 4-6.857 4-68 40.571-70.857 40.571-7.429 0-50.286-57.143-56-65.714-5.714 0.571-11.429 1.143-17.143 1.143s-11.429-0.571-17.143-1.143c-5.714 8.571-48.571 65.714-56 65.714-2.857 0-64-36.571-70.857-40.571-1.714-1.143-2.286-2.857-2.286-4 0-9.714 24-67.429 29.143-78.857-6.857-9.143-12.571-18.857-17.143-29.714-11.429-1.143-85.143-9.143-85.143-17.714v-80c0-8.571 73.714-16.571 85.143-17.714 4.571-10.286 10.286-20.571 17.143-29.714-5.143-11.429-29.143-69.143-29.143-78.857 0-1.143 0.571-2.857 2.286-4 6.857-3.429 68-40 70.857-40 7.429 0 50.286 56.571 56 65.143 5.714-0.571 11.429-1.143 17.143-1.143s11.429 0.571 17.143 1.143c16-22.286 33.143-44.571 52.571-64l3.429-1.143c2.857 0 64 36 70.857 40 1.714 1.143 2.286 2.857 2.286 4 0 10.286-24 67.429-29.143 78.857 6.857 9.143 12.571 19.429 17.143 29.714 11.429 1.143 85.143 9.143 85.143 17.714z"],"width":1097.142857142857,"tags":["cogs","gears"],"defaultCode":61573,"grid":14},{"paths":["M804.571 438.857c0 161.714-180 292.571-402.286 292.571-34.857 0-68.571-3.429-100.571-9.143-47.429 33.714-101.143 58.286-158.857 73.143-15.429 4-32 6.857-49.143 9.143h-1.714c-8.571 0-16.571-6.857-18.286-16.571v0c-2.286-10.857 5.143-17.714 11.429-25.143 22.286-25.143 47.429-47.429 66.857-94.857-92.571-53.714-152-136.571-152-229.143 0-161.714 180-292.571 402.286-292.571s402.286 130.857 402.286 292.571zM1024 585.143c0 93.143-59.429 175.429-152 229.143 19.429 47.429 44.571 69.714 66.857 94.857 6.286 7.429 13.714 14.286 11.429 25.143v0c-2.286 10.286-10.857 17.714-20 16.571-17.143-2.286-33.714-5.143-49.143-9.143-57.714-14.857-111.429-39.429-158.857-73.143-32 5.714-65.714 9.143-100.571 9.143-103.429 0-198.286-28.571-269.714-75.429 16.571 1.143 33.714 2.286 50.286 2.286 122.857 0 238.857-35.429 327.429-99.429 95.429-69.714 148-164 148-266.286 0-29.714-4.571-58.857-13.143-86.857 96.571 53.143 159.429 137.714 159.429 233.143z"],"width":1024,"tags":["comments"],"defaultCode":61574,"grid":14},{"paths":["M146.286 768c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM804.571 438.857c0-38.857-34.857-73.143-73.143-73.143h-201.143c0-66.857 54.857-115.429 54.857-182.857 0-66.857-13.143-109.714-91.429-109.714-36.571 37.143-17.714 124.571-73.143 182.857-16 16.571-29.714 34.286-44 52-25.714 33.143-93.714 130.857-138.857 130.857h-18.286v365.714h18.286c32 0 84.571 20.571 115.429 31.429 62.857 21.714 128 41.714 195.429 41.714h69.143c64.571 0 109.714-25.714 109.714-95.429 0-10.857-1.143-21.714-2.857-32 24-13.143 37.143-45.714 37.143-72 0-13.714-3.429-27.429-10.286-39.429 19.429-18.286 30.286-41.143 30.286-68 0-18.286-8-45.143-20-58.857 26.857-0.571 42.857-52 42.857-73.143zM877.714 438.286c0 33.143-9.714 65.714-28 93.143 3.429 12.571 5.143 26.286 5.143 39.429 0 28.571-7.429 57.143-21.714 82.286 1.143 8 1.714 16.571 1.714 24.571 0 36.571-12 73.143-34.286 101.714 1.143 108-72.571 171.429-178.286 171.429h-73.714c-81.143 0-156.571-24-232-50.286-16.571-5.714-62.857-22.857-78.857-22.857h-164.571c-40.571 0-73.143-32.571-73.143-73.143v-365.714c0-40.571 32.571-73.143 73.143-73.143h156.571c22.286-14.857 61.143-66.286 78.286-88.571 19.429-25.143 39.429-49.714 61.143-73.143 34.286-36.571 16-126.857 73.143-182.857 13.714-13.143 32-21.143 51.429-21.143 59.429 0 116.571 21.143 144.571 76.571 17.714 34.857 20 68 20 106.286 0 40-10.286 74.286-27.429 109.714h100.571c78.857 0 146.286 66.857 146.286 145.714z"],"width":877.7142857142857,"tags":["thumbs-o-up"],"defaultCode":61575,"grid":14},{"paths":["M146.286 256c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM804.571 585.143c0-21.143-16-72.571-42.857-73.143 12-13.714 20-40.571 20-58.857 0-26.857-10.857-49.714-30.286-68 6.857-12 10.286-25.714 10.286-39.429 0-26.286-13.143-58.857-37.143-72 1.714-10.286 2.857-21.143 2.857-32 0-66.857-42.286-95.429-105.714-95.429h-73.143c-67.429 0-132.571 20-195.429 41.714-30.857 10.857-83.429 31.429-115.429 31.429h-18.286v365.714h18.286c45.143 0 113.143 97.714 138.857 130.857 14.286 17.714 28 35.429 44 52 55.429 58.286 36.571 145.714 73.143 182.857 78.286 0 91.429-42.857 91.429-109.714 0-67.429-54.857-116-54.857-182.857h201.143c38.286 0 73.143-34.286 73.143-73.143zM877.714 585.714c0 78.857-67.429 145.714-146.286 145.714h-100.571c17.143 35.429 27.429 69.714 27.429 109.714 0 37.714-2.286 72-20 106.286-28 55.429-85.143 76.571-144.571 76.571-19.429 0-37.714-8-51.429-21.143-57.143-56-39.429-146.286-73.143-183.429-21.714-22.857-41.714-47.429-61.143-72.571-17.143-22.286-56-73.714-78.286-88.571h-156.571c-40.571 0-73.143-32.571-73.143-73.143v-365.714c0-40.571 32.571-73.143 73.143-73.143h164.571c16 0 62.286-17.143 78.857-22.857 82.286-28.571 153.714-50.286 241.714-50.286h64c104 0 178.857 61.714 178.286 168.571v2.857c22.286 28.571 34.286 65.143 34.286 101.714 0 8-0.571 16.571-1.714 24.571 14.286 25.143 21.714 53.714 21.714 82.286 0 13.143-1.714 26.857-5.143 39.429 18.286 27.429 28 60 28 93.143z"],"width":877.7142857142857,"tags":["thumbs-o-down"],"defaultCode":61576,"grid":14},{"paths":["M475.429 18.286v765.143l-256.571 134.857c-7.429 4-14.857 6.857-22.857 6.857-16.571 0-24-13.714-24-28.571 0-4 0.571-7.429 1.143-11.429l49.143-285.714-208-202.286c-6.857-7.429-14.286-17.143-14.286-27.429 0-17.143 17.714-24 32-26.286l286.857-41.714 128.571-260c5.143-10.857 14.857-23.429 28-23.429v0z"],"width":475.4285714285714,"tags":["star-half"],"defaultCode":61577,"grid":14},{"paths":["M950.857 340.571c0-160.571-108.571-194.286-200-194.286-85.143 0-181.143 92-210.857 127.429-13.714 16.571-42.286 16.571-56 0-29.714-35.429-125.714-127.429-210.857-127.429-91.429 0-200 33.714-200 194.286 0 104.571 105.714 201.714 106.857 202.857l332 320 331.429-319.429c1.714-1.714 107.429-98.857 107.429-203.429zM1024 340.571c0 137.143-125.714 252-130.857 257.143l-356 342.857c-6.857 6.857-16 10.286-25.143 10.286s-18.286-3.429-25.143-10.286l-356.571-344c-4.571-4-130.286-118.857-130.286-256 0-167.429 102.286-267.429 273.143-267.429 100 0 193.714 78.857 238.857 123.429 45.143-44.571 138.857-123.429 238.857-123.429 170.857 0 273.143 100 273.143 267.429z"],"width":1024,"tags":["heart-o"],"defaultCode":61578,"grid":14},{"paths":["M365.714 822.857c0 16 7.429 54.857-18.286 54.857h-182.857c-90.857 0-164.571-73.714-164.571-164.571v-402.286c0-90.857 73.714-164.571 164.571-164.571h182.857c9.714 0 18.286 8.571 18.286 18.286 0 16 7.429 54.857-18.286 54.857h-182.857c-50.286 0-91.429 41.143-91.429 91.429v402.286c0 50.286 41.143 91.429 91.429 91.429h164.571c14.286 0 36.571-2.857 36.571 18.286zM896 512c0 9.714-4 18.857-10.857 25.714l-310.857 310.857c-6.857 6.857-16 10.857-25.714 10.857-20 0-36.571-16.571-36.571-36.571v-164.571h-256c-20 0-36.571-16.571-36.571-36.571v-219.429c0-20 16.571-36.571 36.571-36.571h256v-164.571c0-20 16.571-36.571 36.571-36.571 9.714 0 18.857 4 25.714 10.857l310.857 310.857c6.857 6.857 10.857 16 10.857 25.714z"],"width":896,"tags":["sign-out"],"defaultCode":61579,"grid":14},{"paths":["M135.429 808h132v-396.571h-132v396.571zM276 289.143c-0.571-38.857-28.571-68.571-73.714-68.571s-74.857 29.714-74.857 68.571c0 37.714 28.571 68.571 73.143 68.571h0.571c46.286 0 74.857-30.857 74.857-68.571zM610.286 808h132v-227.429c0-121.714-65.143-178.286-152-178.286-70.857 0-102.286 39.429-119.429 66.857h1.143v-57.714h-132s1.714 37.143 0 396.571v0h132v-221.714c0-11.429 0.571-23.429 4-32 9.714-23.429 31.429-48 68-48 47.429 0 66.286 36 66.286 89.714v212zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["linkedin-square"],"defaultCode":61580,"grid":14},{"paths":["M274.286 493.714v-256c0-10.286-8-18.286-18.286-18.286s-18.286 8-18.286 18.286v256c0 10.286 8 18.286 18.286 18.286s18.286-8 18.286-18.286zM658.286 694.857c0 20-16.571 36.571-36.571 36.571h-245.143l-29.143 276c-1.143 9.143-8.571 16.571-17.714 16.571h-0.571c-9.143 0-16.571-6.286-18.286-15.429l-43.429-277.143h-230.857c-20 0-36.571-16.571-36.571-36.571 0-93.714 70.857-182.857 146.286-182.857v-292.571c-40 0-73.143-33.143-73.143-73.143s33.143-73.143 73.143-73.143h365.714c40 0 73.143 33.143 73.143 73.143s-33.143 73.143-73.143 73.143v292.571c75.429 0 146.286 89.143 146.286 182.857z"],"width":658.2857142857142,"tags":["thumb-tack"],"defaultCode":61581,"grid":14},{"paths":["M804.571 530.286v182.857c0 90.857-73.714 164.571-164.571 164.571h-475.429c-90.857 0-164.571-73.714-164.571-164.571v-475.429c0-90.857 73.714-164.571 164.571-164.571h402.286c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-402.286c-50.286 0-91.429 41.143-91.429 91.429v475.429c0 50.286 41.143 91.429 91.429 91.429h475.429c50.286 0 91.429-41.143 91.429-91.429v-182.857c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286zM1024 36.571v292.571c0 20-16.571 36.571-36.571 36.571-9.714 0-18.857-4-25.714-10.857l-100.571-100.571-372.571 372.571c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-65.143-65.143c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l372.571-372.571-100.571-100.571c-6.857-6.857-10.857-16-10.857-25.714 0-20 16.571-36.571 36.571-36.571h292.571c20 0 36.571 16.571 36.571 36.571z"],"width":1024,"tags":["external-link"],"defaultCode":61582,"grid":14},{"paths":["M676.571 512c0 9.714-4 18.857-10.857 25.714l-310.857 310.857c-6.857 6.857-16 10.857-25.714 10.857-20 0-36.571-16.571-36.571-36.571v-164.571h-256c-20 0-36.571-16.571-36.571-36.571v-219.429c0-20 16.571-36.571 36.571-36.571h256v-164.571c0-20 16.571-36.571 36.571-36.571 9.714 0 18.857 4 25.714 10.857l310.857 310.857c6.857 6.857 10.857 16 10.857 25.714zM877.714 310.857v402.286c0 90.857-73.714 164.571-164.571 164.571h-182.857c-9.714 0-18.286-8.571-18.286-18.286 0-16-7.429-54.857 18.286-54.857h182.857c50.286 0 91.429-41.143 91.429-91.429v-402.286c0-50.286-41.143-91.429-91.429-91.429h-164.571c-14.286 0-36.571 2.857-36.571-18.286 0-16-7.429-54.857 18.286-54.857h182.857c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["sign-in"],"defaultCode":61584,"grid":14},{"paths":["M261.714 504.571c-24-52.571-42.286-122.286-42.286-212h-146.286v54.857c0 56 76 133.714 188.571 157.143zM877.714 347.429v-54.857h-146.286c0 89.714-18.286 159.429-42.286 212 112.571-23.429 188.571-101.143 188.571-157.143zM950.857 274.286v73.143c0 108.571-131.429 228.571-309.714 237.143-22.857 29.143-44 46.286-54.286 54.286-30.286 27.429-38.286 56-38.286 92.571s18.286 73.143 73.143 73.143 109.714 36.571 109.714 91.429v36.571c0 10.286-8 18.286-18.286 18.286h-475.429c-10.286 0-18.286-8-18.286-18.286v-36.571c0-54.857 54.857-91.429 109.714-91.429s73.143-36.571 73.143-73.143-8-65.143-38.286-92.571c-10.286-8-31.429-25.143-54.286-54.286-178.286-8.571-309.714-128.571-309.714-237.143v-73.143c0-30.286 24.571-54.857 54.857-54.857h164.571v-54.857c0-50.286 41.143-91.429 91.429-91.429h329.143c50.286 0 91.429 41.143 91.429 91.429v54.857h164.571c30.286 0 54.857 24.571 54.857 54.857z"],"width":950.8571428571428,"tags":["trophy"],"defaultCode":61585,"grid":14},{"paths":["M296.571 685.714v0c1.143-1.714 0.571-5.143-1.714-7.429-2.857-2.286-6.286-2.857-8-1.143-1.143 1.714-0.571 5.143 1.714 7.429 2.857 2.286 6.286 2.857 8 1.143zM280.571 662.286c-1.714-2.286-4.571-3.429-6.857-2.286-1.714 1.143-1.714 4.571 0 6.857 2.286 2.857 5.143 4 6.857 2.857v0c1.714-1.143 1.714-4.571 0-7.429zM257.143 639.429v0c0.571-1.143-0.571-3.429-2.857-4.571-1.714-0.571-4-0.571-4.571 1.143-1.143 1.714 0 3.429 2.286 4.571 2.286 0.571 4.571 0.571 5.143-1.143zM269.143 652.571v0c1.143-1.143 1.143-4-1.143-5.714-1.714-2.286-4.571-2.857-5.714-1.714-1.714 1.714-1.143 4 0.571 6.286 1.714 1.714 4.571 2.857 6.286 1.143zM318.286 695.429v0c0.571-2.286-1.714-5.143-5.143-6.286s-6.286 0-7.429 2.286c-0.571 2.286 1.714 5.143 5.143 6.286s6.286 0 7.429-2.286zM342.286 697.143v0c0-2.286-2.857-4.571-6.857-4.571-3.429 0-5.714 2.286-5.714 4.571s2.857 4.571 6.286 4.571 6.286-2.286 6.286-4.571zM364.571 693.143v0c-0.571-2.286-4-3.429-7.429-2.857s-5.714 2.857-5.143 5.143 3.429 4 6.857 3.429 5.714-3.429 5.714-5.714zM731.429 512c0-161.714-130.857-292.571-292.571-292.571s-292.571 130.857-292.571 292.571c0 129.143 84 238.857 200 277.714 14.857 2.857 20-6.286 20-14.286 0-6.857 0-29.714-0.571-54.286 0 0-81.143 17.714-98.286-34.857 0 0-13.143-33.714-32.571-42.286 0 0-26.286-18.286 2.286-18.286 0 0 28.571 2.286 44.571 30.286 25.714 45.143 68.571 32 85.143 24.571 2.857-18.857 10.286-32 18.857-39.429-65.143-7.429-133.714-32.571-133.714-144.571 0-32 11.429-57.714 30.286-78.286-2.857-7.429-13.143-37.143 2.857-77.714 24.571-7.429 80.571 30.286 80.571 30.286 23.429-6.857 48-9.714 73.143-9.714s49.714 2.857 73.143 9.714c0 0 56-37.714 80.571-30.286 16 40.571 5.714 70.286 2.857 77.714 18.857 20.571 30.286 46.286 30.286 78.286 0 112.571-68.571 137.143-133.714 144.571 10.286 9.143 20 26.857 20 54.286 0 38.857-0.571 70.286-0.571 80 0 8 5.143 17.143 20 14.286 116-38.857 200-148.571 200-277.714zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["github-square"],"defaultCode":61586,"grid":14},{"paths":["M731.429 841.143c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM877.714 841.143c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM950.857 713.143v182.857c0 30.286-24.571 54.857-54.857 54.857h-841.143c-30.286 0-54.857-24.571-54.857-54.857v-182.857c0-30.286 24.571-54.857 54.857-54.857h244c15.429 42.286 56 73.143 103.429 73.143h146.286c47.429 0 88-30.857 103.429-73.143h244c30.286 0 54.857 24.571 54.857 54.857zM765.143 342.857c-5.714 13.714-18.857 22.857-33.714 22.857h-146.286v256c0 20-16.571 36.571-36.571 36.571h-146.286c-20 0-36.571-16.571-36.571-36.571v-256h-146.286c-14.857 0-28-9.143-33.714-22.857-5.714-13.143-2.857-29.143 8-39.429l256-256c6.857-7.429 16.571-10.857 25.714-10.857s18.857 3.429 25.714 10.857l256 256c10.857 10.286 13.714 26.286 8 39.429z"],"width":950.8571428571428,"tags":["upload"],"defaultCode":61587,"grid":14},{"paths":["M804 472c0-26.857-5.143-97.143-14.286-120-10.857-27.429-17.143-42.857-17.143-73.714 0-26.286 5.714-52 5.714-77.714 0-10.857-0.571-22.286-5.714-31.429-2.286-0.571-5.143-0.571-7.429-0.571-22.286 0-44.571 5.143-66.857 5.143-68 0-132.571-27.429-200.571-27.429-53.143 0-104.571 20-153.714 39.429-38.857 15.429-81.714 33.714-115.429 58.857-115.429 87.429-155.429 247.429-155.429 385.143 0 46.286 14.286 91.429 14.286 137.714 0 26.286-12.571 50.286-12.571 75.429 0 16 9.143 29.143 26.286 29.143 28 0 54.857-12.571 83.429-12.571 65.143 0 128.571 17.714 193.714 17.714 50.857 0 114.857-4 162.286-20.571 150.286-53.143 263.429-226.857 263.429-384.571zM877.143 470.857c0 190.286-132 390.857-312.571 454.857-56.571 20-126.857 25.143-186.286 25.143-65.143 0-129.143-16.571-193.714-16.571-27.429 0-54.857 16.571-83.429 16.571-56.571 0-99.429-50.857-99.429-105.143 0-26.857 12.571-50.857 12.571-77.143 0-46.286-14.286-91.429-14.286-138.286 0-162.286 49.714-341.714 184.571-444 38.857-29.714 87.429-50.857 132.571-68.571 58.286-23.429 117.143-44.571 180.571-44.571 68 0 132.571 27.429 199.429 27.429 21.714 0 43.429-5.714 65.714-5.714 65.143 0 88.571 46.286 88.571 105.714 0 25.714-5.714 52-5.714 77.714 0 20.571 5.143 28.571 12 46.857 13.143 33.143 19.429 109.143 19.429 145.714z"],"width":877.1291428571428,"tags":["lemon-o"],"defaultCode":61588,"grid":14},{"paths":["M804.571 708.571c0 20.571-9.143 60.571-17.714 79.429-12 28-44 46.286-69.714 60.571-33.714 18.286-68 29.143-106.286 29.143-53.143 0-101.143-21.714-149.714-39.429-34.857-12.571-68.571-28-100-47.429-97.143-60-214.286-177.143-274.286-274.286-19.429-31.429-34.857-65.143-47.429-100-17.714-48.571-39.429-96.571-39.429-149.714 0-38.286 10.857-72.571 29.143-106.286 14.286-25.714 32.571-57.714 60.571-69.714 18.857-8.571 58.857-17.714 79.429-17.714 4 0 8 0 12 1.714 12 4 24.571 32 30.286 43.429 18.286 32.571 36 65.714 54.857 97.714 9.143 14.857 26.286 33.143 26.286 50.857 0 34.857-103.429 85.714-103.429 116.571 0 15.429 14.286 35.429 22.286 49.143 57.714 104 129.714 176 233.714 233.714 13.714 8 33.714 22.286 49.143 22.286 30.857 0 81.714-103.429 116.571-103.429 17.714 0 36 17.143 50.857 26.286 32 18.857 65.143 36.571 97.714 54.857 11.429 5.714 39.429 18.286 43.429 30.286 1.714 4 1.714 8 1.714 12z"],"width":804.5714285714286,"tags":["phone"],"defaultCode":61589,"grid":14},{"paths":["M640 146.286h-475.429c-50.286 0-91.429 41.143-91.429 91.429v475.429c0 50.286 41.143 91.429 91.429 91.429h475.429c50.286 0 91.429-41.143 91.429-91.429v-475.429c0-50.286-41.143-91.429-91.429-91.429zM804.571 237.714v475.429c0 90.857-73.714 164.571-164.571 164.571h-475.429c-90.857 0-164.571-73.714-164.571-164.571v-475.429c0-90.857 73.714-164.571 164.571-164.571h475.429c90.857 0 164.571 73.714 164.571 164.571z"],"width":804.5714285714286,"tags":["square-o"],"defaultCode":61590,"grid":14},{"paths":["M658.286 146.286h-585.143v709.714l292.571-280.571 50.857 48.571 241.714 232v-709.714zM665.143 73.143c8.571 0 17.143 1.714 25.143 5.143 25.143 9.714 41.143 33.143 41.143 58.857v736.571c0 25.714-16 49.143-41.143 58.857-8 3.429-16.571 4.571-25.143 4.571-17.714 0-34.286-6.286-47.429-18.286l-252-242.286-252 242.286c-13.143 12-29.714 18.857-47.429 18.857-8.571 0-17.143-1.714-25.143-5.143-25.143-9.714-41.143-33.143-41.143-58.857v-736.571c0-25.714 16-49.143 41.143-58.857 8-3.429 16.571-5.143 25.143-5.143h598.857z"],"width":731.4285714285713,"tags":["bookmark-o"],"defaultCode":61591,"grid":14},{"paths":["M731.429 681.714c0-2.857 0-6.286-1.143-9.143-3.429-10.286-86.857-52.571-102.857-61.714-10.857-6.286-24-18.857-37.143-18.857-25.143 0-62.286 74.857-84.571 74.857-11.429 0-25.714-10.286-36-16-75.429-42.286-127.429-94.286-169.714-169.714-5.714-10.286-16-24.571-16-36 0-22.286 74.857-59.429 74.857-84.571 0-13.143-12.571-26.286-18.857-37.143-9.143-16-51.429-99.429-61.714-102.857-2.857-1.143-6.286-1.143-9.143-1.143-14.857 0-44 6.857-57.714 12.571-37.714 17.143-65.143 89.143-65.143 128.571 0 38.286 15.429 73.143 28.571 108.571 45.714 125.143 181.714 261.143 306.857 306.857 35.429 13.143 70.286 28.571 108.571 28.571 39.429 0 111.429-27.429 128.571-65.143 5.714-13.714 12.571-42.857 12.571-57.714zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["phone-square"],"defaultCode":61592,"grid":14},{"paths":["M925.714 233.143c-25.143 36.571-56.571 69.143-92.571 95.429 0.571 8 0.571 16 0.571 24 0 244-185.714 525.143-525.143 525.143-104.571 0-201.714-30.286-283.429-82.857 14.857 1.714 29.143 2.286 44.571 2.286 86.286 0 165.714-29.143 229.143-78.857-81.143-1.714-149.143-54.857-172.571-128 11.429 1.714 22.857 2.857 34.857 2.857 16.571 0 33.143-2.286 48.571-6.286-84.571-17.143-148-91.429-148-181.143v-2.286c24.571 13.714 53.143 22.286 83.429 23.429-49.714-33.143-82.286-89.714-82.286-153.714 0-34.286 9.143-65.714 25.143-93.143 90.857 112 227.429 185.143 380.571 193.143-2.857-13.714-4.571-28-4.571-42.286 0-101.714 82.286-184.571 184.571-184.571 53.143 0 101.143 22.286 134.857 58.286 41.714-8 81.714-23.429 117.143-44.571-13.714 42.857-42.857 78.857-81.143 101.714 37.143-4 73.143-14.286 106.286-28.571z"],"width":950.8571428571428,"tags":["twitter"],"defaultCode":61593,"grid":14},{"paths":["M548 6.857v150.857h-89.714c-70.286 0-83.429 33.714-83.429 82.286v108h167.429l-22.286 169.143h-145.143v433.714h-174.857v-433.714h-145.714v-169.143h145.714v-124.571c0-144.571 88.571-223.429 217.714-223.429 61.714 0 114.857 4.571 130.286 6.857z"],"width":602.2582857142856,"tags":["facebook","facebook-f"],"defaultCode":61594,"grid":14},{"paths":["M438.857 73.143c242.286 0 438.857 196.571 438.857 438.857 0 193.714-125.714 358.286-300 416.571-22.286 4-30.286-9.714-30.286-21.143 0-14.286 0.571-61.714 0.571-120.571 0-41.143-13.714-67.429-29.714-81.143 97.714-10.857 200.571-48 200.571-216.571 0-48-17.143-86.857-45.143-117.714 4.571-11.429 19.429-56-4.571-116.571-36.571-11.429-120.571 45.143-120.571 45.143-34.857-9.714-72.571-14.857-109.714-14.857s-74.857 5.143-109.714 14.857c0 0-84-56.571-120.571-45.143-24 60.571-9.143 105.143-4.571 116.571-28 30.857-45.143 69.714-45.143 117.714 0 168 102.286 205.714 200 216.571-12.571 11.429-24 30.857-28 58.857-25.143 11.429-89.143 30.857-127.429-36.571-24-41.714-67.429-45.143-67.429-45.143-42.857-0.571-2.857 26.857-2.857 26.857 28.571 13.143 48.571 64 48.571 64 25.714 78.286 148 52 148 52 0 36.571 0.571 70.857 0.571 81.714 0 11.429-8 25.143-30.286 21.143-174.286-58.286-300-222.857-300-416.571 0-242.286 196.571-438.857 438.857-438.857zM166.286 703.429c1.143-2.286-0.571-5.143-4-6.857-3.429-1.143-6.286-0.571-7.429 1.143-1.143 2.286 0.571 5.143 4 6.857 2.857 1.714 6.286 1.143 7.429-1.143zM184 722.857c2.286-1.714 1.714-5.714-1.143-9.143-2.857-2.857-6.857-4-9.143-1.714-2.286 1.714-1.714 5.714 1.143 9.143 2.857 2.857 6.857 4 9.143 1.714zM201.143 748.571c2.857-2.286 2.857-6.857 0-10.857-2.286-4-6.857-5.714-9.714-3.429-2.857 1.714-2.857 6.286 0 10.286s7.429 5.714 9.714 4zM225.143 772.571c2.286-2.286 1.143-7.429-2.286-10.857-4-4-9.143-4.571-11.429-1.714-2.857 2.286-1.714 7.429 2.286 10.857 4 4 9.143 4.571 11.429 1.714zM257.714 786.857c1.143-3.429-2.286-7.429-7.429-9.143-4.571-1.143-9.714 0.571-10.857 4s2.286 7.429 7.429 8.571c4.571 1.714 9.714 0 10.857-3.429zM293.714 789.714c0-4-4.571-6.857-9.714-6.286-5.143 0-9.143 2.857-9.143 6.286 0 4 4 6.857 9.714 6.286 5.143 0 9.143-2.857 9.143-6.286zM326.857 784c-0.571-3.429-5.143-5.714-10.286-5.143-5.143 1.143-8.571 4.571-8 8.571 0.571 3.429 5.143 5.714 10.286 4.571s8.571-4.571 8-8z"],"width":877.7142857142857,"tags":["github"],"defaultCode":61595,"grid":14},{"paths":["M950.857 329.143v146.286c0 20-16.571 36.571-36.571 36.571h-36.571c-20 0-36.571-16.571-36.571-36.571v-146.286c0-80.571-65.714-146.286-146.286-146.286s-146.286 65.714-146.286 146.286v109.714h54.857c30.286 0 54.857 24.571 54.857 54.857v329.143c0 30.286-24.571 54.857-54.857 54.857h-548.571c-30.286 0-54.857-24.571-54.857-54.857v-329.143c0-30.286 24.571-54.857 54.857-54.857h384v-109.714c0-141.143 114.857-256 256-256s256 114.857 256 256z"],"width":950.8571428571428,"tags":["unlock"],"defaultCode":61596,"grid":14},{"paths":["M1005.714 73.143c50.286 0 91.429 41.143 91.429 91.429v694.857c0 50.286-41.143 91.429-91.429 91.429h-914.286c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h914.286zM91.429 146.286c-9.714 0-18.286 8.571-18.286 18.286v128h950.857v-128c0-9.714-8.571-18.286-18.286-18.286h-914.286zM1005.714 877.714c9.714 0 18.286-8.571 18.286-18.286v-347.429h-950.857v347.429c0 9.714 8.571 18.286 18.286 18.286h914.286zM146.286 804.571v-73.143h146.286v73.143h-146.286zM365.714 804.571v-73.143h219.429v73.143h-219.429z"],"width":1097.142857142857,"tags":["credit-card"],"defaultCode":61597,"grid":14},{"paths":["M219.429 768c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM512 838.286c0.571 10.286-2.857 20-9.714 27.429-6.857 8-16.571 12-26.857 12h-77.143c-18.857 0-34.286-14.286-36-33.143-16.571-174.286-154.857-312.571-329.143-329.143-18.857-1.714-33.143-17.143-33.143-36v-77.143c0-10.286 4-20 12-26.857 6.286-6.286 15.429-9.714 24.571-9.714h2.857c121.714 9.714 236.571 62.857 322.857 149.714 86.857 86.286 140 201.143 149.714 322.857zM804.571 839.429c0.571 9.714-2.857 19.429-10.286 26.857-6.857 7.429-16 11.429-26.286 11.429h-81.714c-19.429 0-35.429-14.857-36.571-34.286-18.857-332-283.429-596.571-615.429-616-19.429-1.143-34.286-17.143-34.286-36v-81.714c0-10.286 4-19.429 11.429-26.286 6.857-6.857 16-10.286 25.143-10.286h1.714c200 10.286 388 94.286 529.714 236.571 142.286 141.714 226.286 329.714 236.571 529.714z"],"width":805.1565714285713,"tags":["feed","rss"],"defaultCode":61598,"grid":14},{"paths":["M594.286 694.857c0 25.143-20.571 45.714-45.714 45.714s-45.714-20.571-45.714-45.714 20.571-45.714 45.714-45.714 45.714 20.571 45.714 45.714zM740.571 694.857c0 25.143-20.571 45.714-45.714 45.714s-45.714-20.571-45.714-45.714 20.571-45.714 45.714-45.714 45.714 20.571 45.714 45.714zM804.571 786.286v-182.857c0-9.714-8.571-18.286-18.286-18.286h-694.857c-9.714 0-18.286 8.571-18.286 18.286v182.857c0 9.714 8.571 18.286 18.286 18.286h694.857c9.714 0 18.286-8.571 18.286-18.286zM101.714 512h674.286l-89.714-275.429c-2.857-9.714-13.714-17.143-24-17.143h-446.857c-10.286 0-21.143 7.429-24 17.143zM877.714 603.429v182.857c0 50.286-41.143 91.429-91.429 91.429h-694.857c-50.286 0-91.429-41.143-91.429-91.429v-182.857c0-15.429 4.571-28.571 9.143-42.857l112.571-346.286c13.143-40 51.429-68 93.714-68h446.857c42.286 0 80.571 28 93.714 68l112.571 346.286c4.571 14.286 9.143 27.429 9.143 42.857z"],"width":877.7142857142857,"tags":["hdd-o"],"defaultCode":61600,"grid":14},{"paths":["M950.857 365.714c40.571 0 73.143 32.571 73.143 73.143s-32.571 73.143-73.143 73.143v219.429c0 40-33.143 73.143-73.143 73.143-101.714-84.571-265.714-200.571-464-217.143-68 22.857-91.429 102.286-46.857 148-40 65.714 11.429 112 72 159.429-35.429 69.714-182.857 70.857-235.429 22.286-33.143-101.714-82.286-203.429-42.286-332h-69.714c-50.286 0-91.429-41.143-91.429-91.429v-109.714c0-50.286 41.143-91.429 91.429-91.429h274.286c219.429 0 402.286-128 512-219.429 40 0 73.143 33.143 73.143 73.143v219.429zM877.714 710.857v-545.143c-149.143 114.286-293.714 180-438.857 196v154.286c145.143 16 289.714 80.571 438.857 194.857z"],"width":1024,"tags":["bullhorn"],"defaultCode":61601,"grid":14},{"paths":["M521.143 969.143c0-5.143-4-9.143-9.143-9.143-45.143 0-82.286-37.143-82.286-82.286 0-5.143-4-9.143-9.143-9.143s-9.143 4-9.143 9.143c0 55.429 45.143 100.571 100.571 100.571 5.143 0 9.143-4 9.143-9.143zM140.571 804.571h742.857c-102.286-115.429-152-272-152-475.429 0-73.714-69.714-182.857-219.429-182.857s-219.429 109.143-219.429 182.857c0 203.429-49.714 360-152 475.429zM987.429 804.571c0 40-33.143 73.143-73.143 73.143h-256c0 80.571-65.714 146.286-146.286 146.286s-146.286-65.714-146.286-146.286h-256c-40 0-73.143-33.143-73.143-73.143 84.571-71.429 182.857-199.429 182.857-475.429 0-109.714 90.857-229.714 242.286-252-2.857-6.857-4.571-14.286-4.571-22.286 0-30.286 24.571-54.857 54.857-54.857s54.857 24.571 54.857 54.857c0 8-1.714 15.429-4.571 22.286 151.429 22.286 242.286 142.286 242.286 252 0 276 98.286 404 182.857 475.429z"],"width":1024,"tags":["bell-o"],"defaultCode":61602,"grid":14},{"paths":["M786.286 512l78.857 77.143c10.857 10.286 14.857 25.714 11.429 40-4 14.286-15.429 25.714-29.714 29.143l-107.429 27.429 30.286 106.286c4 14.286 0 29.714-10.857 40-10.286 10.857-25.714 14.857-40 10.857l-106.286-30.286-27.429 107.429c-3.429 14.286-14.857 25.714-29.143 29.714-3.429 0.571-7.429 1.143-10.857 1.143-10.857 0-21.714-4.571-29.143-12.571l-77.143-78.857-77.143 78.857c-10.286 10.857-25.714 14.857-40 11.429-14.857-4-25.714-15.429-29.143-29.714l-27.429-107.429-106.286 30.286c-14.286 4-29.714 0-40-10.857-10.857-10.286-14.857-25.714-10.857-40l30.286-106.286-107.429-27.429c-14.286-3.429-25.714-14.857-29.714-29.143-3.429-14.286 0.571-29.714 11.429-40l78.857-77.143-78.857-77.143c-10.857-10.286-14.857-25.714-11.429-40 4-14.286 15.429-25.714 29.714-29.143l107.429-27.429-30.286-106.286c-4-14.286 0-29.714 10.857-40 10.286-10.857 25.714-14.857 40-10.857l106.286 30.286 27.429-107.429c3.429-14.286 14.857-25.714 29.143-29.143 14.286-4 29.714 0 40 10.857l77.143 79.429 77.143-79.429c10.286-10.857 25.143-14.857 40-10.857 14.286 3.429 25.714 14.857 29.143 29.143l27.429 107.429 106.286-30.286c14.286-4 29.714 0 40 10.857 10.857 10.286 14.857 25.714 10.857 40l-30.286 106.286 107.429 27.429c14.286 3.429 25.714 14.857 29.714 29.143 3.429 14.286-0.571 29.714-11.429 40z"],"width":877.7142857142857,"tags":["certificate"],"defaultCode":61603,"grid":14},{"paths":["M146.286 768c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM950.857 438.857c0-38.857-34.857-73.143-73.143-73.143h-329.143c0-36 54.857-73.143 54.857-146.286 0-54.857-42.857-73.143-91.429-73.143-16 0-45.143 66.286-51.429 79.429-6.857 12.571-13.714 25.143-21.143 37.143-18.857 30.286-40.571 56.571-64 82.857-36.571 41.714-77.143 93.143-137.714 93.143h-18.286v365.714h18.286c100 0 197.714 73.143 308.571 73.143 64 0 108-26.857 108-95.429 0-10.857-1.143-21.714-2.857-32 24-13.143 37.143-45.714 37.143-72 0-13.714-3.429-27.429-10.286-39.429 19.429-18.286 30.286-41.143 30.286-68 0-18.286-8-45.143-20-58.857h189.143c39.429 0 73.143-33.714 73.143-73.143zM1024 438.286c0 80-66.286 146.857-146.286 146.857h-96.571c-1.714 24-9.143 46.857-21.143 68 1.143 8 1.714 16.571 1.714 24.571 0 36.571-12 73.143-34.286 101.714 1.143 108-72.571 171.429-178.286 171.429-64 0-124.571-17.714-184-39.429-34.857-12.571-91.429-33.714-127.429-33.714h-164.571c-40.571 0-73.143-32.571-73.143-73.143v-365.714c0-40.571 32.571-73.143 73.143-73.143h164.571c27.429 0 66.286-49.143 82.857-68 20.571-23.429 40-46.857 57.143-73.714 33.143-53.143 57.714-150.857 134.286-150.857 90.857 0 164.571 49.714 164.571 146.286 0 25.143-4 49.714-12.571 73.143h213.714c78.857 0 146.286 66.857 146.286 145.714z"],"width":1024,"tags":["hand-o-right"],"defaultCode":61604,"grid":14},{"paths":["M786.286 804.571h18.286v-365.714h-18.286c-60.571 0-101.143-51.429-137.714-93.143-23.429-26.286-45.143-52.571-64-82.857-8-12.571-14.857-25.714-21.714-38.857s-35.429-77.714-50.857-77.714c-48.571 0-91.429 18.286-91.429 73.143 0 73.143 54.857 110.286 54.857 146.286h-329.143c-38.286 0-73.143 34.286-73.143 73.143 0 39.429 33.714 73.143 73.143 73.143h189.143c-12 13.714-20 40.571-20 58.857 0 26.857 10.857 49.714 30.286 68-6.857 12-10.286 25.714-10.286 39.429 0 26.286 13.143 58.857 37.143 72-1.714 10.286-2.286 21.143-2.286 32 0 67.429 41.714 95.429 105.143 95.429 113.714 0 210.857-73.143 310.857-73.143zM950.857 768c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM1024 438.857v365.714c0 40.571-32.571 73.143-73.143 73.143h-164.571c-36 0-92.571 21.143-127.429 33.714-58.286 21.143-118.286 39.429-181.143 39.429-105.143 0-181.714-59.429-181.143-168.571l0.571-2.857c-22.857-28.571-34.857-65.143-34.857-101.714 0-8 0.571-16.571 1.714-24.571-12-21.143-19.429-44-21.143-68h-96.571c-80 0-146.286-66.857-146.286-146.857 0-78.857 67.429-145.714 146.286-145.714h213.714c-8.571-23.429-12.571-48-12.571-73.143 0-96.571 73.714-146.286 164.571-146.286 76.571 0 101.143 97.714 134.286 150.857 17.143 26.857 36.571 50.286 57.143 73.714 16.571 18.857 55.429 68 82.857 68h164.571c40.571 0 73.143 32.571 73.143 73.143z"],"width":1024,"tags":["hand-o-left"],"defaultCode":61605,"grid":14},{"paths":["M731.429 914.286c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM804.571 477.714c0-64.571-26.286-108-95.429-108-10.857 0-21.714 1.143-32 2.857-13.143-24-45.714-37.143-72-37.143-13.714 0-27.429 3.429-39.429 10.286-18.286-19.429-41.143-30.286-68-30.286-18.286 0-45.143 8-58.857 20v-189.143c0-39.429-33.714-73.143-73.143-73.143-38.857 0-73.143 34.857-73.143 73.143v329.143c-36 0-73.143-54.857-146.286-54.857-54.857 0-73.143 42.857-73.143 91.429 0 16 66.286 45.143 79.429 51.429 12.571 6.857 25.143 13.714 37.143 21.143 30.286 18.857 56.571 40.571 82.857 64 41.714 36.571 93.143 77.143 93.143 137.714v18.286h365.714v-18.286c0-100 73.143-197.714 73.143-308.571zM877.714 474.857c0 64-17.714 124.571-39.429 184-12.571 34.857-33.714 91.429-33.714 127.429v164.571c0 40.571-32.571 73.143-73.143 73.143h-365.714c-40.571 0-73.143-32.571-73.143-73.143v-164.571c0-27.429-49.143-66.286-68-82.857-23.429-20.571-46.857-40-73.714-57.143-53.143-33.143-150.857-57.714-150.857-134.286 0-90.857 49.714-164.571 146.286-164.571 25.143 0 49.714 4 73.143 12.571v-213.714c0-78.857 66.857-146.286 145.714-146.286 80 0 146.857 66.286 146.857 146.286v96.571c24 1.714 46.857 9.143 68 21.143 8-1.143 16.571-1.714 24.571-1.714 36.571 0 73.143 12 101.714 34.286 108-1.143 171.429 72.571 171.429 178.286z"],"width":877.7142857142857,"tags":["hand-o-up"],"defaultCode":61606,"grid":14},{"paths":["M804.571 548.571c0-113.714-73.143-210.857-73.143-310.857v-18.286h-365.714v18.286c0 60.571-51.429 101.143-93.143 137.714-26.286 23.429-52.571 45.143-82.857 64-12.571 8-25.714 14.857-38.857 21.714s-77.714 35.429-77.714 50.857c0 48.571 18.286 91.429 73.143 91.429 73.143 0 110.286-54.857 146.286-54.857v329.143c0 38.286 34.286 73.143 73.143 73.143 39.429 0 73.143-33.714 73.143-73.143v-189.143c14.857 11.429 40 20 58.857 20 26.857 0 49.714-10.857 68-30.286 12 6.857 25.714 10.286 39.429 10.286 26.286 0 58.857-13.143 72-37.143 10.286 1.714 21.143 2.286 32 2.286 67.429 0 95.429-41.714 95.429-105.143zM731.429 109.714c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM877.714 546.286c0 105.143-59.429 181.714-168.571 181.143l-2.857-0.571c-28.571 22.857-65.143 34.857-101.714 34.857-8 0-16.571-0.571-24.571-1.714-19.429 10.857-45.714 18.857-68 21.143v96.571c0 80-66.857 146.286-146.857 146.286-78.857 0-145.714-67.429-145.714-146.286v-213.714c-22.286 9.143-49.143 12.571-73.143 12.571-96 0-146.286-73.714-146.286-164.571 0-76.571 97.714-101.143 150.857-134.286 26.857-17.143 50.286-36.571 73.714-57.143 18.857-16.571 68-55.429 68-82.857v-164.571c0-40.571 32.571-73.143 73.143-73.143h365.714c40.571 0 73.143 32.571 73.143 73.143v164.571c0 36 21.143 92.571 33.714 127.429 21.143 58.286 39.429 118.286 39.429 181.143z"],"width":877.7142857142857,"tags":["hand-o-down"],"defaultCode":61607,"grid":14},{"paths":["M731.429 548.571v-73.143c0-20-16.571-36.571-36.571-36.571h-286.857l108-108c6.857-6.857 10.857-16 10.857-25.714s-4-18.857-10.857-25.714l-52-52c-6.857-6.857-16-10.286-25.714-10.286s-18.857 3.429-25.714 10.286l-258.857 258.857c-6.857 6.857-10.286 16-10.286 25.714s3.429 18.857 10.286 25.714l258.857 258.857c6.857 6.857 16 10.286 25.714 10.286s18.857-3.429 25.714-10.286l52-52c6.857-6.857 10.286-16 10.286-25.714s-3.429-18.857-10.286-25.714l-108-108h286.857c20 0 36.571-16.571 36.571-36.571zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["arrow-circle-left"],"defaultCode":61608,"grid":14},{"paths":["M734.286 512c0-9.714-3.429-18.857-10.286-25.714l-258.857-258.857c-6.857-6.857-16-10.286-25.714-10.286s-18.857 3.429-25.714 10.286l-52 52c-6.857 6.857-10.286 16-10.286 25.714s3.429 18.857 10.286 25.714l108 108h-286.857c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h286.857l-108 108c-6.857 6.857-10.857 16-10.857 25.714s4 18.857 10.857 25.714l52 52c6.857 6.857 16 10.286 25.714 10.286s18.857-3.429 25.714-10.286l258.857-258.857c6.857-6.857 10.286-16 10.286-25.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["arrow-circle-right"],"defaultCode":61609,"grid":14},{"paths":["M733.714 511.429c0-9.714-3.429-18.857-10.286-25.714l-258.857-258.857c-6.857-6.857-16-10.286-25.714-10.286s-18.857 3.429-25.714 10.286l-258.857 258.857c-6.857 6.857-10.286 16-10.286 25.714s3.429 18.857 10.286 25.714l52 52c6.857 6.857 16 10.286 25.714 10.286s18.857-3.429 25.714-10.286l108-108v286.857c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571v-286.857l108 108c6.857 6.857 16 10.857 25.714 10.857s18.857-4 25.714-10.857l52-52c6.857-6.857 10.286-16 10.286-25.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["arrow-circle-up"],"defaultCode":61610,"grid":14},{"paths":["M733.714 512.571c0-9.714-3.429-18.857-10.286-25.714l-52-52c-6.857-6.857-16-10.286-25.714-10.286s-18.857 3.429-25.714 10.286l-108 108v-286.857c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v286.857l-108-108c-6.857-6.857-16-10.857-25.714-10.857s-18.857 4-25.714 10.857l-52 52c-6.857 6.857-10.286 16-10.286 25.714s3.429 18.857 10.286 25.714l258.857 258.857c6.857 6.857 16 10.286 25.714 10.286s18.857-3.429 25.714-10.286l258.857-258.857c6.857-6.857 10.286-16 10.286-25.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["arrow-circle-down"],"defaultCode":61611,"grid":14},{"paths":["M438.857 73.143c242.286 0 438.857 196.571 438.857 438.857s-196.571 438.857-438.857 438.857-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857zM595.429 370.857c-4.571 3.429-7.429 9.714-13.143 10.857 2.857-0.571 5.714-10.857 7.429-13.143 3.429-4 8-6.286 12.571-8.571 9.714-4 19.429-5.143 29.714-6.857 9.714-2.286 21.714-2.286 29.143 6.286-1.714-1.714 12-13.714 13.714-14.286 5.143-2.857 13.714-1.714 17.143-6.857 1.143-1.714 1.143-12.571 1.143-12.571-9.714 1.143-13.143-8-13.714-16 0 0.571-1.143 2.286-3.429 4.571 0.571-8.571-10.286-2.286-14.286-3.429-13.143-3.429-11.429-12.571-15.429-22.286-2.286-5.143-8.571-6.857-10.857-12-2.286-3.429-3.429-10.857-8.571-11.429-3.429-0.571-9.714 12-10.857 11.429-5.143-2.857-7.429 1.143-11.429 3.429-3.429 2.286-6.286 1.143-9.714 2.857 10.286-3.429-4.571-9.143-9.714-8 8-2.286 4-10.857-0.571-14.857h2.857c-1.143-5.143-17.143-9.714-22.286-13.143s-32.571-9.143-38.286-5.714c-6.857 4 1.714 15.429 1.714 21.143 0.571 6.857-6.857 8.571-6.857 14.286 0 9.714 18.286 8 13.714 21.143-2.857 8-13.714 9.714-18.286 16-4.571 5.714 0.571 16 5.143 20 4.571 3.429-8 9.143-9.714 10.286-9.714 4.571-17.143-9.714-19.429-18.286-1.714-6.286-2.286-13.714-9.143-17.143-3.429-1.143-14.286-2.857-16.571 0.571-3.429-8.571-15.429-12-23.429-14.857-11.429-4-21.143-4-33.143-2.286 4-0.571-1.143-18.286-10.857-15.429 2.857-5.714 1.714-12 2.857-17.714 1.143-4.571 3.429-9.143 6.857-13.143 1.143-2.286 13.714-15.429 9.714-16 9.714 1.143 20.571 1.714 28.571-6.286 5.143-5.143 7.429-13.714 12.571-19.429 7.429-8.571 16.571 2.286 24.571 2.857 11.429 0.571 10.857-12 4.571-17.714 7.429 0.571 1.143-13.143-2.857-14.857-5.143-1.714-24.571 3.429-14.286 7.429-2.286-1.143-16 27.429-24 13.143-2.286-2.857-3.429-14.857-8.571-15.429-4.571 0-7.429 5.143-9.143 8.571 2.857-7.429-16-12.571-20-13.143 8.571-5.714 1.714-12-4.571-15.429-4.571-2.857-18.857-5.143-22.857-0.571-10.857 13.143 11.429 14.857 17.143 18.286 1.714 1.143 8.571 5.143 4.571 8-3.429 1.714-13.714 4.571-14.857 6.857-3.429 5.143 4 10.857-1.143 16-5.143-5.143-5.143-13.714-9.143-19.429 5.143 6.286-20.571 2.857-20 2.857-8.571 0-22.286 5.714-28.571-2.857-1.143-2.286-1.143-15.429 2.286-12.571-5.143-4-8.571-8-12-10.286-18.857 6.286-36.571 14.286-53.714 23.429 2.286 0.571 4 0.571 6.857-0.571 4.571-1.714 8.571-4.571 13.143-6.857 5.714-2.286 17.714-9.143 24-4 0.571-1.143 2.286-2.286 2.857-2.857 4 4.571 8 9.143 11.429 14.286-4.571-2.286-12-1.143-17.143-0.571-4 1.143-10.857 2.286-12.571 6.857 1.714 2.857 4 7.429 2.857 10.286-7.429-5.143-13.143-13.714-23.429-14.857-4.571 0-9.143 0-12.571 0.571-54.857 30.286-101.143 74.286-134.286 126.857 2.286 2.286 4.571 4 6.857 4.571 5.714 1.714 0 18.286 10.857 9.714 3.429 2.857 4 6.857 1.714 10.857 0.571-0.571 23.429 14.286 25.143 15.429 4 3.429 10.286 7.429 12 12 1.143 4-2.286 8.571-5.714 10.286-0.571-1.143-9.143-9.714-10.286-7.429-1.714 2.857 0 18.286 6.286 17.714-9.143 0.571-5.143 36-7.429 42.857 0 0.571 1.143 0.571 1.143 0.571-1.714 6.857 4 33.714 15.429 30.857-7.429 1.714 13.143 28 16 29.714 7.429 5.143 16 8.571 21.143 16 5.714 8 5.714 20 13.714 26.286-2.286 6.857 12 14.857 11.429 24.571-1.143 0.571-1.714 0.571-2.857 1.143 2.857 8 13.714 8 17.714 15.429 2.286 4.571 0 15.429 7.429 13.143 1.143-12.571-7.429-25.143-13.714-35.429-3.429-5.714-6.857-10.857-9.714-16.571-2.857-5.143-3.429-11.429-5.714-17.143 2.286 0.571 14.857 5.143 13.714 6.857-4.571 11.429 18.286 31.429 24.571 38.857 1.714 1.714 14.857 18.857 8 18.857 7.429 0 17.714 11.429 21.143 17.143 5.143 8.571 4 19.429 7.429 28.571 3.429 11.429 19.429 16.571 28.571 21.714 8 4 14.857 9.714 22.857 12.571 12 4.571 14.857 0.571 25.143-1.143 14.857-2.286 16.571 14.286 28.571 20.571 7.429 4 23.429 9.714 31.429 6.286-3.429 1.143 12 24.571 13.143 26.286 5.143 6.857 14.857 10.286 20.571 17.143 1.714-1.143 3.429-2.857 4-5.143-2.286 6.286 8.571 18.286 14.286 17.143 6.286-1.143 8-13.714 8-18.286-11.429 5.714-21.714 1.143-28-10.286-1.143-2.857-10.286-18.857-2.286-18.857 10.857 0 3.429-8.571 2.286-16.571s-9.143-13.143-13.143-20c-3.429 6.857-14.857 5.143-18.286-0.571 0 1.714-1.714 4.571-1.714 6.857-2.857 0-5.714 0.571-8.571-0.571 1.143-6.857 1.714-15.429 3.429-22.857 2.857-10.286 21.714-30.286-2.857-29.143-8.571 0.571-12 4-14.857 11.429-2.857 6.857-1.714 13.143-9.714 16.571-5.143 2.286-22.286 1.143-27.429-1.714-10.857-6.286-18.286-26.286-18.286-37.714-0.571-15.429 7.429-29.143 0-43.429 3.429-2.857 6.857-8.571 10.857-11.429 3.429-2.286 7.429 1.714 9.143-5.143-1.714-1.143-4-3.429-4.571-3.429 8.571 4 24.571-5.714 32 0 4.571 3.429 9.714 4.571 12.571-1.143 0.571-1.714-4-8.571-1.714-13.143 1.714 9.714 8 11.429 16.571 5.143 3.429 3.429 12.571 2.286 18.857 5.714 6.286 4 7.429 10.286 14.857 1.714 4.571 6.857 5.143 6.857 6.857 13.714 1.714 6.286 5.143 22.286 10.857 25.143 12 7.429 9.143-12.571 8-19.429-0.571-0.571-0.571-19.429-1.143-19.429-18.286-4-11.429-18.286-1.143-28 1.714-1.143 14.857-5.714 20.571-10.286 5.143-4.571 11.429-12.571 8.571-20 2.857 0 5.143-2.286 6.286-5.143-1.714-0.571-8.571-6.286-9.714-5.714 4-2.286 3.429-5.714 1.143-9.143 5.714-3.429 2.857-9.714 8.571-12 6.286 8.571 18.857-1.143 12.571-8 5.714-8 18.857-4 22.286-11.429 8.571 2.286 2.286-8.571 6.857-14.857 4-5.143 10.857-5.143 16-8 0 0.571 14.286-8 9.714-8.571 9.714 1.143 29.143-9.143 14.286-17.714 2.286-5.143-5.143-7.429-10.286-8.571 4-1.143 9.143 1.143 12.571-1.143 7.429-5.143 2.286-7.429-4-9.143-8-2.286-18.286 2.857-24.571 6.857zM502.286 872c78.286-13.714 148-52.571 200.571-108-3.429-3.429-9.714-2.286-14.286-4.571-4.571-1.714-8-3.429-13.714-4.571 1.143-11.429-11.429-15.429-19.429-21.143-7.429-5.714-12-12-22.857-9.714-1.143 0.571-12.571 4.571-10.286 6.857-7.429-6.286-10.857-9.714-20.571-12.571-9.143-2.857-15.429-14.286-24.571-4-4.571 4.571-2.286 11.429-4.571 16-7.429-6.286 6.857-13.714 1.143-20.571-6.857-8-18.857 5.143-24.571 8.571-3.429 2.857-7.429 4-9.714 7.429-2.857 4-4 9.143-6.286 13.143-1.714-4.571-11.429-3.429-12-6.857 2.286 13.714 2.286 28 5.143 41.714 1.714 8 0 21.143-6.857 27.429s-15.429 13.143-16.571 22.857c-1.143 6.857 0.571 13.143 6.857 14.857 0.571 8.571-9.143 14.857-8.571 24 0 0.571 0.571 6.286 1.143 9.143z"],"width":877.7142857142857,"tags":["globe"],"defaultCode":61612,"grid":14},{"paths":["M219.429 841.143c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM587.429 601.143l-389.714 389.714c-13.143 13.143-32 21.143-51.429 21.143s-38.286-8-52-21.143l-60.571-61.714c-13.714-13.143-21.714-32-21.714-51.429s8-38.286 21.714-52l389.143-389.143c29.714 74.857 89.714 134.857 164.571 164.571zM949.714 352.571c0 18.857-6.857 42.286-13.143 60.571-36 101.714-133.714 172-241.714 172-141.143 0-256-114.857-256-256s114.857-256 256-256c41.714 0 96 12.571 130.857 36 5.714 4 9.143 9.143 9.143 16 0 6.286-4 12.571-9.143 16l-167.429 96.571v128l110.286 61.143c18.857-10.857 151.429-94.286 162.857-94.286s18.286 8.571 18.286 20z"],"width":961.6822857142856,"tags":["wrench"],"defaultCode":61613,"grid":14},{"paths":["M585.143 804.571h365.714v-73.143h-365.714v73.143zM365.714 512h585.143v-73.143h-585.143v73.143zM731.429 219.429h219.429v-73.143h-219.429v73.143zM1024 694.857v146.286c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-146.286c0-20 16.571-36.571 36.571-36.571h950.857c20 0 36.571 16.571 36.571 36.571zM1024 402.286v146.286c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-146.286c0-20 16.571-36.571 36.571-36.571h950.857c20 0 36.571 16.571 36.571 36.571zM1024 109.714v146.286c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-146.286c0-20 16.571-36.571 36.571-36.571h950.857c20 0 36.571 16.571 36.571 36.571z"],"width":1024,"tags":["tasks"],"defaultCode":61614,"grid":14},{"paths":["M801.714 168.571c5.714 13.714 2.857 29.714-8 40l-281.714 281.714v424c0 14.857-9.143 28-22.286 33.714-4.571 1.714-9.714 2.857-14.286 2.857-9.714 0-18.857-3.429-25.714-10.857l-146.286-146.286c-6.857-6.857-10.857-16-10.857-25.714v-277.714l-281.714-281.714c-10.857-10.286-13.714-26.286-8-40 5.714-13.143 18.857-22.286 33.714-22.286h731.429c14.857 0 28 9.143 33.714 22.286z"],"width":804.5714285714286,"tags":["filter"],"defaultCode":61616,"grid":14},{"paths":["M365.714 146.286h292.571v-73.143h-292.571v73.143zM1024 512v274.286c0 50.286-41.143 91.429-91.429 91.429h-841.143c-50.286 0-91.429-41.143-91.429-91.429v-274.286h384v91.429c0 20 16.571 36.571 36.571 36.571h182.857c20 0 36.571-16.571 36.571-36.571v-91.429h384zM585.143 512v73.143h-146.286v-73.143h146.286zM1024 237.714v219.429h-1024v-219.429c0-50.286 41.143-91.429 91.429-91.429h201.143v-91.429c0-30.286 24.571-54.857 54.857-54.857h329.143c30.286 0 54.857 24.571 54.857 54.857v91.429h201.143c50.286 0 91.429 41.143 91.429 91.429z"],"width":1024,"tags":["briefcase"],"defaultCode":61617,"grid":14},{"paths":["M733.143 309.143l-202.857 202.857 202.857 202.857 82.286-82.286c10.286-10.857 26.286-13.714 40-8 13.143 5.714 22.286 18.857 22.286 33.714v256c0 20-16.571 36.571-36.571 36.571h-256c-14.857 0-28-9.143-33.714-22.857-5.714-13.143-2.857-29.143 8-39.429l82.286-82.286-202.857-202.857-202.857 202.857 82.286 82.286c10.857 10.286 13.714 26.286 8 39.429-5.714 13.714-18.857 22.857-33.714 22.857h-256c-20 0-36.571-16.571-36.571-36.571v-256c0-14.857 9.143-28 22.857-33.714 13.143-5.714 29.143-2.857 39.429 8l82.286 82.286 202.857-202.857-202.857-202.857-82.286 82.286c-6.857 6.857-16 10.857-25.714 10.857-4.571 0-9.714-1.143-13.714-2.857-13.714-5.714-22.857-18.857-22.857-33.714v-256c0-20 16.571-36.571 36.571-36.571h256c14.857 0 28 9.143 33.714 22.857 5.714 13.143 2.857 29.143-8 39.429l-82.286 82.286 202.857 202.857 202.857-202.857-82.286-82.286c-10.857-10.286-13.714-26.286-8-39.429 5.714-13.714 18.857-22.857 33.714-22.857h256c20 0 36.571 16.571 36.571 36.571v256c0 14.857-9.143 28-22.286 33.714-4.571 1.714-9.714 2.857-14.286 2.857-9.714 0-18.857-4-25.714-10.857z"],"width":877.7142857142857,"tags":["arrows-alt"],"defaultCode":61618,"grid":14},{"paths":["M338.857 512c-59.429 1.714-113.143 27.429-151.429 73.143h-76.571c-57.143 0-110.857-27.429-110.857-90.857 0-46.286-1.714-201.714 70.857-201.714 12 0 71.429 48.571 148.571 48.571 26.286 0 51.429-4.571 76-13.143-1.714 12.571-2.857 25.143-2.857 37.714 0 52 16.571 103.429 46.286 146.286zM950.857 876c0 92.571-61.143 148-152.571 148h-499.429c-91.429 0-152.571-55.429-152.571-148 0-129.143 30.286-327.429 197.714-327.429 19.429 0 90.286 79.429 204.571 79.429s185.143-79.429 204.571-79.429c167.429 0 197.714 198.286 197.714 327.429zM365.714 146.286c0 80.571-65.714 146.286-146.286 146.286s-146.286-65.714-146.286-146.286 65.714-146.286 146.286-146.286 146.286 65.714 146.286 146.286zM768 365.714c0 121.143-98.286 219.429-219.429 219.429s-219.429-98.286-219.429-219.429 98.286-219.429 219.429-219.429 219.429 98.286 219.429 219.429zM1097.143 494.286c0 63.429-53.714 90.857-110.857 90.857h-76.571c-38.286-45.714-92-71.429-151.429-73.143 29.714-42.857 46.286-94.286 46.286-146.286 0-12.571-1.143-25.143-2.857-37.714 24.571 8.571 49.714 13.143 76 13.143 77.143 0 136.571-48.571 148.571-48.571 72.571 0 70.857 155.429 70.857 201.714zM1024 146.286c0 80.571-65.714 146.286-146.286 146.286s-146.286-65.714-146.286-146.286 65.714-146.286 146.286-146.286 146.286 65.714 146.286 146.286z"],"width":1097.142857142857,"tags":["group","users"],"defaultCode":61632,"grid":14},{"paths":["M832 694.857c0-14.857-5.714-28.571-16-38.857l-118.857-118.857c-10.286-10.286-24.571-16-38.857-16-16.571 0-29.714 6.286-41.143 18.286 18.857 18.857 41.143 34.857 41.143 64 0 30.286-24.571 54.857-54.857 54.857-29.143 0-45.143-22.286-64-41.143-12 11.429-18.857 24.571-18.857 41.714 0 14.286 5.714 28.571 16 38.857l117.714 118.286c10.286 10.286 24.571 15.429 38.857 15.429s28.571-5.143 38.857-14.857l84-83.429c10.286-10.286 16-24 16-38.286zM430.286 292c0-14.286-5.714-28.571-16-38.857l-117.714-118.286c-10.286-10.286-24.571-16-38.857-16s-28.571 5.714-38.857 15.429l-84 83.429c-10.286 10.286-16 24-16 38.286 0 14.857 5.714 28.571 16 38.857l118.857 118.857c10.286 10.286 24.571 15.429 38.857 15.429 16.571 0 29.714-5.714 41.143-17.714-18.857-18.857-41.143-34.857-41.143-64 0-30.286 24.571-54.857 54.857-54.857 29.143 0 45.143 22.286 64 41.143 12-11.429 18.857-24.571 18.857-41.714zM941.714 694.857c0 43.429-17.714 85.714-48.571 116l-84 83.429c-30.857 30.857-72.571 47.429-116 47.429-44 0-85.714-17.143-116.571-48.571l-117.714-118.286c-30.857-30.857-47.429-72.571-47.429-116 0-45.143 18.286-88 50.286-119.429l-50.286-50.286c-31.429 32-73.714 50.286-118.857 50.286-43.429 0-85.714-17.143-116.571-48l-118.857-118.857c-31.429-31.429-48-72.571-48-116.571 0-43.429 17.714-85.714 48.571-116l84-83.429c30.857-30.857 72.571-47.429 116-47.429 44 0 85.714 17.143 116.571 48.571l117.714 118.286c30.857 30.857 47.429 72.571 47.429 116 0 45.143-18.286 88-50.286 119.429l50.286 50.286c31.429-32 73.714-50.286 118.857-50.286 43.429 0 85.714 17.143 116.571 48l118.857 118.857c31.429 31.429 48 72.571 48 116.571z"],"width":950.8571428571428,"tags":["chain","link"],"defaultCode":61633,"grid":14},{"paths":["M1097.143 658.286c0 121.143-98.286 219.429-219.429 219.429h-621.714c-141.143 0-256-114.857-256-256 0-102.286 60.571-190.857 147.429-231.429-0.571-8-1.143-16.571-1.143-24.571 0-161.714 130.857-292.571 292.571-292.571 122.286 0 226.857 74.857 270.857 181.714 25.143-22.286 58.286-35.429 94.857-35.429 80.571 0 146.286 65.714 146.286 146.286 0 29.143-8.571 56-23.429 78.857 97.143 22.857 169.714 109.714 169.714 213.714z"],"width":1097.142857142857,"tags":["cloud"],"defaultCode":61634,"grid":14},{"paths":["M872.571 827.429c42.857 68 12.571 123.429-68 123.429h-658.286c-80.571 0-110.857-55.429-68-123.429l287.429-453.143v-228h-36.571c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h292.571c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571h-36.571v228zM427.429 413.143l-155.429 245.143h406.857l-155.429-245.143-11.429-17.714v-249.143h-73.143v249.143z"],"width":950.8571428571428,"tags":["flask"],"defaultCode":61635,"grid":14},{"paths":["M548.571 512c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM720 548.571l289.714 227.429c10.286 7.429 15.429 20 14.286 32-1.714 12.571-9.143 23.429-20 29.143l-73.143 36.571c-5.143 2.857-10.857 4-16.571 4-6.286 0-12.571-1.714-17.714-4.571l-394.286-221.143-62.857 37.714c-2.286 1.143-4.571 2.286-6.857 2.857 5.143 17.714 7.429 36.571 5.714 55.429-5.143 58.857-44.571 114.857-107.429 154.857-48.571 30.857-104.571 48-158.286 48-51.429 0-94.857-15.429-126.857-44.571-32.571-30.286-49.143-73.714-45.143-118.286 5.143-58.286 44.571-114.857 106.857-154.857 48.571-30.857 105.143-48 158.857-48 32 0 61.143 6.286 86.286 17.714 3.429-5.143 7.429-9.143 12.571-12.571l69.714-41.714-69.714-41.714c-5.143-3.429-9.143-7.429-12.571-12.571-25.143 11.429-54.286 17.714-86.286 17.714-53.714 0-110.286-17.143-158.857-48-62.286-40-101.714-96.571-106.857-154.857-4-44.571 12.571-88 45.143-117.714 32-29.714 75.429-45.143 126.857-45.143 53.714 0 109.714 17.143 158.286 48 62.857 39.429 102.286 96 107.429 154.857 1.714 18.857-0.571 37.714-5.714 55.429 2.286 0.571 4.571 1.714 6.857 2.857l62.857 37.714 394.286-221.143c5.143-2.857 11.429-4.571 17.714-4.571 5.714 0 11.429 1.143 16.571 4l73.143 36.571c10.857 5.714 18.286 16.571 20 29.143 1.143 12-4 24.571-14.286 32zM330.857 400c34.857-32 13.143-89.714-48.571-128.571-34.857-22.286-75.429-33.714-109.714-33.714-26.286 0-49.714 6.857-64.571 20.571-34.857 32-13.143 89.714 48.571 128.571 34.857 22.286 74.857 33.714 109.714 33.714 26.286 0 49.714-6.857 64.571-20.571zM282.286 825.714c61.714-38.857 83.429-96.571 48.571-128.571-14.857-13.714-38.286-20.571-64.571-20.571-34.857 0-74.857 11.429-109.714 33.714-61.714 38.857-83.429 96.571-48.571 128.571 14.857 13.714 38.286 20.571 64.571 20.571 34.286 0 74.857-11.429 109.714-33.714zM384 475.429l54.857 33.143v-6.286c0-13.143 7.429-25.143 18.857-32l8-4.571-45.143-26.857-14.857 14.857c-4.571 4.571-8 9.143-12.571 13.143-1.714 1.714-2.857 2.286-4 3.429zM512 603.429l54.857 18.286 420.571-329.143-73.143-36.571-438.857 246.286v64.571l-91.429 54.857 5.143 4.571c1.143 1.714 2.286 2.286 4 3.429 4.571 4.571 8 9.143 12.571 13.714l14.857 14.857zM914.286 841.143l73.143-36.571-297.143-233.143-101.143 78.857c-1.714 2.286-4.571 2.857-7.429 4z"],"width":1021.7325714285713,"tags":["cut","scissors"],"defaultCode":61636,"grid":14},{"paths":["M969.143 219.429c30.286 0 54.857 24.571 54.857 54.857v694.857c0 30.286-24.571 54.857-54.857 54.857h-548.571c-30.286 0-54.857-24.571-54.857-54.857v-164.571h-310.857c-30.286 0-54.857-24.571-54.857-54.857v-384c0-30.286 17.714-72.571 38.857-93.714l233.143-233.143c21.143-21.143 63.429-38.857 93.714-38.857h237.714c30.286 0 54.857 24.571 54.857 54.857v187.429c22.286-13.143 50.857-22.857 73.143-22.857h237.714zM658.286 341.143l-170.857 170.857h170.857v-170.857zM292.571 121.714l-170.857 170.857h170.857v-170.857zM404.571 491.429l180.571-180.571v-237.714h-219.429v237.714c0 30.286-24.571 54.857-54.857 54.857h-237.714v365.714h292.571v-146.286c0-30.286 17.714-72.571 38.857-93.714zM950.857 950.857v-658.286h-219.429v237.714c0 30.286-24.571 54.857-54.857 54.857h-237.714v365.714h512z"],"width":1024,"tags":["copy","files-o"],"defaultCode":61637,"grid":14},{"paths":["M802.286 791.429c0 89.143-68 157.143-157.143 157.143-50.286 0-98.857-21.714-134.286-57.143l-444-443.429c-40.571-41.143-64.571-97.143-64.571-154.857 0-121.143 95.429-217.714 216.571-217.714 58.286 0 114.286 23.429 156 64.571l345.714 346.286c3.429 3.429 5.714 8 5.714 12.571 0 12-32 44-44 44-5.143 0-9.714-2.286-13.143-5.714l-346.286-346.857c-27.429-26.857-64.571-44-103.429-44-81.143 0-144 65.714-144 146.286 0 38.857 16 76 43.429 103.429l443.429 444c21.714 21.714 52 36 82.857 36 48.571 0 84.571-36 84.571-84.571 0-31.429-14.286-61.143-36-82.857l-332-332c-9.143-8.571-21.714-13.714-34.286-13.714-21.714 0-38.286 16-38.286 38.286 0 12.571 5.714 24.571 14.286 33.714l234.286 234.286c3.429 3.429 5.714 8 5.714 12.571 0 12-32.571 44.571-44.571 44.571-4.571 0-9.143-2.286-12.571-5.714l-234.286-234.286c-22.857-22.286-36-53.714-36-85.143 0-62.857 49.143-112 112-112 32 0 62.857 13.143 85.143 36l332 332c36 35.429 57.143 84 57.143 134.286z"],"width":804.5714285714286,"tags":["paperclip"],"defaultCode":61638,"grid":14},{"paths":["M219.429 877.714h438.857v-219.429h-438.857v219.429zM731.429 877.714h73.143v-512c0-10.857-9.714-34.286-17.143-41.714l-160.571-160.571c-8-8-30.286-17.143-41.714-17.143v237.714c0 30.286-24.571 54.857-54.857 54.857h-329.143c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-73.143v731.429h73.143v-237.714c0-30.286 24.571-54.857 54.857-54.857h475.429c30.286 0 54.857 24.571 54.857 54.857v237.714zM512 347.429v-182.857c0-9.714-8.571-18.286-18.286-18.286h-109.714c-9.714 0-18.286 8.571-18.286 18.286v182.857c0 9.714 8.571 18.286 18.286 18.286h109.714c9.714 0 18.286-8.571 18.286-18.286zM877.714 365.714v530.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-768c0-30.286 24.571-54.857 54.857-54.857h530.286c30.286 0 72 17.143 93.714 38.857l160 160c21.714 21.714 38.857 63.429 38.857 93.714z"],"width":877.7142857142857,"tags":["floppy-o","save"],"defaultCode":61639,"grid":14},{"paths":["M877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["square"],"defaultCode":61640,"grid":14},{"paths":["M877.714 768v73.143c0 20-16.571 36.571-36.571 36.571h-804.571c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h804.571c20 0 36.571 16.571 36.571 36.571zM877.714 475.429v73.143c0 20-16.571 36.571-36.571 36.571h-804.571c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h804.571c20 0 36.571 16.571 36.571 36.571zM877.714 182.857v73.143c0 20-16.571 36.571-36.571 36.571h-804.571c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h804.571c20 0 36.571 16.571 36.571 36.571z"],"width":877.7142857142857,"tags":["bars","navicon","reorder"],"defaultCode":61641,"grid":14},{"paths":["M219.429 804.571c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM219.429 512c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM1024 749.714v109.714c0 9.714-8.571 18.286-18.286 18.286h-694.857c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h694.857c9.714 0 18.286 8.571 18.286 18.286zM219.429 219.429c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM1024 457.143v109.714c0 9.714-8.571 18.286-18.286 18.286h-694.857c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h694.857c9.714 0 18.286 8.571 18.286 18.286zM1024 164.571v109.714c0 9.714-8.571 18.286-18.286 18.286h-694.857c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h694.857c9.714 0 18.286 8.571 18.286 18.286z"],"width":1024,"tags":["list-ul"],"defaultCode":61642,"grid":14},{"paths":["M217.714 925.714c0 62.857-49.143 98.286-108.571 98.286-36 0-72.571-12-98.286-37.714l32.571-50.286c15.429 14.286 38.857 25.714 60.571 25.714 20 0 41.143-9.714 41.143-32.571 0-32-36.571-33.714-60-32l-14.857-32c20.571-26.286 39.429-55.429 64-77.714v-0.571c-18.286 0-37.143 1.143-55.429 1.143v30.286h-60.571v-86.857h190.286v50.286l-54.286 65.714c38.286 9.143 63.429 38.857 63.429 78.286zM218.857 567.429v90.857h-206.857c-1.714-10.286-3.429-20.571-3.429-30.857 0-105.714 129.143-121.714 129.143-169.714 0-19.429-12-29.714-30.857-29.714-20 0-36.571 17.143-46.286 33.143l-48.571-33.714c18.857-39.429 57.714-61.714 101.143-61.714 53.143 0 98.857 31.429 98.857 88 0 84.571-124 103.429-125.714 148h72.571v-34.286h60zM1024 749.714v109.714c0 9.714-8.571 18.286-18.286 18.286h-694.857c-10.286 0-18.286-8.571-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h694.857c9.714 0 18.286 8 18.286 18.286zM219.429 236v56.571h-191.429v-56.571h61.143c0-46.286 0.571-92.571 0.571-138.857v-6.857h-1.143c-6.286 12.571-17.714 21.143-28.571 30.857l-40.571-43.429 77.714-72.571h60.571v230.857h61.714zM1024 457.143v109.714c0 9.714-8.571 18.286-18.286 18.286h-694.857c-10.286 0-18.286-8.571-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h694.857c9.714 0 18.286 8 18.286 18.286zM1024 164.571v109.714c0 9.714-8.571 18.286-18.286 18.286h-694.857c-10.286 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8-18.286 18.286-18.286h694.857c9.714 0 18.286 8.571 18.286 18.286z"],"width":1032.5577142857144,"tags":["list-ol"],"defaultCode":61643,"grid":14},{"paths":["M1005.714 512c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-987.429c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h987.429zM276 475.429c-10.857-13.714-20.571-29.143-29.143-45.714-18.286-37.143-27.429-73.143-27.429-107.429 0-69.714 25.714-128 76.571-176.571s125.714-72.571 224.571-72.571c21.714 0 53.143 4 95.429 10.857 25.143 4.571 58.857 13.714 101.143 27.429 4 14.857 8 37.714 12 67.429 5.143 45.143 8 80 8 104.571 0 8-1.143 16.571-2.857 25.714l-6.857 1.714-48-3.429-8-1.143c-19.429-57.714-39.429-96.571-58.857-117.143-33.714-34.857-74.286-52-120-52-43.429 0-78.286 11.429-104 33.714s-38.286 50.286-38.286 83.429c0 28 12.571 54.286 37.714 80s78.286 50.286 159.429 73.714c27.429 8 60 20.571 98.857 37.714 20.571 9.714 38.857 19.429 54.286 29.714h-424.571zM565.714 621.714h234.857c2.857 16 4 33.714 4 52.571 0 41.143-7.429 81.714-23.429 121.143-8.571 21.143-21.714 40.571-40.571 59.429-13.714 13.143-34.286 28.571-62.286 46.286-28.571 17.143-57.143 30.286-87.429 37.714-30.286 8-68.571 12-116 12-31.429 0-69.143-1.143-111.429-13.143l-80-22.857c-22.286-6.286-35.429-11.429-41.143-16-2.286-2.286-4.571-6.286-4.571-12.571v-7.429c0-4.571 1.143-34.286-1.143-89.143-1.143-28.571 1.143-48.571 1.143-60v-25.143l58.286-1.143c21.143 48.571 30.857 77.714 37.143 88 13.714 22.286 29.143 40 45.714 53.714s36.571 24.571 60 32.571c22.857 8.571 48.571 12.571 75.429 12.571 24 0 50.857-5.143 79.429-15.429 29.143-9.714 52.571-26.286 69.714-49.143 17.714-22.857 26.857-47.429 26.857-73.714 0-32-15.429-61.714-46.286-89.714-12.571-10.857-38.857-24.571-78.286-40.571z"],"width":1024,"tags":["strikethrough"],"defaultCode":61644,"grid":14},{"paths":["M27.429 127.429c-10.286-0.571-18.857-0.571-25.714-2.286l-1.714-50.286c7.429-0.571 14.857-0.571 22.857-0.571 20 0 41.714 0.571 64 2.286 53.714 2.857 85.714 4 94.857 4 32.571 0 64.571-0.571 96-1.714 30.857-1.143 58.857-2.286 83.429-2.857 24 0 40.571-0.571 49.143-1.143l-0.571 8 1.143 36.571v5.143c-22.857 3.429-46.286 5.143-70.857 5.143-22.857 0-37.714 4.571-45.143 14.286-5.143 5.714-7.429 30.857-7.429 75.429 0 13.714 0.571 24.571 0.571 33.143l0.571 130.857 8 160c2.286 46.286 11.429 84.571 29.143 115.429 13.143 22.286 31.429 40 54.857 52.571 34.286 18.286 68 26.857 101.143 26.857 38.857 0 75.429-5.143 109.143-16 20-6.286 38.857-15.429 56.571-29.143 17.714-13.143 30.286-25.143 37.143-36.571 14.857-22.857 24.571-45.143 30.286-65.143 8-28 12-71.429 12-130.857 0-102.286-7.429-105.143-16-234.286l-2.286-33.714c-1.714-24.571-5.714-41.714-13.714-50.286-12.571-13.143-27.429-20-44-19.429l-57.143 1.143-8-1.714 1.143-49.143h48l117.143 5.714c38.857 1.714 76-1.714 112-5.714l10.286 1.143c2.286 14.286 3.429 24 3.429 29.143s-1.143 10.857-2.286 17.714c-15.429 4-31.429 6.857-48 7.429-26.857 4-42.286 6.857-45.143 9.714-5.143 5.143-8.571 12.571-8.571 23.429 0 7.429 1.143 18.857 1.714 33.143 0 0 4.571 10.286 12.571 226.286 2.857 86.286-2.857 144.571-8.571 173.714s-13.714 52.571-23.429 69.714c-14.857 25.143-36.571 48.571-64 70.286-28 21.143-62.286 38.286-104 50.857s-90.286 18.857-145.714 18.857c-62.857 0-117.143-8.571-162.286-26.286s-79.429-41.143-102.286-69.714-38.857-65.714-47.429-111.429c-6.286-31.429-9.143-76.571-9.143-135.429v-190.286c0-72-3.429-112.571-9.714-121.714-9.143-13.143-37.143-21.143-84-22.286zM877.714 932.571v-36.571c0-10.286-8-18.286-18.286-18.286h-841.143c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h841.143c10.286 0 18.286-8 18.286-18.286z"],"width":877.7142857142857,"tags":["underline"],"defaultCode":61645,"grid":14},{"paths":["M292.571 786.286v-109.714c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM292.571 566.857v-109.714c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM585.143 786.286v-109.714c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM292.571 347.429v-109.714c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM585.143 566.857v-109.714c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM877.714 786.286v-109.714c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM585.143 347.429v-109.714c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM877.714 566.857v-109.714c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM877.714 347.429v-109.714c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM950.857 164.571v621.714c0 50.286-41.143 91.429-91.429 91.429h-768c-50.286 0-91.429-41.143-91.429-91.429v-621.714c0-50.286 41.143-91.429 91.429-91.429h768c50.286 0 91.429 41.143 91.429 91.429z"],"width":950.8571428571428,"tags":["table"],"defaultCode":61646,"grid":14},{"paths":["M680 332l167.429-167.429-61.143-61.143-167.429 167.429zM935.429 164.571c0 9.714-3.429 18.857-10.286 25.714l-734.857 734.857c-6.857 6.857-16 10.286-25.714 10.286s-18.857-3.429-25.714-10.286l-113.143-113.143c-6.857-6.857-10.286-16-10.286-25.714s3.429-18.857 10.286-25.714l734.857-734.857c6.857-6.857 16-10.286 25.714-10.286s18.857 3.429 25.714 10.286l113.143 113.143c6.857 6.857 10.286 16 10.286 25.714zM163.429 56l56 17.143-56 17.143-17.143 56-17.143-56-56-17.143 56-17.143 17.143-56zM363.429 148.571l112 34.286-112 34.286-34.286 112-34.286-112-112-34.286 112-34.286 34.286-112zM894.857 421.714l56 17.143-56 17.143-17.143 56-17.143-56-56-17.143 56-17.143 17.143-56zM529.143 56l56 17.143-56 17.143-17.143 56-17.143-56-56-17.143 56-17.143 17.143-56z"],"width":966.2902857142857,"tags":["magic"],"defaultCode":61648,"grid":14},{"paths":["M365.714 804.571c0-40-33.143-73.143-73.143-73.143s-73.143 33.143-73.143 73.143 33.143 73.143 73.143 73.143 73.143-33.143 73.143-73.143zM146.286 512h219.429v-146.286h-90.286c-2.286 0-10.857 3.429-12.571 5.143l-111.429 111.429c-1.714 1.714-5.143 10.286-5.143 12.571v17.143zM877.714 804.571c0-40-33.143-73.143-73.143-73.143s-73.143 33.143-73.143 73.143 33.143 73.143 73.143 73.143 73.143-33.143 73.143-73.143zM1024 182.857v585.143c0 42.286-44.571 36.571-73.143 36.571 0 80.571-65.714 146.286-146.286 146.286s-146.286-65.714-146.286-146.286h-219.429c0 80.571-65.714 146.286-146.286 146.286s-146.286-65.714-146.286-146.286h-36.571c-28.571 0-73.143 5.714-73.143-36.571 0-20 16.571-36.571 36.571-36.571v-182.857c0-40.571-5.714-85.714 25.714-117.143l113.143-113.143c14.286-14.286 41.714-25.714 62.286-25.714h91.429v-109.714c0-20 16.571-36.571 36.571-36.571h585.143c20 0 36.571 16.571 36.571 36.571z"],"width":1060.5714285714284,"tags":["truck"],"defaultCode":61649,"grid":14},{"paths":["M877.714 512c0 242.286-196.571 438.857-438.857 438.857-43.429 0-84.571-6.286-124.571-18.286 16.571-26.286 35.429-60 44.571-93.714 0 0 5.143-19.429 30.857-120.571 14.857 29.143 59.429 54.857 106.857 54.857 141.143 0 237.143-128.571 237.143-301.143 0-129.714-110.286-251.429-278.286-251.429-208 0-313.143 149.714-313.143 274.286 0 75.429 28.571 142.857 89.714 168 9.714 4 18.857 0 21.714-11.429 2.286-7.429 6.857-26.857 9.143-34.857 2.857-11.429 1.714-14.857-6.286-24.571-17.714-21.143-29.143-48-29.143-86.286 0-110.857 82.857-210.286 216-210.286 117.714 0 182.857 72 182.857 168.571 0 126.286-56 233.143-139.429 233.143-45.714 0-80-37.714-69.143-84.571 13.143-55.429 38.857-115.429 38.857-155.429 0-36-19.429-66.286-59.429-66.286-46.857 0-84.571 48.571-84.571 113.714 0 0 0 41.714 14.286 69.714-48 203.429-56.571 238.857-56.571 238.857-8 33.143-8.571 70.286-7.429 101.143-154.857-68-262.857-222.286-262.857-402.286 0-242.286 196.571-438.857 438.857-438.857s438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["pinterest"],"defaultCode":61650,"grid":14},{"paths":["M713.143 73.143c90.857 0 164.571 73.714 164.571 164.571v548.571c0 90.857-73.714 164.571-164.571 164.571h-414.286c18.857-26.857 49.714-73.143 61.714-120 0 0 5.143-19.429 30.286-119.429 15.429 29.143 59.429 54.286 106.286 54.286 139.429 0 234.286-127.429 234.286-297.714 0-128.571-109.143-248.571-274.857-248.571-206.286 0-310.286 148-310.286 271.429 0 74.286 28.571 140.571 89.143 165.714 9.714 4 18.857 0 21.714-10.857 1.714-7.429 6.286-26.857 8.571-34.857 2.857-10.857 1.714-14.857-6.286-24-17.143-21.143-28.571-47.429-28.571-85.714 0-109.714 82.286-207.429 213.714-207.429 116.571 0 180.571 70.857 180.571 166.286 0 125.143-55.429 230.857-137.714 230.857-45.143 0-79.429-37.714-68.571-84 13.143-54.857 38.286-114.286 38.286-153.714 0-35.429-18.857-65.143-58.286-65.143-46.286 0-83.429 48-83.429 112 0 0 0 41.143 13.714 69.143-47.429 201.143-56 236.571-56 236.571-12.571 52.571-7.429 113.714-4 145.143h-104.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571z"],"width":877.7142857142857,"tags":["pinterest-square"],"defaultCode":61651,"grid":14},{"paths":["M524 517.143c0-14.286-1.714-25.714-3.429-36.571h-206.857v75.429h124c-4.571 32-37.143 94.286-124 94.286-75.429 0-136.571-61.714-136.571-138.286s61.143-138.286 136.571-138.286c42.286 0 70.857 17.714 87.429 33.714l59.429-57.714c-38.286-35.429-88-57.143-146.857-57.143-121.714 0-219.429 98.286-219.429 219.429s97.714 219.429 219.429 219.429c126.286 0 210.286-89.143 210.286-214.286zM721.143 543.429h62.286v-62.857h-62.286v-62.857h-62.857v62.857h-62.857v62.857h62.857v62.857h62.857v-62.857zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["google-plus-square"],"defaultCode":61652,"grid":14},{"paths":["M821.143 521.714c0 239.429-160.571 409.143-402.286 409.143-231.429 0-418.857-187.429-418.857-418.857s187.429-418.857 418.857-418.857c113.143 0 207.429 41.143 280.571 109.714l-113.714 109.143c-30.857-29.714-85.143-64.571-166.857-64.571-142.857 0-259.429 118.286-259.429 264.571s116.571 264.571 259.429 264.571c165.714 0 228-119.429 237.714-180.571h-237.714v-144h395.429c4 21.143 6.857 42.286 6.857 69.714zM1316.571 452v120h-119.429v119.429h-120v-119.429h-119.429v-120h119.429v-119.429h120v119.429h119.429z"],"width":1316.5714285714284,"tags":["google-plus"],"defaultCode":61653,"grid":14},{"paths":["M438.857 658.286h219.429v-54.857h-73.143v-256h-65.143l-84.571 78.286 44 45.714c13.714-12 22.286-18.286 31.429-32.571h1.143v164.571h-73.143v54.857zM731.429 512c0 104-62.857 237.714-182.857 237.714s-182.857-133.714-182.857-237.714 62.857-237.714 182.857-237.714 182.857 133.714 182.857 237.714zM1024 658.286v-292.571c-80.571 0-146.286-65.714-146.286-146.286h-658.286c0 80.571-65.714 146.286-146.286 146.286v292.571c80.571 0 146.286 65.714 146.286 146.286h658.286c0-80.571 65.714-146.286 146.286-146.286zM1097.143 182.857v658.286c0 20-16.571 36.571-36.571 36.571h-1024c-20 0-36.571-16.571-36.571-36.571v-658.286c0-20 16.571-36.571 36.571-36.571h1024c20 0 36.571 16.571 36.571 36.571z"],"width":1097.142857142857,"tags":["money"],"defaultCode":61654,"grid":14},{"paths":["M585.143 402.286c0 9.714-4 18.857-10.857 25.714l-256 256c-6.857 6.857-16 10.857-25.714 10.857s-18.857-4-25.714-10.857l-256-256c-6.857-6.857-10.857-16-10.857-25.714 0-20 16.571-36.571 36.571-36.571h512c20 0 36.571 16.571 36.571 36.571z"],"width":585.1428571428571,"tags":["caret-down"],"defaultCode":61655,"grid":14},{"paths":["M585.143 694.857c0 20-16.571 36.571-36.571 36.571h-512c-20 0-36.571-16.571-36.571-36.571 0-9.714 4-18.857 10.857-25.714l256-256c6.857-6.857 16-10.857 25.714-10.857s18.857 4 25.714 10.857l256 256c6.857 6.857 10.857 16 10.857 25.714z"],"width":585.1428571428571,"tags":["caret-up"],"defaultCode":61656,"grid":14},{"paths":["M365.714 256v512c0 20-16.571 36.571-36.571 36.571-9.714 0-18.857-4-25.714-10.857l-256-256c-6.857-6.857-10.857-16-10.857-25.714s4-18.857 10.857-25.714l256-256c6.857-6.857 16-10.857 25.714-10.857 20 0 36.571 16.571 36.571 36.571z"],"width":402.2857142857143,"tags":["caret-left"],"defaultCode":61657,"grid":14},{"paths":["M329.143 512c0 9.714-4 18.857-10.857 25.714l-256 256c-6.857 6.857-16 10.857-25.714 10.857-20 0-36.571-16.571-36.571-36.571v-512c0-20 16.571-36.571 36.571-36.571 9.714 0 18.857 4 25.714 10.857l256 256c6.857 6.857 10.857 16 10.857 25.714z"],"width":329.1428571428571,"tags":["caret-right"],"defaultCode":61658,"grid":14},{"paths":["M91.429 877.714h347.429v-658.286h-365.714v640c0 9.714 8.571 18.286 18.286 18.286zM877.714 859.429v-640h-365.714v658.286h347.429c9.714 0 18.286-8.571 18.286-18.286zM950.857 164.571v694.857c0 50.286-41.143 91.429-91.429 91.429h-768c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h768c50.286 0 91.429 41.143 91.429 91.429z"],"width":950.8571428571428,"tags":["columns"],"defaultCode":61659,"grid":14},{"paths":["M585.143 621.714c0 9.714-4 18.857-10.857 25.714l-256 256c-6.857 6.857-16 10.857-25.714 10.857s-18.857-4-25.714-10.857l-256-256c-6.857-6.857-10.857-16-10.857-25.714 0-20 16.571-36.571 36.571-36.571h512c20 0 36.571 16.571 36.571 36.571zM585.143 402.286c0 20-16.571 36.571-36.571 36.571h-512c-20 0-36.571-16.571-36.571-36.571 0-9.714 4-18.857 10.857-25.714l256-256c6.857-6.857 16-10.857 25.714-10.857s18.857 4 25.714 10.857l256 256c6.857 6.857 10.857 16 10.857 25.714z"],"width":585.1428571428571,"tags":["sort","unsorted"],"defaultCode":61660,"grid":14},{"paths":["M585.143 621.714c0 9.714-4 18.857-10.857 25.714l-256 256c-6.857 6.857-16 10.857-25.714 10.857s-18.857-4-25.714-10.857l-256-256c-6.857-6.857-10.857-16-10.857-25.714 0-20 16.571-36.571 36.571-36.571h512c20 0 36.571 16.571 36.571 36.571z"],"width":585.1428571428571,"tags":["sort-desc","sort-down"],"defaultCode":61661,"grid":14},{"paths":["M585.143 402.286c0 20-16.571 36.571-36.571 36.571h-512c-20 0-36.571-16.571-36.571-36.571 0-9.714 4-18.857 10.857-25.714l256-256c6.857-6.857 16-10.857 25.714-10.857s18.857 4 25.714 10.857l256 256c6.857 6.857 10.857 16 10.857 25.714z"],"width":585.1428571428571,"tags":["sort-asc","sort-up"],"defaultCode":61662,"grid":14},{"paths":["M1024 405.714v453.714c0 50.286-41.143 91.429-91.429 91.429h-841.143c-50.286 0-91.429-41.143-91.429-91.429v-453.714c17.143 18.857 36.571 35.429 57.714 49.714 94.857 64.571 190.857 129.143 284 197.143 48 35.429 107.429 78.857 169.714 78.857h1.143c62.286 0 121.714-43.429 169.714-78.857 93.143-67.429 189.143-132.571 284.571-197.143 20.571-14.286 40-30.857 57.143-49.714zM1024 237.714c0 64-47.429 121.714-97.714 156.571-89.143 61.714-178.857 123.429-267.429 185.714-37.143 25.714-100 78.286-146.286 78.286h-1.143c-46.286 0-109.143-52.571-146.286-78.286-88.571-62.286-178.286-124-266.857-185.714-40.571-27.429-98.286-92-98.286-144 0-56 30.286-104 91.429-104h841.143c49.714 0 91.429 41.143 91.429 91.429z"],"width":1024,"tags":["envelope"],"defaultCode":61664,"grid":14},{"paths":["M199.429 357.143v566.286h-188.571v-566.286h188.571zM211.429 182.286c0.571 54.286-40.571 97.714-106.286 97.714v0h-1.143c-63.429 0-104-43.429-104-97.714 0-55.429 42.286-97.714 106.286-97.714 64.571 0 104.571 42.286 105.143 97.714zM877.714 598.857v324.571h-188v-302.857c0-76-27.429-128-95.429-128-52 0-82.857 34.857-96.571 68.571-4.571 12.571-6.286 29.143-6.286 46.286v316h-188c2.286-513.143 0-566.286 0-566.286h188v82.286h-1.143c24.571-38.857 69.143-95.429 170.857-95.429 124 0 216.571 81.143 216.571 254.857z"],"width":877.7142857142857,"tags":["linkedin"],"defaultCode":61665,"grid":14},{"paths":["M877.714 512c0 241.714-197.143 438.857-438.857 438.857-130.857 0-254.286-57.714-337.714-158.286-5.714-7.429-5.143-18.286 1.143-24.571l78.286-78.857c4-3.429 9.143-5.143 14.286-5.143 5.143 0.571 10.286 2.857 13.143 6.857 56 72.571 140 113.714 230.857 113.714 161.143 0 292.571-131.429 292.571-292.571s-131.429-292.571-292.571-292.571c-74.857 0-145.714 28.571-198.857 78.286l78.286 78.857c10.857 10.286 13.714 26.286 8 39.429-5.714 13.714-18.857 22.857-33.714 22.857h-256c-20 0-36.571-16.571-36.571-36.571v-256c0-14.857 9.143-28 22.857-33.714 13.143-5.714 29.143-2.857 39.429 8l74.286 73.714c80.571-76 189.714-121.143 302.286-121.143 241.714 0 438.857 197.143 438.857 438.857z"],"width":877.7142857142857,"tags":["rotate-left","undo"],"defaultCode":61666,"grid":14},{"paths":["M1012 877.714c0 19.429-8 38.286-21.143 51.429l-61.143 61.714c-13.714 13.143-32.571 21.143-52 21.143s-38.286-8-51.429-21.143l-207.429-208c-13.714-13.143-21.714-32-21.714-51.429 0-21.714 9.143-39.429 24.571-54.857l-146.286-146.286-72 72c-5.143 5.143-12 8-19.429 8s-14.286-2.857-19.429-8c17.143 17.143 33.143 29.714 33.143 56 0 14.857-5.714 28-16 38.857-19.429 20.571-40 48-70.857 48-14.286 0-28.571-5.714-38.857-16l-233.143-233.143c-10.286-10.286-16-24.571-16-38.857 0-30.857 27.429-51.429 48-70.857 10.857-10.286 24-16 38.857-16 26.286 0 38.857 16 56 33.143-5.143-5.143-8-12-8-19.429s2.857-14.286 8-19.429l198.857-198.857c5.143-5.143 12-8 19.429-8s14.286 2.857 19.429 8c-17.143-17.143-33.143-29.714-33.143-56 0-14.857 5.714-28 16-38.857 19.429-20.571 40-48 70.857-48 14.286 0 28.571 5.714 38.857 16l233.143 233.143c10.286 10.286 16 24.571 16 38.857 0 30.857-27.429 51.429-48 70.857-10.857 10.286-24 16-38.857 16-26.286 0-38.857-16-56-33.143 5.143 5.143 8 12 8 19.429s-2.857 14.286-8 19.429l-72 72 146.286 146.286c15.429-15.429 33.143-24.571 54.857-24.571 19.429 0 38.286 8 52 21.143l207.429 207.429c13.143 13.714 21.143 32.571 21.143 52z"],"width":1034.8251428571427,"tags":["gavel","legal"],"defaultCode":61667,"grid":14},{"paths":["M219.429 658.286c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM329.143 402.286c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM573.714 677.143l57.714-218.286c4.571-19.429-6.857-39.429-26.286-44.571v0c-19.429-5.143-39.429 6.857-44.571 26.286l-57.714 218.286c-45.143 3.429-84.571 34.857-97.143 81.143-15.429 58.857 20 118.857 78.286 134.286 58.857 15.429 118.857-20 134.286-78.286 12-46.286-7.429-93.143-44.571-118.857zM950.857 658.286c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM585.143 292.571c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM841.143 402.286c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM1024 658.286c0 98.286-28 193.143-80.571 276-6.857 10.286-18.286 16.571-30.857 16.571h-801.143c-12.571 0-24-6.286-30.857-16.571-52.571-82.286-80.571-177.714-80.571-276 0-282.286 229.714-512 512-512s512 229.714 512 512z"],"width":1024,"tags":["dashboard","tachometer"],"defaultCode":61668,"grid":14},{"paths":["M512 219.429c-237.714 0-438.857 133.714-438.857 292.571 0 85.143 57.143 166.286 156 222.286l49.714 28.571-15.429 54.857c-10.857 40.571-25.143 72-40 98.286 57.714-24 110.286-56.571 157.143-97.714l24.571-21.714 32.571 3.429c24.571 2.857 49.714 4.571 74.286 4.571 237.714 0 438.857-133.714 438.857-292.571s-201.143-292.571-438.857-292.571zM1024 512c0 202.286-229.143 365.714-512 365.714-28 0-56-1.714-82.857-4.571-74.857 66.286-164 113.143-262.857 138.286-20.571 5.714-42.857 9.714-65.143 12.571h-2.857c-11.429 0-21.714-9.143-24.571-21.714v-0.571c-2.857-14.286 6.857-22.857 15.429-33.143 36-40.571 77.143-74.857 104-170.286-117.714-66.857-193.143-170.286-193.143-286.286 0-202.286 229.143-365.714 512-365.714v0c282.857 0 512 163.429 512 365.714z"],"width":1024,"tags":["comment-o"],"defaultCode":61669,"grid":14},{"paths":["M402.286 219.429c-178.286 0-329.143 100.571-329.143 219.429 0 62.857 42.286 123.429 115.429 165.714l55.429 32-20 48c12-6.857 24-14.286 35.429-22.286l25.143-17.714 30.286 5.714c28.571 5.143 57.714 8 87.429 8 178.286 0 329.143-100.571 329.143-219.429s-150.857-219.429-329.143-219.429zM402.286 146.286c222.286 0 402.286 130.857 402.286 292.571s-180 292.571-402.286 292.571c-34.857 0-68.571-3.429-100.571-9.143-47.429 33.714-101.143 58.286-158.857 73.143-15.429 4-32 6.857-49.143 9.143h-1.714c-8.571 0-16.571-6.857-18.286-16.571v0c-2.286-10.857 5.143-17.714 11.429-25.143 22.286-25.143 47.429-47.429 66.857-94.857-92.571-53.714-152-136.571-152-229.143 0-161.714 180-292.571 402.286-292.571zM872 814.286c19.429 47.429 44.571 69.714 66.857 94.857 6.286 7.429 13.714 14.286 11.429 25.143v0c-2.286 10.286-10.857 17.714-20 16.571-17.143-2.286-33.714-5.143-49.143-9.143-57.714-14.857-111.429-39.429-158.857-73.143-32 5.714-65.714 9.143-100.571 9.143-103.429 0-198.286-28.571-269.714-75.429 16.571 1.143 33.714 2.286 50.286 2.286 122.857 0 238.857-35.429 327.429-99.429 95.429-69.714 148-164 148-266.286 0-29.714-4.571-58.857-13.143-86.857 96.571 53.143 159.429 137.714 159.429 233.143 0 93.143-59.429 175.429-152 229.143z"],"width":1024,"tags":["comments-o"],"defaultCode":61670,"grid":14},{"paths":["M505.714 323.429c6.286 6.857 8 16.571 4 25.143l-308.571 661.143c-4.571 8.571-13.714 14.286-24 14.286-2.286 0-5.143-0.571-8-1.143-12.571-4-20-16-17.143-28l112.571-461.714-232 57.714c-2.286 0.571-4.571 0.571-6.857 0.571-6.286 0-13.143-2.286-17.714-6.286-6.857-5.714-9.143-14.286-7.429-22.286l114.857-471.429c2.857-10.857 13.143-18.286 25.143-18.286h187.429c14.286 0 25.714 10.857 25.714 24 0 3.429-1.143 6.857-2.857 10.286l-97.714 264.571 226.286-56c2.286-0.571 4.571-1.143 6.857-1.143 7.429 0 14.286 3.429 19.429 8.571z"],"width":512.5851428571428,"tags":["bolt","flash"],"defaultCode":61671,"grid":14},{"paths":["M1024 713.143v182.857c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-182.857c0-30.286 24.571-54.857 54.857-54.857h54.857v-109.714h-292.571v109.714h54.857c30.286 0 54.857 24.571 54.857 54.857v182.857c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-182.857c0-30.286 24.571-54.857 54.857-54.857h54.857v-109.714h-292.571v109.714h54.857c30.286 0 54.857 24.571 54.857 54.857v182.857c0 30.286-24.571 54.857-54.857 54.857h-182.857c-30.286 0-54.857-24.571-54.857-54.857v-182.857c0-30.286 24.571-54.857 54.857-54.857h54.857v-109.714c0-40 33.143-73.143 73.143-73.143h292.571v-109.714h-54.857c-30.286 0-54.857-24.571-54.857-54.857v-182.857c0-30.286 24.571-54.857 54.857-54.857h182.857c30.286 0 54.857 24.571 54.857 54.857v182.857c0 30.286-24.571 54.857-54.857 54.857h-54.857v109.714h292.571c40 0 73.143 33.143 73.143 73.143v109.714h54.857c30.286 0 54.857 24.571 54.857 54.857z"],"width":1024,"tags":["sitemap"],"defaultCode":61672,"grid":14},{"paths":["M512 473.143v331.429c0 79.429-66.857 146.286-146.286 146.286s-146.286-66.857-146.286-146.286c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571c0 38.286 34.857 73.143 73.143 73.143s73.143-34.857 73.143-73.143v-331.429c12-4 24-6.286 36.571-6.286s24.571 2.286 36.571 6.286zM950.857 488.571c0 9.714-8.571 18.286-18.286 18.286-5.143 0-9.143-2.286-13.143-5.714-33.143-30.857-64-52.571-111.429-52.571-54.286 0-101.143 33.714-132 76.571-6.857 9.714-12 20-18.286 29.714-4 6.286-8.571 9.714-16 9.714-8 0-12.571-3.429-16.571-9.714-6.286-9.714-11.429-20-18.286-29.714-30.857-42.857-77.143-76.571-131.429-76.571s-100.571 33.714-131.429 76.571c-6.857 9.714-12 20-18.286 29.714-4 6.286-8.571 9.714-16.571 9.714-7.429 0-12-3.429-16-9.714-6.286-9.714-11.429-20-18.286-29.714-30.857-42.857-77.714-76.571-132-76.571-47.429 0-78.286 21.714-111.429 52.571-4 3.429-8 5.714-13.143 5.714-9.714 0-18.286-8.571-18.286-18.286 0-1.714 0-2.857 0.571-4 52.571-216 261.143-338.286 474.857-338.286 212.571 0 423.429 122.286 474.857 338.286 0.571 1.143 0.571 2.286 0.571 4zM512 73.143v56c-12-0.571-24.571-1.143-36.571-1.143s-24.571 0.571-36.571 1.143v-56c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571z"],"width":950.8571428571428,"tags":["umbrella"],"defaultCode":61673,"grid":14},{"paths":["M438.857 950.857h512v-365.714h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-219.429v658.286zM585.143 128v-36.571c0-9.714-8.571-18.286-18.286-18.286h-402.286c-9.714 0-18.286 8.571-18.286 18.286v36.571c0 9.714 8.571 18.286 18.286 18.286h402.286c9.714 0 18.286-8.571 18.286-18.286zM731.429 512h170.857l-170.857-170.857v170.857zM1024 585.143v384c0 30.286-24.571 54.857-54.857 54.857h-548.571c-30.286 0-54.857-24.571-54.857-54.857v-91.429h-310.857c-30.286 0-54.857-24.571-54.857-54.857v-768c0-30.286 24.571-54.857 54.857-54.857h621.714c30.286 0 54.857 24.571 54.857 54.857v187.429c7.429 4.571 14.286 9.714 20.571 16l233.143 233.143c21.714 21.714 38.857 63.429 38.857 93.714z"],"width":1024,"tags":["clipboard","paste"],"defaultCode":61674,"grid":14},{"paths":["M420.571 329.143c0 9.714-8.571 18.286-18.286 18.286s-18.286-8.571-18.286-18.286c0-39.429-61.143-54.857-91.429-54.857-9.714 0-18.286-8.571-18.286-18.286s8.571-18.286 18.286-18.286c53.143 0 128 28 128 91.429zM512 329.143c0-114.286-116-182.857-219.429-182.857s-219.429 68.571-219.429 182.857c0 36.571 14.857 74.857 38.857 102.857 10.857 12.571 23.429 24.571 34.857 37.714 40.571 48.571 74.857 105.714 80.571 170.286h130.286c5.714-64.571 40-121.714 80.571-170.286 11.429-13.143 24-25.143 34.857-37.714 24-28 38.857-66.286 38.857-102.857zM585.143 329.143c0 58.857-19.429 109.714-58.857 153.143s-91.429 104.571-96 165.714c16.571 9.714 26.857 28 26.857 46.857 0 13.714-5.143 26.857-14.286 36.571 9.143 9.714 14.286 22.857 14.286 36.571 0 18.857-9.714 36-25.714 46.286 4.571 8 7.429 17.714 7.429 26.857 0 37.143-29.143 54.857-62.286 54.857-14.857 33.143-48 54.857-84 54.857s-69.143-21.714-84-54.857c-33.143 0-62.286-17.714-62.286-54.857 0-9.143 2.857-18.857 7.429-26.857-16-10.286-25.714-27.429-25.714-46.286 0-13.714 5.143-26.857 14.286-36.571-9.143-9.714-14.286-22.857-14.286-36.571 0-18.857 10.286-37.143 26.857-46.857-4.571-61.143-56.571-122.286-96-165.714s-58.857-94.286-58.857-153.143c0-155.429 148-256 292.571-256s292.571 100.571 292.571 256z"],"width":585.1428571428571,"tags":["lightbulb-o"],"defaultCode":61675,"grid":14},{"paths":["M1024 676.571v109.714c0 9.714-8.571 18.286-18.286 18.286h-786.286v109.714c0 9.714-8 18.286-18.286 18.286-5.143 0-9.714-2.286-13.714-5.714l-182.286-182.857c-3.429-3.429-5.143-8-5.143-12.571 0-5.143 1.714-9.714 5.143-13.143l182.857-182.857c3.429-3.429 8.571-5.143 13.143-5.143 9.714 0 18.286 8 18.286 18.286v109.714h786.286c9.714 0 18.286 8 18.286 18.286zM1024 365.714c0 4.571-1.714 9.714-5.143 13.143l-182.857 182.857c-3.429 3.429-8.571 5.143-13.143 5.143-9.714 0-18.286-8.571-18.286-18.286v-109.714h-786.286c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h786.286v-109.714c0-10.286 8-18.286 18.286-18.286 5.143 0 9.714 2.286 13.714 5.714l182.286 182.286c3.429 3.429 5.143 8.571 5.143 13.143z"],"width":1024,"tags":["exchange"],"defaultCode":61676,"grid":14},{"paths":["M731.429 530.286c0-10.286-8-18.286-18.286-18.286h-128v-201.143c0-9.714-8.571-18.286-18.286-18.286h-109.714c-9.714 0-18.286 8.571-18.286 18.286v201.143h-128c-10.286 0-18.286 8.571-18.286 18.286 0 4.571 1.714 9.714 5.143 13.143l201.143 201.143c3.429 3.429 8 5.143 13.143 5.143 4.571 0 9.714-1.714 13.143-5.143l200.571-200.571c3.429-4 5.714-8.571 5.714-13.714zM1097.143 658.286c0 121.143-98.286 219.429-219.429 219.429h-621.714c-141.143 0-256-114.857-256-256 0-99.429 57.714-189.714 147.429-231.429-0.571-8.571-1.143-16.571-1.143-24.571 0-161.714 130.857-292.571 292.571-292.571 118.857 0 225.714 72 270.857 181.714 26.286-22.857 60-35.429 94.857-35.429 80.571 0 146.286 65.714 146.286 146.286 0 28-8 55.429-23.429 78.857 99.429 23.429 169.714 112 169.714 213.714z"],"width":1097.142857142857,"tags":["cloud-download"],"defaultCode":61677,"grid":14},{"paths":["M731.429 493.714c0-4.571-1.714-9.714-5.143-13.143l-201.143-201.143c-3.429-3.429-8-5.143-13.143-5.143-4.571 0-9.714 1.714-13.143 5.143l-200.571 200.571c-3.429 4-5.714 8.571-5.714 13.714 0 10.286 8 18.286 18.286 18.286h128v201.143c0 9.714 8.571 18.286 18.286 18.286h109.714c9.714 0 18.286-8.571 18.286-18.286v-201.143h128c10.286 0 18.286-8.571 18.286-18.286zM1097.143 658.286c0 121.143-98.286 219.429-219.429 219.429h-621.714c-141.143 0-256-114.857-256-256 0-99.429 57.714-189.714 147.429-231.429-0.571-8.571-1.143-16.571-1.143-24.571 0-161.714 130.857-292.571 292.571-292.571 118.857 0 225.714 72 270.857 181.714 26.286-22.857 60-35.429 94.857-35.429 80.571 0 146.286 65.714 146.286 146.286 0 28-8 55.429-23.429 78.857 99.429 23.429 169.714 112 169.714 213.714z"],"width":1097.142857142857,"tags":["cloud-upload"],"defaultCode":61678,"grid":14},{"paths":["M219.429 768c0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571 36.571 16.571 36.571 36.571zM804.571 802.857c0 93.143-61.143 148-152.571 148h-499.429c-91.429 0-152.571-54.857-152.571-148 0-113.714 22.857-293.143 158.857-322.857-9.143 21.714-12.571 45.143-12.571 68.571v116c-44 15.429-73.143 57.143-73.143 103.429 0 60.571 49.143 109.714 109.714 109.714s109.714-49.143 109.714-109.714c0-46.286-29.714-88-73.143-103.429v-116c0-18.857 1.714-37.714 14.286-53.143 48 37.714 107.429 59.429 168.571 59.429s120.571-21.714 168.571-59.429c12.571 15.429 14.286 34.286 14.286 53.143v36.571c-80.571 0-146.286 65.714-146.286 146.286v50.857c-11.429 10.286-18.286 25.143-18.286 40.571 0 30.286 24.571 54.857 54.857 54.857s54.857-24.571 54.857-54.857c0-15.429-6.857-30.286-18.286-40.571v-50.857c0-40 33.143-73.143 73.143-73.143s73.143 33.143 73.143 73.143v50.857c-11.429 10.286-18.286 25.143-18.286 40.571 0 30.286 24.571 54.857 54.857 54.857s54.857-24.571 54.857-54.857c0-15.429-6.857-30.286-18.286-40.571v-50.857c0-52-28-100.571-73.143-126.286 0-41.714 4-86.286-12.571-125.143 136 29.714 158.857 209.143 158.857 322.857zM621.714 292.571c0 121.143-98.286 219.429-219.429 219.429s-219.429-98.286-219.429-219.429 98.286-219.429 219.429-219.429 219.429 98.286 219.429 219.429z"],"width":804.5714285714286,"tags":["user-md"],"defaultCode":61680,"grid":14},{"paths":["M731.429 402.286c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM804.571 402.286c0 48-30.286 88-73.143 103.429v225.714c0 121.143-114.857 219.429-256 219.429s-256-98.286-256-219.429v-75.429c-124-15.429-219.429-106.857-219.429-217.143v-292.571c0-20 16.571-36.571 36.571-36.571 3.429 0 6.286 0.571 9.143 1.143 12.571-22.286 36.571-37.714 64-37.714 40.571 0 73.143 32.571 73.143 73.143s-32.571 73.143-73.143 73.143c-13.143 0-25.714-4-36.571-10.286v229.714c0 80.571 82.286 146.286 182.857 146.286s182.857-65.714 182.857-146.286v-229.714c-10.857 6.286-23.429 10.286-36.571 10.286-40.571 0-73.143-32.571-73.143-73.143s32.571-73.143 73.143-73.143c27.429 0 51.429 15.429 64 37.714 2.857-0.571 5.714-1.143 9.143-1.143 20 0 36.571 16.571 36.571 36.571v292.571c0 110.286-95.429 201.714-219.429 217.143v75.429c0 80.571 82.286 146.286 182.857 146.286s182.857-65.714 182.857-146.286v-225.714c-42.857-15.429-73.143-55.429-73.143-103.429 0-60.571 49.143-109.714 109.714-109.714s109.714 49.143 109.714 109.714z"],"width":804.5714285714286,"tags":["stethoscope"],"defaultCode":61681,"grid":14},{"paths":["M365.714 219.429h292.571v-73.143h-292.571v73.143zM164.571 219.429v731.429h-36.571c-70.286 0-128-57.714-128-128v-475.429c0-70.286 57.714-128 128-128h36.571zM804.571 219.429v731.429h-585.143v-731.429h73.143v-91.429c0-30.286 24.571-54.857 54.857-54.857h329.143c30.286 0 54.857 24.571 54.857 54.857v91.429h73.143zM1024 347.429v475.429c0 70.286-57.714 128-128 128h-36.571v-731.429h36.571c70.286 0 128 57.714 128 128z"],"width":1024,"tags":["suitcase"],"defaultCode":61682,"grid":14},{"paths":["M521.143 969.143c0-5.143-4-9.143-9.143-9.143-45.143 0-82.286-37.143-82.286-82.286 0-5.143-4-9.143-9.143-9.143s-9.143 4-9.143 9.143c0 55.429 45.143 100.571 100.571 100.571 5.143 0 9.143-4 9.143-9.143zM987.429 804.571c0 40-33.143 73.143-73.143 73.143h-256c0 80.571-65.714 146.286-146.286 146.286s-146.286-65.714-146.286-146.286h-256c-40 0-73.143-33.143-73.143-73.143 84.571-71.429 182.857-199.429 182.857-475.429 0-109.714 90.857-229.714 242.286-252-2.857-6.857-4.571-14.286-4.571-22.286 0-30.286 24.571-54.857 54.857-54.857s54.857 24.571 54.857 54.857c0 8-1.714 15.429-4.571 22.286 151.429 22.286 242.286 142.286 242.286 252 0 276 98.286 404 182.857 475.429z"],"width":1024,"tags":["bell"],"defaultCode":61683,"grid":14},{"paths":["M950.857 365.714c0-60.571-49.143-109.714-109.714-109.714h-36.571v219.429h36.571c60.571 0 109.714-49.143 109.714-109.714zM0 804.571h1024c0 80.571-65.714 146.286-146.286 146.286h-731.429c-80.571 0-146.286-65.714-146.286-146.286zM1060.571 365.714c0 121.143-98.286 219.429-219.429 219.429h-36.571v18.286c0 70.286-57.714 128-128 128h-402.286c-70.286 0-128-57.714-128-128v-420.571c0-20 16.571-36.571 36.571-36.571h658.286c121.143 0 219.429 98.286 219.429 219.429z"],"width":1060.5714285714284,"tags":["coffee"],"defaultCode":61684,"grid":14},{"paths":["M365.714 36.571v365.714c0 46.286-29.714 88-73.143 103.429v445.143c0 40-33.143 73.143-73.143 73.143h-73.143c-40 0-73.143-33.143-73.143-73.143v-445.143c-43.429-15.429-73.143-57.143-73.143-103.429v-365.714c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571v237.714c0 20 16.571 36.571 36.571 36.571s36.571-16.571 36.571-36.571v-237.714c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571v237.714c0 20 16.571 36.571 36.571 36.571s36.571-16.571 36.571-36.571v-237.714c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571zM804.571 36.571v914.286c0 40-33.143 73.143-73.143 73.143h-73.143c-40 0-73.143-33.143-73.143-73.143v-292.571h-128c-9.714 0-18.286-8.571-18.286-18.286v-457.143c0-100.571 82.286-182.857 182.857-182.857h146.286c20 0 36.571 16.571 36.571 36.571z"],"width":804.5714285714286,"tags":["cutlery"],"defaultCode":61685,"grid":14},{"paths":["M838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-438.857v877.714h731.429zM219.429 457.143c0-10.286 8-18.286 18.286-18.286h402.286c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-402.286c-10.286 0-18.286-8-18.286-18.286v-36.571zM640 585.143c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-402.286c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h402.286zM640 731.429c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-402.286c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h402.286z"],"width":877.7142857142857,"tags":["file-text-o"],"defaultCode":61686,"grid":14},{"paths":["M219.429 749.714v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM219.429 603.429v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM365.714 603.429v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM219.429 457.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM658.286 749.714v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM512 603.429v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM365.714 457.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM219.429 310.857v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM658.286 603.429v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM512 457.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM365.714 310.857v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM219.429 164.571v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM658.286 457.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM512 310.857v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM365.714 164.571v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM658.286 310.857v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM512 164.571v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM658.286 164.571v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM512 950.857h219.429v-877.714h-658.286v877.714h219.429v-128c0-9.714 8.571-18.286 18.286-18.286h182.857c9.714 0 18.286 8.571 18.286 18.286v128zM804.571 36.571v950.857c0 20-16.571 36.571-36.571 36.571h-731.429c-20 0-36.571-16.571-36.571-36.571v-950.857c0-20 16.571-36.571 36.571-36.571h731.429c20 0 36.571 16.571 36.571 36.571z"],"width":804.5714285714286,"tags":["building-o"],"defaultCode":61687,"grid":14},{"paths":["M219.429 749.714v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM219.429 603.429v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM365.714 603.429v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM219.429 457.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM658.286 749.714v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM512 603.429v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM365.714 457.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM658.286 603.429v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM512 457.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM658.286 457.143v36.571c0 9.714-8.571 18.286-18.286 18.286h-36.571c-9.714 0-18.286-8.571-18.286-18.286v-36.571c0-9.714 8.571-18.286 18.286-18.286h36.571c9.714 0 18.286 8.571 18.286 18.286zM512 950.857h219.429v-658.286h-146.286v18.286c0 30.286-24.571 54.857-54.857 54.857h-256c-30.286 0-54.857-24.571-54.857-54.857v-18.286h-146.286v658.286h219.429v-128c0-9.714 8.571-18.286 18.286-18.286h182.857c9.714 0 18.286 8.571 18.286 18.286v128zM512 274.286v-182.857c0-9.714-8.571-18.286-18.286-18.286h-36.571c-9.714 0-18.286 8.571-18.286 18.286v54.857h-73.143v-54.857c0-9.714-8.571-18.286-18.286-18.286h-36.571c-9.714 0-18.286 8.571-18.286 18.286v182.857c0 9.714 8.571 18.286 18.286 18.286h36.571c9.714 0 18.286-8.571 18.286-18.286v-54.857h73.143v54.857c0 9.714 8.571 18.286 18.286 18.286h36.571c9.714 0 18.286-8.571 18.286-18.286zM804.571 256v731.429c0 20-16.571 36.571-36.571 36.571h-731.429c-20 0-36.571-16.571-36.571-36.571v-731.429c0-20 16.571-36.571 36.571-36.571h182.857v-164.571c0-30.286 24.571-54.857 54.857-54.857h256c30.286 0 54.857 24.571 54.857 54.857v164.571h182.857c20 0 36.571 16.571 36.571 36.571z"],"width":804.5714285714286,"tags":["hospital-o"],"defaultCode":61688,"grid":14},{"paths":["M365.714 804.571c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM146.286 512h219.429v-146.286h-90.286c-3.429 0.571-9.714 2.857-12.571 5.143l-111.429 111.429c-1.714 2.857-4.571 9.143-5.143 12.571v17.143zM877.714 804.571c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM950.857 420.571v-109.714c0-10.286-8-18.286-18.286-18.286h-128v-128c0-10.286-8-18.286-18.286-18.286h-109.714c-10.286 0-18.286 8-18.286 18.286v128h-128c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h128v128c0 10.286 8 18.286 18.286 18.286h109.714c10.286 0 18.286-8 18.286-18.286v-128h128c10.286 0 18.286-8 18.286-18.286zM1097.143 109.714v658.286c0 20-16.571 36.571-36.571 36.571h-109.714c0 80.571-65.143 146.286-146.286 146.286-80.571 0-146.286-65.714-146.286-146.286h-219.429c0 80.571-65.143 146.286-146.286 146.286s-146.286-65.714-146.286-146.286h-73.143c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571v-237.714c0-20 11.429-48 25.714-62.286l113.143-113.143c14.286-14.286 42.286-25.714 62.286-25.714h91.429v-182.857c0-20 16.571-36.571 36.571-36.571h658.286c20 0 36.571 16.571 36.571 36.571z"],"width":1133.7142857142856,"tags":["ambulance"],"defaultCode":61689,"grid":14},{"paths":["M731.429 640v-109.714c0-10.286-8-18.286-18.286-18.286h-128v-128c0-10.286-8-18.286-18.286-18.286h-109.714c-10.286 0-18.286 8-18.286 18.286v128h-128c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h128v128c0 10.286 8 18.286 18.286 18.286h109.714c10.286 0 18.286-8 18.286-18.286v-128h128c10.286 0 18.286-8 18.286-18.286zM365.714 219.429h292.571v-73.143h-292.571v73.143zM146.286 219.429v731.429h-18.286c-70.286 0-128-57.714-128-128v-475.429c0-70.286 57.714-128 128-128h18.286zM822.857 219.429v731.429h-621.714v-731.429h91.429v-91.429c0-30.286 24.571-54.857 54.857-54.857h329.143c30.286 0 54.857 24.571 54.857 54.857v91.429h91.429zM1024 347.429v475.429c0 70.286-57.714 128-128 128h-18.286v-731.429h18.286c70.286 0 128 57.714 128 128z"],"width":1024,"tags":["medkit"],"defaultCode":61690,"grid":14},{"paths":["M1097.143 548.571c0 0 0 18.286-164.571 54.857l-201.143 18.286-128 36.571h-36.571l-167.429 201.143h39.429c20 0 36.571 4 36.571 9.143s-16.571 9.143-36.571 9.143h-182.857v-18.286h36.571v-237.714h-91.429l-109.714 128h-54.857l-18.286-18.286v-109.714h18.286v-18.286h73.143v-4.571l-109.714-13.714v-73.143l109.714-13.714v-4.571h-73.143v-18.286h-18.286v-109.714l18.286-18.286h54.857l109.714 128h91.429v-237.714h-36.571v-18.286h182.857c20 0 36.571 4 36.571 9.143s-16.571 9.143-36.571 9.143h-39.429l167.429 201.143h36.571l128 36.571 201.143 18.286c164.571 36.571 164.571 54.857 164.571 54.857z"],"width":1097.142857142857,"tags":["fighter-jet"],"defaultCode":61691,"grid":14},{"paths":["M365.714 512v-219.429h-146.286v146.286c0 40.571 32.571 73.143 73.143 73.143h73.143zM950.857 768v109.714h-658.286v-109.714l73.143-109.714h-73.143c-121.143 0-219.429-98.286-219.429-219.429v-182.857l-36.571-36.571 18.286-73.143h274.286l18.286-73.143h548.571l18.286 109.714-36.571 18.286v457.143z"],"width":987.4285714285713,"tags":["beer"],"defaultCode":61692,"grid":14},{"paths":["M731.429 768v-512c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v182.857h-292.571v-182.857c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v512c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571v-182.857h292.571v182.857c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["h-square"],"defaultCode":61693,"grid":14},{"paths":["M731.429 548.571v-73.143c0-20-16.571-36.571-36.571-36.571h-182.857v-182.857c0-20-16.571-36.571-36.571-36.571h-73.143c-20 0-36.571 16.571-36.571 36.571v182.857h-182.857c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h182.857v182.857c0 20 16.571 36.571 36.571 36.571h73.143c20 0 36.571-16.571 36.571-36.571v-182.857h182.857c20 0 36.571-16.571 36.571-36.571zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["plus-square"],"defaultCode":61694,"grid":14},{"paths":["M358.286 786.286c0 4.571-2.286 9.714-5.714 13.143l-28.571 28.571c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-266.286-266.286c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l266.286-266.286c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l28.571 28.571c3.429 3.429 5.714 8.571 5.714 13.143s-2.286 9.714-5.714 13.143l-224.571 224.571 224.571 224.571c3.429 3.429 5.714 8.571 5.714 13.143zM577.714 786.286c0 4.571-2.286 9.714-5.714 13.143l-28.571 28.571c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-266.286-266.286c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l266.286-266.286c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l28.571 28.571c3.429 3.429 5.714 8.571 5.714 13.143s-2.286 9.714-5.714 13.143l-224.571 224.571 224.571 224.571c3.429 3.429 5.714 8.571 5.714 13.143z"],"width":603.4285714285714,"tags":["angle-double-left"],"defaultCode":61696,"grid":14},{"paths":["M340 548.571c0 4.571-2.286 9.714-5.714 13.143l-266.286 266.286c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-28.571-28.571c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l224.571-224.571-224.571-224.571c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l28.571-28.571c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l266.286 266.286c3.429 3.429 5.714 8.571 5.714 13.143zM559.429 548.571c0 4.571-2.286 9.714-5.714 13.143l-266.286 266.286c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-28.571-28.571c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l224.571-224.571-224.571-224.571c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l28.571-28.571c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l266.286 266.286c3.429 3.429 5.714 8.571 5.714 13.143z"],"width":566.8571428571428,"tags":["angle-double-right"],"defaultCode":61697,"grid":14},{"paths":["M614.286 749.714c0 4.571-2.286 9.714-5.714 13.143l-28.571 28.571c-3.429 3.429-8 5.714-13.143 5.714-4.571 0-9.714-2.286-13.143-5.714l-224.571-224.571-224.571 224.571c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-28.571-28.571c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l266.286-266.286c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l266.286 266.286c3.429 3.429 5.714 8.571 5.714 13.143zM614.286 530.286c0 4.571-2.286 9.714-5.714 13.143l-28.571 28.571c-3.429 3.429-8 5.714-13.143 5.714-4.571 0-9.714-2.286-13.143-5.714l-224.571-224.571-224.571 224.571c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-28.571-28.571c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l266.286-266.286c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l266.286 266.286c3.429 3.429 5.714 8.571 5.714 13.143z"],"width":658.2857142857142,"tags":["angle-double-up"],"defaultCode":61698,"grid":14},{"paths":["M614.286 493.714c0 4.571-2.286 9.714-5.714 13.143l-266.286 266.286c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-266.286-266.286c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l28.571-28.571c3.429-3.429 8-5.714 13.143-5.714 4.571 0 9.714 2.286 13.143 5.714l224.571 224.571 224.571-224.571c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l28.571 28.571c3.429 3.429 5.714 8.571 5.714 13.143zM614.286 274.286c0 4.571-2.286 9.714-5.714 13.143l-266.286 266.286c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-266.286-266.286c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l28.571-28.571c3.429-3.429 8-5.714 13.143-5.714 4.571 0 9.714 2.286 13.143 5.714l224.571 224.571 224.571-224.571c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l28.571 28.571c3.429 3.429 5.714 8.571 5.714 13.143z"],"width":658.2857142857142,"tags":["angle-double-down"],"defaultCode":61699,"grid":14},{"paths":["M358.286 310.857c0 4.571-2.286 9.714-5.714 13.143l-224.571 224.571 224.571 224.571c3.429 3.429 5.714 8.571 5.714 13.143s-2.286 9.714-5.714 13.143l-28.571 28.571c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-266.286-266.286c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l266.286-266.286c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l28.571 28.571c3.429 3.429 5.714 8 5.714 13.143z"],"width":384,"tags":["angle-left"],"defaultCode":61700,"grid":14},{"paths":["M340 548.571c0 4.571-2.286 9.714-5.714 13.143l-266.286 266.286c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-28.571-28.571c-3.429-3.429-5.714-8-5.714-13.143 0-4.571 2.286-9.714 5.714-13.143l224.571-224.571-224.571-224.571c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l28.571-28.571c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l266.286 266.286c3.429 3.429 5.714 8.571 5.714 13.143z"],"width":347.4285714285714,"tags":["angle-right"],"defaultCode":61701,"grid":14},{"paths":["M614.286 676.571c0 4.571-2.286 9.714-5.714 13.143l-28.571 28.571c-3.429 3.429-8 5.714-13.143 5.714-4.571 0-9.714-2.286-13.143-5.714l-224.571-224.571-224.571 224.571c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-28.571-28.571c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l266.286-266.286c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l266.286 266.286c3.429 3.429 5.714 8.571 5.714 13.143z"],"width":658.2857142857142,"tags":["angle-up"],"defaultCode":61702,"grid":14},{"paths":["M614.286 420.571c0 4.571-2.286 9.714-5.714 13.143l-266.286 266.286c-3.429 3.429-8.571 5.714-13.143 5.714s-9.714-2.286-13.143-5.714l-266.286-266.286c-3.429-3.429-5.714-8.571-5.714-13.143s2.286-9.714 5.714-13.143l28.571-28.571c3.429-3.429 8-5.714 13.143-5.714 4.571 0 9.714 2.286 13.143 5.714l224.571 224.571 224.571-224.571c3.429-3.429 8.571-5.714 13.143-5.714s9.714 2.286 13.143 5.714l28.571 28.571c3.429 3.429 5.714 8.571 5.714 13.143z"],"width":658.2857142857142,"tags":["angle-down"],"defaultCode":61703,"grid":14},{"paths":["M1024 566.857v-475.429c0-9.714-8.571-18.286-18.286-18.286h-914.286c-9.714 0-18.286 8.571-18.286 18.286v475.429c0 9.714 8.571 18.286 18.286 18.286h914.286c9.714 0 18.286-8.571 18.286-18.286zM1097.143 91.429v621.714c0 50.286-41.143 91.429-91.429 91.429h-310.857c0 48.571 36.571 89.714 36.571 109.714s-16.571 36.571-36.571 36.571h-292.571c-20 0-36.571-16.571-36.571-36.571 0-21.143 36.571-60 36.571-109.714h-310.857c-50.286 0-91.429-41.143-91.429-91.429v-621.714c0-50.286 41.143-91.429 91.429-91.429h914.286c50.286 0 91.429 41.143 91.429 91.429z"],"width":1097.142857142857,"tags":["desktop"],"defaultCode":61704,"grid":14},{"paths":["M237.714 731.429c-50.286 0-91.429-41.143-91.429-91.429v-402.286c0-50.286 41.143-91.429 91.429-91.429h621.714c50.286 0 91.429 41.143 91.429 91.429v402.286c0 50.286-41.143 91.429-91.429 91.429h-621.714zM219.429 237.714v402.286c0 9.714 8.571 18.286 18.286 18.286h621.714c9.714 0 18.286-8.571 18.286-18.286v-402.286c0-9.714-8.571-18.286-18.286-18.286h-621.714c-9.714 0-18.286 8.571-18.286 18.286zM1005.714 768h91.429v54.857c0 30.286-41.143 54.857-91.429 54.857h-914.286c-50.286 0-91.429-24.571-91.429-54.857v-54.857h1005.714zM594.286 822.857c5.143 0 9.143-4 9.143-9.143s-4-9.143-9.143-9.143h-91.429c-5.143 0-9.143 4-9.143 9.143s4 9.143 9.143 9.143h91.429z"],"width":1097.142857142857,"tags":["laptop"],"defaultCode":61705,"grid":14},{"paths":["M365.714 804.571c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM585.143 713.143v-548.571c0-9.714-8.571-18.286-18.286-18.286h-475.429c-9.714 0-18.286 8.571-18.286 18.286v548.571c0 9.714 8.571 18.286 18.286 18.286h475.429c9.714 0 18.286-8.571 18.286-18.286zM658.286 164.571v621.714c0 50.286-41.143 91.429-91.429 91.429h-475.429c-50.286 0-91.429-41.143-91.429-91.429v-621.714c0-50.286 41.143-91.429 91.429-91.429h475.429c50.286 0 91.429 41.143 91.429 91.429z"],"width":658.2857142857142,"tags":["tablet"],"defaultCode":61706,"grid":14},{"paths":["M265.143 804.571c0-25.143-20.571-45.714-45.714-45.714s-45.714 20.571-45.714 45.714 20.571 45.714 45.714 45.714 45.714-20.571 45.714-45.714zM384 713.143v-402.286c0-9.714-8.571-18.286-18.286-18.286h-292.571c-9.714 0-18.286 8.571-18.286 18.286v402.286c0 9.714 8.571 18.286 18.286 18.286h292.571c9.714 0 18.286-8.571 18.286-18.286zM274.286 228.571c0-5.143-4-9.143-9.143-9.143h-91.429c-5.143 0-9.143 4-9.143 9.143s4 9.143 9.143 9.143h91.429c5.143 0 9.143-4 9.143-9.143zM438.857 219.429v585.143c0 40-33.143 73.143-73.143 73.143h-292.571c-40 0-73.143-33.143-73.143-73.143v-585.143c0-40 33.143-73.143 73.143-73.143h292.571c40 0 73.143 33.143 73.143 73.143z"],"width":438.85714285714283,"tags":["mobile","mobile-phone"],"defaultCode":61707,"grid":14},{"paths":["M438.857 201.143c-171.429 0-310.857 139.429-310.857 310.857s139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857-139.429-310.857-310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857v0c242.286 0 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["circle-o"],"defaultCode":61708,"grid":14},{"paths":["M438.857 548.571v219.429c0 60.571-49.143 109.714-109.714 109.714h-219.429c-60.571 0-109.714-49.143-109.714-109.714v-402.286c0-161.143 131.429-292.571 292.571-292.571h36.571c20 0 36.571 16.571 36.571 36.571v73.143c0 20-16.571 36.571-36.571 36.571h-36.571c-80.571 0-146.286 65.714-146.286 146.286v18.286c0 30.286 24.571 54.857 54.857 54.857h128c60.571 0 109.714 49.143 109.714 109.714zM950.857 548.571v219.429c0 60.571-49.143 109.714-109.714 109.714h-219.429c-60.571 0-109.714-49.143-109.714-109.714v-402.286c0-161.143 131.429-292.571 292.571-292.571h36.571c20 0 36.571 16.571 36.571 36.571v73.143c0 20-16.571 36.571-36.571 36.571h-36.571c-80.571 0-146.286 65.714-146.286 146.286v18.286c0 30.286 24.571 54.857 54.857 54.857h128c60.571 0 109.714 49.143 109.714 109.714z"],"width":950.8571428571428,"tags":["quote-left"],"defaultCode":61709,"grid":14},{"paths":["M438.857 182.857v402.286c0 161.143-131.429 292.571-292.571 292.571h-36.571c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h36.571c80.571 0 146.286-65.714 146.286-146.286v-18.286c0-30.286-24.571-54.857-54.857-54.857h-128c-60.571 0-109.714-49.143-109.714-109.714v-219.429c0-60.571 49.143-109.714 109.714-109.714h219.429c60.571 0 109.714 49.143 109.714 109.714zM950.857 182.857v402.286c0 161.143-131.429 292.571-292.571 292.571h-36.571c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h36.571c80.571 0 146.286-65.714 146.286-146.286v-18.286c0-30.286-24.571-54.857-54.857-54.857h-128c-60.571 0-109.714-49.143-109.714-109.714v-219.429c0-60.571 49.143-109.714 109.714-109.714h219.429c60.571 0 109.714 49.143 109.714 109.714z"],"width":950.8571428571428,"tags":["quote-right"],"defaultCode":61710,"grid":14},{"paths":["M300.571 796.571c0 40-32.571 73.143-73.143 73.143-40 0-73.143-33.143-73.143-73.143 0-40.571 33.143-73.143 73.143-73.143 40.571 0 73.143 32.571 73.143 73.143zM585.143 914.286c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM182.857 512c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM869.714 796.571c0 40-33.143 73.143-73.143 73.143-40.571 0-73.143-33.143-73.143-73.143 0-40.571 32.571-73.143 73.143-73.143 40 0 73.143 32.571 73.143 73.143zM318.857 227.429c0 50.286-41.143 91.429-91.429 91.429s-91.429-41.143-91.429-91.429 41.143-91.429 91.429-91.429 91.429 41.143 91.429 91.429zM987.429 512c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM621.714 109.714c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM924.571 227.429c0 70.857-57.714 128-128 128-70.857 0-128-57.143-128-128 0-70.286 57.143-128 128-128 70.286 0 128 57.714 128 128z"],"width":1024,"tags":["spinner"],"defaultCode":61712,"grid":14},{"paths":["M877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["circle"],"defaultCode":61713,"grid":14},{"paths":["M1024 640c0 80-40 184.571-72.571 257.714-6.286 13.143-12.571 31.429-21.143 43.429-4 5.714-8 9.714-16 9.714-11.429 0-18.286-9.143-18.286-20 0-9.143 2.286-19.429 2.857-28.571 1.714-23.429 2.857-46.857 2.857-70.286 0-272.571-161.714-320-408-320h-128v146.286c0 20-16.571 36.571-36.571 36.571-9.714 0-18.857-4-25.714-10.857l-292.571-292.571c-6.857-6.857-10.857-16-10.857-25.714s4-18.857 10.857-25.714l292.571-292.571c6.857-6.857 16-10.857 25.714-10.857 20 0 36.571 16.571 36.571 36.571v146.286h128c187.429 0 420.571 33.143 500 230.286 24 60.571 30.286 126.286 30.286 190.286z"],"width":1024,"tags":["mail-reply","reply"],"defaultCode":61714,"grid":14},{"paths":["M365.714 694.857c0 41.714-21.714 109.714-73.143 109.714s-73.143-68-73.143-109.714 21.714-109.714 73.143-109.714 73.143 68 73.143 109.714zM731.429 694.857c0 41.714-21.714 109.714-73.143 109.714s-73.143-68-73.143-109.714 21.714-109.714 73.143-109.714 73.143 68 73.143 109.714zM822.857 694.857c0-87.429-53.143-164.571-146.286-164.571-37.714 0-73.714 6.857-111.429 12-29.714 4.571-59.429 6.286-89.714 6.286s-60-1.714-89.714-6.286c-37.143-5.143-73.714-12-111.429-12-93.143 0-146.286 77.143-146.286 164.571 0 174.857 160 201.714 299.429 201.714h96c139.429 0 299.429-26.857 299.429-201.714zM950.857 594.286c0 63.429-6.286 130.857-34.857 189.143-75.429 152.571-282.857 167.429-431.429 167.429-150.857 0-370.857-13.143-449.143-167.429-29.143-57.714-35.429-125.714-35.429-189.143 0-83.429 22.857-162.286 77.714-226.286-10.286-31.429-15.429-64.571-15.429-97.143 0-42.857 9.714-85.714 29.143-124.571 90.286 0 148 39.429 216.571 93.143 57.714-13.714 117.143-20 176.571-20 53.714 0 108 5.714 160 18.286 68-53.143 125.714-91.429 214.857-91.429 19.429 38.857 29.143 81.714 29.143 124.571 0 32.571-5.143 65.143-15.429 96 54.857 64.571 77.714 144 77.714 227.429z"],"width":950.8571428571428,"tags":["github-alt"],"defaultCode":61715,"grid":14},{"paths":["M877.714 749.714v-402.286c0-30.286-24.571-54.857-54.857-54.857h-402.286c-30.286 0-54.857-24.571-54.857-54.857v-36.571c0-30.286-24.571-54.857-54.857-54.857h-182.857c-30.286 0-54.857 24.571-54.857 54.857v548.571c0 30.286 24.571 54.857 54.857 54.857h694.857c30.286 0 54.857-24.571 54.857-54.857zM950.857 347.429v402.286c0 70.286-57.714 128-128 128h-694.857c-70.286 0-128-57.714-128-128v-548.571c0-70.286 57.714-128 128-128h182.857c70.286 0 128 57.714 128 128v18.286h384c70.286 0 128 57.714 128 128z"],"width":950.8571428571428,"tags":["folder-o"],"defaultCode":61716,"grid":14},{"paths":["M1017.714 532c0-16-17.714-20-30.286-20h-621.714c-30.286 0-70.286 18.857-89.714 42.286l-168 207.429c-5.143 6.857-10.286 14.286-10.286 22.857 0 16 17.714 20 30.286 20h621.714c30.286 0 70.286-18.857 89.714-42.857l168-207.429c5.143-6.286 10.286-13.714 10.286-22.286zM365.714 438.857h438.857v-91.429c0-30.286-24.571-54.857-54.857-54.857h-329.143c-30.286 0-54.857-24.571-54.857-54.857v-36.571c0-30.286-24.571-54.857-54.857-54.857h-182.857c-30.286 0-54.857 24.571-54.857 54.857v487.429l146.286-180c33.143-40.571 94.286-69.714 146.286-69.714zM1090.857 532c0 25.143-10.857 49.143-26.286 68.571l-168.571 207.429c-32.571 40-94.857 69.714-146.286 69.714h-621.714c-70.286 0-128-57.714-128-128v-548.571c0-70.286 57.714-128 128-128h182.857c70.286 0 128 57.714 128 128v18.286h310.857c70.286 0 128 57.714 128 128v91.429h109.714c38.857 0 77.714 17.714 94.857 54.286 5.714 12 8.571 25.143 8.571 38.857z"],"width":1090.8525714285713,"tags":["folder-open-o"],"defaultCode":61717,"grid":14},{"paths":["M648 614.286c-28.571 92-112.571 153.714-209.143 153.714s-180.571-61.714-209.143-153.714c-6.286-19.429 4.571-39.429 24-45.714 18.857-6.286 39.429 4.571 45.714 24 18.857 61.143 75.429 102.286 139.429 102.286s120.571-41.143 139.429-102.286c6.286-19.429 26.857-30.286 46.286-24 18.857 6.286 29.714 26.286 23.429 45.714zM365.714 365.714c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM658.286 365.714c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM804.571 512c0-201.714-164-365.714-365.714-365.714s-365.714 164-365.714 365.714 164 365.714 365.714 365.714 365.714-164 365.714-365.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["smile-o"],"defaultCode":61720,"grid":14},{"paths":["M648 702.286c6.286 19.429-4.571 39.429-23.429 45.714-19.429 6.286-40-4.571-46.286-24-18.857-61.143-75.429-102.286-139.429-102.286s-120.571 41.143-139.429 102.286c-6.286 19.429-26.857 30.286-45.714 24-19.429-6.286-30.286-26.286-24-45.714 28.571-92 112.571-153.714 209.143-153.714s180.571 61.714 209.143 153.714zM365.714 365.714c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM658.286 365.714c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM804.571 512c0-201.714-164-365.714-365.714-365.714s-365.714 164-365.714 365.714 164 365.714 365.714 365.714 365.714-164 365.714-365.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["frown-o"],"defaultCode":61721,"grid":14},{"paths":["M658.286 621.714c0 20-16.571 36.571-36.571 36.571h-365.714c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h365.714c20 0 36.571 16.571 36.571 36.571zM365.714 365.714c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM658.286 365.714c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM804.571 512c0-201.714-164-365.714-365.714-365.714s-365.714 164-365.714 365.714 164 365.714 365.714 365.714 365.714-164 365.714-365.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["meh-o"],"defaultCode":61722,"grid":14},{"paths":["M475.429 621.714v-73.143c0-10.286-8-18.286-18.286-18.286h-109.714v-109.714c0-10.286-8-18.286-18.286-18.286h-73.143c-10.286 0-18.286 8-18.286 18.286v109.714h-109.714c-10.286 0-18.286 8-18.286 18.286v73.143c0 10.286 8 18.286 18.286 18.286h109.714v109.714c0 10.286 8 18.286 18.286 18.286h73.143c10.286 0 18.286-8 18.286-18.286v-109.714h109.714c10.286 0 18.286-8 18.286-18.286zM804.571 658.286c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM950.857 512c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM1097.143 585.143c0 161.714-130.857 292.571-292.571 292.571-74.286 0-141.714-28-193.143-73.143h-125.714c-51.429 45.143-118.857 73.143-193.143 73.143-161.714 0-292.571-130.857-292.571-292.571s130.857-292.571 292.571-292.571h512c161.714 0 292.571 130.857 292.571 292.571z"],"width":1097.142857142857,"tags":["gamepad"],"defaultCode":61723,"grid":14},{"paths":["M219.429 667.429v54.857c0 5.143-4 9.143-9.143 9.143h-54.857c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM292.571 521.143v54.857c0 5.143-4 9.143-9.143 9.143h-128c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h128c5.143 0 9.143 4 9.143 9.143zM219.429 374.857v54.857c0 5.143-4 9.143-9.143 9.143h-54.857c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM804.571 667.429v54.857c0 5.143-4 9.143-9.143 9.143h-493.714c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h493.714c5.143 0 9.143 4 9.143 9.143zM438.857 521.143v54.857c0 5.143-4 9.143-9.143 9.143h-54.857c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM365.714 374.857v54.857c0 5.143-4 9.143-9.143 9.143h-54.857c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM585.143 521.143v54.857c0 5.143-4 9.143-9.143 9.143h-54.857c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM512 374.857v54.857c0 5.143-4 9.143-9.143 9.143h-54.857c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM731.429 521.143v54.857c0 5.143-4 9.143-9.143 9.143h-54.857c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM950.857 667.429v54.857c0 5.143-4 9.143-9.143 9.143h-54.857c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM658.286 374.857v54.857c0 5.143-4 9.143-9.143 9.143h-54.857c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM804.571 374.857v54.857c0 5.143-4 9.143-9.143 9.143h-54.857c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM950.857 374.857v201.143c0 5.143-4 9.143-9.143 9.143h-128c-5.143 0-9.143-4-9.143-9.143v-54.857c0-5.143 4-9.143 9.143-9.143h64v-137.143c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143zM1024 804.571v-512h-950.857v512h950.857zM1097.143 292.571v512c0 40.571-32.571 73.143-73.143 73.143h-950.857c-40.571 0-73.143-32.571-73.143-73.143v-512c0-40.571 32.571-73.143 73.143-73.143h950.857c40.571 0 73.143 32.571 73.143 73.143z"],"width":1097.142857142857,"tags":["keyboard-o"],"defaultCode":61724,"grid":14},{"paths":["M950.857 597.143v-352c-45.714 24.571-109.714 52-174.857 52v0c-30.286 0-58.286-5.714-82.857-18.286-61.143-30.286-127.429-59.429-206.857-59.429-73.714 0-164 36-230.286 72.571v342.286c75.429-34.857 171.429-64.571 247.429-64.571 88 0 145.143 29.143 206.286 59.429l16 8c16 8 35.429 12.571 57.714 12.571 63.429 0 132-33.714 167.429-52.571zM182.857 146.286c0 26.857-14.857 50.286-36.571 62.857v723.429c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-723.429c-21.714-12.571-36.571-36-36.571-62.857 0-40.571 32.571-73.143 73.143-73.143s73.143 32.571 73.143 73.143zM1024 182.857v436c0 13.714-8 26.286-20 32.571-2.286 1.143-5.714 2.857-9.714 5.143-36.571 19.429-122.857 66.286-210.857 66.286-33.714 0-64-6.857-90.286-20l-16-8c-57.714-29.143-103.429-52-173.714-52-82.286 0-198.286 42.857-265.143 83.429-5.714 3.429-12.571 5.143-18.857 5.143s-12.571-1.714-18.286-4.571c-11.429-6.857-18.286-18.857-18.286-32v-424c0-12.571 6.857-24.571 17.714-31.429 36.571-21.714 165.714-93.143 285.714-93.143 95.429 0 173.143 34.857 238.857 66.857 14.857 7.429 32 10.857 50.857 10.857 67.429 0 141.714-42.857 177.143-64 7.429-4 13.714-7.429 17.714-9.714 11.429-5.714 24.571-5.143 35.429 1.143 10.857 6.857 17.714 18.857 17.714 31.429z"],"width":1060.5714285714284,"tags":["flag-o"],"defaultCode":61725,"grid":14},{"paths":["M475.429 571.429v-109.714c-69.714 6.286-153.714 34.286-219.429 66.857v105.714c66.286-30.857 148.571-57.143 219.429-62.857zM475.429 332.571v-112.571c-72 3.429-156.571 37.143-219.429 72v108c67.429-34.857 148.571-64.571 219.429-67.429zM950.857 597.143v-105.143c-52 25.714-142.857 64-219.429 40.571v-128c-7.429-2.286-14.857-5.143-22.286-8.571-65.714-33.143-119.429-64-205.714-64-9.143 0-18.286 0.571-28 1.714v126.857h10.857c86.286 0 157.143 30.857 222.857 63.429 7.429 3.429 14.857 6.286 22.286 8.571v107.429c15.429 6.286 32.571 9.714 52 9.714 63.429 0 132-33.714 167.429-52.571zM950.857 353.143v-108c-45.714 24.571-109.714 52-174.857 52v0c-15.429 0-30.286-1.143-44.571-4.571v112c76.571 21.714 167.429-22.286 219.429-51.429zM182.857 146.286c0 26.857-14.857 50.286-36.571 62.857v723.429c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-723.429c-21.714-12.571-36.571-36-36.571-62.857 0-40.571 32.571-73.143 73.143-73.143s73.143 32.571 73.143 73.143zM1024 182.857v436c0 13.714-8 26.286-20 32.571-2.286 1.143-5.714 2.857-9.714 5.143-36.571 19.429-122.857 66.286-210.857 66.286-33.714 0-64-6.857-90.286-20l-16-8c-57.714-29.143-103.429-52-173.714-52-82.286 0-198.286 42.857-265.143 83.429-5.714 3.429-12.571 5.143-18.857 5.143s-12.571-1.714-18.286-4.571c-11.429-6.857-18.286-18.857-18.286-32v-424c0-12.571 6.857-24.571 17.714-31.429 36.571-21.714 165.714-93.143 285.714-93.143 95.429 0 173.143 34.857 238.857 66.857 14.857 7.429 32 10.857 50.857 10.857 67.429 0 141.714-42.857 177.143-64 7.429-4 13.714-7.429 17.714-9.714 11.429-5.714 24.571-5.143 35.429 1.143 10.857 6.857 17.714 18.857 17.714 31.429z"],"width":1060.5714285714284,"tags":["flag-checkered"],"defaultCode":61726,"grid":14},{"paths":["M334.286 561.714l-266.286 266.286c-7.429 7.429-18.857 7.429-26.286 0l-28.571-28.571c-7.429-7.429-7.429-18.857 0-26.286l224.571-224.571-224.571-224.571c-7.429-7.429-7.429-18.857 0-26.286l28.571-28.571c7.429-7.429 18.857-7.429 26.286 0l266.286 266.286c7.429 7.429 7.429 18.857 0 26.286zM950.857 822.857v36.571c0 10.286-8 18.286-18.286 18.286h-548.571c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h548.571c10.286 0 18.286 8 18.286 18.286z"],"width":956.5622857142856,"tags":["terminal"],"defaultCode":61728,"grid":14},{"paths":["M352.571 799.429l-28.571 28.571c-7.429 7.429-18.857 7.429-26.286 0l-266.286-266.286c-7.429-7.429-7.429-18.857 0-26.286l266.286-266.286c7.429-7.429 18.857-7.429 26.286 0l28.571 28.571c7.429 7.429 7.429 18.857 0 26.286l-224.571 224.571 224.571 224.571c7.429 7.429 7.429 18.857 0 26.286zM690.286 189.714l-213.143 737.714c-2.857 9.714-13.143 15.429-22.286 12.571l-35.429-9.714c-9.714-2.857-15.429-13.143-12.571-22.857l213.143-737.714c2.857-9.714 13.143-15.429 22.286-12.571l35.429 9.714c9.714 2.857 15.429 13.143 12.571 22.857zM1065.714 561.714l-266.286 266.286c-7.429 7.429-18.857 7.429-26.286 0l-28.571-28.571c-7.429-7.429-7.429-18.857 0-26.286l224.571-224.571-224.571-224.571c-7.429-7.429-7.429-18.857 0-26.286l28.571-28.571c7.429-7.429 18.857-7.429 26.286 0l266.286 266.286c7.429 7.429 7.429 18.857 0 26.286z"],"width":1097.142857142857,"tags":["code"],"defaultCode":61729,"grid":14},{"paths":["M365.714 618.286v40c0 14.857-9.143 28-22.286 33.714-4.571 1.714-9.714 2.857-14.286 2.857-9.714 0-18.857-3.429-25.714-10.857l-292.571-292.571c-14.286-14.286-14.286-37.143 0-51.429l292.571-292.571c10.286-10.857 26.286-13.714 40-8 13.143 5.714 22.286 18.857 22.286 33.714v39.429l-226.857 227.429c-14.286 14.286-14.286 37.143 0 51.429zM1024 640c0 118.857-89.714 293.714-93.714 301.143-2.857 6.286-9.143 9.714-16 9.714-1.714 0-3.429 0-5.143-0.571-8.571-2.857-13.714-10.857-13.143-19.429 16.571-156-2.857-258.857-60.571-322.857-48.571-54.286-127.429-83.429-250.286-93.143v143.429c0 14.857-9.143 28-22.286 33.714-4.571 1.714-9.714 2.857-14.286 2.857-9.714 0-18.857-3.429-25.714-10.857l-292.571-292.571c-14.286-14.286-14.286-37.143 0-51.429l292.571-292.571c10.286-10.857 26.286-13.714 40-8 13.143 5.714 22.286 18.857 22.286 33.714v149.714c157.714 10.857 270.286 52.571 342.286 126.286 86.286 88.571 96.571 208.571 96.571 290.857z"],"width":1020.5622857142856,"tags":["mail-reply-all","reply-all"],"defaultCode":61730,"grid":14},{"paths":["M677.714 546.857l146.857-142.857-241.143-35.429-17.143-34.286-90.857-184v550.286l33.714 17.714 181.714 96-34.286-202.857-6.857-37.714zM936 397.143l-207.429 202.286 49.143 285.714c4 25.143-5.143 40-22.857 40-6.286 0-14.286-2.286-22.857-6.857l-256.571-134.857-256.571 134.857c-8.571 4.571-16.571 6.857-22.857 6.857-17.714 0-26.857-14.857-22.857-40l49.143-285.714-208-202.286c-24.571-24.571-16.571-48.571 17.714-53.714l286.857-41.714 128.571-260c7.429-15.429 17.714-23.429 28-23.429v0c10.286 0 20 8 28 23.429l128.571 260 286.857 41.714c34.286 5.143 42.286 29.143 17.143 53.714z"],"width":950.8571428571428,"tags":["star-half-empty","star-half-full","star-half-o"],"defaultCode":61731,"grid":14},{"paths":["M800.571 199.429l-365.714 731.429c-6.286 12.571-18.857 20-32.571 20-2.857 0-5.714-0.571-8.571-1.143-16.571-4-28-18.286-28-35.429v-329.143h-329.143c-17.143 0-31.429-11.429-35.429-28s4-33.714 18.857-41.143l731.429-365.714c5.143-2.857 10.857-4 16.571-4 9.714 0 18.857 3.429 25.714 10.857 11.429 10.857 14.286 28 6.857 42.286z"],"width":805.1565714285713,"tags":["location-arrow"],"defaultCode":61732,"grid":14},{"paths":["M318.286 731.429h340v-340zM292.571 705.714l340-340h-340v340zM950.857 749.714v109.714c0 10.286-8 18.286-18.286 18.286h-128v128c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-128h-493.714c-10.286 0-18.286-8-18.286-18.286v-493.714h-128c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h128v-128c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v128h486.286l140.571-141.143c7.429-6.857 18.857-6.857 26.286 0 6.857 7.429 6.857 18.857 0 26.286l-141.143 140.571v486.286h128c10.286 0 18.286 8 18.286 18.286z"],"width":952.5394285714285,"tags":["crop"],"defaultCode":61733,"grid":14},{"paths":["M164.571 841.143c0-30.286-24.571-54.857-54.857-54.857s-54.857 24.571-54.857 54.857 24.571 54.857 54.857 54.857 54.857-24.571 54.857-54.857zM164.571 182.857c0-30.286-24.571-54.857-54.857-54.857s-54.857 24.571-54.857 54.857 24.571 54.857 54.857 54.857 54.857-24.571 54.857-54.857zM530.286 256c0-30.286-24.571-54.857-54.857-54.857s-54.857 24.571-54.857 54.857 24.571 54.857 54.857 54.857 54.857-24.571 54.857-54.857zM585.143 256c0 40.571-22.286 76-54.857 94.857-1.714 206.286-148 252-245.143 282.857-90.857 28.571-120.571 42.286-120.571 97.714v14.857c32.571 18.857 54.857 54.286 54.857 94.857 0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714c0-40.571 22.286-76 54.857-94.857v-468.571c-32.571-18.857-54.857-54.286-54.857-94.857 0-60.571 49.143-109.714 109.714-109.714s109.714 49.143 109.714 109.714c0 40.571-22.286 76-54.857 94.857v284c29.143-14.286 60-24 88-32.571 106.286-33.714 166.857-58.857 168-178.286-32.571-18.857-54.857-54.286-54.857-94.857 0-60.571 49.143-109.714 109.714-109.714s109.714 49.143 109.714 109.714z"],"width":585.1428571428571,"tags":["code-fork"],"defaultCode":61734,"grid":14},{"paths":["M250.857 726.286l-146.286 146.286c-4 3.429-8.571 5.143-13.143 5.143s-9.143-1.714-13.143-5.143c-6.857-7.429-6.857-18.857 0-26.286l146.286-146.286c7.429-6.857 18.857-6.857 26.286 0 6.857 7.429 6.857 18.857 0 26.286zM347.429 749.714v182.857c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286v-182.857c0-10.286 8-18.286 18.286-18.286s18.286 8 18.286 18.286zM219.429 621.714c0 10.286-8 18.286-18.286 18.286h-182.857c-10.286 0-18.286-8-18.286-18.286s8-18.286 18.286-18.286h182.857c10.286 0 18.286 8 18.286 18.286zM941.714 694.857c0 44-17.143 85.143-48.571 116l-84 83.429c-30.857 30.857-72 47.429-116 47.429s-85.714-17.143-116.571-48.571l-190.857-191.429c-9.714-9.714-17.143-20.571-24-32l136.571-10.286 156 156.571c20.571 20.571 57.143 21.143 77.714 0.571l84-83.429c10.286-10.286 16-24 16-38.286 0-14.857-5.714-28.571-16-38.857l-156.571-157.143 10.286-136.571c11.429 6.857 22.286 14.286 32 24l192 192c30.857 31.429 48 72.571 48 116.571zM589.143 281.143l-136.571 10.286-156-156.571c-10.286-10.286-24-16-38.857-16s-28.571 5.714-38.857 15.429l-84 83.429c-10.286 10.286-16 24-16 38.286 0 14.857 5.714 28.571 16 38.857l156.571 156.571-10.286 137.143c-11.429-6.857-22.286-14.286-32-24l-192-192c-30.857-31.429-48-72.571-48-116.571s17.143-85.143 48.571-116l84-83.429c30.857-30.857 72-47.429 116-47.429s85.714 17.143 116.571 48.571l190.857 191.429c9.714 9.714 17.143 20.571 24 32zM950.857 329.143c0 10.286-8 18.286-18.286 18.286h-182.857c-10.286 0-18.286-8-18.286-18.286s8-18.286 18.286-18.286h182.857c10.286 0 18.286 8 18.286 18.286zM640 18.286v182.857c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286v-182.857c0-10.286 8-18.286 18.286-18.286s18.286 8 18.286 18.286zM872.571 104.571l-146.286 146.286c-4 3.429-8.571 5.143-13.143 5.143s-9.143-1.714-13.143-5.143c-6.857-7.429-6.857-18.857 0-26.286l146.286-146.286c7.429-6.857 18.857-6.857 26.286 0 6.857 7.429 6.857 18.857 0 26.286z"],"width":950.8571428571428,"tags":["chain-broken","unlink"],"defaultCode":61735,"grid":14},{"paths":["M365.714 768v73.143c0 20-16.571 36.571-36.571 36.571h-292.571c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h36.571v-219.429h-36.571c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h219.429c20 0 36.571 16.571 36.571 36.571v329.143h36.571c20 0 36.571 16.571 36.571 36.571zM292.571 109.714v109.714c0 20-16.571 36.571-36.571 36.571h-146.286c-20 0-36.571-16.571-36.571-36.571v-109.714c0-20 16.571-36.571 36.571-36.571h146.286c20 0 36.571 16.571 36.571 36.571z"],"width":365.71428571428567,"tags":["info"],"defaultCode":61737,"grid":14},{"paths":["M292.571 713.143v128c0 20-16.571 36.571-36.571 36.571h-146.286c-20 0-36.571-16.571-36.571-36.571v-128c0-20 16.571-36.571 36.571-36.571h146.286c20 0 36.571 16.571 36.571 36.571zM309.714 109.714l-16 438.857c-0.571 20-17.714 36.571-37.714 36.571h-146.286c-20 0-37.143-16.571-37.714-36.571l-16-438.857c-0.571-20 15.429-36.571 35.429-36.571h182.857c20 0 36 16.571 35.429 36.571z"],"width":365.71428571428567,"tags":["exclamation"],"defaultCode":61738,"grid":14},{"paths":["M512.571 782.286v95.429h-141.714l-90.857-144-13.714-24c-3.429-4-5.143-8-6.286-12h-1.714c-1.143 4-3.429 8-5.143 12-3.429 6.857-8.571 16-14.286 25.143l-88.571 142.857h-147.429v-95.429h73.143l112.571-166.286-105.714-155.429h-78.286v-96h157.714l79.429 130.286c5.143 8 9.143 16.571 13.143 24 3.429 4 5.143 8 6.286 12h1.714c1.143-4 3.429-8 6.286-12l14.286-24 80-130.286h146.857v96h-71.429l-105.143 152.571 116.571 169.143h62.286zM876.571 394.286v117.714h-293.714l-1.714-15.429c-1.143-8-2.286-18.857-2.286-26.286 0-156 200-169.143 200-252 0-29.714-26.857-49.714-57.143-49.714-21.714 0-41.143 10.286-55.429 22.286-7.429 6.286-14.286 14.286-20.571 21.714l-60-52.571c10.286-14.286 21.714-26.286 36-37.714 24-18.857 58.857-37.143 107.429-37.143 82.857 0 140.571 48.571 140.571 124.571 0 137.143-189.714 148.571-197.714 230.286h132.571v-45.714h72z"],"width":879.3965714285714,"tags":["superscript"],"defaultCode":61739,"grid":14},{"paths":["M512.571 782.286v95.429h-141.714l-90.857-144-13.714-24c-3.429-4-5.143-8-6.286-12h-1.714c-1.143 4-3.429 8-5.143 12-3.429 6.857-8.571 16-14.286 25.143l-88.571 142.857h-147.429v-95.429h73.143l112.571-166.286-105.714-155.429h-78.286v-96h157.714l79.429 130.286c5.143 8 9.143 16.571 13.143 24 3.429 4 5.143 8 6.286 12h1.714c1.143-4 3.429-8 6.286-12l14.286-24 80-130.286h146.857v96h-71.429l-105.143 152.571 116.571 169.143h62.286zM877.714 906.286v117.714h-293.714l-2.286-15.429c-0.571-8.571-1.714-18.857-1.714-26.286 0-156 200-169.143 200-252 0-29.714-26.857-49.714-57.143-49.714-22.286 0-41.143 10.286-55.429 22.286-7.429 6.286-14.286 14.286-20.571 21.714l-60-52.571c10.286-14.286 21.714-26.286 36-37.714 24-19.429 58.857-37.143 107.429-37.143 82.857 0 140.571 48.571 140.571 124.571 0 136.571-189.714 148-197.714 230.286h132.571v-45.714h72z"],"width":880.5668571428571,"tags":["subscript"],"defaultCode":61740,"grid":14},{"paths":["M512 804.571l192-219.429h-438.857l-192 219.429h438.857zM1090.857 189.143c11.429 26.286 6.857 56.571-12 78.286l-512 585.143c-13.714 16-33.714 25.143-54.857 25.143h-438.857c-28.571 0-54.857-16.571-66.857-42.857-11.429-26.286-6.857-56.571 12-78.286l512-585.143c13.714-16 33.714-25.143 54.857-25.143h438.857c28.571 0 54.857 16.571 66.857 42.857z"],"width":1097.142857142857,"tags":["eraser"],"defaultCode":61741,"grid":14},{"paths":["M950.857 627.429c0 58.857-33.714 108-96 108-69.714 0-88-63.429-150.857-63.429-45.714 0-62.857 28.571-62.857 70.857 0 44.571 18.286 87.429 17.714 131.429v2.857c-6.286 0-12.571 0-18.857 0.571-58.857 5.714-118.286 17.143-177.714 17.143-40.571 0-82.857-16-82.857-62.857 0-62.857 63.429-81.143 63.429-150.857 0-62.286-49.143-96-108-96-60 0-115.429 33.143-115.429 98.857 0 72.571 55.429 104 55.429 143.429 0 20-12.571 37.714-26.286 50.857-17.714 16.571-42.857 20-66.857 20-46.857 0-93.714-6.286-140-13.714-10.286-1.714-21.143-2.857-31.429-4.571l-7.429-1.143c-1.143-0.571-2.857-0.571-2.857-1.143v-585.143c2.286 1.714 36 5.714 41.714 6.857 46.286 7.429 93.143 13.714 140 13.714 24 0 49.143-3.429 66.857-20 13.714-13.143 26.286-30.857 26.286-50.857 0-39.429-55.429-70.857-55.429-143.429 0-65.714 55.429-98.857 116-98.857 58.286 0 107.429 33.714 107.429 96 0 69.714-63.429 88-63.429 150.857 0 46.857 42.286 62.857 82.857 62.857 65.714 0 130.857-14.857 196-18.286v1.143c-1.714 2.286-5.714 36-6.857 41.714-7.429 46.286-13.714 93.143-13.714 140 0 24 3.429 49.143 20 66.857 13.143 13.714 30.857 26.286 50.857 26.286 39.429 0 70.857-55.429 143.429-55.429 65.714 0 98.857 55.429 98.857 115.429z"],"width":950.8571428571428,"tags":["puzzle-piece"],"defaultCode":61742,"grid":14},{"paths":["M658.286 402.286v73.143c0 169.143-128 308.571-292.571 326.857v75.429h146.286c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571h-365.714c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h146.286v-75.429c-164.571-18.286-292.571-157.714-292.571-326.857v-73.143c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571v73.143c0 141.143 114.857 256 256 256s256-114.857 256-256v-73.143c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571zM512 182.857v292.571c0 100.571-82.286 182.857-182.857 182.857s-182.857-82.286-182.857-182.857v-292.571c0-100.571 82.286-182.857 182.857-182.857s182.857 82.286 182.857 182.857z"],"width":658.2857142857142,"tags":["microphone"],"defaultCode":61744,"grid":14},{"paths":["M154.857 540l-57.714 57.714c-15.429-37.714-24-78.857-24-122.286v-73.143c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571v73.143c0 22.286 3.429 44 8.571 64.571zM791.429 196l-206.286 206.286v73.143c0 100.571-82.286 182.857-182.857 182.857-21.714 0-42.857-4-62.286-10.857l-54.857 54.857c34.857 18.286 74.857 29.143 117.143 29.143 141.143 0 256-114.857 256-256v-73.143c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571v73.143c0 169.143-128 308.571-292.571 326.857v75.429h146.286c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571h-365.714c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h146.286v-75.429c-48.571-5.143-94.286-21.714-134.286-46.286l-145.143 145.143c-7.429 7.429-18.857 7.429-26.286 0l-46.857-46.857c-7.429-7.429-7.429-18.857 0-26.286l705.143-705.143c7.429-7.429 18.857-7.429 26.286 0l46.857 46.857c7.429 7.429 7.429 18.857 0 26.286zM574.286 120.571l-354.857 354.857v-292.571c0-100.571 82.286-182.857 182.857-182.857 78.857 0 146.286 50.857 172 120.571z"],"width":804.5714285714286,"tags":["microphone-slash"],"defaultCode":61745,"grid":14},{"paths":["M621.714 548.571v-365.714h-256v649.714c29.143-15.429 76-42.286 121.714-78.286 61.143-48 134.286-122.857 134.286-205.714zM731.429 109.714v438.857c0 240.571-336.571 392.571-350.857 398.857-4.571 2.286-9.714 3.429-14.857 3.429s-10.286-1.143-14.857-3.429c-14.286-6.286-350.857-158.286-350.857-398.857v-438.857c0-20 16.571-36.571 36.571-36.571h658.286c20 0 36.571 16.571 36.571 36.571z"],"width":731.4285714285713,"tags":["shield"],"defaultCode":61746,"grid":14},{"paths":["M73.143 950.857h804.571v-585.143h-804.571v585.143zM292.571 256v-164.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v164.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM731.429 256v-164.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v164.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM950.857 219.429v731.429c0 40-33.143 73.143-73.143 73.143h-804.571c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h73.143v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h219.429v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h73.143c40 0 73.143 33.143 73.143 73.143z"],"width":950.8571428571428,"tags":["calendar-o"],"defaultCode":61747,"grid":14},{"paths":["M292.571 109.714c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM804.571 91.429v182.857c0 5.714-2.286 10.857-6.857 14.286-3.429 2.857-7.429 4-11.429 4-1.143 0-2.286 0-4-0.571l-256-54.857c-8-1.714-14.286-9.143-14.286-17.714h-146.286v58.286c83.429 17.143 146.286 90.857 146.286 179.429v457.143c0 20-16.571 36.571-36.571 36.571h-292.571c-20 0-36.571-16.571-36.571-36.571v-457.143c0-81.714 53.714-151.429 128-174.286v-63.429h-18.286c-121.143 0-186.286 125.143-186.857 126.286-6.286 12.571-19.429 20-32.571 20-5.714 0-11.429-1.143-16.571-4-17.714-9.143-25.143-30.857-16-49.143 2.857-5.714 60-116.571 174.857-153.714-8.571-14.286-14.286-30.857-14.286-49.143 0-50.286 41.143-91.429 91.429-91.429s91.429 41.143 91.429 91.429c0 13.143-2.857 25.143-8 36.571h172.571c0-8.571 6.286-16 14.286-17.714l256-54.857c1.714-0.571 2.857-0.571 4-0.571 4 0 8 1.143 11.429 4 4.571 3.429 6.857 8.571 6.857 14.286z"],"width":799.4514285714286,"tags":["fire-extinguisher"],"defaultCode":61748,"grid":14},{"paths":["M822.857 256c0-30.286-24.571-54.857-54.857-54.857s-54.857 24.571-54.857 54.857 24.571 54.857 54.857 54.857 54.857-24.571 54.857-54.857zM950.857 91.429c0 189.714-52.571 316-188 452-33.143 32.571-70.857 66.286-111.429 100.571l-11.429 216.571c-0.571 5.714-4 11.429-9.143 14.857l-219.429 128c-2.857 1.714-5.714 2.286-9.143 2.286-4.571 0-9.143-1.714-13.143-5.143l-36.571-36.571c-4.571-5.143-6.286-12-4.571-18.286l48.571-157.714-160.571-160.571-157.714 48.571c-1.714 0.571-3.429 0.571-5.143 0.571-4.571 0-9.714-1.714-13.143-5.143l-36.571-36.571c-5.714-6.286-6.857-15.429-2.857-22.286l128-219.429c3.429-5.143 9.143-8.571 14.857-9.143l216.571-11.429c34.286-40.571 68-78.286 100.571-111.429 142.857-142.286 252-188 450.857-188 10.286 0 19.429 8 19.429 18.286z"],"width":967.4605714285714,"tags":["rocket"],"defaultCode":61749,"grid":14},{"paths":["M997.143 441.714l-93.714 436h-190.857l101.714-475.429c4.571-20 1.714-38.286-8.571-50.286-9.714-12-26.857-18.857-47.429-18.857h-96.571l-116.571 544.571h-190.857l116.571-544.571h-163.429l-116.571 544.571h-190.857l116.571-544.571-87.429-186.857h729.143c77.143 0 147.429 32 192.571 88 45.714 56 62.286 132 46.286 207.429z"],"width":1013.1748571428571,"tags":["maxcdn"],"defaultCode":61750,"grid":14},{"paths":["M519.429 797.143l58.286-58.286c14.286-14.286 14.286-37.143 0-51.429l-175.429-175.429 175.429-175.429c14.286-14.286 14.286-37.143 0-51.429l-58.286-58.286c-14.286-14.286-37.143-14.286-51.429 0l-259.429 259.429c-14.286 14.286-14.286 37.143 0 51.429l259.429 259.429c14.286 14.286 37.143 14.286 51.429 0zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["chevron-circle-left"],"defaultCode":61751,"grid":14},{"paths":["M409.714 797.143l259.429-259.429c14.286-14.286 14.286-37.143 0-51.429l-259.429-259.429c-14.286-14.286-37.143-14.286-51.429 0l-58.286 58.286c-14.286 14.286-14.286 37.143 0 51.429l175.429 175.429-175.429 175.429c-14.286 14.286-14.286 37.143 0 51.429l58.286 58.286c14.286 14.286 37.143 14.286 51.429 0zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["chevron-circle-right"],"defaultCode":61752,"grid":14},{"paths":["M665.714 650.857l58.286-58.286c14.286-14.286 14.286-37.143 0-51.429l-259.429-259.429c-14.286-14.286-37.143-14.286-51.429 0l-259.429 259.429c-14.286 14.286-14.286 37.143 0 51.429l58.286 58.286c14.286 14.286 37.143 14.286 51.429 0l175.429-175.429 175.429 175.429c14.286 14.286 37.143 14.286 51.429 0zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["chevron-circle-up"],"defaultCode":61753,"grid":14},{"paths":["M464.571 742.286l259.429-259.429c14.286-14.286 14.286-37.143 0-51.429l-58.286-58.286c-14.286-14.286-37.143-14.286-51.429 0l-175.429 175.429-175.429-175.429c-14.286-14.286-37.143-14.286-51.429 0l-58.286 58.286c-14.286 14.286-14.286 37.143 0 51.429l259.429 259.429c14.286 14.286 37.143 14.286 51.429 0zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["chevron-circle-down"],"defaultCode":61754,"grid":14},{"paths":["M645.714 341.143l9.143-100h-505.143l26.857 305.143h349.714l-12.571 130.286-112.571 30.286-112-30.286-7.429-80h-100l12.571 158.857 206.857 57.143h2.286v-0.571l205.143-56.571 28.571-310.857h-368l-8.571-103.429h385.143zM0 73.143h804.571l-73.143 821.714-330.286 92.571-328-92.571z"],"width":804.5714285714286,"tags":["html5"],"defaultCode":61755,"grid":14},{"paths":["M157.143 73.143h860l-152 761.714-459.429 152.571-398.857-152.571 40.571-203.429h169.714l-16.571 84 241.143 92 277.714-92 38.857-193.714h-690.286l33.143-169.714h690.857l21.714-109.143h-690.286z"],"width":1024,"tags":["css3"],"defaultCode":61756,"grid":14},{"paths":["M548.571 146.286c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571 16.571 36.571 36.571 36.571 36.571-16.571 36.571-36.571zM1024 676.571v201.143c0 7.429-4.571 14.286-11.429 17.143-2.286 0.571-4.571 1.143-6.857 1.143-4.571 0-9.143-1.714-13.143-5.143l-53.143-53.143c-89.714 108-250.857 177.143-427.429 177.143s-337.714-69.143-427.429-177.143l-53.143 53.143c-3.429 3.429-8.571 5.143-13.143 5.143-2.286 0-4.571-0.571-6.857-1.143-6.857-2.857-11.429-9.714-11.429-17.143v-201.143c0-10.286 8-18.286 18.286-18.286h201.143c7.429 0 14.286 4.571 17.143 11.429s1.143 14.286-4 20l-57.143 57.143c51.429 69.143 150.286 119.429 263.429 134.857v-369.714h-109.714c-20 0-36.571-16.571-36.571-36.571v-73.143c0-20 16.571-36.571 36.571-36.571h109.714v-93.143c-43.429-25.143-73.143-72-73.143-126.286 0-80.571 65.714-146.286 146.286-146.286s146.286 65.714 146.286 146.286c0 54.286-29.714 101.143-73.143 126.286v93.143h109.714c20 0 36.571 16.571 36.571 36.571v73.143c0 20-16.571 36.571-36.571 36.571h-109.714v369.714c113.143-15.429 212-65.714 263.429-134.857l-57.143-57.143c-5.143-5.714-6.857-13.143-4-20s9.714-11.429 17.143-11.429h201.143c10.286 0 18.286 8 18.286 18.286z"],"width":1024,"tags":["anchor"],"defaultCode":61757,"grid":14},{"paths":["M603.429 438.857c30.286 0 54.857 24.571 54.857 54.857v329.143c0 30.286-24.571 54.857-54.857 54.857h-548.571c-30.286 0-54.857-24.571-54.857-54.857v-329.143c0-30.286 24.571-54.857 54.857-54.857h18.286v-182.857c0-141.143 114.857-256 256-256s256 114.857 256 256c0 20-16.571 36.571-36.571 36.571h-36.571c-20 0-36.571-16.571-36.571-36.571 0-80.571-65.714-146.286-146.286-146.286s-146.286 65.714-146.286 146.286v182.857h420.571z"],"width":658.2857142857142,"tags":["unlock-alt"],"defaultCode":61758,"grid":14},{"paths":["M585.143 512c0 80.571-65.714 146.286-146.286 146.286s-146.286-65.714-146.286-146.286 65.714-146.286 146.286-146.286 146.286 65.714 146.286 146.286zM658.286 512c0-121.143-98.286-219.429-219.429-219.429s-219.429 98.286-219.429 219.429 98.286 219.429 219.429 219.429 219.429-98.286 219.429-219.429zM731.429 512c0 161.714-130.857 292.571-292.571 292.571s-292.571-130.857-292.571-292.571 130.857-292.571 292.571-292.571 292.571 130.857 292.571 292.571zM804.571 512c0-201.714-164-365.714-365.714-365.714s-365.714 164-365.714 365.714 164 365.714 365.714 365.714 365.714-164 365.714-365.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["bullseye"],"defaultCode":61760,"grid":14},{"paths":["M219.429 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-109.714c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h109.714c30.286 0 54.857 24.571 54.857 54.857zM512 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-109.714c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h109.714c30.286 0 54.857 24.571 54.857 54.857zM804.571 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-109.714c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h109.714c30.286 0 54.857 24.571 54.857 54.857z"],"width":804.5714285714286,"tags":["ellipsis-h"],"defaultCode":61761,"grid":14},{"paths":["M219.429 713.143v109.714c0 30.286-24.571 54.857-54.857 54.857h-109.714c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h109.714c30.286 0 54.857 24.571 54.857 54.857zM219.429 420.571v109.714c0 30.286-24.571 54.857-54.857 54.857h-109.714c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h109.714c30.286 0 54.857 24.571 54.857 54.857zM219.429 128v109.714c0 30.286-24.571 54.857-54.857 54.857h-109.714c-30.286 0-54.857-24.571-54.857-54.857v-109.714c0-30.286 24.571-54.857 54.857-54.857h109.714c30.286 0 54.857 24.571 54.857 54.857z"],"width":219.42857142857142,"tags":["ellipsis-v"],"defaultCode":61762,"grid":14},{"paths":["M292.571 731.429c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM493.143 785.143c-9.714-177.143-150.286-317.714-327.429-327.429-5.143-0.571-10.286 1.714-13.714 5.143s-5.714 8-5.714 13.143v73.143c0 9.714 7.429 17.714 17.143 18.286 117.143 8.571 211.429 102.857 220 220 0.571 9.714 8.571 17.143 18.286 17.143h73.143c5.143 0 9.714-2.286 13.143-5.714s5.714-8.571 5.143-13.714zM712.571 785.714c-9.714-297.143-250.286-537.714-547.429-547.429-5.714-0.571-9.714 1.143-13.143 5.143-3.429 3.429-5.714 8-5.714 13.143v73.143c0 9.714 8 17.714 17.714 18.286 237.143 8.571 430.286 201.714 438.857 438.857 0.571 9.714 8.571 17.714 18.286 17.714h73.143c5.143 0 9.714-2.286 13.143-5.714 4-3.429 5.714-8 5.143-13.143zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["rss-square"],"defaultCode":61763,"grid":14},{"paths":["M438.857 73.143c242.286 0 438.857 196.571 438.857 438.857s-196.571 438.857-438.857 438.857-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857zM658.286 543.429c11.429-6.286 18.286-18.286 18.286-31.429s-6.857-25.143-18.286-31.429l-310.857-182.857c-10.857-6.857-25.143-6.857-36.571-0.571-11.429 6.857-18.286 18.857-18.286 32v365.714c0 13.143 6.857 25.143 18.286 32 5.714 2.857 12 4.571 18.286 4.571s12.571-1.714 18.286-5.143z"],"width":877.7142857142857,"tags":["play-circle"],"defaultCode":61764,"grid":14},{"paths":["M585.143 258.286l180.571 180.571-326.857 326.857-180.571-180.571zM464.571 817.714l353.143-353.143c14.286-14.286 14.286-37.143 0-51.429l-206.857-206.857c-13.714-13.714-37.714-13.714-51.429 0l-353.143 353.143c-14.286 14.286-14.286 37.143 0 51.429l206.857 206.857c6.857 6.857 16 10.286 25.714 10.286s18.857-3.429 25.714-10.286zM972.571 453.714l-518.286 518.857c-28.571 28-75.429 28-103.429 0l-72-72c42.857-42.857 42.857-112.571 0-155.429s-112.571-42.857-155.429 0l-71.429-72c-28.571-28-28.571-74.857 0-103.429l518.286-517.714c28-28.571 74.857-28.571 103.429 0l71.429 71.429c-42.857 42.857-42.857 112.571 0 155.429s112.571 42.857 155.429 0l72 71.429c28 28.571 28 75.429 0 103.429z"],"width":1024,"tags":["ticket"],"defaultCode":61765,"grid":14},{"paths":["M731.429 548.571v-73.143c0-20-16.571-36.571-36.571-36.571h-512c-20 0-36.571 16.571-36.571 36.571v73.143c0 20 16.571 36.571 36.571 36.571h512c20 0 36.571-16.571 36.571-36.571zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["minus-square"],"defaultCode":61766,"grid":14},{"paths":["M658.286 457.143v36.571c0 10.286-8 18.286-18.286 18.286h-475.429c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h475.429c10.286 0 18.286 8 18.286 18.286zM731.429 713.143v-475.429c0-50.286-41.143-91.429-91.429-91.429h-475.429c-50.286 0-91.429 41.143-91.429 91.429v475.429c0 50.286 41.143 91.429 91.429 91.429h475.429c50.286 0 91.429-41.143 91.429-91.429zM804.571 237.714v475.429c0 90.857-73.714 164.571-164.571 164.571h-475.429c-90.857 0-164.571-73.714-164.571-164.571v-475.429c0-90.857 73.714-164.571 164.571-164.571h475.429c90.857 0 164.571 73.714 164.571 164.571z"],"width":804.5714285714286,"tags":["minus-square-o"],"defaultCode":61767,"grid":14},{"paths":["M581.714 344.571c-6.286 13.143-18.857 21.143-33.143 21.143h-109.714v493.714c0 10.286-8 18.286-18.286 18.286h-402.286c-6.857 0-13.714-4-16.571-10.286-2.857-6.857-2.286-14.286 2.286-20l91.429-109.714c3.429-4 9.143-6.286 14.286-6.286h182.857v-365.714h-109.714c-14.286 0-26.857-8-33.143-21.143-5.714-12.571-4-28 5.143-38.857l182.857-219.429c13.714-16.571 42.286-16.571 56 0l182.857 219.429c9.143 10.857 11.429 26.286 5.143 38.857z"],"width":586.8251428571429,"tags":["level-up"],"defaultCode":61768,"grid":14},{"paths":["M18.286 146.286h402.286c10.286 0 18.286 8.571 18.286 18.857v493.143h109.714c14.286 0 26.857 8.571 33.143 21.143 6.286 13.143 4 28.571-5.143 39.429l-182.857 219.429c-13.714 16.571-42.286 16.571-56 0l-182.857-219.429c-9.143-10.857-10.857-26.286-5.143-39.429 6.286-12.571 18.857-21.143 33.143-21.143h109.714v-365.714h-182.857c-5.143 0-10.286-2.286-14.286-6.286l-91.429-109.714c-4.571-5.143-5.143-13.143-2.286-19.429s9.714-10.857 16.571-10.857z"],"width":586.8251428571429,"tags":["level-down"],"defaultCode":61769,"grid":14},{"paths":["M391.429 742.286l350.857-350.857c14.286-14.286 14.286-37.143 0-51.429l-58.286-58.286c-14.286-14.286-37.143-14.286-51.429 0l-266.857 266.857-120.571-120.571c-14.286-14.286-37.143-14.286-51.429 0l-58.286 58.286c-14.286 14.286-14.286 37.143 0 51.429l204.571 204.571c14.286 14.286 37.143 14.286 51.429 0zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["check-square"],"defaultCode":61770,"grid":14},{"paths":["M230.857 633.143l86.857 86.857-29.714 29.714h-32v-54.857h-54.857v-32zM467.429 410.286c4.571 4 3.429 12-1.714 17.143l-166.286 166.286c-5.143 5.143-13.143 6.286-17.143 1.714-4.571-4-3.429-12 1.714-17.143l166.286-166.286c5.143-5.143 13.143-6.286 17.143-1.714zM310.857 804.571l310.857-310.857-164.571-164.571-310.857 310.857v164.571h164.571zM658.286 457.143l52.571-52.571c21.143-21.143 21.143-56.571 0-77.714l-86.857-86.857c-21.143-21.143-56.571-21.143-77.714 0l-52.571 52.571zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["pencil-square"],"defaultCode":61771,"grid":14},{"paths":["M731.429 530.286v-274.286c0-20-16.571-36.571-36.571-36.571h-274.286c-14.857 0-28 9.143-33.714 22.286-5.714 13.714-2.857 29.714 8 40l82.286 82.286-305.143 305.143c-14.286 14.286-14.286 37.143 0 51.429l58.286 58.286c14.286 14.286 37.143 14.286 51.429 0l305.143-305.143 82.286 82.286c6.857 7.429 16 10.857 25.714 10.857 4.571 0 9.714-1.143 14.286-2.857 13.143-5.714 22.286-18.857 22.286-33.714zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["external-link-square"],"defaultCode":61772,"grid":14},{"paths":["M574.286 629.143l201.143-201.143c14.286-14.286 14.286-37.143 0-51.429l-201.143-201.143c-10.286-10.857-26.286-13.714-39.429-8-13.714 5.714-22.857 18.857-22.857 33.714v91.429c-328 0-365.714 188-365.714 329.143 0 114.857 92 226.286 95.429 230.857 4 4.571 9.143 6.857 14.286 6.857 2.286 0 5.143-0.571 7.429-1.714 7.429-2.857 12-10.857 10.857-18.857-17.143-137.714-6.286-223.429 35.429-270.286 34.857-39.429 95.429-56.571 202.286-56.571v91.429c0 14.857 9.143 28 22.857 33.714 4 1.714 9.143 2.857 13.714 2.857 9.714 0 18.857-4 25.714-10.857zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["share-square"],"defaultCode":61773,"grid":14},{"paths":["M365.714 621.714l146.286-73.143-146.286-73.143v146.286zM585.143 284v309.714l-292.571 146.286v-309.714zM749.714 512c0-171.429-139.429-310.857-310.857-310.857s-310.857 139.429-310.857 310.857 139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["compass"],"defaultCode":61774,"grid":14},{"paths":["M654.286 385.714c6.286 12 5.143 26.857-2.857 37.714l-182.857 256c-6.857 9.714-17.714 15.429-29.714 15.429s-22.857-5.714-29.714-15.429l-182.857-256c-8-10.857-9.143-25.714-2.857-37.714 6.286-12.571 18.857-20 32.571-20h365.714c13.714 0 26.286 7.429 32.571 20zM731.429 786.286v-548.571c0-9.714-8.571-18.286-18.286-18.286h-548.571c-9.714 0-18.286 8.571-18.286 18.286v548.571c0 9.714 8.571 18.286 18.286 18.286h548.571c9.714 0 18.286-8.571 18.286-18.286zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["caret-square-o-down","toggle-down"],"defaultCode":61776,"grid":14},{"paths":["M654.286 638.286c-6.286 12.571-18.857 20-32.571 20h-365.714c-13.714 0-26.286-7.429-32.571-20-6.286-12-5.143-26.857 2.857-37.714l182.857-256c6.857-9.714 17.714-15.429 29.714-15.429s22.857 5.714 29.714 15.429l182.857 256c8 10.857 9.143 25.714 2.857 37.714zM731.429 786.286v-548.571c0-9.714-8.571-18.286-18.286-18.286h-548.571c-9.714 0-18.286 8.571-18.286 18.286v548.571c0 9.714 8.571 18.286 18.286 18.286h548.571c9.714 0 18.286-8.571 18.286-18.286zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["caret-square-o-up","toggle-up"],"defaultCode":61777,"grid":14},{"paths":["M621.714 512c0 12-5.714 22.857-15.429 29.714l-256 182.857c-10.857 8-25.714 9.143-37.714 2.857-12.571-6.286-20-18.857-20-32.571v-365.714c0-13.714 7.429-26.286 20-32.571 12-6.286 26.857-5.143 37.714 2.857l256 182.857c9.714 6.857 15.429 17.714 15.429 29.714zM731.429 786.286v-548.571c0-10.286-8-18.286-18.286-18.286h-548.571c-10.286 0-18.286 8-18.286 18.286v548.571c0 10.286 8 18.286 18.286 18.286h548.571c10.286 0 18.286-8 18.286-18.286zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["caret-square-o-right","toggle-right"],"defaultCode":61778,"grid":14},{"paths":["M557.714 746.857l20 90.857c2.286 9.143-2.857 18.286-11.429 21.143-2.286 0.571-55.429 18.857-124 18.857-178.286 0-321.714-107.429-369.714-275.429h-54.286c-10.286 0-18.286-8.571-18.286-18.286v-64.571c0-9.714 8-18.286 18.286-18.286h37.714c-0.571-18.286-0.571-40 0.571-60h-38.286c-10.286 0-18.286-8-18.286-18.286v-65.143c0-10.286 8-18.286 18.286-18.286h56c50.857-160 197.143-266.286 368-266.286 59.429 0 108.571 12.571 110.857 13.143 4.571 1.143 8.571 4.571 11.429 8.571 2.286 4 2.857 9.143 1.714 13.714l-24.571 90.857c-2.286 9.714-12 15.429-21.714 12.571-0.571 0-39.429-9.714-80-9.714-96 0-176.571 52-214.857 137.143h267.429c5.714 0 10.857 2.286 14.286 6.857 3.429 4 5.143 9.714 4 14.857l-13.714 65.143c-1.714 8.571-9.143 14.857-18.286 14.857h-278.857c-1.714 18.286-1.143 37.714 0 60h262.286c5.714 0 10.857 2.857 14.286 6.857 3.429 4.571 4.571 10.286 3.429 15.429l-13.714 64c-1.714 8.571-9.143 14.857-17.714 14.857h-221.143c36.571 89.143 118.857 145.143 216 145.143 49.714 0 90.286-13.714 90.857-13.714 4.571-1.714 10.286-1.143 14.857 1.143 4.571 2.857 7.429 7.429 8.571 12z"],"width":580.0228571428571,"tags":["eur","euro"],"defaultCode":61779,"grid":14},{"paths":["M582.857 649.714v209.714c0 10.286-8 18.286-18.286 18.286h-546.286c-10.286 0-18.286-8-18.286-18.286v-85.714c0-9.714 8-18.286 18.286-18.286h55.429v-218.857h-54.286c-10.286 0-18.286-8-18.286-18.286v-74.857c0-10.286 8-18.286 18.286-18.286h54.286v-127.429c0-130.286 105.143-224.571 250.286-224.571 114.286 0 188 68.571 191.429 71.429 6.857 6.286 7.429 17.143 1.714 24.571l-58.857 72.571c-3.429 4-7.429 6.286-12.571 6.857-4.571 0.571-9.714-1.143-13.143-4-0.571-0.571-49.714-39.429-107.429-39.429-64.571 0-108 38.857-108 97.143v122.857h174.286c10.286 0 18.286 8 18.286 18.286v74.857c0 10.286-8 18.286-18.286 18.286h-174.286v216.571h236.571v-103.429c0-10.286 8-18.286 18.286-18.286h92.571c10.286 0 18.286 8 18.286 18.286z"],"width":582.8754285714285,"tags":["gbp"],"defaultCode":61780,"grid":14},{"paths":["M558.857 677.143c0 116.571-83.429 208.571-204.571 228.571v100c0 10.286-8 18.286-18.286 18.286h-77.143c-9.714 0-18.286-8-18.286-18.286v-100c-133.714-18.857-206.857-98.857-209.714-102.286-5.714-6.857-6.286-16.571-1.143-23.429l58.857-77.143c2.857-4 8-6.286 13.143-6.857s10.286 1.143 13.714 5.143c1.143 0.571 81.143 77.143 182.286 77.143 56 0 116.571-29.714 116.571-94.286 0-54.857-67.429-81.714-144.571-112.571-102.857-40.571-230.857-92-230.857-235.429 0-105.143 82.286-192 201.714-214.857v-102.857c0-10.286 8.571-18.286 18.286-18.286h77.143c10.286 0 18.286 8 18.286 18.286v100.571c116 13.143 177.714 76 180 78.286 5.714 6.286 6.857 14.857 2.857 21.714l-46.286 83.429c-2.857 5.143-7.429 8.571-13.143 9.143-5.714 1.143-10.857-0.571-15.429-4-0.571-0.571-69.714-61.714-155.429-61.714-72.571 0-122.857 36-122.857 88 0 60.571 69.714 87.429 150.857 118.857 105.143 40.571 224 86.857 224 224.571z"],"width":583.4605714285714,"tags":["dollar","usd"],"defaultCode":61781,"grid":14},{"paths":["M513.143 268.571v58.286c0 10.286-8 18.286-18.286 18.286h-96c-17.714 109.714-101.714 181.143-231.429 196.571 85.143 90.857 176 200.571 262.286 306.286 4.571 5.143 5.714 13.143 2.286 19.429-2.857 6.286-9.143 10.286-16.571 10.286h-111.429c-5.714 0-10.857-2.286-14.286-6.857-92-110.286-176.571-211.429-284.571-326.286-3.429-3.429-5.143-8-5.143-12.571v-72.571c0-9.714 8-18.286 18.286-18.286h64c100.571 0 163.429-33.714 180-96h-244c-10.286 0-18.286-8-18.286-18.286v-58.286c0-10.286 8-18.286 18.286-18.286h236c-21.714-42.857-73.143-64.571-153.143-64.571h-82.857c-10.286 0-18.286-8.571-18.286-18.286v-76c0-10.286 8-18.286 18.286-18.286h475.429c10.286 0 18.286 8 18.286 18.286v58.286c0 10.286-8 18.286-18.286 18.286h-133.143c18.286 23.429 30.286 50.857 36.571 82.286h97.714c10.286 0 18.286 8 18.286 18.286z"],"width":513.1702857142857,"tags":["inr","rupee"],"defaultCode":61782,"grid":14},{"paths":["M344.571 877.714h-98.286c-10.286 0-18.286-8-18.286-18.286v-188.571h-164.571c-10.286 0-18.286-8-18.286-18.286v-58.857c0-10.286 8-18.286 18.286-18.286h164.571v-48.571h-164.571c-10.286 0-18.286-8-18.286-18.286v-59.429c0-9.714 8-18.286 18.286-18.286h122.286l-183.429-330.286c-2.857-5.714-2.857-12.571 0-18.286 3.429-5.714 9.714-9.143 16-9.143h110.857c6.857 0 13.143 4 16.571 10.286l122.857 242.857c13.714 26.857 22.857 49.714 32 71.429 9.714-24.571 22.286-48.571 33.143-73.714l109.143-240c2.857-6.857 9.714-10.857 16.571-10.857h109.143c6.286 0 12 3.429 15.429 9.143 3.429 5.143 3.429 12 0.571 17.714l-178.857 330.857h122.857c10.286 0 18.286 8.571 18.286 18.286v59.429c0 10.286-8 18.286-18.286 18.286h-165.714v48.571h165.714c10.286 0 18.286 8 18.286 18.286v58.857c0 10.286-8 18.286-18.286 18.286h-165.714v188.571c0 10.286-8.571 18.286-18.286 18.286z"],"width":586.8251428571429,"tags":["cny","jpy","rmb","yen"],"defaultCode":61783,"grid":14},{"paths":["M596 322.857c0-76.571-54.286-128-134.857-128h-182.857v256h182.857c80.571 0 134.857-51.429 134.857-128zM731.429 322.857c0 146.857-106.286 249.714-258.857 249.714h-194.286v67.429h288.571c10.286 0 18.286 8 18.286 18.286v73.143c0 10.286-8 18.286-18.286 18.286h-288.571v109.714c0 10.286-8 18.286-18.286 18.286h-95.429c-10.286 0-18.286-8-18.286-18.286v-109.714h-128c-10.286 0-18.286-8-18.286-18.286v-73.143c0-10.286 8-18.286 18.286-18.286h128v-67.429h-128c-10.286 0-18.286-8-18.286-18.286v-85.143c0-10.286 8-18.286 18.286-18.286h128v-359.429c0-10.286 8-18.286 18.286-18.286h308c152.571 0 258.857 102.857 258.857 249.714z"],"width":731.4285714285713,"tags":["rouble","rub","ruble"],"defaultCode":61784,"grid":14},{"paths":["M293.714 682.857l46.286-170.857h-90.857l42.857 171.429c0.571 1.143 0.571 2.286 1.143 3.429 0-1.143 0.571-2.857 0.571-4zM360 438.857l20-73.143h-166.857l18.286 73.143h128.571zM469.714 438.857h79.429l-20-73.143h-40zM726.286 683.429l44.571-171.429h-92.571l46.286 170.857c0.571 1.714 0.571 2.857 1.143 4 0-1.143 0.571-2.286 0.571-3.429zM789.714 438.857l18.857-73.143h-169.714l19.429 73.143h131.429zM1024 457.143v36.571c0 10.286-8 18.286-18.286 18.286h-121.714l-93.714 352c-2.286 8-9.714 13.714-17.714 13.714h-90.857c-8 0-15.429-5.714-17.714-13.714l-94.857-352h-119.429l-95.429 352c-2.286 8-9.143 13.714-17.714 13.714h-90.857c-8 0-15.429-5.714-17.143-13.714l-91.429-352h-118.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h100l-18.857-73.143h-81.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h62.286l-50.857-196.571c-1.714-5.714-0.571-11.429 2.857-16 3.429-4 9.143-6.857 14.857-6.857h78.286c8.571 0 16 5.714 17.714 13.714l51.429 205.714h205.143l55.429-205.714c2.286-8 9.714-13.714 17.714-13.714h72c8.571 0 15.429 5.714 17.714 13.714l56 205.714h208.571l53.143-205.714c1.714-8 9.143-13.714 17.714-13.714h78.286c5.714 0 11.429 2.857 14.857 6.857 3.429 4.571 4.571 10.857 2.857 16l-52 196.571h63.429c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-82.857l-19.429 73.143h102.286c10.286 0 18.286 8 18.286 18.286z"],"width":1024,"tags":["krw","won"],"defaultCode":61785,"grid":14},{"paths":["M666.857 365.714c7.429 76-24.571 121.714-74.857 147.429 83.429 20 136 69.714 125.714 181.143-13.143 138.857-116 176-263.429 184v145.714h-88v-143.429c-22.286 0-45.714 0-69.714-0.571v144h-88v-145.714c-20.571 0-41.143-0.571-62.286-0.571h-114.286l17.714-104.571c64.571 1.143 63.429 0 63.429 0 24.571 0 31.429-17.714 33.143-29.143v-229.714h9.143c-3.429-0.571-6.857-0.571-9.143-0.571v-164c-3.429-18.286-14.857-38.857-50.857-38.857 0 0 1.143-1.143-63.429 0v-93.714l121.143 0.571c17.714 0 36.571 0 55.429-0.571v-144h88v141.143c23.429-0.571 46.857-1.143 69.714-1.143v-140h88v144c113.143 9.714 202.857 44.571 212.571 148.571zM544 677.143c0-113.143-186.286-96.571-245.714-96.571v193.143c59.429 0 245.714 12.571 245.714-96.571zM503.429 405.143c0-103.429-155.429-88-205.143-88v175.429c49.714 0 205.143 11.429 205.143-87.429z"],"width":760.0274285714286,"tags":["bitcoin","btc"],"defaultCode":61786,"grid":14},{"paths":["M585.143 292.571v-269.714c8 5.143 14.857 10.286 20.571 16l233.143 233.143c5.714 5.714 10.857 12.571 16 20.571h-269.714zM512 310.857c0 30.286 24.571 54.857 54.857 54.857h310.857v603.429c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h457.143v310.857z"],"width":877.7142857142857,"tags":["file"],"defaultCode":61787,"grid":14},{"paths":["M838.857 272c5.714 5.714 10.857 12.571 16 20.571h-269.714v-269.714c8 5.143 14.857 10.286 20.571 16zM566.857 365.714h310.857v603.429c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h457.143v310.857c0 30.286 24.571 54.857 54.857 54.857zM658.286 786.286v-36.571c0-10.286-8-18.286-18.286-18.286h-402.286c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h402.286c10.286 0 18.286-8 18.286-18.286zM658.286 640v-36.571c0-10.286-8-18.286-18.286-18.286h-402.286c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h402.286c10.286 0 18.286-8 18.286-18.286zM658.286 493.714v-36.571c0-10.286-8-18.286-18.286-18.286h-402.286c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h402.286c10.286 0 18.286-8 18.286-18.286z"],"width":877.7142857142857,"tags":["file-text"],"defaultCode":61788,"grid":14},{"paths":["M680.571 233.143h101.143l-41.143-124.571-6.857-26.857c-0.571-4.571-1.143-8-1.143-11.429h-2.286l-1.714 11.429c-1.714 6.857-2.286 15.429-6.286 26.857zM420.571 822.857c0 5.143-2.286 9.714-5.714 13.714l-182.286 182.286c-4 3.429-8.571 5.143-13.143 5.143s-9.143-1.714-13.143-5.143l-182.857-182.857c-5.143-5.714-6.857-13.143-4-20s9.714-11.429 17.143-11.429h109.714v-786.286c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v786.286h109.714c10.286 0 18.286 8 18.286 18.286zM898.286 890.857v133.143h-333.714v-51.429l210.857-302.286c4.571-6.857 9.143-12.571 12-15.429l6.286-5.143v-1.714c-2.286 0-4.571 0.571-8 0.571-4.571 1.143-10.286 1.714-17.143 1.714h-132.571v65.714h-68.571v-130.857h324v50.857l-210.857 302.857c-3.429 5.143-8 10.286-12 14.857l-6.286 6.286v1.143l8-1.143c5.143-1.143 10.286-1.143 17.143-1.143h141.714v-68h69.143zM949.143 378.286v60.571h-164.571v-60.571h42.857l-26.857-82.286h-138.857l-26.857 82.286h42.857v60.571h-164v-60.571h40l131.429-378.286h92.571l131.429 378.286h40z"],"width":965.7051428571427,"tags":["sort-alpha-asc"],"defaultCode":61789,"grid":14},{"paths":["M680.571 818.286h101.143l-41.143-124.571-6.857-26.857c-0.571-4.571-1.143-8-1.143-11.429h-2.286l-1.714 11.429c-1.714 6.857-2.286 15.429-6.286 26.857zM420.571 822.857c0 5.143-2.286 9.714-5.714 13.714l-182.286 182.286c-4 3.429-8.571 5.143-13.143 5.143s-9.143-1.714-13.143-5.143l-182.857-182.857c-5.143-5.714-6.857-13.143-4-20s9.714-11.429 17.143-11.429h109.714v-786.286c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v786.286h109.714c10.286 0 18.286 8 18.286 18.286zM949.143 963.429v60.571h-164.571v-60.571h42.857l-26.857-82.286h-138.857l-26.857 82.286h42.857v60.571h-164v-60.571h40l131.429-378.286h92.571l131.429 378.286h40zM898.286 305.714v133.143h-333.714v-51.429l210.857-302.286c4.571-6.857 9.143-12.571 12-15.429l6.286-5.143v-1.714c-2.286 0-4.571 0.571-8 0.571-4.571 1.143-10.286 1.714-17.143 1.714h-132.571v65.714h-68.571v-130.857h324v50.857l-210.857 302.857c-3.429 5.143-8 10.286-12 14.857l-6.286 5.714v1.714l8-1.714c5.143-0.571 10.286-0.571 17.143-0.571h141.714v-68h69.143z"],"width":965.7051428571427,"tags":["sort-alpha-desc"],"defaultCode":61790,"grid":14},{"paths":["M420.571 822.857c0 5.143-2.286 9.714-5.714 13.714l-182.286 182.286c-4 3.429-8.571 5.143-13.143 5.143s-9.143-1.714-13.143-5.143l-182.857-182.857c-5.143-5.714-6.857-13.143-4-20s9.714-11.429 17.143-11.429h109.714v-786.286c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v786.286h109.714c10.286 0 18.286 8 18.286 18.286zM1024 896v109.714c0 10.286-8 18.286-18.286 18.286h-475.429c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h475.429c10.286 0 18.286 8 18.286 18.286zM914.286 603.429v109.714c0 10.286-8 18.286-18.286 18.286h-365.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h365.714c10.286 0 18.286 8 18.286 18.286zM804.571 310.857v109.714c0 10.286-8 18.286-18.286 18.286h-256c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h256c10.286 0 18.286 8 18.286 18.286zM694.857 18.286v109.714c0 10.286-8 18.286-18.286 18.286h-146.286c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h146.286c10.286 0 18.286 8 18.286 18.286z"],"width":1040.6034285714286,"tags":["sort-amount-asc"],"defaultCode":61792,"grid":14},{"paths":["M694.857 896v109.714c0 10.286-8 18.286-18.286 18.286h-146.286c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h146.286c10.286 0 18.286 8 18.286 18.286zM420.571 822.857c0 5.143-2.286 9.714-5.714 13.714l-182.286 182.286c-4 3.429-8.571 5.143-13.143 5.143s-9.143-1.714-13.143-5.143l-182.857-182.857c-5.143-5.714-6.857-13.143-4-20s9.714-11.429 17.143-11.429h109.714v-786.286c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v786.286h109.714c10.286 0 18.286 8 18.286 18.286zM804.571 603.429v109.714c0 10.286-8 18.286-18.286 18.286h-256c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h256c10.286 0 18.286 8 18.286 18.286zM914.286 310.857v109.714c0 10.286-8 18.286-18.286 18.286h-365.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h365.714c10.286 0 18.286 8 18.286 18.286zM1024 18.286v109.714c0 10.286-8 18.286-18.286 18.286h-475.429c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h475.429c10.286 0 18.286 8 18.286 18.286z"],"width":1040.6034285714286,"tags":["sort-amount-desc"],"defaultCode":61793,"grid":14},{"paths":["M769.143 750.286c0-46.857-38.286-96.571-84-96.571-40 0-65.143 32.571-65.143 74.857 0 41.143 26.286 76 80.571 76 37.143 0 68.571-22.286 68.571-54.286zM420.571 822.857c0 5.143-2.286 9.714-5.714 13.714l-182.286 182.286c-4 3.429-8.571 5.143-13.143 5.143s-9.143-1.714-13.143-5.143l-182.857-182.857c-5.143-5.714-6.857-13.143-4-20s9.714-11.429 17.143-11.429h109.714v-786.286c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v786.286h109.714c10.286 0 18.286 8 18.286 18.286zM849.143 783.429c0 115.429-62.857 240.571-198.857 240.571-25.714 0-46.857-4-61.714-9.143-9.143-2.857-17.143-5.714-24-8.571l22.286-64.571c5.143 2.286 11.429 4.571 17.714 6.286 11.429 4 26.286 7.429 42.857 7.429 68.571 0 104-57.143 114.857-116.571h-1.143c-16 17.143-49.714 29.143-83.429 29.143-82.857 0-137.143-65.143-137.143-139.429 0-78.857 60.571-143.429 144.571-143.429 90.857 0 164 74.286 164 198.286zM832 373.714v65.143h-268v-65.143h95.429v-246.857c0-7.429 0.571-14.857 0.571-20.571v-9.143h-1.143l-4 6.857c-2.857 4.571-7.429 10.286-14.857 17.714l-35.429 33.143-46.857-49.143 109.714-105.714h70.286v373.714h94.286z"],"width":865.7188571428571,"tags":["sort-numeric-asc"],"defaultCode":61794,"grid":14},{"paths":["M769.143 165.143c0-46.857-38.286-96.571-84-96.571-40 0-65.143 32.571-65.143 74.857 0 41.143 26.286 76 80.571 76 37.143 0 68.571-22.286 68.571-54.286zM420.571 822.857c0 5.143-2.286 9.714-5.714 13.714l-182.286 182.286c-4 3.429-8.571 5.143-13.143 5.143s-9.143-1.714-13.143-5.143l-182.857-182.857c-5.143-5.714-6.857-13.143-4-20s9.714-11.429 17.143-11.429h109.714v-786.286c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v786.286h109.714c10.286 0 18.286 8 18.286 18.286zM832 958.857v65.143h-268v-65.143h95.429v-246.857c0-7.429 0.571-14.857 0.571-20.571v-9.143h-1.143l-4 6.857c-2.857 4.571-7.429 10.286-14.857 17.714l-35.429 33.143-46.857-49.143 109.714-105.714h70.286v373.714h94.286zM849.143 198.286c0 115.429-62.857 240.571-198.857 240.571-25.714 0-46.857-4-61.714-9.143-9.143-2.857-17.143-5.714-24-8.571l22.286-64.571c5.143 2.286 11.429 4.571 17.714 6.286 11.429 4 26.286 7.429 42.857 7.429 68.571 0 104-57.143 114.857-116.571h-1.143c-16 17.143-49.714 29.143-83.429 29.143-82.857 0-137.143-65.143-137.143-139.429 0-78.857 60.571-143.429 144.571-143.429 90.857 0 164 74.286 164 198.286z"],"width":865.7188571428571,"tags":["sort-numeric-desc"],"defaultCode":61795,"grid":14},{"paths":["M146.286 768c0-20-16.571-36.571-36.571-36.571-20.571 0-36.571 16.571-36.571 36.571 0 20.571 16 36.571 36.571 36.571 20 0 36.571-16 36.571-36.571zM237.714 475.429v365.714c0 20-16.571 36.571-36.571 36.571h-164.571c-20 0-36.571-16.571-36.571-36.571v-365.714c0-20 16.571-36.571 36.571-36.571h164.571c20 0 36.571 16.571 36.571 36.571zM914.286 475.429c0 30.286-12 62.857-31.429 85.143 6.286 18.286 8.571 35.429 8.571 43.429 1.143 28.571-7.429 55.429-24.571 78.286 6.286 21.143 6.286 44 0 66.857-5.714 21.143-16.571 40-30.857 53.714 3.429 42.857-6.286 77.714-28 103.429-24.571 29.143-62.286 44-112.571 44.571h-73.714c-81.714 0-158.857-26.857-220.571-48-36-12.571-70.286-24.571-90.286-25.143-19.429-0.571-36.571-16.571-36.571-36.571v-366.286c0-18.857 16-34.857 34.857-36.571 21.143-1.714 76-69.714 101.143-102.857 20.571-26.286 40-50.857 57.714-68.571 22.286-22.286 28.571-56.571 35.429-89.714 6.286-33.714 13.143-69.143 37.714-93.143 6.857-6.857 16-10.857 25.714-10.857 128 0 128 102.286 128 146.286 0 46.857-16.571 80-32 109.714-6.286 12.571-12 18.286-16.571 36.571h158.286c59.429 0 109.714 50.286 109.714 109.714z"],"width":914.2857142857142,"tags":["thumbs-up"],"defaultCode":61796,"grid":14},{"paths":["M146.286 329.143c0 20-16.571 36.571-36.571 36.571-20.571 0-36.571-16.571-36.571-36.571 0-20.571 16-36.571 36.571-36.571 20 0 36.571 16 36.571 36.571zM237.714 621.714v-365.714c0-20-16.571-36.571-36.571-36.571h-164.571c-20 0-36.571 16.571-36.571 36.571v365.714c0 20 16.571 36.571 36.571 36.571h164.571c20 0 36.571-16.571 36.571-36.571zM882.857 536.571c19.429 21.714 31.429 54.857 31.429 85.143-0.571 59.429-50.286 109.714-109.714 109.714h-158.286c4.571 18.286 10.286 24 16.571 36.571 14.857 29.714 32 62.857 32 109.714 0 44 0 146.286-128 146.286-9.714 0-18.857-4-25.714-10.857-24.571-24-31.429-59.429-37.714-93.143-6.857-33.143-13.143-67.429-35.429-89.714-17.714-17.714-37.143-42.286-57.714-68.571-25.143-33.143-80-101.143-101.143-102.857-18.857-1.714-34.857-17.714-34.857-36.571v-366.286c0-20 17.143-36 36.571-36.571 20-0.571 54.286-12.571 90.286-25.143 61.714-21.143 138.857-48 220.571-48h73.714c50.286 0.571 88 15.429 112.571 44.571 21.714 25.714 31.429 60.571 28 103.429 14.286 13.714 25.143 32.571 30.857 53.714 6.286 22.857 6.286 45.714 0 66.857 17.143 22.857 25.714 49.714 24.571 78.286 0 8-2.286 25.143-8.571 43.429z"],"width":914.2857142857142,"tags":["thumbs-down"],"defaultCode":61797,"grid":14},{"paths":["M525.143 744.571v-89.714c0-18.857-5.714-28.571-16.571-28.571-6.286 0-12.571 2.857-18.857 9.143v128c6.286 6.286 12.571 9.143 18.857 9.143 10.857 0 16.571-9.143 16.571-28zM630.286 674.857h37.714v-19.429c0-19.429-6.286-29.143-18.857-29.143s-18.857 9.714-18.857 29.143v19.429zM304 522.857v40h-45.714v241.714h-42.286v-241.714h-44.571v-40h132.571zM418.857 594.857v209.714h-38.286v-22.857c-14.857 17.143-29.143 25.714-43.429 25.714-12 0-20.571-5.143-24-16-2.286-6.286-3.429-16-3.429-30.857v-165.714h37.714v154.286c0 8.571 0 13.714 0.571 14.857 0.571 5.714 3.429 8.571 8.571 8.571 8 0 15.429-5.714 24-17.714v-160h38.286zM562.857 658.286v83.429c0 18.857-1.143 33.143-4 41.714-4.571 16-14.857 24-30.286 24-13.143 0-26.286-8-38.857-23.429v20.571h-38.286v-281.714h38.286v92c12-14.857 25.143-22.857 38.857-22.857 15.429 0 25.714 8 30.286 24 2.857 8.571 4 22.286 4 42.286zM706.286 732v5.143c0 12.571-0.571 20.571-1.143 24.571-1.143 8.571-4 16-8.571 22.857-10.286 15.429-26.286 22.857-45.714 22.857-20 0-35.429-7.429-46.286-21.714-8-10.286-12-26.857-12-49.143v-73.714c0-22.286 3.429-38.286 11.429-49.143 10.857-14.286 26.286-21.714 45.714-21.714 18.857 0 34.286 7.429 44.571 21.714 8 10.857 12 26.857 12 49.143v43.429h-76v37.143c0 19.429 6.286 29.143 19.429 29.143 9.143 0 14.857-5.143 17.143-14.857 0-2.286 0.571-10.857 0.571-25.714h38.857zM448.571 261.143v89.143c0 19.429-6.286 29.143-18.286 29.143-12.571 0-18.286-9.714-18.286-29.143v-89.143c0-19.429 5.714-29.714 18.286-29.714 12 0 18.286 10.286 18.286 29.714zM753.143 668.571v0c0-49.143 0-101.143-10.857-148.571-8-33.714-35.429-58.286-68-61.714-77.714-8.571-156.571-8.571-235.429-8.571-78.286 0-157.143 0-234.857 8.571-33.143 3.429-60.571 28-68 61.714-10.857 47.429-11.429 99.429-11.429 148.571v0c0 48.571 0 100.571 11.429 148.571 7.429 33.143 34.857 57.714 67.429 61.714 78.286 8.571 157.143 8.571 235.429 8.571s157.143 0 235.429-8.571c32.571-4 60-28.571 67.429-61.714 11.429-48 11.429-100 11.429-148.571zM321.714 296.571l51.429-169.143h-42.857l-29.143 111.429-30.286-111.429h-44.571c8.571 26.286 18.286 52.571 26.857 78.857 13.714 40 22.286 69.714 26.286 90.286v114.857h42.286v-114.857zM486.857 342.857v-74.286c0-22.286-4-38.857-12-49.714-10.857-14.286-25.714-21.714-44.571-21.714-19.429 0-34.286 7.429-44.571 21.714-8 10.857-12 27.429-12 49.714v74.286c0 22.286 4 38.857 12 49.714 10.286 14.286 25.143 21.714 44.571 21.714 18.857 0 33.714-7.429 44.571-21.714 8-10.286 12-27.429 12-49.714zM590.286 411.429h38.286v-211.429h-38.286v161.714c-8.571 12-16.571 17.714-24 17.714-5.143 0-8.571-2.857-9.143-9.143-0.571-1.143-0.571-5.714-0.571-14.857v-155.429h-38.286v167.429c0 14.857 1.143 24.571 3.429 31.429 4 10.286 12.571 15.429 24.571 15.429 14.286 0 28.571-8.571 44-25.714v22.857zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["youtube-square"],"defaultCode":61798,"grid":14},{"paths":["M554.857 710.857v120.571c0 25.714-7.429 38.286-22.286 38.286-8.571 0-17.143-4-25.714-12.571v-172c8.571-8.571 17.143-12.571 25.714-12.571 14.857 0 22.286 13.143 22.286 38.286zM748 711.429v26.286h-51.429v-26.286c0-25.714 8.571-38.857 25.714-38.857s25.714 13.143 25.714 38.857zM196 586.857h61.143v-53.714h-178.286v53.714h60v325.143h57.143v-325.143zM360.571 912h50.857v-282.286h-50.857v216c-11.429 16-22.286 24-32.571 24-6.857 0-10.857-4-12-12-0.571-1.714-0.571-8-0.571-20v-208h-50.857v223.429c0 20 1.714 33.143 4.571 41.714 4.571 14.286 16.571 21.143 33.143 21.143 18.286 0 37.714-11.429 58.286-34.857v30.857zM605.714 827.429v-112.571c0-26.286-1.143-45.143-5.143-56.571-6.286-21.143-20.571-32-40.571-32-18.857 0-36.571 10.286-53.143 30.857v-124h-50.857v378.857h50.857v-27.429c17.143 21.143 34.857 31.429 53.143 31.429 20 0 34.286-10.857 40.571-31.429 4-12 5.143-30.857 5.143-57.143zM798.857 821.714v-7.429h-52c0 20.571-0.571 32-1.143 34.857-2.857 13.714-10.286 20.571-22.857 20.571-17.714 0-26.286-13.143-26.286-39.429v-49.714h102.286v-58.857c0-30.286-5.143-52-15.429-66.286-14.857-19.429-34.857-29.143-60.571-29.143-26.286 0-46.286 9.714-61.143 29.143-10.857 14.286-16 36-16 66.286v98.857c0 30.286 5.714 52.571 16.571 66.286 14.857 19.429 34.857 29.143 61.714 29.143s48-10.286 61.714-30.286c6.286-9.143 10.857-19.429 12-30.857 1.143-5.143 1.143-16.571 1.143-33.143zM451.429 300v-120c0-26.286-7.429-39.429-24.571-39.429-16.571 0-24.571 13.143-24.571 39.429v120c0 26.286 8 40 24.571 40 17.143 0 24.571-13.714 24.571-40zM862.286 729.143c0 65.714-0.571 136-14.857 200-10.857 45.143-47.429 78.286-91.429 82.857-105.143 12-211.429 12-317.143 12s-212 0-317.143-12c-44-4.571-81.143-37.714-91.429-82.857-14.857-64-14.857-134.286-14.857-200v0c0-66.286 0.571-136 14.857-200 10.857-45.143 47.429-78.286 92-83.429 104.571-11.429 210.857-11.429 316.571-11.429s212 0 317.143 11.429c44 5.143 81.143 38.286 91.429 83.429 14.857 64 14.857 133.714 14.857 200zM292 0h58.286l-69.143 228v154.857h-57.143v-154.857c-5.143-28-16.571-68-34.857-121.143-12.571-35.429-25.143-71.429-37.143-106.857h60.571l40.571 150.286zM503.429 190.286v100c0 30.286-5.143 53.143-16 67.429-14.286 19.429-34.286 29.143-60.571 29.143-25.714 0-45.714-9.714-60-29.143-10.857-14.857-16-37.143-16-67.429v-100c0-30.286 5.143-52.571 16-66.857 14.286-19.429 34.286-29.143 60-29.143 26.286 0 46.286 9.714 60.571 29.143 10.857 14.286 16 36.571 16 66.857zM694.857 97.714v285.143h-52v-31.429c-20.571 24-40 35.429-58.857 35.429-16.571 0-28.571-6.857-33.714-21.143-2.857-8.571-4.571-22.286-4.571-42.857v-225.143h52v209.714c0 12 0 18.857 0.571 20 1.143 8 5.143 12.571 12 12.571 10.286 0 21.143-8 32.571-24.571v-217.714h52z"],"width":877.7142857142857,"tags":["youtube"],"defaultCode":61799,"grid":14},{"paths":["M341.143 381.143c0 0-5.714 9.714-146.857 260.571-7.429 12.571-17.143 26.286-37.143 26.286h-136.571c-8 0-14.286-4-17.714-9.714s-4-13.143 0-20.571l144.571-256c0.571 0 0.571 0 0-0.571l-92-159.429c-4-7.429-4.571-15.429-0.571-21.143 3.429-5.714 10.286-8.571 18.286-8.571h136.571c20.571 0 30.857 13.714 37.714 25.714 93.143 162.857 93.714 163.429 93.714 163.429zM801.714 14.286c4 5.714 4 13.714 0 21.143l-301.714 533.714c-0.571 0-0.571 0.571 0 0.571l192 351.429c4 7.429 4 15.429 0.571 21.143-4 5.714-10.286 8.571-18.286 8.571h-136.571c-20.571 0-31.429-13.714-37.714-25.714-193.714-354.857-193.714-355.429-193.714-355.429s9.714-17.143 303.429-538.286c7.429-13.143 16-25.714 36.571-25.714h137.714c8 0 14.286 2.857 17.714 8.571z"],"width":804.5714285714286,"tags":["xing"],"defaultCode":61800,"grid":14},{"paths":["M391.429 437.143c0 0 0-0.571-72-126.857-5.714-9.143-13.714-19.429-29.714-19.429h-105.143c-6.857 0-12 2.286-14.857 6.286-2.857 4.571-2.286 10.857 0.571 16.571l71.429 123.429v0.571l-112 197.714c-3.429 5.714-2.857 11.429 0 16s7.429 7.429 13.714 7.429h105.714c15.429 0 23.429-10.857 28.571-20.571 109.714-193.714 113.714-201.143 113.714-201.143zM748 153.143c-2.857-4.571-7.429-6.857-13.714-6.857h-106.857c-15.429 0-22.286 9.714-28 20-227.429 403.429-234.857 416.571-234.857 416.571s0 0.571 149.714 274.857c5.143 9.143 13.143 20 29.714 20h105.143c6.286 0 11.429-2.286 14.286-6.857s2.857-10.286-0.571-16l-148.571-272v-0.571l233.714-413.143c2.857-5.714 2.857-11.429 0-16zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["xing-square"],"defaultCode":61801,"grid":14},{"paths":["M406.286 644.571l276.571-142.857-276.571-144.571v287.429zM512 152c215.429 0 358.286 10.286 358.286 10.286 20 2.286 64 2.286 102.857 43.429 0 0 31.429 30.857 40.571 101.714 10.857 82.857 10.286 165.714 10.286 165.714v77.714s0.571 82.857-10.286 165.714c-9.143 70.286-40.571 101.714-40.571 101.714-38.857 40.571-82.857 40.571-102.857 42.857 0 0-142.857 10.857-358.286 10.857v0c-266.286-2.286-348-10.286-348-10.286-22.857-4-74.286-2.857-113.143-43.429 0 0-31.429-31.429-40.571-101.714-10.857-82.857-10.286-165.714-10.286-165.714v-77.714s-0.571-82.857 10.286-165.714c9.143-70.857 40.571-101.714 40.571-101.714 38.857-41.143 82.857-41.143 102.857-43.429 0 0 142.857-10.286 358.286-10.286v0z"],"width":1024,"tags":["youtube-play"],"defaultCode":61802,"grid":14},{"paths":["M229.714 404l282.286 174.286-195.429 162.857-280-182.286zM793.143 721.143v61.714l-280 167.429v0.571l-0.571-0.571-0.571 0.571v-0.571l-279.429-167.429v-61.714l84 54.857 195.429-162.286v-1.143l0.571 0.571 0.571-0.571v1.143l196 162.286zM316.571 67.429l195.429 162.857-282.286 173.714-193.143-154.286zM794.286 404l193.143 154.857-279.429 182.286-196-162.857zM708 67.429l279.429 182.286-193.143 154.286-282.286-173.714z"],"width":1024,"tags":["dropbox"],"defaultCode":61803,"grid":14},{"paths":["M736.571 932.571h-638.857v-274.286h-91.429v365.714h821.714v-365.714h-91.429v274.286zM198.286 633.143l18.857-89.714 447.429 94.286-18.857 89.143zM257.143 419.429l38.286-83.429 414.286 193.714-38.286 82.857zM372 216l58.286-70.286 350.857 293.143-58.286 70.286zM598.857 0l272.571 366.286-73.143 54.857-272.571-366.286zM188.571 840.571v-90.857h457.143v90.857h-457.143z"],"width":877.7142857142857,"tags":["stack-overflow"],"defaultCode":61804,"grid":14},{"paths":["M585.143 512c0-80.571-65.714-146.286-146.286-146.286s-146.286 65.714-146.286 146.286 65.714 146.286 146.286 146.286 146.286-65.714 146.286-146.286zM664 512c0 124.571-100.571 225.143-225.143 225.143s-225.143-100.571-225.143-225.143 100.571-225.143 225.143-225.143 225.143 100.571 225.143 225.143zM725.714 277.714c0 29.143-23.429 52.571-52.571 52.571s-52.571-23.429-52.571-52.571 23.429-52.571 52.571-52.571 52.571 23.429 52.571 52.571zM438.857 152c-64 0-201.143-5.143-258.857 17.714-20 8-34.857 17.714-50.286 33.143s-25.143 30.286-33.143 50.286c-22.857 57.714-17.714 194.857-17.714 258.857s-5.143 201.143 17.714 258.857c8 20 17.714 34.857 33.143 50.286s30.286 25.143 50.286 33.143c57.714 22.857 194.857 17.714 258.857 17.714s201.143 5.143 258.857-17.714c20-8 34.857-17.714 50.286-33.143s25.143-30.286 33.143-50.286c22.857-57.714 17.714-194.857 17.714-258.857s5.143-201.143-17.714-258.857c-8-20-17.714-34.857-33.143-50.286s-30.286-25.143-50.286-33.143c-57.714-22.857-194.857-17.714-258.857-17.714zM877.714 512c0 60.571 0.571 120.571-2.857 181.143-3.429 70.286-19.429 132.571-70.857 184s-113.714 67.429-184 70.857c-60.571 3.429-120.571 2.857-181.143 2.857s-120.571 0.571-181.143-2.857c-70.286-3.429-132.571-19.429-184-70.857s-67.429-113.714-70.857-184c-3.429-60.571-2.857-120.571-2.857-181.143s-0.571-120.571 2.857-181.143c3.429-70.286 19.429-132.571 70.857-184s113.714-67.429 184-70.857c60.571-3.429 120.571-2.857 181.143-2.857s120.571-0.571 181.143 2.857c70.286 3.429 132.571 19.429 184 70.857s67.429 113.714 70.857 184c3.429 60.571 2.857 120.571 2.857 181.143z"],"width":877.7142857142857,"tags":["instagram"],"defaultCode":61805,"grid":14},{"paths":["M713.143 73.143c90.857 0 164.571 73.714 164.571 164.571v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571zM398.857 512c0-66.857-54.286-121.143-121.143-121.143s-121.143 54.286-121.143 121.143 54.286 121.143 121.143 121.143 121.143-54.286 121.143-121.143zM721.143 512c0-66.857-54.286-121.143-121.143-121.143s-121.143 54.286-121.143 121.143 54.286 121.143 121.143 121.143 121.143-54.286 121.143-121.143z"],"width":877.7142857142857,"tags":["flickr"],"defaultCode":61806,"grid":14},{"paths":["M438.857 355.429l114.857 174.857h-229.714zM647.429 658.286h53.714l-262.286-394.857-262.286 394.857h53.714l59.429-91.429h298.286zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["adn"],"defaultCode":61808,"grid":14},{"paths":["M465.714 490.857c6.286 48-52 85.714-92.571 61.143-45.714-20-45.714-92.571-1.143-113.143 38.286-23.429 93.714 7.429 93.714 52zM529.143 478.857c-10.286-81.143-102.286-134.857-177.143-101.143-47.429 21.143-79.429 71.429-77.143 124.571 2.857 69.714 69.143 126.857 138.857 120.571s124-74.286 115.429-144zM665.714 169.143c-25.143-33.143-68-38.857-105.714-45.143-106.857-17.143-216.571-17.714-323.429 1.143-35.429 5.714-75.429 12-97.714 44 36.571 34.286 88.571 39.429 135.429 45.143 84.571 10.857 171.429 11.429 256 0.571 47.429-5.714 100-10.286 135.429-45.714zM698.286 760.571c-16 56-6.857 131.429-66.286 164-102.286 56.571-226.286 62.857-338.857 42.857-59.429-10.857-129.143-29.714-161.714-85.714-14.286-54.857-23.429-110.857-32.571-166.857l3.429-9.143 10.286-5.143c170.286 112.571 408.571 112.571 579.429 0 26.857 8 6.857 40.571 6.286 60zM801.714 211.429c-19.429 125.143-41.714 249.714-63.429 374.286-6.286 36.571-41.714 57.143-71.429 72.571-106.857 53.714-231.429 62.857-348.571 50.286-79.429-8.571-160.571-29.714-225.143-79.429-30.286-23.429-30.286-63.429-36-97.143-20-117.143-42.857-234.286-57.143-352.571 6.857-51.429 64.571-73.714 107.429-89.714 57.143-21.143 118.286-30.857 178.857-36.571 129.143-12.571 261.143-8 386.286 28.571 44.571 13.143 92.571 31.429 122.857 69.714 13.714 17.714 9.143 40 6.286 60z"],"width":809.1062857142856,"tags":["bitbucket"],"defaultCode":61809,"grid":14},{"paths":["M484.571 497.143c0-32.571-40-54.857-67.429-38.286-32.571 15.429-32.571 68 0.571 81.714 29.714 17.714 71.429-9.143 66.857-43.429zM530.286 488c6.286 50.286-33.143 99.429-83.429 104s-97.714-36.571-100-87.429c-1.714-37.714 21.714-74.286 56-89.714 53.714-24 120 14.857 127.429 73.143zM628.571 264.571c-25.143 25.714-63.429 29.143-97.143 33.143-61.143 8-123.429 7.429-185.143 0-33.714-4.571-70.857-8.571-97.143-33.143 16-22.857 44.571-27.429 70.286-31.429 77.143-13.714 156-13.143 233.143-0.571 27.429 4 58.286 8.571 76 32zM652.571 690.857c0-13.714 14.286-37.143-5.143-42.857-122.857 81.143-294.286 81.143-417.714 0l-6.857 3.429-2.857 6.857c6.857 40 13.143 80.571 23.429 120 23.429 40.571 73.714 54.286 116.571 61.714 81.143 14.857 170.857 10.286 244.571-30.286 42.857-24 36-78.286 48-118.857zM726.857 294.857c2.286-13.714 5.143-30.286-4.571-42.857-21.714-27.429-56-40.571-88.571-50.286-90.286-26.286-185.714-29.714-278.286-20.571-44 4-88 11.429-129.143 26.286-30.857 12-72.571 28-77.714 64.571 10.286 85.714 26.857 169.714 41.143 254.857 4.571 24 4.571 52.571 26.286 69.714 46.286 35.429 105.143 50.857 162.286 57.143 84.571 9.143 174.286 2.857 251.429-36 21.714-11.429 46.857-26.286 51.429-52.571 16-89.714 31.429-179.429 45.714-270.286zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["bitbucket-square"],"defaultCode":61810,"grid":14},{"paths":["M539.429 759.429l45.714 135.429c-17.143 25.714-94.857 54.857-164.571 56-207.429 3.429-285.714-147.429-285.714-253.714v-310.857h-96v-122.857c144-52 178.857-182.286 186.857-256.571 0.571-4.571 4.571-6.857 6.857-6.857h139.429v242.286h190.286v144h-190.857v296c0 40 14.857 95.429 91.429 93.714 25.143-0.571 58.857-8 76.571-16.571z"],"width":623.9817142857142,"tags":["tumblr"],"defaultCode":61811,"grid":14},{"paths":["M649.143 834.857l-35.429-104.571c-13.714 6.857-39.429 12.571-58.857 12.571-58.286 1.714-70.286-40.571-70.286-72v-227.429h146.857v-110.857h-146.286v-186.286h-107.429c-1.714 0-4.571 1.714-5.143 5.714-6.286 56.571-33.143 157.143-144 197.143v94.286h74.286v238.857c0 81.714 60 198.286 219.429 195.429 53.714-1.143 113.714-23.429 126.857-42.857zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["tumblr-square"],"defaultCode":61812,"grid":14},{"paths":["M437.143 742.286c2.857 6.857 1.714 14.286-2.857 20l-200 219.429c-3.429 3.429-8 5.714-13.143 5.714v0c-5.143 0-10.286-2.286-13.714-5.714l-202.857-219.429c-4.571-5.714-5.714-13.143-2.857-20 2.857-6.286 9.143-10.857 16.571-10.857h128v-713.143c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v713.143h128c7.429 0 13.714 4 16.571 10.857z"],"width":438.85714285714283,"tags":["long-arrow-down"],"defaultCode":61813,"grid":14},{"paths":["M437.143 281.714c-2.857 6.286-9.143 10.857-16.571 10.857h-128v713.143c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-713.143h-128c-7.429 0-13.714-4-16.571-10.857s-1.714-14.286 2.857-20l200-219.429c3.429-3.429 8-5.714 13.143-5.714v0c5.143 0 10.286 2.286 13.714 5.714l202.857 219.429c4.571 5.714 5.714 13.143 2.857 20z"],"width":438.85714285714283,"tags":["long-arrow-up"],"defaultCode":61814,"grid":14},{"paths":["M1024 457.143v109.714c0 10.286-8 18.286-18.286 18.286h-713.143v128c0 7.429-4 13.714-10.857 16.571s-14.286 1.714-20-2.857l-219.429-200c-3.429-3.429-5.714-8-5.714-13.143v0c0-5.143 2.286-10.286 5.714-13.714l219.429-202.286c5.714-5.143 13.143-6.286 20-3.429 6.286 2.857 10.857 9.143 10.857 16.571v128h713.143c10.286 0 18.286 8 18.286 18.286z"],"width":1060.5714285714284,"tags":["long-arrow-left"],"defaultCode":61815,"grid":14},{"paths":["M987.429 510.286c0 5.143-2.286 10.286-5.714 13.714l-219.429 202.286c-5.714 5.143-13.143 6.286-20 3.429-6.286-2.857-10.857-9.143-10.857-16.571v-128h-713.143c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h713.143v-128c0-7.429 4-13.714 10.857-16.571s14.286-1.714 20 2.857l219.429 200c3.429 3.429 5.714 8 5.714 13.143v0z"],"width":987.4285714285713,"tags":["long-arrow-right"],"defaultCode":61816,"grid":14},{"paths":["M796 694.286c-14.286 45.143-37.143 93.143-70.286 142.857-49.143 74.857-98.286 112-146.857 112-19.429 0-45.714-6.286-80-18.286-33.714-12.571-62.857-18.286-86.286-18.286-22.857 0-50.286 6.286-81.143 18.857-31.429 13.143-56.571 19.429-75.429 19.429-58.857 0-115.429-49.714-172-148-55.429-98.286-84-193.714-84-287.429 0-87.429 21.714-158.286 64.571-213.714 42.857-54.857 96.571-82.286 162.286-82.286 28 0 61.143 5.714 101.143 17.143 39.429 11.429 65.714 17.143 78.857 17.143 16.571 0 44-6.286 81.714-19.429 37.714-12.571 70.857-19.429 98.857-19.429 45.714 0 86.286 12.571 121.714 37.143 20 13.714 40 33.143 59.429 57.143-29.714 25.143-51.429 47.429-65.143 67.429-24.571 35.429-37.143 74.857-37.143 118.286 0 46.857 13.143 89.714 39.429 127.429s56.571 61.714 90.286 72zM581.143 24c0 23.429-5.714 49.714-16.571 77.714-11.429 28.571-29.143 54.857-53.143 78.857-20.571 20.571-41.143 34.286-61.714 41.143-13.143 4-32.571 7.429-59.429 9.714 1.143-56.571 16-105.714 44.571-146.857s76.571-69.143 142.857-84.571c1.143 5.143 2.286 9.143 2.857 12.571 0 4 0.571 7.429 0.571 11.429z"],"width":796.0137142857142,"tags":["apple"],"defaultCode":61817,"grid":14},{"paths":["M389.714 574.857v372l-389.714-53.714v-318.286h389.714zM389.714 150.286v376.571h-389.714v-322.857zM950.857 574.857v449.143l-518.286-71.429v-377.714h518.286zM950.857 73.143v453.714h-518.286v-382.286z"],"width":950.8571428571428,"tags":["windows"],"defaultCode":61818,"grid":14},{"paths":["M281.714 276c12.571 0 22.286-10.286 22.286-22.286s-9.714-22.286-22.286-22.286c-12 0-21.714 10.286-21.714 22.286s9.714 22.286 21.714 22.286zM522.857 276c12 0 21.714-10.286 21.714-22.286s-9.714-22.286-21.714-22.286c-12.571 0-22.286 10.286-22.286 22.286s9.714 22.286 22.286 22.286zM58.857 381.143c32 0 58.286 26.286 58.286 58.286v245.714c0 32.571-25.714 58.857-58.286 58.857s-58.857-26.286-58.857-58.857v-245.714c0-32 26.286-58.286 58.857-58.286zM664.571 392v380.571c0 34.857-28 62.857-62.286 62.857h-42.857v129.714c0 32.571-26.286 58.857-58.857 58.857s-58.857-26.286-58.857-58.857v-129.714h-78.857v129.714c0 32.571-26.286 58.857-58.857 58.857-32 0-58.286-26.286-58.286-58.857l-0.571-129.714h-42.286c-34.857 0-62.857-28-62.857-62.857v-380.571h524.571zM532 160.571c80 41.143 134.286 120 134.286 210.857h-528.571c0-90.857 54.286-169.714 134.857-210.857l-40.571-74.857c-2.286-4-1.143-9.143 2.857-11.429 4-1.714 9.143-0.571 11.429 3.429l41.143 75.429c34.857-15.429 73.714-24 114.857-24s80 8.571 114.857 24l41.143-75.429c2.286-4 7.429-5.143 11.429-3.429 4 2.286 5.143 7.429 2.857 11.429zM804.571 439.429v245.714c0 32.571-26.286 58.857-58.857 58.857-32 0-58.286-26.286-58.286-58.857v-245.714c0-32.571 26.286-58.286 58.286-58.286 32.571 0 58.857 25.714 58.857 58.286z"],"width":804.5714285714286,"tags":["android"],"defaultCode":61819,"grid":14},{"paths":["M378.857 234.857v0c-11.429 1.143-7.429 11.429-13.714 11.429-5.714 0.571-4.571-12.571 13.714-11.429zM428.571 242.857c-5.714 1.714-6.286-9.143-16.571-6.286v0c16.571-7.429 22.286 4 16.571 6.286zM228 486.857c-5.143-1.714-4 8.571-9.143 16.571-4 7.429-14.286 13.143-6.286 14.286v0c2.857 0.571 10.857-6.286 14.286-14.286 2.857-9.714 5.714-14.857 1.143-16.571zM716.571 692c0-10.286-22.286-20-31.429-24 15.429-51.429 8.571-72-1.714-120.571-8-36.571-41.714-86.286-68-101.714 6.857 5.714 19.429 22.286 32.571 47.429 22.857 42.857 45.714 106.286 30.857 158.857-5.714 20.571-19.429 23.429-28.571 24-40 4.571-16.571-48-33.143-119.429-18.857-80-38.286-85.714-42.857-92-23.429-104-49.143-93.714-56.571-132.571-6.286-34.857 30.286-63.429-19.429-73.143-15.429-2.857-37.143-18.286-45.714-19.429s-13.143-57.714 18.857-59.429c31.429-2.286 37.143 35.429 31.429 50.286-9.143 14.857 0.571 20.571 16 15.429 12.571-4 4.571-37.143 7.429-41.714-8-48-28-54.857-48.571-58.857-78.857 6.286-43.429 93.143-51.429 85.143-11.429-12-44.571-1.143-44.571-8.571 0.571-44.571-14.286-70.286-34.857-70.857-22.857-0.571-32 31.429-33.143 49.714-1.714 17.143 9.714 53.143 18.286 50.286 5.714-1.714 15.429-13.143 5.143-12.571-5.143 0-13.143-12.571-14.286-27.429-0.571-14.857 5.143-29.714 24.571-29.143 22.286 0.571 22.286 45.143 20 46.857-7.429 5.143-16.571 14.857-17.714 16.571-7.429 12-21.714 15.429-27.429 20.571-9.714 10.286-12 21.714-4.571 25.714 26.286 14.857 17.714 32 54.286 33.143 24 1.143 41.714-3.429 58.286-8.571 12.571-4 53.143-12.571 61.714-27.429 4-6.286 8.571-6.286 11.429-4.571 5.714 2.857 6.857 13.714-7.429 17.143-20 5.714-40 16.571-58.286 23.429-17.714 7.429-23.429 10.286-40 13.143-37.714 6.857-65.714-13.714-40.571 10.857 8.571 8 16.571 13.143 38.286 12.571 48-1.714 101.143-59.429 106.286-33.714 1.143 5.714-14.857 12.571-27.429 18.857-44.571 21.714-76 65.143-104.571 50.286-25.714-13.714-51.429-77.143-50.857-48.571 0.571 44-57.714 82.857-30.857 133.143-17.714 4.571-57.143 88.571-62.857 132-3.429 25.143 2.286 56-4 73.143-8.571 25.143-47.429-24-34.857-84 2.286-10.286 0-12.571-2.857-7.429-15.429 28-6.857 67.429 5.714 94.857 5.143 12 18.286 17.143 28 27.429 20 22.857 98.857 81.143 112.571 95.429 17.714 16.571 12.571 55.429-24 59.429v0c18.857 35.429 37.143 38.857 36.571 96.571 21.714-11.429 13.143-36.571 4-52.571-6.286-11.429-14.286-16.571-12.571-19.429 1.143-1.714 12.571-11.429 18.857-4 19.429 21.714 56 25.714 94.857 20.571 39.429-4.571 81.714-18.286 101.143-49.714 9.143-14.857 15.429-20 19.429-17.143 4.571 2.286 6.286 12.571 5.714 29.714-0.571 18.286-8 37.143-13.143 52.571-5.143 17.714-6.857 29.714 10.286 30.286 4.571-32 13.714-63.429 16-95.429 2.857-36.571-23.429-104 5.143-137.714 7.429-9.143 16.571-10.286 29.143-10.286 1.714-45.714 72-42.286 95.429-23.429zM357.714 219.429c2.286-14.286-4.571-24.571-8-25.714-6.857-1.714-5.714 8.571-2.286 7.429v0c2.286 0 5.143 3.429 4 8.571-1.143 6.857-0.571 11.429 4.571 11.429 0.571 0 1.714 0 1.714-1.714zM597.143 332c-2.286-10.857-10.286-6.857-19.429-12.571-10.857-6.857-13.143-18.286-17.143-14.286v0c-12 13.143 14.857 40.571 26.286 42.857 6.857 1.143 12-8 10.286-16zM495.429 210.286c0.571-13.714-11.429-20.571-14.286-20-7.429 0.571-5.143 4-1.714 5.143v0c4.571 1.143 9.143 9.143 10.286 17.714 0 1.143 5.714-1.143 5.714-2.857zM526.286 77.143c0.571-2.857-6.857-6.286-12-10.286-4.571-4.571-9.143-8.571-13.714-8.571-11.429 1.143-5.714 13.143-7.429 18.857v0c-2.286 6.286-10.857 11.429-5.143 16 5.143 4 8.571-6.286 19.429-10.286 2.857-1.143 16 0.571 18.857-5.714zM849.143 843.429c70.286 43.429-26.286 79.429-68 100.571-32.571 16.571-76 53.143-92 68.571-12 11.429-61.714 17.143-89.714 2.857-32.571-16.571-15.429-42.857-65.714-44.571-25.143-0.571-49.714-0.571-74.286-0.571-21.714 0.571-43.429 1.714-65.714 2.286-75.429 1.714-82.857 50.286-131.429 48.571-33.143-1.143-74.857-27.429-146.857-42.286-50.286-10.286-98.857-13.143-109.143-35.429s12.571-47.429 14.286-69.143c1.714-29.143-21.714-68.571-4.571-83.429 14.857-13.143 46.286-3.429 66.857-14.857 21.714-12.571 30.857-22.286 30.857-49.143 8 27.429-0.571 49.714-18.286 60.571-10.857 6.857-30.857 10.286-47.429 8.571-13.143-1.143-21.143 0.571-24.571 5.714-5.143 6.286-3.429 17.714 2.857 32.571s13.714 24.571 12.571 42.857c-0.571 18.286-21.143 40-17.714 55.429 1.143 5.714 6.857 10.857 21.143 14.857 22.857 6.286 64.571 12.571 105.143 22.286 45.143 11.429 92 32 121.143 28 86.857-12 37.143-105.143 23.429-127.429v0c-73.714-115.429-122.286-190.857-161.143-161.143-9.714 8-10.286-19.429-9.714-30.286 1.714-37.714 20.571-51.429 32-80.571 21.714-55.429 38.286-118.857 71.429-151.429 24.571-32 63.429-84 70.857-111.429-6.286-59.429-8-122.286-9.143-177.143-1.143-58.857 8-110.286 74.286-146.286 16-8.571 37.143-12 59.429-12 39.429-0.571 83.429 10.857 111.429 31.429 44.571 33.143 72.571 103.429 69.143 153.714-2.286 39.429 4.571 80 17.143 122.286 14.857 49.714 38.286 84.571 76 124.571 45.143 48 80.571 142.286 90.857 202.286 9.143 56-3.429 90.857-15.429 92.571-18.286 2.857-29.714 60.571-86.857 58.286-36.571-1.714-40-23.429-50.286-42.286-16.571-29.143-33.143-20-39.429 10.857-3.429 15.429-1.143 38.286 4 55.429 10.286 36 6.857 69.714 0.571 111.429-12 78.857 55.429 93.714 100.571 56 44.571-37.143 54.286-42.857 110.286-62.286 85.143-29.143 56.571-54.857 10.857-70.286-41.143-13.714-42.857-82.857-28-96 3.429 74.286 42.286 85.143 58.286 95.429z"],"width":915.4559999999999,"tags":["linux"],"defaultCode":61820,"grid":14},{"paths":["M585.143 857.143c-5.714-33.143-27.429-147.429-80-284.571-0.571 0-1.714 0.571-2.286 0.571 0 0-222.286 77.714-294.286 234.286-3.429-2.857-8.571-6.286-8.571-6.286 65.143 53.143 148 85.714 238.857 85.714 52 0 101.143-10.857 146.286-29.714zM479.429 510.286c-9.143-21.143-19.429-42.286-30.286-63.429-193.143 57.714-378.286 53.143-384.571 53.143-0.571 4-0.571 8-0.571 12 0 96 36.571 184 96 250.286v0c102.286-182.286 304.571-247.429 304.571-247.429 5.143-1.714 10.286-2.857 14.857-4.571zM418.286 389.143c-65.143-115.429-134.286-209.143-139.429-216-104.571 49.143-182.286 145.714-206.857 261.714 9.714 0 166.286 1.714 346.286-45.714zM809.143 571.429c-8-2.286-112.571-35.429-233.714-16.571 49.143 135.429 69.143 245.714 73.143 268 84-56.571 143.429-146.857 160.571-251.429zM349.143 148c-0.571 0-0.571 0-1.143 0.571 0 0 0.571-0.571 1.143-0.571zM686.286 230.857c-65.714-58.286-152.571-93.714-247.429-93.714-30.286 0-60 4-88.571 10.857 5.714 7.429 76.571 100.571 140.571 218.286 141.143-52.571 194.286-133.714 195.429-135.429zM813.714 508c-1.143-88.571-32.571-170.286-85.143-234.286-1.143 1.143-61.143 88-209.143 148.571 8.571 17.714 17.143 36 25.143 54.286 2.857 6.286 5.143 13.143 8 19.429 129.143-16.571 256.571 11.429 261.143 12zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["dribbble"],"defaultCode":61821,"grid":14},{"paths":["M670.286 607.429c0-99.429-96.571-133.714-177.714-152l-59.429-13.714c-43.429-10.286-76-17.714-76-50.857 0-30.286 32-44 82.286-44 89.714 0 91.429 65.714 146.857 65.714 37.143 0 59.429-29.143 59.429-62.286 0-65.714-109.143-108.571-217.143-108.571-98.857 0-213.714 42.857-213.714 158.857 0 96 64 130.286 147.429 150.286l83.429 20.571c50.857 12.571 82.286 18.286 82.286 54.857 0 29.143-32.571 51.429-82.857 51.429-105.714 0-111.429-88-172.571-88-40 0-57.714 28.571-57.714 60 0 70.286 107.429 127.429 236 127.429 107.429 0 219.429-53.714 219.429-169.714zM877.714 731.429c0 121.143-98.286 219.429-219.429 219.429-50.286 0-96.571-17.143-133.714-45.714-27.429 5.714-56.571 9.143-85.714 9.143-222.286 0-402.286-180-402.286-402.286 0-29.143 3.429-58.286 9.143-85.714-28.571-37.143-45.714-83.429-45.714-133.714 0-121.143 98.286-219.429 219.429-219.429 50.286 0 96.571 17.143 133.714 45.714 27.429-5.714 56.571-9.143 85.714-9.143 222.286 0 402.286 180 402.286 402.286 0 29.143-3.429 58.286-9.143 85.714 28.571 37.143 45.714 83.429 45.714 133.714z"],"width":877.7142857142857,"tags":["skype"],"defaultCode":61822,"grid":14},{"paths":["M571.429 248l21.143-110.857c4-18.286-9.714-32.571-25.143-32.571h-406.857c-18.286 0-30.857 16.571-30.857 30.857v629.143c0 1.714 1.714 2.286 3.429 0.571 149.714-180 166.286-201.143 166.286-201.143 17.143-20 24-23.429 49.143-23.429h136.571c18.857 0 29.714-16 31.429-25.143s17.714-92.571 21.143-109.143-12-33.714-27.429-33.714h-168c-22.286 0-38.286-16-38.286-38.286v-24c0-22.286 16-37.714 38.286-37.714h197.714c13.714 0 29.143-12.571 31.429-24.571zM701.143 121.143c-21.143 102.857-84.571 428-90.286 451.429-6.857 26.857-17.143 73.714-82.286 73.714h-154.857c-6.286 0-6.857-0.571-12.571 5.714 0 0-4 4.571-243.429 282.286-18.857 21.714-49.714 17.714-61.143 13.143s-31.429-18.286-31.429-56v-805.714c0-33.143 20.571-85.714 90.286-85.714h507.429c74.286 0 94.286 42.286 78.286 121.143zM701.143 121.143l-90.286 451.429c5.714-23.429 69.143-348.571 90.286-451.429z"],"width":742.2537142857142,"tags":["foursquare"],"defaultCode":61824,"grid":14},{"paths":["M402.286 768v-585.143c0-10.286-8-18.286-18.286-18.286h-274.286c-10.286 0-18.286 8-18.286 18.286v585.143c0 10.286 8 18.286 18.286 18.286h274.286c10.286 0 18.286-8 18.286-18.286zM786.286 548.571v-365.714c0-10.286-8-18.286-18.286-18.286h-274.286c-10.286 0-18.286 8-18.286 18.286v365.714c0 10.286 8 18.286 18.286 18.286h274.286c10.286 0 18.286-8 18.286-18.286zM877.714 109.714v804.571c0 20-16.571 36.571-36.571 36.571h-804.571c-20 0-36.571-16.571-36.571-36.571v-804.571c0-20 16.571-36.571 36.571-36.571h804.571c20 0 36.571 16.571 36.571 36.571z"],"width":877.7142857142857,"tags":["trello"],"defaultCode":61825,"grid":14},{"paths":["M731.429 603.429c0 30.286-24.571 54.857-54.857 54.857-18.286 0-35.429-9.143-45.714-24.571l-129.714-194.857h-25.714v75.429l141.143 234.857c3.429 5.714 5.143 12 5.143 18.857 0 20-16.571 36.571-36.571 36.571h-109.714v155.429c0 35.429-28.571 64-64 64h-91.429c-34.857 0-64-28.571-64-64v-155.429h-109.714c-20 0-36.571-16.571-36.571-36.571 0-6.857 1.714-13.143 5.143-18.857l141.143-234.857v-75.429h-25.714l-129.714 194.857c-10.286 15.429-27.429 24.571-45.714 24.571-30.286 0-54.857-24.571-54.857-54.857 0-10.857 3.429-21.714 9.143-30.286l146.286-219.429c22.857-33.714 58.286-61.143 100.571-61.143h219.429c42.286 0 77.714 27.429 100.571 61.143l146.286 219.429c5.714 8.571 9.143 19.429 9.143 30.286zM493.714 146.286c0 70.857-57.143 128-128 128s-128-57.143-128-128 57.143-128 128-128 128 57.143 128 128z"],"width":731.4285714285713,"tags":["female"],"defaultCode":61826,"grid":14},{"paths":["M585.143 402.286v237.714c0 30.286-24.571 54.857-54.857 54.857s-54.857-24.571-54.857-54.857v-201.143h-36.571v521.143c0 35.429-28.571 64-64 64s-64-28.571-64-64v-265.143h-36.571v265.143c0 35.429-28.571 64-64 64s-64-28.571-64-64v-521.143h-36.571v201.143c0 30.286-24.571 54.857-54.857 54.857s-54.857-24.571-54.857-54.857v-237.714c0-60.571 49.143-109.714 109.714-109.714h365.714c60.571 0 109.714 49.143 109.714 109.714zM420.571 146.286c0 70.857-57.143 128-128 128s-128-57.143-128-128 57.143-128 128-128 128 57.143 128 128z"],"width":585.1428571428571,"tags":["male"],"defaultCode":61827,"grid":14},{"paths":["M441.714 744l200-270.286c15.429-21.143 33.714-89.143-24.571-127.429-49.143-32-96-7.429-120.571 21.143-9.143 10.286-25.143 22.857-54.857 22.857s-45.143-12.571-54.286-22.857c-24.571-28.571-71.429-53.143-121.143-21.143-57.714 38.286-39.429 106.286-24 127.429zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["gittip","gratipay"],"defaultCode":61828,"grid":14},{"paths":["M841.143 512c0-181.714-147.429-329.143-329.143-329.143s-329.143 147.429-329.143 329.143 147.429 329.143 329.143 329.143 329.143-147.429 329.143-329.143zM998.857 670.286c-1.714 5.714-6.286 9.714-11.429 11.429l-166.857 54.857v174.857c0 5.714-2.857 11.429-7.429 14.857-5.143 3.429-10.857 4.571-16.571 2.286l-166.857-53.714-102.857 141.714c-3.429 4.571-9.143 7.429-14.857 7.429s-11.429-2.857-14.857-7.429l-102.857-141.714-166.857 53.714c-5.714 2.286-11.429 1.143-16.571-2.286-4.571-3.429-7.429-9.143-7.429-14.857v-174.857l-166.857-54.857c-5.143-1.714-9.714-5.714-11.429-11.429s-1.143-12 2.286-16.571l102.857-141.714-102.857-141.714c-3.429-5.143-4-10.857-2.286-16.571s6.286-9.714 11.429-11.429l166.857-54.857v-174.857c0-5.714 2.857-11.429 7.429-14.857 5.143-3.429 10.857-4.571 16.571-2.286l166.857 53.714 102.857-141.714c6.857-9.143 22.857-9.143 29.714 0l102.857 141.714 166.857-53.714c5.714-2.286 11.429-1.143 16.571 2.286 4.571 3.429 7.429 9.143 7.429 14.857v174.857l166.857 54.857c5.143 1.714 9.714 5.714 11.429 11.429s1.143 11.429-2.286 16.571l-102.857 141.714 102.857 141.714c3.429 4.571 4 10.857 2.286 16.571z"],"width":1024,"tags":["sun-o"],"defaultCode":61829,"grid":14},{"paths":["M721.143 744.571c-20.571 3.429-41.714 5.143-62.857 5.143-212 0-384-172-384-384 0-72.571 21.143-143.429 59.429-204-152 45.143-260.571 184.571-260.571 350.286 0 201.714 164 365.714 365.714 365.714 110.286 0 213.714-50.286 282.286-133.143zM837.143 696c-71.429 154.857-228 254.857-398.286 254.857-241.714 0-438.857-197.143-438.857-438.857 0-237.143 185.714-429.714 422.286-438.286 16-0.571 29.143 8.571 34.857 22.286 6.286 14.286 2.286 30.857-8.571 41.143-65.143 59.429-101.143 140.571-101.143 228.571 0 171.429 139.429 310.857 310.857 310.857 45.143 0 88.571-9.714 130.286-29.143 14.286-6.286 30.286-3.429 41.143 7.429s13.714 27.429 7.429 41.143z"],"width":843.4102857142857,"tags":["moon-o"],"defaultCode":61830,"grid":14},{"paths":["M621.714 475.429c0-20-16.571-36.571-36.571-36.571h-146.286c-20 0-36.571 16.571-36.571 36.571s16.571 36.571 36.571 36.571h146.286c20 0 36.571-16.571 36.571-36.571zM950.857 365.714v548.571c0 20-16.571 36.571-36.571 36.571h-804.571c-20 0-36.571-16.571-36.571-36.571v-548.571c0-20 16.571-36.571 36.571-36.571h804.571c20 0 36.571 16.571 36.571 36.571zM987.429 109.714v146.286c0 20-16.571 36.571-36.571 36.571h-877.714c-20 0-36.571-16.571-36.571-36.571v-146.286c0-20 16.571-36.571 36.571-36.571h877.714c20 0 36.571 16.571 36.571 36.571z"],"width":1024,"tags":["archive"],"defaultCode":61831,"grid":14},{"paths":["M932.571 548.571c0 20-16.571 36.571-36.571 36.571h-128c0 71.429-15.429 125.143-38.286 165.714l118.857 119.429c14.286 14.286 14.286 37.143 0 51.429-6.857 7.429-16.571 10.857-25.714 10.857s-18.857-3.429-25.714-10.857l-113.143-112.571s-74.857 68.571-172 68.571v-512h-73.143v512c-103.429 0-178.857-75.429-178.857-75.429l-104.571 118.286c-7.429 8-17.143 12-27.429 12-8.571 0-17.143-2.857-24.571-9.143-14.857-13.714-16-36.571-2.857-52l115.429-129.714c-20-39.429-33.143-90.286-33.143-156.571h-128c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h128v-168l-98.857-98.857c-14.286-14.286-14.286-37.143 0-51.429s37.143-14.286 51.429 0l98.857 98.857h482.286l98.857-98.857c14.286-14.286 37.143-14.286 51.429 0s14.286 37.143 0 51.429l-98.857 98.857v168h128c20 0 36.571 16.571 36.571 36.571zM658.286 219.429h-365.714c0-101.143 81.714-182.857 182.857-182.857s182.857 81.714 182.857 182.857z"],"width":950.8571428571428,"tags":["bug"],"defaultCode":61832,"grid":14},{"paths":["M1095.429 297.143c8.571 23.429-18.286 78.286-85.714 168-110.857 147.429-122.857 133.714-31.429 218.857 88 81.714 106.286 121.143 109.143 126.286 0 0 36.571 64-40.571 64.571l-146.286 2.286c-31.429 6.286-73.143-22.286-73.143-22.286-54.857-37.714-106.286-135.429-146.286-122.857 0 0-41.143 13.143-40 101.143 0.571 18.857-8.571 29.143-8.571 29.143s-10.286 10.857-30.286 12.571h-65.714c-144.571 9.143-272-124-272-124s-139.429-144-261.714-431.429c-8-18.857 0.571-28 0.571-28s8.571-10.857 32.571-10.857l156.571-1.143c14.857 2.286 25.143 10.286 25.143 10.286s9.143 6.286 13.714 18.286c25.714 64 58.857 122.286 58.857 122.286 57.143 117.714 96 137.714 118.286 125.714 0 0 29.143-17.714 22.857-160-2.286-51.429-16.571-74.857-16.571-74.857-13.143-17.714-37.714-22.857-48.571-24.571-8.571-1.143 5.714-21.714 24.571-30.857 28-13.714 77.714-14.286 136.571-13.714 46.286 0.571 59.429 3.429 77.143 7.429 54.286 13.143 36 63.429 36 184.571 0 38.857-7.429 93.143 20.571 110.857 12 8 41.714 1.143 114.857-123.429 0 0 34.286-59.429 61.143-128.571 4.571-12.571 14.286-17.714 14.286-17.714s9.143-5.143 21.714-3.429l164.571-1.143c49.714-6.286 57.714 16.571 57.714 16.571z"],"width":1118.8662857142856,"tags":["vk"],"defaultCode":61833,"grid":14},{"paths":["M385.714 733.714c16-26.286 7.429-56.571-19.429-68-25.714-10.857-60 0.571-76 25.714-16.571 25.714-8.571 56 17.143 68 26.286 12 61.714 0.571 78.286-25.714zM439.429 664.571c5.714-10.286 2.286-21.714-8-25.714-10.286-3.429-22.857 1.143-28.571 10.857-5.714 10.286-2.857 21.143 7.429 25.714 10.286 4 23.429-0.571 29.143-10.857zM538.857 725.714c-34.286 77.714-133.714 120-218.286 92.571-81.714-26.286-116-106.857-80.571-179.429 35.429-70.857 126.286-110.857 206.857-90.286 84 21.714 126.286 100.571 92 177.143zM717.143 634.286c-10.857-111.429-157.143-188-326.857-171.429-169.714 17.143-297.714 120.571-286.857 232s157.143 188 326.857 171.429c169.714-17.143 297.714-120.571 286.857-232zM893.143 636.571c0 128.571-185.143 290.286-463.429 290.286-212.571 0-429.714-102.857-429.714-272.571 0-88.571 56-190.857 152.571-287.429 129.143-129.143 279.429-187.429 336-130.857 25.143 24.571 27.429 68 11.429 119.429-8 26.286 24.571 11.429 24.571 12 104-44 194.857-46.286 228 1.143 17.714 25.143 16 60.571 0 101.714-7.429 18.857 2.286 21.714 16.571 26.286 58.857 18.286 124 62.286 124 140zM850.857 280c32.571 36 41.714 85.714 27.429 129.143-5.714 17.714-24.571 27.429-42.286 21.714s-27.429-24.571-21.714-42.286v0c6.857-21.714 2.286-45.714-13.714-63.429s-39.429-24.571-61.143-20v0c-18.286 4-36.571-7.429-40-25.714-4-18.286 7.429-36 25.714-40 44.571-9.714 93.143 4 125.714 40.571zM954.286 186.857c67.429 74.286 85.143 176 56.571 265.143v0c-6.857 20.571-28.571 32-49.143 25.143s-32-28.571-25.714-49.143v0c20.571-63.429 8-136-40-188.571-48-53.143-118.286-73.143-183.429-59.429-21.143 4.571-42.286-9.143-46.857-30.286s9.143-41.714 30.286-46.286v0c92-19.429 190.857 8.571 258.286 83.429z"],"width":1039.433142857143,"tags":["weibo"],"defaultCode":61834,"grid":14},{"paths":["M647.429 897.143c-62.286 34.286-133.714 53.714-210.286 53.714-76 0-147.429-19.429-209.714-53.714 101.143-64 182.857-160.571 209.714-273.714 27.429 113.143 109.143 209.714 210.286 273.714zM364.571 81.143v277.143c0 195.429-108 363.429-261.143 437.714-64.571-76.571-103.429-174.857-103.429-282.857 0-217.143 157.714-397.143 364.571-432zM877.714 513.143c0 108-38.857 206.286-103.429 282.857-153.143-74.286-261.143-242.286-261.143-437.714v-277.143c206.857 34.857 364.571 214.857 364.571 432z"],"width":877.7142857142857,"tags":["renren"],"defaultCode":61835,"grid":14},{"paths":["M801.143 630.286c-114.857 285.143-390.286 112.571-390.286 112.571-84.571 170.857-224 280.571-385.143 281.143-14.286 0-25.714-11.429-25.714-25.714s11.429-25.143 25.714-25.143c134.286-0.571 251.429-89.143 328-229.714-85.714 33.143-247.429 58.286-337.143-171.429 227.429-93.714 332 23.429 372 94.857 20.571-50.857 35.429-106.286 45.143-166.286 0 0-291.429 45.714-312-204.571 248.571-100 318.286 160 318.286 160 3.429-34.857 6.857-109.714 6.857-111.429 0 0-221.714-153.714-79.429-344.571 260 89.714 128 338.857 128 338.857 1.143 3.429 1.143 49.714 0 69.714 0 0 94.286-185.714 284.571-120-8.571 279.429-296 221.714-296 221.714-9.143 57.143-23.429 111.429-41.714 161.714 0 0 173.143-191.429 358.857-41.714z"],"width":801.1337142857142,"tags":["pagelines"],"defaultCode":61836,"grid":14},{"paths":["M719.429 716v37.714c0 64.571-50.286 116.571-112 116.571h-32.571l-148.571 153.714v-153.714h-302.286c-61.714 0-112-52-112-116.571v-37.714h707.429zM719.429 529.714v145.714h-707.429v-145.714h707.429zM719.429 342.286v145.714h-707.429v-145.714h707.429zM719.429 262.286v38.286h-707.429v-38.286c0-64 50.286-116 112-116h483.429c61.714 0 112 52 112 116z"],"width":731.4285714285713,"tags":["stack-exchange"],"defaultCode":61837,"grid":14},{"paths":["M658.286 512c0 4.571-1.714 9.714-5.143 13.143l-182.857 182.857c-3.429 3.429-8.571 5.143-13.143 5.143-9.714 0-18.286-8.571-18.286-18.286v-109.714h-201.143c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h201.143v-109.714c0-10.286 8-18.286 18.286-18.286 5.143 0 9.714 2.286 13.714 5.714l182.286 182.286c3.429 3.429 5.143 8.571 5.143 13.143zM749.714 512c0-171.429-139.429-310.857-310.857-310.857s-310.857 139.429-310.857 310.857 139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["arrow-circle-o-right"],"defaultCode":61838,"grid":14},{"paths":["M658.286 457.143v109.714c0 9.714-8.571 18.286-18.286 18.286h-201.143v109.714c0 10.286-8 18.286-18.286 18.286-5.143 0-9.714-2.286-13.714-5.714l-182.286-182.286c-3.429-3.429-5.143-8.571-5.143-13.143s1.714-9.714 5.143-13.143l182.857-182.857c3.429-3.429 8.571-5.143 13.143-5.143 9.714 0 18.286 8.571 18.286 18.286v109.714h201.143c9.714 0 18.286 8.571 18.286 18.286zM749.714 512c0-171.429-139.429-310.857-310.857-310.857s-310.857 139.429-310.857 310.857 139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["arrow-circle-o-left"],"defaultCode":61840,"grid":14},{"paths":["M585.143 329.143v365.714c0 20-16.571 36.571-36.571 36.571-7.429 0-14.857-2.286-21.143-6.857l-256-182.857c-9.714-6.857-15.429-17.714-15.429-29.714 0-11.429 5.714-22.857 15.429-29.714l256-182.857c6.286-4.571 13.714-6.857 21.143-6.857 20 0 36.571 16.571 36.571 36.571zM731.429 786.286v-548.571c0-9.714-8.571-18.286-18.286-18.286h-548.571c-9.714 0-18.286 8.571-18.286 18.286v548.571c0 9.714 8.571 18.286 18.286 18.286h548.571c9.714 0 18.286-8.571 18.286-18.286zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["caret-square-o-left","toggle-left"],"defaultCode":61841,"grid":14},{"paths":["M585.143 512c0 80.571-65.714 146.286-146.286 146.286s-146.286-65.714-146.286-146.286 65.714-146.286 146.286-146.286 146.286 65.714 146.286 146.286zM438.857 201.143c-171.429 0-310.857 139.429-310.857 310.857s139.429 310.857 310.857 310.857 310.857-139.429 310.857-310.857-139.429-310.857-310.857-310.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857v0c242.286 0 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["dot-circle-o"],"defaultCode":61842,"grid":14},{"paths":["M584.571 678.286l58.286 116.571c-44 136-170.857 229.143-313.714 229.143-181.143 0-329.143-148-329.143-329.143 0-138.286 86.857-261.714 216.571-309.143l9.714 74.857c-93.143 41.143-153.143 132.571-153.143 234.286 0 141.143 114.857 256 256 256 146.857 0 265.714-125.714 255.429-272.571zM897.714 735.429l33.143 65.143-146.286 73.143c-5.143 2.857-10.857 4-16.571 4-13.714 0-26.857-8-32.571-20l-136.571-272.571h-269.714c-18.286 0-34.286-14.286-36.571-32.571l-54.857-445.143c-0.571-5.714 1.714-18.286 3.429-24 10.857-39.429 47.429-65.143 88-65.143 50.286 0 91.429 41.143 91.429 91.429 0 52-45.714 96.571-98.286 90.857l21.143 165.143h241.714v73.143h-232.571l9.143 73.143h260c13.714 0 26.857 8 32.571 20l130.286 260z"],"width":930.8891428571428,"tags":["wheelchair"],"defaultCode":61843,"grid":14},{"paths":["M738.286 364.571c4-82.857-26.857-124.571-92-126.857-88-2.857-147.429 46.857-178.286 149.143 16-6.857 31.429-10.857 46.857-10.857 32 0 46.286 18.286 42.286 54.857-1.714 21.714-16 53.714-42.286 95.429-26.857 42.286-46.857 62.857-60 62.857-17.143 0-32-32-46.857-96.571-4.571-19.429-13.143-67.429-25.714-145.714-11.429-72-41.714-105.714-91.429-101.143-20.571 2.286-52.571 20.571-93.714 57.143-30.857 26.857-61.143 54.857-92.571 82.286l29.714 38.286c28.571-19.429 45.143-29.714 49.714-29.714 21.714 0 42.286 34.286 61.143 102.286 17.143 62.857 34.286 125.143 51.429 188 25.714 68 56.571 102.286 93.714 102.286 59.429 0 132.571-56 218.857-168 83.429-107.429 126.857-192 129.143-253.714zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["vimeo-square"],"defaultCode":61844,"grid":14},{"paths":["M658.286 475.429c0 221.714-180.571 402.286-402.286 402.286h-91.429c-10.286 0-18.286-8-18.286-18.286v-349.143l-122.857 37.714c-1.714 0.571-3.429 0.571-5.143 0.571-4 0-7.429-1.143-10.857-3.429-4.571-3.429-7.429-9.143-7.429-14.857v-73.143c0-8 5.143-14.857 13.143-17.714l133.143-40.571v-53.143l-122.857 37.714c-1.714 0.571-3.429 0.571-5.143 0.571-4 0-7.429-1.143-10.857-3.429-4.571-3.429-7.429-9.143-7.429-14.857v-73.143c0-8 5.143-14.857 13.143-17.714l133.143-40.571v-142.857c0-10.286 8-18.286 18.286-18.286h91.429c10.286 0 18.286 8 18.286 18.286v103.429l214.286-66.286c5.143-1.714 11.429-0.571 16 2.857s7.429 9.143 7.429 14.857v73.143c0 8-5.143 14.857-13.143 17.714l-224.571 69.143v53.143l214.286-66.286c5.143-1.714 11.429-0.571 16 2.857s7.429 9.143 7.429 14.857v73.143c0 8-5.143 14.857-13.143 17.714l-224.571 69.143v278.286c142.857-9.714 256-128.571 256-273.714 0-10.286 8-18.286 18.286-18.286h91.429c10.286 0 18.286 8 18.286 18.286z"],"width":658.2857142857142,"tags":["try","turkish-lira"],"defaultCode":61845,"grid":14},{"paths":["M658.286 457.143v36.571c0 10.286-8 18.286-18.286 18.286h-201.143v201.143c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-201.143h-201.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h201.143v-201.143c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286v201.143h201.143c10.286 0 18.286 8 18.286 18.286zM731.429 713.143v-475.429c0-50.286-41.143-91.429-91.429-91.429h-475.429c-50.286 0-91.429 41.143-91.429 91.429v475.429c0 50.286 41.143 91.429 91.429 91.429h475.429c50.286 0 91.429-41.143 91.429-91.429zM804.571 237.714v475.429c0 90.857-73.714 164.571-164.571 164.571h-475.429c-90.857 0-164.571-73.714-164.571-164.571v-475.429c0-90.857 73.714-164.571 164.571-164.571h475.429c90.857 0 164.571 73.714 164.571 164.571z"],"width":804.5714285714286,"tags":["plus-square-o"],"defaultCode":61846,"grid":14},{"paths":["M354.286 640c-39.429 22.857-93.143 36.571-153.143 36.571h-73.143v-36.571h-36.571c-10.286 0-18.286-20.571-18.286-45.714 0-10.286 1.714-20 4-28-44-1.143-77.143-8.571-77.143-17.714s33.143-16.571 77.143-17.714c-2.286-8-4-17.714-4-28 0-25.143 8-45.714 18.286-45.714h36.571v-36.571h73.143c60 0 113.714 13.714 153.143 36.571h636c42.286 7.429 80.571 13.714 106.857 18.286 109.714 18.286 146.286 54.857 146.286 73.143s-36.571 54.857-146.286 73.143c-26.286 4.571-64.571 10.857-106.857 18.286h-636zM993.714 496c18.286 12.571 30.286 31.429 30.286 52.571s-12 40-30.286 52.571l46.286 17.143c23.429-16.571 38.857-41.714 38.857-69.714s-15.429-53.143-38.857-69.714zM357.143 649.143h580s-124 21.714-260.571 45.714c-73.143 0-128 54.857-128 54.857l-164.571 164.571s-55.429 36.571-91.429 36.571h-54.857l-53.143-265.143h16.571c58.286 0 113.714-13.143 156-36.571zM201.143 411.429h-16.571l53.143-265.143h54.857c37.143 0 73.143 18.286 91.429 36.571l164.571 164.571c0 0 54.857 54.857 128 54.857 136.571 24 260.571 45.714 260.571 45.714h-580c-42.286-23.429-97.714-36.571-156-36.571z"],"width":1243.4285714285713,"tags":["space-shuttle"],"defaultCode":61847,"grid":14},{"paths":["M868 443.429c46.857 0 82.857 34.286 82.857 81.143 0 36.571-18.857 62.286-53.143 74.286l-98.286 33.714 32 95.429c2.857 8.571 4 17.714 4 26.857 0 45.143-36.571 82.857-81.714 82.857-36 0-68-22.286-79.429-56.571l-31.429-94.286-177.143 60.571 31.429 93.714c2.857 8.571 4.571 17.714 4.571 26.857 0 44.571-36.571 82.857-82.286 82.857-36 0-67.429-22.286-78.857-56.571l-31.429-93.143-87.429 30.286c-9.143 2.857-18.857 5.143-28.571 5.143-46.286 0-81.143-34.286-81.143-80.571 0-35.429 22.857-67.429 56.571-78.857l89.143-30.286-60-178.857-89.143 30.857c-9.143 2.857-18.286 4.571-27.429 4.571-45.714 0-81.143-34.857-81.143-80.571 0-35.429 22.857-67.429 56.571-78.857l89.714-30.286-30.286-90.857c-2.857-8.571-4.571-17.714-4.571-26.857 0-45.143 36.571-82.857 82.286-82.857 36 0 67.429 22.286 78.857 56.571l30.857 91.429 177.143-60-30.857-91.429c-2.857-8.571-4.571-17.714-4.571-26.857 0-45.143 37.143-82.857 82.286-82.857 36 0 68 22.857 79.429 56.571l30.286 92 92.571-31.429c8-2.286 16-3.429 24.571-3.429 44.571 0 82.857 33.143 82.857 78.857 0 35.429-27.429 65.143-59.429 76l-89.714 30.857 60 180.571 93.714-32c8.571-2.857 17.714-4.571 26.286-4.571zM414.286 593.143l177.143-60-60-180-177.143 61.143z"],"width":950.8571428571428,"tags":["slack"],"defaultCode":61848,"grid":14},{"paths":["M713.143 73.143c90.857 0 164.571 73.714 164.571 164.571v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571zM731.429 676.571v-249.143c-10.857 12-22.857 22.857-36.571 31.429-53.714 35.429-109.143 68.571-162.286 105.143-26.857 18.857-60 39.429-93.714 39.429v0 0 0 0c-33.714 0-66.857-20.571-93.714-39.429-53.143-36.571-109.143-69.143-162.286-105.714-13.143-8.571-23.429-21.143-36.571-30.857v249.143c0 30.286 24.571 54.857 54.857 54.857h475.429c30.286 0 54.857-24.571 54.857-54.857zM731.429 349.143c0-30.857-22.857-56.571-54.857-56.571h-475.429c-30.286 0-54.857 24.571-54.857 54.857 0 30.857 32 64.571 56 80.571 50.286 33.714 102.286 65.143 152.571 98.286 21.714 14.286 57.714 40.571 84 40.571s62.286-26.286 84-40.571c50.857-33.143 101.714-65.714 152.571-99.429 22.286-14.857 56-49.143 56-77.714z"],"width":877.7142857142857,"tags":["envelope-square"],"defaultCode":61849,"grid":14},{"paths":["M72.571 512c0-63.429 13.714-124 38.286-178.857l209.714 574.286c-146.857-71.429-248-221.714-248-395.429zM808.571 489.714c0 37.714-15.429 81.143-33.714 142.286l-43.429 146.286-158.857-472s26.286-1.714 50.286-4.571c23.429-2.857 20.571-37.714-2.857-36-71.429 5.143-117.143 5.714-117.143 5.714s-42.857-0.571-115.429-5.714c-24-1.714-26.857 34.286-2.857 36 22.286 2.286 45.714 4.571 45.714 4.571l68.571 187.429-96 288-160-475.429s26.286-1.714 50.286-4.571c23.429-2.857 20.571-37.714-2.857-36-70.857 5.143-117.143 5.714-117.143 5.714-8 0-17.714-0.571-28-0.571 78.286-119.429 213.143-198.286 366.857-198.286 114.286 0 218.286 44 296.571 115.429h-5.714c-42.857 0-73.714 37.143-73.714 77.714 0 36 21.143 66.286 43.429 102.857 17.143 29.143 36 66.857 36 121.143zM519.429 550.286l135.429 369.714c0.571 2.286 1.714 4.571 2.857 6.286-45.714 16-94.286 25.143-145.714 25.143-42.857 0-84.571-6.286-124-18.286zM897.143 301.143c34.286 62.857 54.286 134.286 54.286 210.857 0 162.286-88 303.429-218.857 379.429l134.286-387.429c22.286-64 33.714-113.143 33.714-157.714 0-16-1.143-30.857-3.429-45.143zM512 0c282.286 0 512 229.714 512 512s-229.714 512-512 512-512-229.714-512-512 229.714-512 512-512zM512 1000.571c269.143 0 488.571-219.429 488.571-488.571s-219.429-488.571-488.571-488.571-488.571 219.429-488.571 488.571 219.429 488.571 488.571 488.571z"],"width":1024,"tags":["wordpress"],"defaultCode":61850,"grid":14},{"paths":["M620.571 0v877.714l-155.429 73.143c-262.857-23.429-465.143-163.429-465.143-333.143 0-163.429 188.571-299.429 438.286-329.714v98.286c-163.429 28.571-283.429 121.143-283.429 231.429 0 116.571 133.714 213.143 310.286 235.429v0-777.143zM1002.857 332.571l21.143 222.857-300-65.143 84-47.429c-44.571-26.286-99.429-45.714-160-56.571v-98.286c105.714 12.571 200.571 44.571 274.857 89.714z"],"width":1024,"tags":["openid"],"defaultCode":61851,"grid":14},{"paths":["M548.571 0l548.571 219.429v73.143h-73.143c0 20-17.714 36.571-39.429 36.571h-872c-21.714 0-39.429-16.571-39.429-36.571h-73.143v-73.143zM146.286 365.714h146.286v438.857h73.143v-438.857h146.286v438.857h73.143v-438.857h146.286v438.857h73.143v-438.857h146.286v438.857h33.714c21.714 0 39.429 16.571 39.429 36.571v36.571h-950.857v-36.571c0-20 17.714-36.571 39.429-36.571h33.714v-438.857zM1057.714 914.286c21.714 0 39.429 16.571 39.429 36.571v73.143h-1097.143v-73.143c0-20 17.714-36.571 39.429-36.571h1018.286z"],"width":1097.142857142857,"tags":["bank","institution","university"],"defaultCode":61852,"grid":14},{"paths":["M1013.714 477.714l10.286 180.571c4.571 80.571-164 146.286-365.714 146.286s-370.286-65.714-365.714-146.286l10.286-180.571 328 103.429c9.143 2.857 18.286 4 27.429 4s18.286-1.143 27.429-4zM1316.571 292.571c0 8-5.143 14.857-12.571 17.714l-640 201.143c-2.286 0.571-4 0.571-5.714 0.571s-3.429 0-5.714-0.571l-372.571-117.714c-32.571 25.714-55.429 88.571-60 165.714 21.714 12.571 36 35.429 36 62.286 0 25.714-13.143 48-33.143 61.143l33.143 247.429c0.571 5.143-1.143 10.286-4.571 14.286s-8.571 6.286-13.714 6.286h-109.714c-5.143 0-10.286-2.286-13.714-6.286s-5.143-9.143-4.571-14.286l33.143-247.429c-20-13.143-33.143-35.429-33.143-61.143 0-27.429 15.429-50.857 37.143-63.429 3.429-66.857 20.571-138.857 56-188.571l-190.286-59.429c-7.429-2.857-12.571-9.714-12.571-17.714s5.143-14.857 12.571-17.714l640-201.143c2.286-0.571 4-0.571 5.714-0.571s3.429 0 5.714 0.571l640 201.143c7.429 2.857 12.571 9.714 12.571 17.714z"],"width":1316.5714285714284,"tags":["graduation-cap","mortar-board"],"defaultCode":61853,"grid":14},{"paths":["M490.857 546.857l7.429 404c-19.429-3.429-39.429-6.286-60-6.286-20 0-40 2.857-60 6.286l7.429-404c-106.286-183.429-206.286-370.286-323.429-546.857 20 5.143 40.571 8.571 61.714 8.571s42.857-4 63.429-8.571c80 141.714 166.857 279.429 250.857 418.857 84.571-138.286 174.286-276 250.857-418.857 20 5.143 40.571 8 61.143 8 21.714 0 44-2.857 65.143-8v0 0c-45.714 62.857-83.429 131.429-122.857 198.286-68 116-134.857 232-201.714 348.571z"],"width":877.7142857142857,"tags":["yahoo"],"defaultCode":61854,"grid":14},{"paths":["M438.857 449.143h414.286c4 22.286 6.857 44 6.857 73.143 0 250.286-168 428.571-421.143 428.571-242.857 0-438.857-196-438.857-438.857s196-438.857 438.857-438.857c118.286 0 217.714 43.429 294.286 114.857l-119.429 114.857c-32.571-31.429-89.714-68-174.857-68-149.714 0-272 124-272 277.143s122.286 277.143 272 277.143c173.714 0 238.857-124.571 249.143-189.143h-249.143v-150.857z"],"width":860.0137142857142,"tags":["google"],"defaultCode":61856,"grid":14},{"paths":["M625.714 666.857c5.143 5.143 5.143 13.143 0 17.714-32.571 32.571-95.429 35.429-113.714 35.429s-81.143-2.857-113.714-35.429c-5.143-4.571-5.143-12.571 0-17.714 4.571-4.571 12.571-4.571 17.143 0 20.571 21.143 65.143 28 96.571 28s75.429-6.857 96.571-28c4.571-4.571 12.571-4.571 17.143 0zM450.286 563.429c0 28-22.857 50.857-50.857 50.857-28.571 0-51.429-22.857-51.429-50.857 0-28.571 22.857-51.429 51.429-51.429 28 0 50.857 22.857 50.857 51.429zM676 563.429c0 28-22.857 50.857-51.429 50.857-28 0-50.857-22.857-50.857-50.857 0-28.571 22.857-51.429 50.857-51.429 28.571 0 51.429 22.857 51.429 51.429zM819.429 494.857c0-37.714-30.857-68-68.571-68-19.429 0-36.571 8-49.143 20.571-46.286-32-108.571-52.571-177.714-54.857l36-161.714 114.286 25.714c0 28 22.857 50.857 50.857 50.857 28.571 0 51.429-23.429 51.429-51.429s-22.857-51.429-51.429-51.429c-20 0-37.143 12-45.714 28.571l-126.286-28c-6.286-1.714-12.571 2.857-14.286 9.143l-39.429 178.286c-68.571 2.857-130.286 23.429-176.571 55.429-12.571-13.143-30.286-21.143-49.714-21.143-37.714 0-68.571 30.286-68.571 68 0 27.429 16 50.286 38.857 61.714-2.286 10.286-3.429 21.143-3.429 32 0 108.571 122.286 196.571 272.571 196.571 150.857 0 273.143-88 273.143-196.571 0-10.857-1.143-22.286-4-32.571 22.286-11.429 37.714-34.286 37.714-61.143zM1024 512c0 282.857-229.143 512-512 512s-512-229.143-512-512 229.143-512 512-512 512 229.143 512 512z"],"width":1024,"tags":["reddit"],"defaultCode":61857,"grid":14},{"paths":["M536.571 645.143c4 4 4 10.857 0 14.857-28 28-81.714 30.286-97.714 30.286s-69.714-2.286-97.714-30.286c-4-4-4-10.857 0-14.857 4-4.571 10.857-4.571 14.857 0 17.714 17.714 56 24 82.857 24s65.143-6.286 82.857-24c4-4.571 10.857-4.571 14.857 0zM386.286 556c0 24-20 44-44 44s-44-20-44-44c0-24.571 20-44 44-44s44 19.429 44 44zM579.429 556c0 24-20 44-44 44s-44-20-44-44c0-24.571 20-44 44-44s44 19.429 44 44zM702.286 497.143c0-32-26.286-58.286-58.857-58.286-16 0-30.857 6.857-41.714 17.714-40-27.429-93.714-45.143-152.571-46.857l30.857-138.857 97.714 22.286c0.571 24 20 43.429 44 43.429s44-20 44-44-20-44-44-44c-17.143 0-32 9.714-39.429 24.571l-108-24c-5.714-1.714-10.857 2.286-12 7.429l-34.286 153.143c-58.857 2.286-112 20-151.429 47.429-10.857-11.429-25.714-18.286-42.286-18.286-32.571 0-58.857 26.286-58.857 58.286 0 23.429 13.714 43.429 33.143 53.143-1.714 8.571-2.857 18.286-2.857 27.429 0 93.143 104.571 168.571 233.714 168.571s234.286-75.429 234.286-168.571c0-9.714-1.143-18.857-3.429-28 18.857-9.714 32-29.714 32-52.571zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["reddit-square"],"defaultCode":61858,"grid":14},{"paths":["M494.857 479.429l51.429-15.429v-35.429c0-60.571-51.429-109.143-112-109.143s-112 48-112 108.571v161.714c0 14.857-12 26.857-26.857 26.857s-26.286-12-26.286-26.857v-68.571h-86.286v69.714c0 62.286 50.286 112 112.571 112 61.143 0 112-49.143 112-110.286v-160c0-14.857 12-26.857 26.857-26.857 14.286 0 26.286 12 26.286 26.857v30.857zM685.143 590.857v-69.714h-85.714v72c0 14.857-12 26.857-26.857 26.857-14.286 0-26.286-12-26.286-26.857v-70.286l-51.429 14.857-34.286-16v70.286c0 61.143 50.857 110.857 112.571 110.857s112-49.714 112-112zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["stumbleupon-circle"],"defaultCode":61859,"grid":14},{"paths":["M606.857 406.857v-67.429c0-32-26.286-58.286-58.286-58.286s-58.286 26.286-58.286 58.286v349.714c0 133.714-110.857 241.714-245.143 241.714-135.429 0-245.143-109.714-245.143-245.143v-152h187.429v149.714c0 32.571 26.286 58.286 58.286 58.286s58.286-25.714 58.286-58.286v-354.286c0-130.857 112-236 244.571-236 133.143 0 244.571 105.714 244.571 237.714v77.714l-111.429 33.143zM909.714 533.714h187.429v152c0 135.429-109.714 245.143-245.143 245.143-134.857 0-245.143-108.571-245.143-242.857v-153.143l74.857 34.857 111.429-33.143v154.286c0 32 26.286 57.714 58.286 57.714s58.286-25.714 58.286-57.714v-157.143z"],"width":1097.142857142857,"tags":["stumbleupon"],"defaultCode":61860,"grid":14},{"paths":["M841.143 786.286v-274.286h-402.286v-402.286h-274.286c-70.857 0-128 57.143-128 128v274.286h402.286v402.286h274.286c70.857 0 128-57.143 128-128zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["delicious"],"defaultCode":61861,"grid":14},{"paths":["M187.429 161.143h116.571v561.714h-304v-398.286h187.429v-163.429zM187.429 629.143v-210.857h-70.286v210.857h70.286zM350.857 324.571v398.286h117.143v-398.286h-117.143zM350.857 161.143v116.571h117.143v-116.571h-117.143zM514.857 324.571h304.571v538.286h-304.571v-93.143h187.429v-46.857h-187.429v-398.286zM702.286 629.143v-210.857h-70.286v210.857h70.286zM866.286 324.571h304v538.286h-304v-93.143h186.857v-46.857h-186.857v-398.286zM1053.143 629.143v-210.857h-70.286v210.857h70.286z"],"width":1170.2857142857142,"tags":["digg"],"defaultCode":61862,"grid":14},{"paths":["M597.714 582.857c0 48.571-33.143 88-73.714 88-16.571 0-29.714-2.857-40-8.571v-158.286c10.286-6.286 23.429-9.714 40-9.714 40.571 0 73.714 39.429 73.714 88.571zM401.714 338.286c0 49.143-33.143 88.571-73.714 88.571-16.571 0-29.714-2.857-40-8.571v-158.286c10.286-6.286 23.429-9.714 40-9.714 40.571 0 73.714 39.429 73.714 88zM722.857 584.571c0-102.286-77.143-185.143-172-185.143-7.429 0-14.857 0.571-22.286 1.714-8.571 29.143-23.429 55.429-44.571 77.714-32 34.857-74.857 55.429-120.571 57.714v363.429l120.571-23.429v-117.714c20 7.429 42.286 10.857 66.857 10.857 94.857 0 172-82.857 172-185.143zM526.857 340.571c0-102.286-77.143-185.143-172.571-185.143-28 0-56 7.429-80.571 20.571h-106.286v480l120.571-23.429v-117.714c20 6.857 42.286 10.857 66.286 10.857 95.429 0 172.571-82.857 172.571-185.143zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["pied-piper-pp"],"defaultCode":61863,"grid":14},{"paths":["M698.286 530.857c148.571-5.714 230.857 116.571 298.286 229.714 40 68 86.857 108 144.571 158.857-61.714 38.286-140 64-206.286 93.714-109.714-92-45.714-457.143-221.714-457.143l-5.714 1.143-3.429 2.286c2.286 2.857 5.143 5.714 7.429 8 47.429 40 66.286 48.571 69.143 116.571l0.571 18.857c1.714 42.857-10.857 84.571-19.429 126.286-38.286-1.143-75.429 11.429-113.714 11.429-14.286 0-28-1.714-41.143-5.714-1.143-9.143-1.143-18.286-1.143-26.857 0-17.714-0.571-37.714 1.714-54.857 2.857-18.857 66.857-59.429 65.714-86.857-10.857-1.143-18.286 5.143-24.571 13.714-26.286 38.857-93.714 83.429-141.714 83.429-33.143 0-112-142.286-152-170.857-6.286-4.571-10.286-10.857-15.429-17.143-32 7.429-277.143 64-293.143 64-12 0-22.857-9.714-22.857-21.714 0-10.857 6.857-21.143 17.714-23.429l277.714-60.571c-18.857-34.286 24.571-34.857 42.857-40 6.286-1.714 12.571-8 18.857-8 12.571 0 23.429 17.714 27.429 28 12.571-2.857 90.857-21.143 98.286-21.143 12.571 0 24 9.143 24 22.286 0 10.857-6.857 20.571-18.286 22.857l-104 22.857-0.571 9.143c-0.571 20 90.286 119.429 106.286 119.429 36 0 109.143-82.857 109.143-119.429 0-61.143-85.143-25.143-85.143-66.857 0-6.857 2.286-13.143 5.714-19.429l-38.857-10.857c17.714-18.286 24.571-41.714 24.571-66.857 0-10.857-1.143-22.286-2.857-33.143 29.143-5.714 53.143-9.143 82.286-9.143 113.143 0 90.857 17.143 130.286 108l28.571-14.286c-4.571 68-72 34.857-69.714 61.714zM732.571 396.571c-22.286-25.714-32-38.286-45.143-44-13.714-6.286-31.429-4.571-72.571-4.571-42.857 0-85.143 6.286-124 24.571 12.571-23.429 26.286-33.714 51.429-43.429 54.286-20.571 80-60.571 117.143-101.714 19.429 13.714 28 48 56 46.286l6.857-0.571v43.429l12.571 0.571c74.286-28.571 148.571-60 212-108.571 96-73.143 105.143-99.429 161.714-198.857l4-5.143c-1.143 28-12.571 54.286-24.571 79.429-60.571 126.857-156.571 199.429-292 232-24.571 5.714-52.571 6.286-74.857 17.714 2.857 19.429 26.286 36 26.286 45.714 0 6.857-10.857 14.286-14.857 17.143zM606.286 922.857c31.429-20.571 121.143-39.429 158.857-39.429 18.857 0 56 89.714 65.714 109.714-44.571 16.571-91.429 25.714-139.429 25.714-24 0-48-2.286-71.429-6.286zM469.714 553.143l27.429-6.857 62.286 101.143-41.714 27.429zM756 848.571c0.571 2.857 1.714 6.286 1.714 9.143 0 14.857-98.286 25.143-116 28l-4-24.571c35.429-4 74.857-13.143 110.286-12.571h8zM494.857 489.714l-54.857 11.429-3.429-9.714c13.143-1.143 25.143-7.429 38.286-7.429 7.429 0 13.714 1.714 20 5.714zM606.286 852h17.714l5.714 47.429-23.429 6.857v-54.286zM1114.286 0.571v0 0zM1114.286 0.571l-0.571 2.857-1.143 1.143 0.571-1.714zM1114.286 0.571l0.571-0.571z"],"width":1164.5805714285714,"tags":["pied-piper-alt"],"defaultCode":61864,"grid":14},{"paths":["M666.857 906.286c-1.143-4-4.571-9.714-13.714-2.857-19.429 14.286-62.857 32-124.571 32s-90.857-13.143-110.286-28c-2.857-2.286-1.714-2.286-7.429-2.286-6.286 0-9.714 2.857-14.857 6.857-4.571 4-6.857 13.714 0 20.571 42.286 38.857 113.143 35.429 165.143 30.857 52.571-5.143 97.143-36 101.714-40.571 6.857-6.857 5.143-12.571 4-16.571zM644.571 840.571c-4-9.714-10.857-26.857-22.286-34.857-11.429-7.429-28-8.571-43.429-8.571s-24-1.143-40.571 5.714-33.714 22.286-44.571 32-12.571 17.143-6.857 25.143c5.714 7.429 12 2.857 28-10.857 16.571-13.143 27.429-25.143 61.143-25.143s39.429 12.571 46.286 25.143 7.429 14.286 14.286 10.857c8-4 12-9.714 8-19.429zM847.429 680c0-29.714-13.143-80-61.714-80-45.714 0-138.286 94.857-186.857 95.429-56.571 1.143-134.857-112-248-110.857-89.143 0.571-159.429 71.429-160.571 146.857-0.571 42.286 13.143 73.714 42.286 93.714 19.429 13.143 37.143 21.143 94.857 21.143 96 0 217.714-118.857 273.714-117.143 44.571 1.714 113.714 110.857 148.571 113.143 27.429 2.286 41.714-10.286 65.143-44 22.857-34.286 32.571-88 32.571-118.286zM877.714 588.571c0 256-202.286 425.143-434.857 425.143-233.143 0-442.857-183.429-442.857-433.143 0-249.143 194.286-364.571 230.286-383.429 42.857-22.857 73.714-34.857 122.286-73.714 24-18.857 44-46.286 50.286-113.143 34.857 41.714 76.571 90.286 106.286 110.286 48.571 32 97.143 44.571 148 76.571 30.857 18.857 220.571 134.857 220.571 391.429z"],"width":877.7142857142857,"tags":["drupal"],"defaultCode":61865,"grid":14},{"paths":["M611.429 613.143l-91.429 91.429-86.286 86.857-17.143 17.143c-50.286 49.714-120.571 66.857-184.571 50.857-12 52.571-58.857 91.429-114.857 91.429-64.571 0-117.143-52.571-117.143-117.714 0-55.429 38.286-102.286 90.286-114.286-16.571-64.571 0.571-135.429 50.857-185.714l6.857-6.857 86.286 86.857-6.286 6.286c-28.571 28-28 73.714 0 102.286 28 28 73.714 28 101.714 0l17.143-17.143 86.286-86.857 92-91.429zM416.571 223.429l6.857 6.857-86.857 86.857-6.857-6.857c-28-28-73.714-28-101.714 0s-28 74.286 0 102.286l194.857 194.857-86.286 86.857-92-91.429-86.286-86.857-17.143-17.143c-52.571-52-68.571-126.857-48.571-193.714-52.571-11.429-91.429-58.286-91.429-114.286 0-65.143 52.571-117.714 117.143-117.714 58.857 0 106.857 42.857 116 98.286 63.429-14.857 132.571 2.857 182.286 52zM877.714 833.143c0 65.143-52.571 117.714-117.143 117.714-57.143 0-104.571-40.571-115.429-94.286v0c-66.286 20.571-142.286 4.571-194.857-48l-6.286-6.857 86.286-86.857 6.857 6.857c28 28 73.714 28 101.714 0s28-73.714 0-101.714l-195.429-195.429 86.857-86.857 178.286 178.286 16.571 17.143c49.714 49.714 67.429 120 51.429 184 57.143 8 101.143 56.571 101.143 116zM876.571 190.857c0 59.429-44.571 108.571-101.714 116.571 18.857 65.714 2.286 139.429-49.714 191.429l-6.857 6.857-86.286-86.857 6.857-6.857c28-28 28-73.714 0-101.714s-73.714-28-101.714 0l-195.429 195.429-86.857-86.857 92-91.429 86.857-86.857 16.571-17.143c52-52 126.286-68.571 192.571-49.143 8-57.143 57.143-101.143 116.571-101.143 64.571 0 117.143 52.571 117.143 117.714z"],"width":877.7142857142857,"tags":["joomla"],"defaultCode":61866,"grid":14},{"paths":["M373.714 616c-1.143 4-29.143-9.143-36.571-12-7.429-3.429-41.143-22.286-49.714-28s-41.143-32.571-45.143-34.286v0c-20.571 31.429-46.857 68.571-76.571 103.429-10.286 12-41.143 50.857-60 62.857-2.857 1.714-19.429 3.429-21.714 2.286 9.143-6.857 35.429-39.429 46.857-52.571 14.286-16.571 82.286-111.429 93.714-133.143 12-21.714 48-93.714 49.714-100.571-5.714-0.571-50.857 14.857-62.857 18.857-11.429 3.429-42.857 10.857-45.143 12.571-2.286 2.286-0.571 9.143-1.714 11.429s-11.429 7.429-17.714 8.571c-5.714 1.714-18.857 2.286-26.857 0-7.429-1.714-14.286-9.143-16-12 0 0-2.286-3.429-2.857-13.143 6.857-2.286 18.286-2.857 30.857-6.286s43.429-12.571 60-18.286 48.571-17.714 58.286-20c10.286-1.714 36-18.857 49.714-23.429s23.429-10.286 24-7.429 0 15.429-0.571 18.857c-0.571 2.857-28 56.571-32 65.143-2.286 4.571-18.286 34.857-44 74.857 9.143 4 28.571 12 36.571 16 9.714 4.571 77.714 33.143 81.143 34.286s9.714 27.429 8.571 32zM256.571 338.286c1.714 9.714-1.143 13.714-2.286 16-5.714 10.857-20 18.286-28.571 21.714s-22.857 6.857-34.286 6.857c-5.143-0.571-15.429-2.286-28-14.857-6.857-7.429-12-27.429-9.714-25.143s18.857 4.571 26.286 2.857 25.143-6.857 33.143-9.143c8.571-2.857 25.714-7.429 31.429-8 5.714 0 10.286 2.286 12 9.714zM655.429 412l36 129.714-79.429-24zM22.286 869.143l396.571-132.571v-589.714l-396.571 133.143v589.143zM731.429 688l58.286 17.714-103.429-375.429-57.143-17.714-123.429 306.286 58.286 17.714 25.714-62.857 120.571 37.143zM444 138.286l327.429 105.143v-217.143zM621.714 894.286l90.286 7.429-30.857 91.429-22.857-37.714c-46.286 29.714-103.429 52.571-157.714 61.714-16.571 3.429-35.429 6.857-52 6.857h-48c-60.571 0-170.857-36-218.857-70.857-3.429-2.857-4.571-5.143-4.571-9.143 0-6.286 4.571-10.857 10.286-10.857 5.143 0 32 16.571 39.429 20 51.429 25.714 123.429 49.143 181.143 49.143 71.429 0 120-9.143 185.143-37.143 18.857-8.571 35.429-19.429 53.143-29.143zM877.714 277.714v616.571c-441.714-140.571-442.286-140.571-442.286-140.571-9.143 4-418.857 142.286-424.571 142.286-4.571 0-8.571-2.857-10.286-7.429 0-0.571-0.571-1.143-0.571-1.714v-616c0.571-1.714 1.143-4.571 2.286-5.714 3.429-4 8-5.143 11.429-6.286 1.714-0.571 36.571-12 85.143-28.571v-219.429l318.857 113.143c4-1.143 359.429-124 364.571-124 6.286 0 11.429 4.571 11.429 12v238.857z"],"width":877.7142857142857,"tags":["language"],"defaultCode":61867,"grid":14},{"paths":["M164.571 219.429c50.286 0 91.429 41.143 91.429 91.429v621.714c0 50.286-41.143 91.429-91.429 91.429h-73.143c-50.286 0-91.429-41.143-91.429-91.429v-621.714c0-50.286 41.143-91.429 91.429-91.429h73.143zM950.857 312.571c43.429 25.143 73.143 72.571 73.143 126.286v438.857c0 80.571-65.714 146.286-146.286 146.286h-493.714c-50.286 0-91.429-41.143-91.429-91.429v-877.714c0-30.286 24.571-54.857 54.857-54.857h384c30.286 0 72.571 17.714 93.714 38.857l86.857 86.857c21.143 21.143 38.857 63.429 38.857 93.714v93.143zM530.286 877.714v-73.143c0-10.286-8-18.286-18.286-18.286h-73.143c-10.286 0-18.286 8-18.286 18.286v73.143c0 10.286 8 18.286 18.286 18.286h73.143c10.286 0 18.286-8 18.286-18.286zM530.286 731.429v-73.143c0-10.286-8-18.286-18.286-18.286h-73.143c-10.286 0-18.286 8-18.286 18.286v73.143c0 10.286 8 18.286 18.286 18.286h73.143c10.286 0 18.286-8 18.286-18.286zM530.286 585.143v-73.143c0-10.286-8-18.286-18.286-18.286h-73.143c-10.286 0-18.286 8-18.286 18.286v73.143c0 10.286 8 18.286 18.286 18.286h73.143c10.286 0 18.286-8 18.286-18.286zM676.571 877.714v-73.143c0-10.286-8-18.286-18.286-18.286h-73.143c-10.286 0-18.286 8-18.286 18.286v73.143c0 10.286 8 18.286 18.286 18.286h73.143c10.286 0 18.286-8 18.286-18.286zM676.571 731.429v-73.143c0-10.286-8-18.286-18.286-18.286h-73.143c-10.286 0-18.286 8-18.286 18.286v73.143c0 10.286 8 18.286 18.286 18.286h73.143c10.286 0 18.286-8 18.286-18.286zM676.571 585.143v-73.143c0-10.286-8-18.286-18.286-18.286h-73.143c-10.286 0-18.286 8-18.286 18.286v73.143c0 10.286 8 18.286 18.286 18.286h73.143c10.286 0 18.286-8 18.286-18.286zM822.857 877.714v-73.143c0-10.286-8-18.286-18.286-18.286h-73.143c-10.286 0-18.286 8-18.286 18.286v73.143c0 10.286 8 18.286 18.286 18.286h73.143c10.286 0 18.286-8 18.286-18.286zM822.857 731.429v-73.143c0-10.286-8-18.286-18.286-18.286h-73.143c-10.286 0-18.286 8-18.286 18.286v73.143c0 10.286 8 18.286 18.286 18.286h73.143c10.286 0 18.286-8 18.286-18.286zM822.857 585.143v-73.143c0-10.286-8-18.286-18.286-18.286h-73.143c-10.286 0-18.286 8-18.286 18.286v73.143c0 10.286 8 18.286 18.286 18.286h73.143c10.286 0 18.286-8 18.286-18.286zM877.714 365.714v-146.286h-91.429c-30.286 0-54.857-24.571-54.857-54.857v-91.429h-365.714v292.571h512z"],"width":1024,"tags":["fax"],"defaultCode":61868,"grid":14},{"paths":["M768 0c20 0 36.571 16.571 36.571 36.571v950.857c0 20-16.571 36.571-36.571 36.571h-731.429c-20 0-36.571-16.571-36.571-36.571v-950.857c0-20 16.571-36.571 36.571-36.571h731.429zM292.571 164.571v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286zM292.571 310.857v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286zM292.571 457.143v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286zM292.571 603.429v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286zM219.429 786.286v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM219.429 640v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM219.429 493.714v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM219.429 347.429v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM219.429 201.143v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM512 932.571v-109.714c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v109.714c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM512 640v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM512 493.714v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM512 347.429v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM512 201.143v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM658.286 786.286v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM658.286 640v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM658.286 493.714v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM658.286 347.429v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM658.286 201.143v-36.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286z"],"width":804.5714285714286,"tags":["building"],"defaultCode":61869,"grid":14},{"paths":["M678.857 313.143l-166.857 166.857v470.857c0 35.429-28.571 64-64 64s-64-28.571-64-64v-219.429h-36.571v219.429c0 35.429-28.571 64-64 64s-64-28.571-64-64v-470.857l-166.857-166.857c-21.143-21.714-21.143-56 0-77.714 21.714-21.143 56-21.143 77.714 0l130.286 130.286h210.286l130.286-130.286c21.714-21.143 56-21.143 77.714 0 21.143 21.714 21.143 56 0 77.714zM493.714 219.429c0 70.857-57.143 128-128 128s-128-57.143-128-128 57.143-128 128-128 128 57.143 128 128z"],"width":731.4285714285713,"tags":["child"],"defaultCode":61870,"grid":14},{"paths":["M445.714 269.714c0 64-33.143 140-106.857 140-92.571 0-148.571-116.571-148.571-196.571 0-64 33.143-140 106.857-140 93.143 0 148.571 116.571 148.571 196.571zM250.286 545.714c0 55.429-29.143 113.143-92 113.143-91.429 0-158.286-112-158.286-194.857 0-55.429 29.714-113.714 92-113.714 91.429 0 158.286 112.571 158.286 195.429zM475.429 530.286c140 0 329.143 201.714 329.143 336.571 0 72.571-59.429 84-117.714 84-76.571 0-138.286-51.429-211.429-51.429-76.571 0-141.714 50.857-224.571 50.857-55.429 0-104.571-18.857-104.571-83.429 0-135.429 189.143-336.571 329.143-336.571zM612 409.714c-73.714 0-106.857-76-106.857-140 0-80 55.429-196.571 148.571-196.571 73.714 0 106.857 76 106.857 140 0 80-56 196.571-148.571 196.571zM858.857 350.286c62.286 0 92 58.286 92 113.714 0 82.857-66.857 194.857-158.286 194.857-62.857 0-92-57.714-92-113.143 0-82.857 66.857-195.429 158.286-195.429z"],"width":950.8571428571428,"tags":["paw"],"defaultCode":61872,"grid":14},{"paths":["M402.286 301.714c0 114.286-49.714 189.143-119.429 216.571l25.714 469.143c1.143 20-14.286 36.571-34.286 36.571h-109.714c-20 0-35.429-16.571-34.286-36.571l25.714-469.143c-69.714-27.429-119.429-102.286-119.429-216.571 0-146.286 81.714-301.714 182.857-301.714s182.857 155.429 182.857 301.714z"],"width":438.85714285714283,"tags":["spoon"],"defaultCode":61873,"grid":14},{"paths":["M512 930.857l365.714-199.429v-363.429l-365.714 133.143v429.714zM475.429 436.571l398.857-145.143-398.857-145.143-398.857 145.143zM950.857 292.571v438.857c0 26.857-14.857 51.429-38.286 64l-402.286 219.429c-10.857 6.286-22.857 9.143-34.857 9.143s-24-2.857-34.857-9.143l-402.286-219.429c-23.429-12.571-38.286-37.143-38.286-64v-438.857c0-30.857 19.429-58.286 48-68.571l402.286-146.286c8-2.857 16.571-4.571 25.143-4.571s17.143 1.714 25.143 4.571l402.286 146.286c28.571 10.286 48 37.714 48 68.571z"],"width":950.8571428571428,"tags":["cube"],"defaultCode":61874,"grid":14},{"paths":["M365.714 932.571l219.429-109.714v-179.429l-219.429 93.714v195.429zM329.143 673.143l230.857-98.857-230.857-98.857-230.857 98.857zM950.857 932.571l219.429-109.714v-179.429l-219.429 93.714v195.429zM914.286 673.143l230.857-98.857-230.857-98.857-230.857 98.857zM658.286 505.714l219.429-94.286v-152l-219.429 93.714v152.571zM621.714 289.143l252-108-252-108-252 108zM1243.429 585.143v237.714c0 27.429-15.429 53.143-40.571 65.143l-256 128c-10.286 5.714-21.143 8-32.571 8s-22.286-2.286-32.571-8l-256-128c-1.714-0.571-2.857-1.143-4-2.286-1.143 1.143-2.286 1.714-4 2.286l-256 128c-10.286 5.714-21.143 8-32.571 8s-22.286-2.286-32.571-8l-256-128c-25.143-12-40.571-37.714-40.571-65.143v-237.714c0-29.143 17.714-55.429 44.571-67.429l248-106.286v-228.571c0-29.143 17.714-55.429 44.571-67.429l256-109.714c9.143-4 18.857-5.714 28.571-5.714s19.429 1.714 28.571 5.714l256 109.714c26.857 12 44.571 38.286 44.571 67.429v228.571l248 106.286c27.429 12 44.571 38.286 44.571 67.429z"],"width":1243.4285714285713,"tags":["cubes"],"defaultCode":61875,"grid":14},{"paths":["M1056 193.714h-292v70.857h292v-70.857zM912 437.143c-68.571 0-114.286 42.857-118.857 111.429h233.143c-6.286-69.143-42.286-111.429-114.286-111.429zM921.143 771.429c43.429 0 99.429-23.429 113.143-68h126.286c-38.857 119.429-119.429 175.429-244 175.429-164.571 0-266.857-111.429-266.857-273.714 0-156.571 108-276 266.857-276 163.429 0 253.714 128.571 253.714 282.857 0 9.143-0.571 18.286-1.143 26.857h-376c0 83.429 44 132.571 128 132.571zM158.286 742.857h169.143c64.571 0 117.143-22.857 117.143-95.429 0-73.714-44-102.857-113.714-102.857h-172.571v198.286zM158.286 436h160.571c56.571 0 96.571-24.571 96.571-85.714 0-66.286-51.429-82.286-108.571-82.286h-148.571v168zM0 145.143h339.429c123.429 0 230.286 34.857 230.286 178.286 0 72.571-33.714 119.429-98.286 150.286 88.571 25.143 131.429 92 131.429 182.286 0 146.286-122.857 209.143-253.714 209.143h-349.143v-720z"],"width":1170.2857142857142,"tags":["behance"],"defaultCode":61876,"grid":14},{"paths":["M713.143 73.143c90.857 0 164.571 73.714 164.571 164.571v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571zM285.143 282.857h-212v449.714h218.286c81.714 0 158.286-38.857 158.286-130.286 0-56.571-26.857-98.286-81.714-114.286 40-19.429 61.143-48.571 61.143-93.714 0-89.714-66.857-111.429-144-111.429zM272.571 464.571h-100.571v-105.143h93.143c35.429 0 68 9.714 68 51.429 0 38.286-25.143 53.714-60.571 53.714zM277.714 656h-105.714v-124h108c43.429 0 70.857 18.857 70.857 64.571s-32.571 59.429-73.143 59.429zM649.143 674.286c-52.571 0-80-30.857-80-82.857h234.857c0.571-5.714 0.571-11.429 0.571-17.143 0-96-56.571-176.571-158.857-176.571-98.857 0-166.857 74.857-166.857 172.571 0 101.714 64 170.857 166.857 170.857 78.286 0 128.571-34.857 152.571-109.143h-78.857c-8.571 27.429-43.429 42.286-70.286 42.286zM643.429 465.143c44.571 0 66.857 26.857 70.857 69.714h-145.143c2.857-42.857 31.429-69.714 74.286-69.714zM550.857 313.143h182.286v44h-182.286v-44z"],"width":877.7142857142857,"tags":["behance-square"],"defaultCode":61877,"grid":14},{"paths":["M904 332.571c0 77.143-62.857 139.429-139.429 139.429-77.143 0-139.429-62.286-139.429-139.429s62.286-139.429 139.429-139.429c76.571 0 139.429 62.286 139.429 139.429zM464 756.571c0-79.429-63.429-142.857-142.857-142.857-10.286 0-20.571 1.143-30.857 3.429l59.429 24c58.286 23.429 86.857 89.143 63.429 147.429s-89.714 86.857-148 62.857c-23.429-9.143-46.857-18.857-70.286-28 24 45.143 71.429 76 126.286 76 79.429 0 142.857-63.429 142.857-142.857zM938.286 333.143c0-96-78.286-174.286-174.286-174.286-96.571 0-174.857 78.286-174.857 174.286 0 96.571 78.286 174.286 174.857 174.286 96 0 174.286-77.714 174.286-174.286zM1024 333.143c0 144-116.571 260-260 260l-249.714 182.286c-9.143 98.286-92.571 175.429-193.143 175.429-92.571 0-170.857-65.714-189.714-153.143l-131.429-52.571v-245.143l222.286 89.714c29.143-17.714 62.857-27.429 98.857-27.429 6.857 0 13.714 0.571 20 1.143l162.286-232.571c1.143-142.286 117.714-257.714 260.571-257.714 143.429 0 260 116.571 260 260z"],"width":1024,"tags":["steam"],"defaultCode":61878,"grid":14},{"paths":["M709.714 369.714c0-60.571-49.714-110.286-110.857-110.286-60.571 0-110.286 49.714-110.286 110.286 0 61.143 49.714 110.286 110.286 110.286 61.143 0 110.857-49.143 110.857-110.286zM361.143 705.714c0 62.857-50.286 113.143-113.143 113.143-43.429 0-81.143-24.571-100-60.571 18.857 7.429 37.143 14.857 56 22.857 45.714 18.286 98.286-4 117.143-50.286 18.286-45.714-4-98.286-50.286-116.571l-46.857-18.857c7.429-1.714 16-2.857 24-2.857 62.857 0 113.143 50.286 113.143 113.143zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-87.429l98.286 39.429c14.857 69.143 76.571 121.143 149.714 121.143 80 0 145.714-61.143 153.143-138.857l197.143-144c114.286 0 206.286-92.571 206.286-205.714 0-114.286-92-206.286-206.286-206.286-112.571 0-204.571 91.429-205.714 204l-128.571 184c-5.143-0.571-10.286-0.571-16-0.571-28.571 0-55.429 7.429-78.286 21.143l-169.714-68v-267.429c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571zM736.571 370.857c0 76-61.714 137.714-138.286 137.714-76 0-137.714-61.714-137.714-137.714 0-76.571 61.714-138.286 137.714-138.286 76.571 0 138.286 61.714 138.286 138.286z"],"width":877.7142857142857,"tags":["steam-square"],"defaultCode":61879,"grid":14},{"paths":["M477.714 668l-8.571 210.286-1.143 12.571-240-16.571c-29.714-2.286-54.286-30.286-65.143-55.429-22.857-53.143 6.857-116 24-166.857 0 0 44 6.857 290.857 16zM256.571 333.143l102.857 216.571-84-52.571c-128.571 146.857-140.571 256-140.571 256l-108.571-204c-22.286-33.143-2.286-69.143-2.286-69.143s20-36 65.143-107.429l-80-49.143zM960 628.571l-107.429 205.143c-14.857 37.143-56 40.571-56 40.571s-40.571 4-125.143 6.857l4.571 93.714-131.429-209.714 120.571-206.857 4 98.857c193.714 23.429 290.857-28.571 290.857-28.571zM511.429 100.571c0 0-26.857 35.429-151.429 248.571l-181.143-106.857-10.857-6.857 128.571-203.429c16-25.143 52-34.286 80-31.429 57.143 5.143 98.286 60.571 134.857 100zM885.714 276l121.143 207.429c15.429 25.714 6.286 61.714-8.571 85.714-30.857 48-99.429 59.429-150.857 73.714 0 0-19.429-40.571-151.429-249.143l178.857-111.429zM804 146.857l81.143-47.429-125.714 213.143-239.429-11.429 86.286-49.143c-68.571-182.286-159.429-245.143-159.429-245.143l231.429 0.571c40-3.429 61.714 30.857 61.714 30.857s22.286 34.857 64 108.571z"],"width":1026.2674285714286,"tags":["recycle"],"defaultCode":61880,"grid":14},{"paths":["M274.286 621.714c0-50.286-41.143-91.429-91.429-91.429s-91.429 41.143-91.429 91.429 41.143 91.429 91.429 91.429 91.429-41.143 91.429-91.429zM294.857 438.857h580.571l-50.857-204c-1.714-6.286-13.143-15.429-20-15.429h-438.857c-6.857 0-18.286 9.143-20 15.429zM1078.857 621.714c0-50.286-41.143-91.429-91.429-91.429s-91.429 41.143-91.429 91.429 41.143 91.429 91.429 91.429 91.429-41.143 91.429-91.429zM1170.286 566.857v219.429c0 10.286-8 18.286-18.286 18.286h-54.857v73.143c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714v-73.143h-585.143v73.143c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714v-73.143h-54.857c-10.286 0-18.286-8-18.286-18.286v-219.429c0-70.857 57.143-128 128-128h16l60-239.429c17.714-72 87.429-126.286 161.714-126.286h438.857c74.286 0 144 54.286 161.714 126.286l60 239.429h16c70.857 0 128 57.143 128 128z"],"width":1170.2857142857142,"tags":["automobile","car"],"defaultCode":61881,"grid":14},{"paths":["M1042.286 512c70.857 0 128 57.143 128 128v219.429c0 10.286-8 18.286-18.286 18.286h-54.857v36.571c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714v-36.571h-585.143v36.571c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714v-36.571h-54.857c-10.286 0-18.286-8-18.286-18.286v-219.429c0-70.857 57.143-128 128-128h16l60-239.429c17.714-72 87.429-126.286 161.714-126.286h73.143v-128c0-10.286 8-18.286 18.286-18.286h256c10.286 0 18.286 8 18.286 18.286v128h73.143c74.286 0 144 54.286 161.714 126.286l60 239.429h16zM182.857 786.286c50.286 0 91.429-41.143 91.429-91.429s-41.143-91.429-91.429-91.429-91.429 41.143-91.429 91.429 41.143 91.429 91.429 91.429zM294.857 512h580.571l-50.857-204c-1.714-6.286-13.143-15.429-20-15.429h-438.857c-6.857 0-18.286 9.143-20 15.429zM987.429 786.286c50.286 0 91.429-41.143 91.429-91.429s-41.143-91.429-91.429-91.429-91.429 41.143-91.429 91.429 41.143 91.429 91.429 91.429z"],"width":1170.2857142857142,"tags":["cab","taxi"],"defaultCode":61882,"grid":14},{"paths":["M859.429 841.143c0 20-16.571 36.571-36.571 36.571h-264c1.714 36.571 6.286 74.857 6.286 112 0 18.857-15.429 34.286-34.857 34.286h-182.857c-19.429 0-34.857-15.429-34.857-34.286 0-37.143 4.571-75.429 6.286-112h-264c-20 0-36.571-16.571-36.571-36.571 0-9.714 4-18.857 10.857-25.714l229.714-230.286h-130.857c-20 0-36.571-16.571-36.571-36.571 0-9.714 4-18.857 10.857-25.714l229.714-230.286h-112.571c-20 0-36.571-16.571-36.571-36.571 0-9.714 4-18.857 10.857-25.714l219.429-219.429c6.857-6.857 16-10.857 25.714-10.857s18.857 4 25.714 10.857l219.429 219.429c6.857 6.857 10.857 16 10.857 25.714 0 20-16.571 36.571-36.571 36.571h-112.571l229.714 230.286c6.857 6.857 10.857 16 10.857 25.714 0 20-16.571 36.571-36.571 36.571h-130.857l229.714 230.286c6.857 6.857 10.857 16 10.857 25.714z"],"width":877.7142857142857,"tags":["tree"],"defaultCode":61883,"grid":14},{"paths":["M644 691.429c0-16-6.286-22.286-17.143-29.143-73.714-44-159.429-65.714-255.429-65.714-56 0-109.714 7.429-164 19.429-13.143 2.857-24 11.429-24 29.714 0 14.286 10.857 28 28 28 5.143 0 14.286-2.857 21.143-4.571 44.571-9.143 91.429-15.429 138.857-15.429 84 0 163.429 20.571 226.857 58.857 6.857 4 11.429 6.286 18.857 6.286 14.286 0 26.857-11.429 26.857-27.429zM698.857 568.571c0-15.429-5.714-26.286-20-34.857-87.429-52-198.286-80.571-313.143-80.571-73.714 0-124 10.286-173.143 24-18.286 5.143-27.429 17.714-27.429 36.571s15.429 34.286 34.286 34.286c8 0 12.571-2.286 21.143-4.571 40-10.857 88-18.857 143.429-18.857 108.571 0 207.429 28.571 278.857 70.857 6.286 3.429 12.571 7.429 21.714 7.429 19.429 0 34.286-15.429 34.286-34.286zM760.571 426.857c0-21.143-9.143-32-22.857-40-98.857-57.714-234.286-84.571-363.429-84.571-76 0-145.714 8.571-208 26.857-16 4.571-30.857 18.286-30.857 42.286 0 23.429 17.714 41.714 41.143 41.714 8.571 0 16.571-2.857 22.857-4.571 55.429-15.429 115.429-21.143 175.429-21.143 118.857 0 242.286 26.286 321.714 73.714 8 4.571 13.714 6.857 22.857 6.857 21.714 0 41.143-17.143 41.143-41.143zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["spotify"],"defaultCode":61884,"grid":14},{"paths":["M585.143 173.143l-173.143 332.571 13.714 17.714h159.429v237.143h-289.714l-25.143 17.143-81.143 156c-0.571 0-16 16-17.143 17.143h-172v-173.143l173.143-333.143-13.714-17.143h-159.429v-237.143h289.714l25.143-17.143 81.143-156c0.571 0 16-16 17.143-17.143h172v173.143z"],"width":585.1428571428571,"tags":["deviantart"],"defaultCode":61885,"grid":14},{"paths":["M448 784l9.143-137.714-9.143-298.857c-0.571-7.429-6.286-13.714-13.714-13.714-6.857 0-13.143 6.286-13.143 13.714l-8 298.857 8 137.714c0.571 7.429 6.286 13.143 13.143 13.143 7.429 0 13.143-5.714 13.714-13.143zM617.143 767.429l6.286-120.571-6.857-334.857c0-5.714-2.857-10.857-7.429-13.714-2.857-1.714-5.714-2.857-9.143-2.857s-6.286 1.143-9.143 2.857c-4.571 2.857-7.429 8-7.429 13.714l-0.571 3.429-5.714 330.857s0 0.571 6.286 134.857v0.571c0 3.429 1.143 6.857 3.429 9.714 3.429 4 8 6.286 13.143 6.286 4.571 0 8.571-2.286 11.429-5.143 3.429-2.857 5.143-6.857 5.143-11.429zM20 573.143l11.429 73.143-11.429 72c-0.571 2.857-2.286 5.143-5.143 5.143s-4.571-2.286-5.143-5.143l-9.714-72 9.714-73.143c0.571-2.857 2.286-5.143 5.143-5.143s4.571 2.286 5.143 5.143zM69.143 528l14.857 118.286-14.857 116c-0.571 2.857-2.857 5.143-5.714 5.143s-5.143-2.286-5.143-5.714l-13.143-115.429 13.143-118.286c0-2.857 2.286-5.143 5.143-5.143s5.143 2.286 5.714 5.143zM229.143 786.857v0 0zM121.714 506.286l14.286 140-14.286 135.429c0 3.429-2.857 6.286-6.286 6.286s-6.286-2.857-6.857-6.286l-12-135.429 12-140c0.571-4 3.429-6.857 6.857-6.857s6.286 2.857 6.286 6.857zM175.429 502.286l13.143 144-13.143 139.429c-0.571 4.571-4 7.429-8 7.429s-7.429-2.857-7.429-7.429l-12-139.429 12-144c0-4.571 3.429-7.429 7.429-7.429s7.429 2.857 8 7.429zM229.143 512.571l12 133.714-12 140.571c-0.571 5.143-4.571 9.143-9.143 9.143s-8.571-4-8.571-9.143l-11.429-140.571 11.429-133.714c0-4.571 4-8.571 8.571-8.571s8.571 4 9.143 8.571zM448 784v0 0zM282.857 429.143l12 217.143-12 140.571c0 5.714-4.571 10.286-9.714 10.286-5.714 0-9.714-4.571-10.286-10.286l-10.286-140.571 10.286-217.143c0.571-5.714 4.571-10.286 10.286-10.286 5.143 0 9.714 4.571 9.714 10.286zM336.571 380l10.857 267.429-10.857 139.429c0 6.286-5.143 10.857-10.857 10.857-6.286 0-10.857-4.571-11.429-10.857l-9.143-139.429 9.143-267.429c0.571-6.286 5.143-10.857 11.429-10.857 5.714 0 10.857 4.571 10.857 10.857zM392.571 357.143l10.286 289.143-10.286 138.286c-0.571 6.857-5.714 12-12.571 12-6.286 0-11.429-5.143-12-12l-9.143-138.286 9.143-289.143c0-6.857 5.714-12.571 12-12.571 6.857 0 12 5.714 12.571 12.571zM616.571 781.143v0 0 0 0 0 0zM503.429 354.857l8.571 291.429-8.571 136.571c0 8-6.286 14.286-14.286 14.286s-13.714-6.286-14.286-14.286l-8-136.571 8-291.429c0-8 6.286-14.286 14.286-14.286s14.286 6.286 14.286 14.286zM560 365.714l8 281.143-8 134.857c0 8.571-6.857 15.429-15.429 15.429s-15.429-6.857-16-15.429l-6.857-134.857 6.857-281.143c0.571-9.143 7.429-16 16-16s14.857 6.857 15.429 16zM681.143 646.857l-8 132c0 9.714-8 17.714-17.714 17.714s-17.714-8-18.286-17.714l-3.429-65.143-3.429-66.857 6.857-363.429v-1.714c0.571-5.143 2.857-10.286 6.857-13.714 2.857-2.286 6.857-4 11.429-4 2.857 0 6.286 1.143 8.571 2.857 5.143 2.857 8.571 8.571 9.143 14.857zM1316.571 636c0 89.143-72.571 161.143-161.714 161.143h-449.143c-9.714-1.143-17.714-8.571-17.714-18.857v-513.714c0-9.714 3.429-14.286 16-18.857 31.429-12.571 66.857-19.429 103.429-19.429 149.143 0 271.429 114.286 284.571 260 19.429-8 40.571-12.571 62.857-12.571 89.143 0 161.714 72.571 161.714 162.286z"],"width":1316.5714285714284,"tags":["soundcloud"],"defaultCode":61886,"grid":14},{"paths":["M438.857 438.857c172 0 344.571-30.857 438.857-97.143v97.143c0 80.571-196.571 146.286-438.857 146.286s-438.857-65.714-438.857-146.286v-97.143c94.286 66.286 266.857 97.143 438.857 97.143zM438.857 877.714c172 0 344.571-30.857 438.857-97.143v97.143c0 80.571-196.571 146.286-438.857 146.286s-438.857-65.714-438.857-146.286v-97.143c94.286 66.286 266.857 97.143 438.857 97.143zM438.857 658.286c172 0 344.571-30.857 438.857-97.143v97.143c0 80.571-196.571 146.286-438.857 146.286s-438.857-65.714-438.857-146.286v-97.143c94.286 66.286 266.857 97.143 438.857 97.143zM438.857 0c242.286 0 438.857 65.714 438.857 146.286v73.143c0 80.571-196.571 146.286-438.857 146.286s-438.857-65.714-438.857-146.286v-73.143c0-80.571 196.571-146.286 438.857-146.286z"],"width":877.7142857142857,"tags":["database"],"defaultCode":61888,"grid":14},{"paths":["M838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-438.857v877.714h731.429zM510.857 612c14.286 11.429 30.286 21.714 48 32 24-2.857 46.286-4 66.857-4 38.286 0 86.857 4.571 101.143 28 4 5.714 7.429 16 1.143 29.714-0.571 0.571-1.143 1.714-1.714 2.286v0.571c-1.714 10.286-10.286 21.714-40.571 21.714-36.571 0-92-16.571-140-41.714-79.429 8.571-162.857 26.286-224 47.429-58.857 100.571-104 149.714-138.286 149.714-5.714 0-10.857-1.143-16-4l-13.714-6.857c-1.714-0.571-2.286-1.714-3.429-2.857-2.857-2.857-5.143-9.143-3.429-20.571 5.714-26.286 36.571-70.286 107.429-107.429 4.571-2.857 10.286-1.143 13.143 3.429 0.571 0.571 1.143 1.714 1.143 2.286 17.714-29.143 38.286-66.286 61.143-112.571 25.714-51.429 45.714-101.714 59.429-149.714-18.286-62.286-24-126.286-13.714-164 4-14.286 12.571-22.857 24-22.857h12.571c8.571 0 15.429 2.857 20 8.571 6.857 8 8.571 20.571 5.143 38.857-0.571 1.714-1.143 3.429-2.286 4.571 0.571 1.714 0.571 2.857 0.571 4.571v17.143c-0.571 36-1.143 70.286-8 109.714 20 60 49.714 108.571 83.429 136zM181.714 846.857c17.143-8 41.714-32.571 78.286-90.286-42.857 33.143-69.714 70.857-78.286 90.286zM409.143 321.143c-5.714 16-5.714 43.429-1.143 75.429 1.714-9.143 2.857-17.714 4-25.143 1.143-9.714 2.857-17.714 4-24.571 0.571-1.714 1.143-2.857 2.286-4.571-0.571-0.571-0.571-1.714-1.143-2.857-0.571-10.286-4-16.571-7.429-20.571 0 1.143-0.571 1.714-0.571 2.286zM338.286 698.857c50.286-20 106.286-36 162.286-46.286-5.714-4.571-11.429-8.571-16.571-13.143-28-24.571-53.143-58.857-72.571-100.571-10.857 34.857-26.857 72-47.429 112.571-8.571 16-17.143 32-25.714 47.429zM707.429 689.714c-2.857-2.857-17.714-13.714-80-13.714 28 10.286 53.714 16 70.857 16 5.143 0 8 0 10.286-0.571 0-0.571-0.571-1.143-1.143-1.714z"],"width":877.7142857142857,"tags":["file-pdf-o"],"defaultCode":61889,"grid":14},{"paths":["M838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-438.857v877.714h731.429zM133.143 438.857v61.143h40l93.714 377.714h90.857l73.143-277.143c2.857-8.571 4.571-17.143 5.714-26.286 0.571-4.571 1.143-9.143 1.143-13.714h2.286l1.714 13.714c1.714 8 2.286 17.143 5.143 26.286l73.143 277.143h90.857l93.714-377.714h40v-61.143h-171.429v61.143h51.429l-56.571 250.286c-2.286 9.143-3.429 18.857-4 26.286l-1.143 12h-2.286c0-3.429-1.143-8-1.714-12-1.714-7.429-2.857-17.143-5.143-26.286l-82.286-311.429h-65.143l-82.286 311.429c-2.286 9.143-2.857 18.857-4.571 26.286l-2.286 12h-2.286l-1.143-12c-0.571-7.429-1.714-17.143-4-26.286l-56.571-250.286h51.429v-61.143h-171.429z"],"width":877.7142857142857,"tags":["file-word-o"],"defaultCode":61890,"grid":14},{"paths":["M838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-438.857v877.714h731.429zM245.143 817.143v60.571h160.571v-60.571h-42.857l58.857-92c6.857-10.857 10.286-19.429 12-19.429h1.143c0.571 2.286 1.714 4 2.857 5.714 2.286 4.571 5.714 8 9.714 13.714l61.143 92h-43.429v60.571h166.286v-60.571h-38.857l-109.714-156 111.429-161.143h38.286v-61.143h-159.429v61.143h42.286l-58.857 90.857c-6.857 10.857-12 19.429-12 18.857h-1.143c-0.571-2.286-1.714-4-2.857-5.714-2.286-4-5.143-8-9.714-13.143l-60.571-90.857h43.429v-61.143h-165.714v61.143h38.857l108 155.429-110.857 161.714h-38.857z"],"width":877.7142857142857,"tags":["file-excel-o"],"defaultCode":61891,"grid":14},{"paths":["M838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-438.857v877.714h731.429zM237.714 817.143v60.571h186.857v-60.571h-53.143v-95.429h78.286c24.571 0 46.857-1.143 67.429-8.571 51.429-17.714 83.429-70.857 83.429-133.143s-30.857-110.286-78.286-130.286c-21.714-8.571-48-10.857-74.286-10.857h-210.286v61.143h52.571v317.143h-52.571zM439.429 657.143h-68v-153.143h68.571c20 0 35.429 3.429 47.429 10.286 20.571 12 32 35.429 32 65.714 0 32-11.429 56.571-35.429 68.571-12 5.714-26.857 8.571-44.571 8.571z"],"width":877.7142857142857,"tags":["file-powerpoint-o"],"defaultCode":61892,"grid":14},{"paths":["M838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-438.857v877.714h731.429zM731.429 694.857v182.857h-585.143v-109.714l109.714-109.714 73.143 73.143 219.429-219.429zM256 585.143c-60.571 0-109.714-49.143-109.714-109.714s49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714-49.143 109.714-109.714 109.714z"],"width":877.7142857142857,"tags":["file-image-o","file-photo-o","file-picture-o"],"defaultCode":61893,"grid":14},{"paths":["M365.714 219.429v-73.143h-73.143v73.143h73.143zM438.857 292.571v-73.143h-73.143v73.143h73.143zM365.714 365.714v-73.143h-73.143v73.143h73.143zM438.857 438.857v-73.143h-73.143v73.143h73.143zM838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-73.143v73.143h-73.143v-73.143h-292.571v877.714h731.429zM446.286 538.857c48.571 164 61.143 199.429 61.143 199.429 2.857 9.714 4.571 19.429 4.571 29.714 0 63.429-61.714 109.714-146.286 109.714s-146.286-46.286-146.286-109.714c0-10.286 1.714-20 4.571-29.714 0 0 12-35.429 68.571-226.286v-73.143h73.143v73.143h45.143c16.571 0 30.857 10.857 35.429 26.857zM365.714 804.571c40.571 0 73.143-16.571 73.143-36.571s-32.571-36.571-73.143-36.571-73.143 16.571-73.143 36.571 32.571 36.571 73.143 36.571z"],"width":877.7142857142857,"tags":["file-archive-o","file-zip-o"],"defaultCode":61894,"grid":14},{"paths":["M838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-438.857v877.714h731.429zM354.286 485.714c6.857 2.857 11.429 9.714 11.429 17.143v310.857c0 7.429-4.571 14.286-11.429 17.143-2.286 0.571-4.571 1.143-6.857 1.143-4.571 0-9.143-1.714-13.143-5.143l-94.857-95.429h-74.857c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h74.857l94.857-95.429c5.714-5.143 13.143-6.857 20-4zM592.571 879.429c10.857 0 21.143-4.571 28.571-13.714 47.429-58.286 73.714-132 73.714-207.429s-26.286-149.143-73.714-207.429c-12.571-16-36-18.286-51.429-5.714-16 13.143-18.286 36-5.143 52 37.143 45.714 57.143 101.714 57.143 161.143s-20 115.429-57.143 161.143c-13.143 16-10.857 38.857 5.143 51.429 6.857 5.714 14.857 8.571 22.857 8.571zM472 794.857c9.714 0 19.429-4 26.857-11.429 32-34.286 49.714-78.286 49.714-125.143s-17.714-90.857-49.714-125.143c-13.714-14.857-37.143-15.429-52-1.714-14.286 13.714-15.429 37.143-1.143 52 18.857 20.571 29.714 46.857 29.714 74.857s-10.857 54.286-29.714 74.857c-14.286 14.857-13.143 38.286 1.143 52 7.429 6.286 16.571 9.714 25.143 9.714z"],"width":877.7142857142857,"tags":["file-audio-o","file-sound-o"],"defaultCode":61895,"grid":14},{"paths":["M838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-438.857v877.714h731.429zM438.857 438.857c40 0 73.143 33.143 73.143 73.143v219.429c0 40-33.143 73.143-73.143 73.143h-219.429c-40 0-73.143-33.143-73.143-73.143v-219.429c0-40 33.143-73.143 73.143-73.143h219.429zM720 440c6.857 2.857 11.429 9.714 11.429 17.143v329.143c0 7.429-4.571 14.286-11.429 17.143-2.286 0.571-4.571 1.143-6.857 1.143-4.571 0-9.714-1.714-13.143-5.143l-151.429-152v-51.429l151.429-152c3.429-3.429 8.571-5.143 13.143-5.143 2.286 0 4.571 0.571 6.857 1.143z"],"width":877.7142857142857,"tags":["file-movie-o","file-video-o"],"defaultCode":61896,"grid":14},{"paths":["M838.857 217.143c21.143 21.143 38.857 63.429 38.857 93.714v658.286c0 30.286-24.571 54.857-54.857 54.857h-768c-30.286 0-54.857-24.571-54.857-54.857v-914.286c0-30.286 24.571-54.857 54.857-54.857h512c30.286 0 72.571 17.714 93.714 38.857zM585.143 77.714v214.857h214.857c-3.429-9.714-8.571-19.429-12.571-23.429l-178.857-178.857c-4-4-13.714-9.143-23.429-12.571zM804.571 950.857v-585.143h-237.714c-30.286 0-54.857-24.571-54.857-54.857v-237.714h-438.857v877.714h731.429zM274.286 438.857c6.286-8 17.714-9.714 25.714-3.429l29.143 21.714c8 6.286 9.714 17.714 3.429 25.714l-104 138.857 104 138.857c6.286 8 4.571 19.429-3.429 25.714l-29.143 21.714c-8 6.286-19.429 4.571-25.714-3.429l-129.143-172c-4.571-6.286-4.571-15.429 0-21.714zM732.571 610.857c4.571 6.286 4.571 15.429 0 21.714l-129.143 172c-6.286 8-17.714 9.714-25.714 3.429l-29.143-21.714c-8-6.286-9.714-17.714-3.429-25.714l104-138.857-104-138.857c-6.286-8-4.571-19.429 3.429-25.714l29.143-21.714c8-6.286 19.429-4.571 25.714 3.429zM378.286 874.286c-10.286-1.714-16.571-11.429-14.857-21.143l78.857-474.857c1.714-10.286 11.429-16.571 21.143-14.857l36 5.714c10.286 1.714 16.571 11.429 14.857 21.143l-78.857 474.857c-1.714 10.286-11.429 16.571-21.143 14.857z"],"width":877.7142857142857,"tags":["file-code-o"],"defaultCode":61897,"grid":14},{"paths":["M855.429 472.571v113.143c-40 9.143-80 13.143-113.143 13.143-80 168-223.429 312-271.429 338.857-30.286 17.143-58.857 18.286-92.571-1.714-58.857-35.429-281.714-218.286-356-793.143h161.714c40.571 345.143 140 522.286 249.143 654.857 60.571-60.571 118.857-141.143 164-232-108-54.857-173.714-175.429-173.714-316 0-142.286 81.714-249.714 221.714-249.714 136 0 210.286 84.571 210.286 230.286 0 54.286-11.429 116-33.143 163.429 0 0-100.571 20-137.714-44.571 7.429-24.571 17.714-66.857 17.714-105.143 0-68-24.571-101.143-61.714-101.143-39.429 0-66.857 37.143-66.857 108.571 0 145.714 92.571 229.143 212.571 229.143 21.143 0 45.143-2.286 69.143-8z"],"width":877.7142857142857,"tags":["vine"],"defaultCode":61898,"grid":14},{"paths":["M123.429 668l344.571 229.714v-205.143l-190.857-127.429zM88 585.714l110.286-73.714-110.286-73.714v147.429zM556 897.714l344.571-229.714-153.714-102.857-190.857 127.429v205.143zM512 616l155.429-104-155.429-104-155.429 104zM277.143 458.857l190.857-127.429v-205.143l-344.571 229.714zM825.714 512l110.286 73.714v-147.429zM746.857 458.857l153.714-102.857-344.571-229.714v205.143zM1024 356v312c0 14.286-7.429 28.571-19.429 36.571l-468 312c-7.429 4.571-16 7.429-24.571 7.429s-17.143-2.857-24.571-7.429l-468-312c-12-8-19.429-22.286-19.429-36.571v-312c0-14.286 7.429-28.571 19.429-36.571l468-312c7.429-4.571 16-7.429 24.571-7.429s17.143 2.857 24.571 7.429l468 312c12 8 19.429 22.286 19.429 36.571z"],"width":1024,"tags":["codepen"],"defaultCode":61899,"grid":14},{"paths":["M1028.571 441.143c82.857 34.286 141.714 115.429 141.714 209.714 0 125.143-103.429 226.857-230.286 226.857-4.571 0-8.571-0.571-12.571-0.571h-695.429c-128-7.429-232-105.143-232-232 0-85.143 46.286-159.429 115.429-200-4.571-14.857-6.857-30.286-6.857-46.857 0-87.429 71.429-158.286 160.571-158.286 36.571 0 70.857 12.571 98.286 33.143 56-115.429 174.857-195.429 313.714-195.429 192.571 0 348 153.714 348 342.857 0 6.857-0.571 13.714-0.571 20.571zM267.429 593.143c0 96.571 76 150.857 166.857 150.857 56 0 96.571-17.714 137.143-56.571-16.571-20.571-34.857-40.571-52-61.143-23.429 22.857-49.143 37.143-82.286 37.143-40.571 0-75.429-26.857-75.429-69.143 0-41.714 34.857-69.143 74.286-69.143 125.714 0 152.571 219.429 335.429 219.429 89.143 0 164.571-56 164.571-149.714 0-94.857-76-150.286-166.286-150.286-56 0-97.714 16-137.714 55.429 18.286 20 35.429 41.143 53.143 61.714 22.857-22.286 48.571-36.571 81.143-36.571 37.714 0 75.429 26.857 75.429 66.857 0 44-32 72-74.857 72-121.714 0-154.286-219.429-332.571-219.429-88.571 0-166.857 54.286-166.857 148.571z"],"width":1170.2857142857142,"tags":["jsfiddle"],"defaultCode":61900,"grid":14},{"paths":["M512 0c282.857 0 512 229.143 512 512s-229.143 512-512 512-512-229.143-512-512 229.143-512 512-512zM512 73.143c-74.286 0-144.571 18.857-206.286 51.429l110.857 110.857c30.286-10.286 62.286-16 95.429-16 33.714 0 65.143 5.714 95.429 16l110.857-110.857c-61.714-32.571-132-51.429-206.286-51.429zM124.571 718.286l110.857-110.857c-10.286-30.286-16-62.286-16-95.429 0-33.714 5.714-65.143 16-95.429l-110.857-110.857c-32.571 61.714-51.429 132-51.429 206.286s18.857 144.571 51.429 206.286zM512 950.857c74.286 0 144.571-18.857 206.286-51.429l-110.857-110.857c-30.286 10.286-61.714 16-95.429 16-33.143 0-65.143-5.714-95.429-16l-110.857 110.857c61.714 32.571 132 51.429 206.286 51.429zM512 731.429c121.143 0 219.429-98.286 219.429-219.429s-98.286-219.429-219.429-219.429-219.429 98.286-219.429 219.429 98.286 219.429 219.429 219.429zM788.571 607.429l110.857 110.857c32.571-61.714 51.429-132 51.429-206.286s-18.857-144.571-51.429-206.286l-110.857 110.857c10.286 30.286 16 62.286 16 95.429s-5.714 65.143-16 95.429z"],"width":1024,"tags":["life-bouy","life-buoy","life-ring","life-saver","support"],"defaultCode":61901,"grid":14},{"paths":["M1005.714 512c0 272.571-221.143 493.714-493.714 493.714s-493.714-221.143-493.714-493.714c0-248 182.857-453.143 420.571-488.571v130.286c-166.857 33.714-292.571 181.714-292.571 358.286 0 201.714 164 365.714 365.714 365.714s365.714-164 365.714-365.714c0-176.571-125.714-324.571-292.571-358.286v-130.286c237.714 35.429 420.571 240.571 420.571 488.571z"],"width":1024,"tags":["circle-o-notch"],"defaultCode":61902,"grid":14},{"paths":["M10.857 499.429c5.714-163.429 89.143-314.286 240.571-413.714 0.571 0 4-1.143 2.286 1.714-12 11.429-229.714 268-29.143 467.429 102.857 102.286 185.714 5.143 185.714 5.143 79.429-103.429-1.143-260-1.143-260-20.571-51.429-94.286-82.857-94.286-82.857l59.429-65.714c50.286 21.714 89.143 80 89.143 80 1.714-61.143-45.143-126.857-45.143-126.857l92-104.571 91.429 103.429c-42.286 59.429-45.143 129.143-45.143 129.143 28.571-47.429 89.714-81.143 89.714-81.143l58.857 65.714c-56.571 18.286-93.714 82.286-93.714 82.286-32.571 58.857-56 184.571 1.143 262.857 66.857 92 181.143-5.714 181.143-5.714 212-189.714-21.714-464.571-21.714-464.571-12.571-11.429 1.714-5.714 1.714-5.714 103.429 75.429 236.571 174.286 240 422.857 4 300.571-206.286 514.857-500.571 514.857-287.429 0-510.857-240-502.286-524.571z"],"width":1019.9771428571428,"tags":["ra","rebel","resistance"],"defaultCode":61904,"grid":14},{"paths":["M499.429 936v37.714c-161.143-4.571-302.286-91.429-381.714-220l33.143-19.429c12 20 26.286 38.857 41.714 56.571l37.143-32.571c53.714 61.143 126.857 104.571 210.286 121.143l-9.714 49.143c22.286 4 45.714 6.857 69.143 7.429zM157.714 633.143l-47.429 16c8 22.286 17.143 43.429 28 64l-32.571 18.857c-35.429-65.143-56-140.571-56-220s20.571-154.857 56-220l32.571 18.857c-10.857 20-20.571 41.714-28 64l46.857 16c-13.143 37.714-20 78.857-20 121.143s7.429 83.429 20.571 121.143zM873.143 734.286l33.143 19.429c-79.429 128.571-220.571 215.429-381.714 220v-37.714c23.429-0.571 46.857-3.429 69.143-7.429l-9.714-49.143c83.429-16.571 156.571-60 210.286-121.143l37.143 32.571c15.429-17.714 29.714-36.571 41.714-56.571zM786.857 417.714l-133.143 45.714c5.143 15.429 8 31.429 8 48.571s-2.857 33.143-8 48.571l132.571 45.714c-12 36-31.429 68.571-56 96.571l-105.714-92.571c-21.143 24.571-50.286 41.714-84 48.571l27.429 137.714c-17.714 3.429-36.571 5.714-56 5.714s-38.286-2.286-56-5.714l27.429-137.714c-33.714-6.857-62.857-24-84-48.571l-105.714 92.571c-24.571-28-44-60.571-56-96.571l132.571-45.714c-5.143-15.429-8-31.429-8-48.571s2.857-33.143 8-48.571l-133.143-45.714c12.571-36 32-68.571 56.571-96.571l105.714 92.571c21.143-24.571 50.286-42.286 84-49.143l-27.429-137.143c17.714-4 36.571-5.714 56-5.714s38.286 1.714 56 5.714l-27.429 137.143c33.714 6.857 62.857 24.571 84 49.143l105.714-92.571c24.571 28 44 60.571 56.571 96.571zM499.429 50.286v37.714c-23.429 0.571-46.857 2.857-69.143 7.429l9.714 49.143c-83.429 16-156.571 59.429-210.286 120.571l-37.143-32c-15.429 17.143-29.143 36-41.714 56l-32.571-18.857c79.429-129.143 220-215.429 381.143-220v0zM974.286 512c0 79.429-20.571 154.857-56 220l-32.571-18.857c10.857-20.571 20-41.714 28-64l-47.429-16c13.143-37.714 20.571-78.857 20.571-121.143s-6.857-83.429-20-121.143l46.857-16c-7.429-22.286-17.143-44-28-64l32.571-18.857c35.429 65.143 56 140.571 56 220zM905.714 270.286l-32.571 18.857c-12.571-20-26.286-38.857-41.714-56l-37.143 32c-53.714-61.143-126.857-104.571-210.286-120.571l9.714-49.143c-22.286-4.571-45.714-6.857-69.143-7.429v-37.714c161.143 4.571 301.714 90.857 381.143 220zM998.857 512c0-268.571-218.286-486.857-486.857-486.857v0c-268.571 0-486.857 218.286-486.857 486.857s218.286 486.857 486.857 486.857 486.857-218.286 486.857-486.857zM1024 512c0 282.857-229.143 512-512 512s-512-229.143-512-512 229.143-512 512-512v0c282.857 0 512 229.143 512 512z"],"width":1024,"tags":["empire","ge"],"defaultCode":61905,"grid":14},{"paths":["M332.571 747.429c0 30.857-28 37.714-53.143 37.714-24.571 0-61.143-4-61.143-36 0-31.429 30.857-36.571 56-36.571 24 0 58.286 4 58.286 34.857zM312 481.143c0 28.571-11.429 48.571-42.286 48.571-31.429 0-44-18.286-44-48s11.429-51.429 44-51.429c29.143 0 42.286 24 42.286 50.857zM406.857 438.286v-71.429c-24.571 9.143-50.857 16.571-77.143 16.571-18.857-10.857-40.571-16.571-62.857-16.571-65.143 0-116.571 48-116.571 114.286 0 35.429 23.429 84.571 58.857 96.571v1.714c-18.286 8-21.714 30.286-21.714 48.571 0 18.857 6.857 34.286 23.429 44v1.714c-38.857 12.571-64.571 37.143-64.571 79.429 0 72.571 69.143 93.143 129.714 93.143 73.143 0 128-26.857 128-107.429 0-57.143-52-74.286-99.429-82.857-16-2.857-43.429-14.286-43.429-34.286 0-18.857 10.286-26.857 28-29.714 58.286-11.429 95.429-56.571 95.429-116.571 0-10.286-2.286-20-5.714-29.714 9.143-2.286 18.857-4.571 28-7.429zM440.571 677.714h78.286c-1.143-15.429-1.143-31.429-1.143-46.857v-221.143c0-13.143 0-26.286 1.143-39.429h-78.286c1.714 13.143 1.714 27.429 1.714 40.571v224c0 14.286 0 28.571-1.714 42.857zM731.429 668.571v-69.143c-11.429 8-25.143 12-38.857 12-25.714 0-30.286-25.714-30.286-46.857v-128.571h29.714c10.286 0 20 1.143 30.286 1.143v-66.857h-60c0-19.429-1.143-38.857 1.714-58.286h-80c1.714 10.286 2.286 20.571 2.286 31.429v26.857h-34.286v66.857c6.857-0.571 13.714-1.714 21.143-1.714 4 0 8.571 0.571 13.143 0.571v1.143h-1.143v124c0 61.714 9.143 121.143 84.571 121.143 21.143 0 42.857-3.429 61.714-13.714zM528 265.143c0-26.857-20-52-48-52s-48.571 24.571-48.571 52c0 26.857 21.143 50.857 48.571 50.857s48-24.571 48-50.857zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["git-square"],"defaultCode":61906,"grid":14},{"paths":["M340 865.143c0-50.286-55.429-57.143-94.286-57.143-40.571 0-90.286 8.571-90.286 59.429 0 51.429 58.857 57.714 98.286 57.714 41.714 0 86.286-10.286 86.286-60zM306.286 433.714c0-42.857-20.571-81.714-68-81.714-52.571 0-70.857 34.857-70.857 82.857 0 47.429 20.571 77.143 70.857 77.143 49.714 0 68-32 68-78.286zM460 248.571v115.429c-14.857 5.143-29.714 9.143-45.143 12.571 5.714 15.429 9.143 31.429 9.143 48 0 96.571-59.429 170.286-154.286 188-28.571 5.714-45.143 17.714-45.143 48.571 0 87.429 230.857 28 230.857 189.143 0 130.857-88.571 173.714-207.429 173.714-97.714 0-209.143-32.571-209.143-150.286 0-68.571 41.714-108 104-128.571v-2.286c-26.286-16-38.286-41.143-38.286-72 0-29.143 6.286-65.143 36-78.286v-2.286c-57.714-19.429-95.429-98.857-95.429-156.571 0-106.857 82.857-185.143 188.571-185.143 35.429 0 70.857 9.143 101.714 26.857 42.857 0 85.143-11.429 124.571-26.857zM641.714 752h-126.857c2.286-25.714 2.286-50.857 2.286-76.571v-348c0-24.571 0.571-49.143-2.286-73.143h126.857c-2.857 23.429-2.286 47.429-2.286 70.857v350.286c0 25.714 0 50.857 2.286 76.571zM985.143 625.143v112c-30.286 16.571-65.143 22.286-99.429 22.286-122.286 0-136.571-96.571-136.571-196v-200.571h1.143v-2.286c-7.429 0-14.286-1.143-21.143-1.143-11.429 0-22.857 1.714-33.714 3.429v-108.571h54.857v-43.429c0-17.143-0.571-34.286-3.429-50.857h129.714c-4.571 31.429-3.429 62.857-3.429 94.286h97.714v108.571c-16.571 0-33.143-2.286-49.143-2.286h-48.571v208.571c0 33.714 7.429 74.857 49.714 74.857 22.286 0 44-6.286 62.286-18.857zM656 84c0 42.857-33.143 82.857-77.143 82.857-45.143 0-78.857-39.429-78.857-82.857 0-44 33.143-84 78.857-84 45.143 0 77.143 41.143 77.143 84z"],"width":1024,"tags":["git"],"defaultCode":61907,"grid":14},{"paths":["M462.286 573.714l152-285.143h-64l-89.714 178.286s-13.714 27.429-25.143 52.571c-10.857-26.286-24-52.571-24-52.571l-88.571-178.286h-68.571l150.286 281.714v185.143h57.714v-181.714zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["hacker-news","y-combinator-square","yc-square"],"defaultCode":61908,"grid":14},{"paths":["M481.143 326.857c0 60.571-49.714 110.286-110.286 110.286-23.429 0-45.143-7.429-63.429-20-20.571 22.286-43.429 50.286-65.714 83.429-93.143 140-132.571 305.143-115.429 490.857 1.143 16.571-10.857 30.857-26.857 32.571h-2.857c-14.857 0-28-11.429-29.714-26.857-22.286-250.286 57.143-427.429 127.429-532 25.714-38.286 51.429-69.143 75.429-94.286-6.286-13.714-9.143-28.571-9.143-44 0-61.143 49.143-110.286 110.286-110.286 60.571 0 110.286 49.143 110.286 110.286zM698.857 333.143c0 183.429-149.143 332.571-333.143 332.571-25.143 0-50.286-2.857-74.857-8-16-4-25.714-20-22.286-36 4-15.429 19.429-25.714 35.429-22.286 20 5.143 41.143 7.429 61.714 7.429 150.857 0 273.714-122.857 273.714-273.714s-122.857-273.714-273.714-273.714-273.714 122.857-273.714 273.714c0 44 10.286 85.714 29.714 124.571 7.429 14.857 1.714 32.571-12.571 40-14.857 7.429-32.571 1.714-40-13.143-24-46.286-36.571-98.857-36.571-151.429 0-184 149.714-333.143 333.143-333.143 184 0 333.143 149.143 333.143 333.143z"],"width":731.4285714285713,"tags":["tencent-weibo"],"defaultCode":61909,"grid":14},{"paths":["M154.286 460.571c-4-9.714-4.571-19.429-4.571-29.714 0-16 10.286-41.714 20-53.714-0.571-14.857 5.714-45.143 17.143-54.857 0-105.714 81.714-238.857 177.143-284.571 58.857-28 120.571-37.714 185.143-37.714 50.286 0 105.143 12 152 31.429 134.286 56.571 164.571 161.714 193.143 296l0.571 2.857c16.571 25.143 31.429 54.857 31.429 85.714 0 15.429-10.286 30.857-10.286 44.571 0 1.143 3.429 5.714 4 6.857 49.143 72.571 93.714 151.429 93.714 241.714 0 20-10.857 89.714-42.857 89.714-22.286 0-46.857-54.286-54.857-69.143-0.571-0.571-1.143-0.571-1.714-0.571l-2.857 2.286c-18.286 47.429-38.286 92-75.429 127.429 32.571 31.429 85.143 28.571 94.857 82.857-2.857 6.286-1.714 13.143-6.286 19.429-32.571 49.143-120 55.429-172.571 55.429-69.714 0-126.286-18.286-192-37.714-13.714-4-34.286-1.714-49.143-3.429-34.857 38.286-120 48.571-169.143 48.571-43.429 0-211.429-2.857-211.429-77.143 0-32 6.857-41.143 29.143-61.714 17.714-3.429 30.857-13.143 51.429-14.286 2.857 0 5.143-0.571 8-1.143 0.571-0.571 1.143-0.571 1.143-2.286l-1.143-1.714c-39.429-9.143-94.857-108.571-103.429-149.714l-2.857-1.714c-4 0-5.714 8.571-6.857 11.429-12.571 29.143-42.286 60.571-75.429 64h-0.571c-4.571 0-2.857-4.571-6.286-5.714-8-18.857-13.143-36-13.143-57.143 0-114.286 54.857-198.857 144-266.286z"],"width":1024,"tags":["qq"],"defaultCode":61910,"grid":14},{"paths":["M331.429 263.429c0-31.429-20.571-52-52-52-30.857 0-62.286 20.571-62.286 52 0 30.857 31.429 51.429 62.286 51.429 31.429 0 52-20.571 52-51.429zM756 553.143c0-20.571-20.571-41.143-52-41.143-20.571 0-41.143 20.571-41.143 41.143 0 21.143 20.571 41.714 41.143 41.714 31.429 0 52-20.571 52-41.714zM621.143 263.429c0-31.429-20.571-52-51.429-52-31.429 0-62.286 20.571-62.286 52 0 30.857 30.857 51.429 62.286 51.429 30.857 0 51.429-20.571 51.429-51.429zM984 553.143c0-20.571-21.143-41.143-52-41.143-20.571 0-41.143 20.571-41.143 41.143 0 21.143 20.571 41.714 41.143 41.714 30.857 0 52-20.571 52-41.714zM832 326.286c-13.143-1.714-26.286-2.286-40-2.286-196.571 0-352 146.857-352 327.429 0 30.286 4.571 59.429 13.143 86.857-13.143 1.143-25.714 1.714-38.857 1.714-52 0-93.143-10.286-145.143-20.571l-144.571 72.571 41.143-124.571c-103.429-72.571-165.714-166.286-165.714-280 0-197.143 186.286-352 414.286-352 203.429 0 382.286 124 417.714 290.857zM1170.286 646.857c0 93.143-61.714 176-145.143 238.286l31.429 103.429-113.714-62.286c-41.714 10.286-83.429 21.143-124.571 21.143-197.143 0-352-134.857-352-300.571s154.857-300.571 352-300.571c186.286 0 352 134.857 352 300.571z"],"width":1170.2857142857142,"tags":["wechat","weixin"],"defaultCode":61911,"grid":14},{"paths":["M1008 6.286c12 8.571 17.714 22.286 15.429 36.571l-146.286 877.714c-1.714 10.857-8.571 20-18.286 25.714-5.143 2.857-11.429 4.571-17.714 4.571-4.571 0-9.143-1.143-13.714-2.857l-258.857-105.714-138.286 168.571c-6.857 8.571-17.143 13.143-28 13.143-4 0-8.571-0.571-12.571-2.286-14.286-5.143-24-18.857-24-34.286v-199.429l493.714-605.143-610.857 528.571-225.714-92.571c-13.143-5.143-21.714-17.143-22.857-31.429-0.571-13.714 6.286-26.857 18.286-33.714l950.857-548.571c5.714-3.429 12-5.143 18.286-5.143 7.429 0 14.857 2.286 20.571 6.286z"],"width":1025.1702857142857,"tags":["paper-plane","send"],"defaultCode":61912,"grid":14},{"paths":["M1008 6.286c12 8.571 17.714 22.286 15.429 36.571l-146.286 877.714c-1.714 10.857-8.571 20-18.286 25.714-5.143 2.857-11.429 4.571-17.714 4.571-4.571 0-9.143-1.143-13.714-2.857l-301.143-122.857-170.286 186.857c-6.857 8-16.571 12-26.857 12-4.571 0-9.143-0.571-13.143-2.286-14.286-5.714-23.429-19.429-23.429-34.286v-258.286l-269.714-110.286c-13.143-5.143-21.714-17.143-22.857-31.429-1.143-13.714 6.286-26.857 18.286-33.714l950.857-548.571c12-7.429 27.429-6.857 38.857 1.143zM812.571 862.857l126.286-756-819.429 472.571 192 78.286 493.143-365.143-273.143 455.429z"],"width":1024.5851428571427,"tags":["paper-plane-o","send-o"],"defaultCode":61913,"grid":14},{"paths":["M877.714 512c0 241.714-197.143 438.857-438.857 438.857-130.857 0-254.286-57.714-337.714-158.286-5.714-7.429-5.143-18.286 1.143-24.571l78.286-78.857c4-3.429 9.143-5.143 14.286-5.143 5.143 0.571 10.286 2.857 13.143 6.857 56 72.571 140 113.714 230.857 113.714 161.143 0 292.571-131.429 292.571-292.571s-131.429-292.571-292.571-292.571c-74.857 0-145.714 28.571-198.857 78.286l78.286 78.857c10.857 10.286 13.714 26.286 8 39.429-5.714 13.714-18.857 22.857-33.714 22.857h-256c-20 0-36.571-16.571-36.571-36.571v-256c0-14.857 9.143-28 22.857-33.714 13.143-5.714 29.143-2.857 39.429 8l74.286 73.714c80.571-76 189.714-121.143 302.286-121.143 241.714 0 438.857 197.143 438.857 438.857zM512 347.429v256c0 10.286-8 18.286-18.286 18.286h-182.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h128v-201.143c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286z"],"width":877.7142857142857,"tags":["history"],"defaultCode":61914,"grid":14},{"paths":["M438.857 146.286c-201.714 0-365.714 164-365.714 365.714s164 365.714 365.714 365.714 365.714-164 365.714-365.714-164-365.714-365.714-365.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857v0c242.286 0 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["circle-thin"],"defaultCode":61915,"grid":14},{"paths":["M961.143 950.857c-50.286 0-101.143-4-152-4-50.286 0-100.571 4-150.857 4-19.429 0-28.571-21.143-28.571-37.714 0-50.857 57.143-29.143 86.857-48.571 18.857-12 18.857-60 18.857-80l-0.571-223.429c0-6.286 0-12-0.571-17.714-9.143-2.857-19.429-2.286-28.571-2.286h-385.714c-9.714 0-20-0.571-29.143 2.286-0.571 5.714-0.571 11.429-0.571 17.714l-0.571 212c0 21.714 0 81.143 21.143 93.714 29.714 18.286 97.143-7.429 97.143 44 0 17.143-8 40-28 40-53.143 0-106.286-4-158.857-4-48.571 0-97.143 4-145.714 4-18.857 0-27.429-21.714-27.429-37.714 0-49.714 52.571-29.143 80.571-48.571 18.286-12.571 18.857-61.714 18.857-81.714l-0.571-32.571v-464.571c0-27.429 4-115.429-21.714-130.857-28.571-17.714-89.714 9.714-89.714-41.714 0-16.571 7.429-40 27.429-40 52.571 0 105.714 4 158.286 4 48 0 96.571-4 144.571-4 20.571 0 28.571 22.857 28.571 40 0 49.143-56.571 25.143-84.571 42.857-20 12-20 70.857-20 91.429l0.571 182.857c0 6.286 0 12 0.571 18.286 7.429 1.714 14.857 1.714 22.286 1.714h399.429c6.857 0 14.286 0 21.714-1.714 0.571-6.286 0.571-12 0.571-18.286l0.571-182.857c0-21.143 0-79.429-20-91.429-28.571-17.143-85.714 5.714-85.714-42.857 0-17.143 8-40 28.571-40 50.286 0 100.571 4 150.857 4 49.143 0 98.286-4 147.429-4 20.571 0 28.571 22.857 28.571 40 0 49.714-58.857 24.571-87.429 42.286-19.429 12.571-20 71.429-20 92l0.571 538.857c0 18.857 1.143 68.571 19.429 80 29.143 18.286 90.857-5.143 90.857 44.571 0 16.571-7.429 40-27.429 40z"],"width":1024,"tags":["header"],"defaultCode":61916,"grid":14},{"paths":["M730.286 108v41.714c0 19.429-15.429 53.143-34.857 53.143-9.714 0-21.143-1.714-30.857 0.571-9.143 2.286-16 8.571-18.286 17.714-2.857 10.857-1.714 24.571-1.714 36.571v658.286c0 19.429-15.429 34.857-34.857 34.857h-61.714c-19.429 0-34.857-15.429-34.857-34.857v-696h-81.714v696c0 19.429-15.429 34.857-34.857 34.857h-61.714c-19.429 0-34.857-15.429-34.857-34.857v-283.429c-55.429-4.571-102.857-16-140-33.714-48-22.286-84.571-56.571-109.714-102.286-24-44-36.571-93.714-36.571-148 0-63.429 17.143-118.286 50.286-163.429 33.714-45.143 73.714-75.429 119.429-90.857 42.857-14.286 133.143-21.143 238.286-21.143h273.714c19.429 0 34.857 15.429 34.857 34.857z"],"width":744.0091428571428,"tags":["paragraph"],"defaultCode":61917,"grid":14},{"paths":["M201.143 804.571v73.143h-201.143v-73.143h201.143zM402.286 731.429c20 0 36.571 16.571 36.571 36.571v146.286c0 20-16.571 36.571-36.571 36.571h-146.286c-20 0-36.571-16.571-36.571-36.571v-146.286c0-20 16.571-36.571 36.571-36.571h146.286zM493.714 512v73.143h-493.714v-73.143h493.714zM128 219.429v73.143h-128v-73.143h128zM877.714 804.571v73.143h-420.571v-73.143h420.571zM329.143 146.286c20 0 36.571 16.571 36.571 36.571v146.286c0 20-16.571 36.571-36.571 36.571h-146.286c-20 0-36.571-16.571-36.571-36.571v-146.286c0-20 16.571-36.571 36.571-36.571h146.286zM694.857 438.857c20 0 36.571 16.571 36.571 36.571v146.286c0 20-16.571 36.571-36.571 36.571h-146.286c-20 0-36.571-16.571-36.571-36.571v-146.286c0-20 16.571-36.571 36.571-36.571h146.286zM877.714 512v73.143h-128v-73.143h128zM877.714 219.429v73.143h-493.714v-73.143h493.714z"],"width":877.7142857142857,"tags":["sliders"],"defaultCode":61918,"grid":14},{"paths":["M694.857 585.143c101.143 0 182.857 81.714 182.857 182.857s-81.714 182.857-182.857 182.857-182.857-81.714-182.857-182.857c0-6.286 0.571-13.143 1.143-19.429l-205.714-102.857c-32.571 30.286-76.571 49.143-124.571 49.143-101.143 0-182.857-81.714-182.857-182.857s81.714-182.857 182.857-182.857c48 0 92 18.857 124.571 49.143l205.714-102.857c-0.571-6.286-1.143-13.143-1.143-19.429 0-101.143 81.714-182.857 182.857-182.857s182.857 81.714 182.857 182.857-81.714 182.857-182.857 182.857c-48 0-92-18.857-124.571-49.143l-205.714 102.857c0.571 6.286 1.143 13.143 1.143 19.429s-0.571 13.143-1.143 19.429l205.714 102.857c32.571-30.286 76.571-49.143 124.571-49.143z"],"width":877.7142857142857,"tags":["share-alt"],"defaultCode":61920,"grid":14},{"paths":["M731.429 682.857c0-67.429-54.857-122.286-121.714-122.286-32 0-61.143 12.571-82.857 33.143l-137.714-68.571c0.571-4.571 1.143-8.571 1.143-13.143s-0.571-8.571-1.143-13.143l137.714-68.571c21.714 20.571 50.857 33.143 82.857 33.143 66.857 0 121.714-54.857 121.714-122.286 0-66.857-54.857-121.714-121.714-121.714-67.429 0-122.286 54.857-122.286 121.714 0 4.571 0.571 8.571 1.143 13.143l-137.714 68.571c-21.714-20-50.857-32.571-82.857-32.571-66.857 0-121.714 54.286-121.714 121.714s54.857 121.714 121.714 121.714c32 0 61.143-12.571 82.857-32.571l137.714 68.571c-0.571 4.571-1.143 8.571-1.143 13.143 0 66.857 54.857 121.714 122.286 121.714 66.857 0 121.714-54.857 121.714-121.714zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["share-alt-square"],"defaultCode":61921,"grid":14},{"paths":["M326.286 336.571c-7.429-18.857-28.571-27.429-47.429-20-82.286 33.143-148.571 99.429-181.714 181.714-7.429 18.857 1.143 40 20 47.429 4.571 1.714 9.143 2.857 13.714 2.857 14.857 0 28-8.571 34.286-22.857 25.714-64 77.143-115.429 141.143-141.143 18.857-8 28-29.143 20-48zM864.571 133.143l26.286 26.286-139.429 138.857 38.857 38.857c14.286 14.286 14.286 37.714 0 52l-36.571 36.571c32 57.714 50.857 124.571 50.857 196 0 222.286-180 402.286-402.286 402.286s-402.286-180-402.286-402.286 180-402.286 402.286-402.286c71.429 0 138.286 18.857 196 50.857l36.571-36.571c14.286-14.286 37.714-14.286 52 0l38.857 38.857zM869.143 101.143c-3.429 3.429-8 5.714-12.571 5.714-5.143 0-9.714-2.286-13.143-5.714l-52-51.429c-6.857-7.429-6.857-18.857 0-26.286 7.429-6.857 18.857-6.857 26.286 0l51.429 52c7.429 6.857 7.429 18.857 0 25.714zM1000.571 232.571c-4 3.429-8.571 5.143-13.143 5.143s-9.143-1.714-13.143-5.143l-51.429-52c-7.429-6.857-7.429-18.857 0-25.714 6.857-7.429 18.857-7.429 25.714 0l52 51.429c6.857 7.429 6.857 18.857 0 26.286zM1024 128c0 10.286-8 18.286-18.286 18.286h-54.857c-10.286 0-18.286-8-18.286-18.286s8-18.286 18.286-18.286h54.857c10.286 0 18.286 8 18.286 18.286zM914.286 18.286v54.857c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286v-54.857c0-10.286 8-18.286 18.286-18.286s18.286 8 18.286 18.286zM1000.571 49.714l-52 51.429c-3.429 3.429-8 5.714-12.571 5.714-5.143 0-9.714-2.286-13.143-5.714-7.429-6.857-7.429-18.857 0-25.714l51.429-52c7.429-6.857 18.857-6.857 26.286 0 6.857 7.429 6.857 18.857 0 26.286z"],"width":1024,"tags":["bomb"],"defaultCode":61922,"grid":14},{"paths":["M348 466.286l164-118.857 164 118.857-62.286 192h-202.857zM512 0c282.857 0 512 229.143 512 512s-229.143 512-512 512-512-229.143-512-512 229.143-512 512-512zM865.714 771.429c53.714-73.143 85.143-162.286 85.143-259.429v-1.714l-58.286 50.857-137.143-128 36-184.571 76.571 6.857c-54.286-74.857-132-132.571-222.286-161.143l30.286 70.857-164 90.857-164-90.857 30.286-70.857c-90.286 28.571-168 86.286-222.286 161.143l77.143-6.857 35.429 184.571-137.143 128-58.286-50.857v1.714c0 97.143 31.429 186.286 85.143 259.429l17.143-75.429 186.286 22.857 79.429 170.286-66.286 39.429c42.857 14.286 89.143 22.286 137.143 22.286s94.286-8 137.143-22.286l-66.286-39.429 79.429-170.286 186.286-22.857z"],"width":1024,"tags":["futbol-o","soccer-ball-o"],"defaultCode":61923,"grid":14},{"paths":["M256 749.714v109.714c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM146.286 530.286v109.714c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM475.429 749.714v109.714c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM365.714 530.286v109.714c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM37.714 438.857c-21.143 0-37.714-16.571-37.714-37.143v-73.714h293.714v73.714c0 20.571-16.571 37.143-37.143 37.143h-218.857zM694.857 749.714v109.714c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM585.143 530.286v109.714c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM914.286 749.714v109.714c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM804.571 530.286v109.714c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM1024 297.143v7.429h-293.714v-5.714c0-21.143-18.286-59.429-218.286-58.286-200 0.571-218.286 37.143-218.286 58.286v5.714h-293.714v-7.429c0-38.286 68.571-224 512-224 442.857 0 512 185.714 512 224zM1024 530.286v109.714c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-109.714c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM1024 328v73.714c0 20.571-16.571 37.143-37.143 37.143h-219.429c-20.571 0-37.143-16.571-37.143-37.143v-73.714h293.714z"],"width":1024,"tags":["tty"],"defaultCode":61924,"grid":14},{"paths":["M402.286 182.857v438.857c0 20-16.571 36.571-36.571 36.571v0 329.143c0 20-16.571 36.571-36.571 36.571h-292.571c-20 0-36.571-16.571-36.571-36.571v-292.571l142.286-498.857c2.286-8 9.714-13.143 17.714-13.143h242.286zM585.143 182.857v402.286h-146.286v-402.286h146.286zM1024 694.857v292.571c0 20-16.571 36.571-36.571 36.571h-292.571c-20 0-36.571-16.571-36.571-36.571v-329.143c-20 0-36.571-16.571-36.571-36.571v-438.857h242.286c8 0 15.429 5.143 17.714 13.143zM420.571 18.286v128h-201.143v-128c0-10.286 8-18.286 18.286-18.286h164.571c10.286 0 18.286 8 18.286 18.286zM804.571 18.286v128h-201.143v-128c0-10.286 8-18.286 18.286-18.286h164.571c10.286 0 18.286 8 18.286 18.286z"],"width":1024,"tags":["binoculars"],"defaultCode":61925,"grid":14},{"paths":["M1002.857 258.857c28 28.571 28 74.857 0 103.429l-229.143 228.571 85.714 85.714-91.429 91.429c-125.143 125.143-316 142.857-457.714 49.143l-206.857 206.857h-103.429v-103.429l206.857-206.857c-93.714-141.714-76-332.571 49.143-457.714l91.429-91.429 85.714 85.714 228.571-229.143c28.571-28 74.857-28 103.429 0 28.571 28.571 28.571 75.429 0 103.429l-228.571 229.143 133.714 133.714 229.143-228.571c28.571-28.571 74.857-28.571 103.429 0z"],"width":1030.8754285714285,"tags":["plug"],"defaultCode":61926,"grid":14},{"paths":["M498.857 422.857c0 63.429-55.429 115.429-123.429 115.429s-123.429-52-123.429-115.429c0-64 55.429-115.429 123.429-115.429s123.429 51.429 123.429 115.429zM785.714 422.857c0 63.429-54.857 115.429-123.429 115.429-68 0-123.429-52-123.429-115.429 0-64 55.429-115.429 123.429-115.429 68.571 0 123.429 51.429 123.429 115.429zM914.286 525.714v-381.143c0-65.714-21.143-91.429-81.714-91.429h-635.429c-63.429 0-81.143 21.714-81.143 91.429v384.571c135.429 70.857 251.429 58.286 314.857 56 26.857-0.571 44 4.571 54.286 15.429 1.714 1.714 3.429 3.429 5.714 5.143 12 11.429 23.429 20.571 34.857 29.143 2.286-31.429 20-51.429 67.429-49.714 64.571 2.857 183.429 15.429 321.143-59.429zM1007.429 522.857c-36.571 45.143-106.286 100.571-212.571 144 112.571 383.429-274.857 444.571-268.571 248 0 3.429-0.571-105.714-0.571-186.857-8.571-1.714-17.143-4-27.429-6.286 0 81.714-0.571 196.571-0.571 193.143 6.286 196.571-381.143 135.429-268.571-248-106.286-43.429-176-98.857-212.571-144-18.286-27.429 1.714-56.571 32-35.429 4 2.857 8.571 5.714 12.571 8.571v-396.571c0-54.857 41.143-99.429 92-99.429h718.286c50.857 0 92 44.571 92 99.429v396.571l12-8.571c30.286-21.143 50.286 8 32 35.429z"],"width":1024,"tags":["slideshare"],"defaultCode":61927,"grid":14},{"paths":["M512 248v248h-82.857v-248h82.857zM739.429 248v248h-82.857v-248h82.857zM739.429 682.286l144.571-145.143v-454.286h-682.286v599.429h186.286v124l124-124h227.429zM966.857 0v578.857l-248 248h-186.286l-124 124h-124v-124h-227.429v-661.714l62.286-165.143h847.429z"],"width":1024,"tags":["twitch"],"defaultCode":61928,"grid":14},{"paths":["M441.714 753.714v72.571c-0.571 161.143-0.571 166.857-3.429 174.286-4.571 12-14.857 20-29.143 22.857-41.143 6.857-169.714-40.571-196.571-72.571-5.714-6.286-8.571-13.714-9.714-20.571-0.571-5.143 0.571-10.286 2.286-14.857 2.857-8 8-14.286 122.857-150.286 0 0 0.571 0 34.286-40 11.429-14.286 32-18.857 50.857-12 18.857 7.429 29.143 23.429 28.571 40.571zM356.571 610.286c-1.143 20-12.571 34.857-29.714 40l-68.571 22.286c-153.714 49.143-158.857 50.286-166.857 50.286-12.571-0.571-24-8-30.857-20.571-4.571-9.143-8-24.571-9.714-42.857-6.286-56 1.143-140 17.714-166.286 8-12.571 19.429-18.857 32-18.286 8.571 0 15.429 3.429 181.143 70.857 0 0-0.571 0.571 48 19.429 17.143 6.857 28 24.571 26.857 45.143zM828.571 780c-5.714 41.143-90.857 149.143-129.714 164.571-13.143 5.143-26.286 4-36-4-6.857-5.143-13.714-15.429-105.143-164l-26.857-44c-10.286-16-8.571-36.571 4.571-52.571 12.571-15.429 30.857-20.571 47.429-14.857 0 0 0.571 0.571 68 22.857 153.714 50.286 158.857 52 165.143 57.143 10.286 8 14.857 20 12.571 34.857zM444.571 418.857c2.857 59.429-22.286 66.857-30.857 69.714-8 2.286-33.143 9.714-65.143-40.571-210.286-332-216-341.714-216-341.714-2.857-12 0.571-25.143 10.857-35.429 31.429-32.571 202.286-80.571 246.857-69.143 14.286 3.429 24.571 12.571 28 25.714 2.286 14.286 22.857 322.286 26.286 391.429zM822.857 480.571c1.143 14.286-4 26.286-14.857 33.714-6.857 4.571-13.714 6.857-188 49.143-28 6.286-43.429 10.286-52 13.143l0.571-1.143c-17.143 4.571-36.571-3.429-47.429-20.571s-10.286-36 0-49.714c0 0 0.571-0.571 42.857-58.286 93.714-128 98.286-134.286 105.143-138.857 10.857-7.429 24-7.429 37.143-1.143 37.143 17.714 112 129.143 116.571 172v1.714z"],"width":875.4468571428571,"tags":["yelp"],"defaultCode":61929,"grid":14},{"paths":["M585.143 292.571h-219.429v219.429h219.429v-219.429zM658.286 658.286v73.143h-365.714v-73.143h365.714zM658.286 219.429v365.714h-365.714v-365.714h365.714zM1024 658.286v73.143h-292.571v-73.143h292.571zM1024 512v73.143h-292.571v-73.143h292.571zM1024 365.714v73.143h-292.571v-73.143h292.571zM1024 219.429v73.143h-292.571v-73.143h292.571zM146.286 768v-548.571h-73.143v548.571c0 20 16.571 36.571 36.571 36.571s36.571-16.571 36.571-36.571zM1097.143 768v-621.714h-877.714v621.714c0 12.571-2.286 25.143-6.286 36.571h847.429c20 0 36.571-16.571 36.571-36.571zM1170.286 73.143v694.857c0 60.571-49.143 109.714-109.714 109.714h-950.857c-60.571 0-109.714-49.143-109.714-109.714v-621.714h146.286v-73.143h1024z"],"width":1170.2857142857142,"tags":["newspaper-o"],"defaultCode":61930,"grid":14},{"paths":["M585.143 870.286c-14.857 0-94.857-80-94.857-95.429 0-28 73.143-43.429 94.857-43.429s94.857 15.429 94.857 43.429c0 15.429-80 95.429-94.857 95.429zM739.429 715.429c-8 0-70.286-57.143-154.286-57.143-84.571 0-145.714 57.143-154.286 57.143-13.714 0-96.571-82.286-96.571-96 0-5.143 2.286-9.714 5.714-13.143 61.143-60.571 160.571-94.286 245.143-94.286s184 33.714 245.143 94.286c3.429 3.429 5.714 8 5.714 13.143 0 13.714-82.857 96-96.571 96zM895.429 560c-4.571 0-9.714-2.286-13.143-4.571-94.286-73.143-173.714-116.571-297.143-116.571-172.571 0-304 121.143-310.286 121.143-13.143 0-95.429-82.286-95.429-96 0-4.571 2.286-9.143 5.714-12.571 102.286-102.286 256.571-158.857 400-158.857s297.714 56.571 400 158.857c3.429 3.429 5.714 8 5.714 12.571 0 13.714-82.286 96-95.429 96zM1050.286 405.143c-4.571 0-9.143-2.286-12.571-5.143-132-116-274.286-180.571-452.571-180.571s-320.571 64.571-452.571 180.571c-3.429 2.857-8 5.143-12.571 5.143-13.143 0-96-82.286-96-96 0-5.143 2.286-9.714 5.714-13.143 144.571-143.429 353.143-222.857 555.429-222.857s410.857 79.429 555.429 222.857c3.429 3.429 5.714 8 5.714 13.143 0 13.714-82.857 96-96 96z"],"width":1170.2857142857142,"tags":["wifi"],"defaultCode":61931,"grid":14},{"paths":["M219.429 877.714c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM438.857 877.714c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM219.429 658.286c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM658.286 877.714c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM438.857 658.286c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM219.429 438.857c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM658.286 658.286c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM438.857 438.857c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM877.714 877.714v-219.429c0-40-33.143-73.143-73.143-73.143v0c-40 0-73.143 33.143-73.143 73.143v219.429c0 40 33.143 73.143 73.143 73.143v0c40 0 73.143-33.143 73.143-73.143zM658.286 438.857c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM877.714 256v-146.286c0-20-16.571-36.571-36.571-36.571h-731.429c-20 0-36.571 16.571-36.571 36.571v146.286c0 20 16.571 36.571 36.571 36.571h731.429c20 0 36.571-16.571 36.571-36.571zM877.714 438.857c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM950.857 73.143v877.714c0 40-33.143 73.143-73.143 73.143h-804.571c-40 0-73.143-33.143-73.143-73.143v-877.714c0-40 33.143-73.143 73.143-73.143h804.571c40 0 73.143 33.143 73.143 73.143z"],"width":950.8571428571428,"tags":["calculator"],"defaultCode":61932,"grid":14},{"paths":["M868 369.143v0c7.429 34.286 5.714 73.714-2.286 116.571-37.143 188.571-162.286 253.714-322.857 253.714h-25.143c-19.429 0-35.429 14.286-38.857 33.714l-2.286 10.857-31.429 197.714-1.143 8.571c-4 19.429-20 33.714-39.429 33.714h-143.429c-16 0-26.286-13.143-24-29.143 10.286-64 20-128 30.286-192s20.571-127.429 30.857-191.429c1.714-13.714 10.857-21.143 24.571-21.143 22.857 0 45.714-0.571 74.857 0 41.143 0.571 88.571-1.714 134.857-12 61.714-13.714 117.714-38.857 164-82.286 41.714-38.857 69.714-86.857 88.571-140.571 8.571-25.143 15.429-50.286 20-76 1.143-6.857 2.857-5.714 6.857-2.857 31.429 23.429 49.143 54.857 56 92.571zM769.714 208c0 46.857-10.857 91.429-26.286 134.857-29.714 86.286-85.714 148-172.571 180-46.286 16.571-94.857 23.429-144 24-34.286 0.571-68.571 0-102.857 0-37.143 0-60.571 18.286-67.429 54.857-8 43.429-39.429 245.714-48.571 302.857-0.571 4-2.286 5.714-6.857 5.714h-168.571c-17.143 0-29.714-14.857-27.429-31.429l132.571-840.571c3.429-21.714 22.857-38.286 45.143-38.286h341.714c24.571 0 81.143 10.857 119.429 25.714 81.143 31.429 125.714 95.429 125.714 182.286z"],"width":878.2994285714285,"tags":["paypal"],"defaultCode":61933,"grid":14},{"paths":["M252 384c11.429 0 22.857 5.714 29.714 14.857 100 136.571 169.714 282.857 206.857 442.286h-254.857c-45.714-158.857-113.143-304-209.714-428-9.143-12 0-29.143 14.857-29.143h213.143zM571.429 588c-18.857 77.143-42.857 152-71.429 224.571-30.286-119.429-78.857-231.429-146.286-339.429 14.857-82.857 23.429-168 25.143-256.571 80.571 129.714 144.571 253.143 192.571 371.429zM628 182.857c170.857 235.429 297.714 525.714 325.143 841.143h-257.714c-18.857-305.143-159.429-594.286-316-841.143h248.571zM1024 512c0 158.857-21.714 325.714-57.714 464-25.143-211.429-94.857-421.714-205.143-618.857-9.714-115.429-30.286-227.429-60.571-333.714-2.857-12 5.714-23.429 17.714-23.429h205.143c16 0 30.857 10.857 34.857 26.286 43.429 154.286 65.714 317.714 65.714 485.714z"],"width":1038.848,"tags":["google-wallet"],"defaultCode":61934,"grid":14},{"paths":["M1128.571 565.714h-78.857c0 0 8-21.143 37.714-102.286-0.571 0.571 8-21.143 12.571-34.857l6.857 31.429c17.714 87.429 21.714 105.714 21.714 105.714zM303.429 528.571l-33.143-168.571c-4.571-23.429-22.286-30.857-42.857-30.857h-153.143l-1.143 7.429c105.143 26.857 191.429 84 230.286 192zM405.714 329.143l-92.571 250.286-9.714-50.857c-20-53.143-68.571-102.286-123.429-124.571l77.143 291.429h100l149.143-366.286h-100.571zM485.143 696h94.857l59.429-366.857h-94.857zM924 338.286c-18.857-7.429-48.571-15.429-85.143-15.429-93.714 0-159.429 49.714-160 121.143-0.571 52.571 46.857 81.714 82.857 99.429 37.143 17.714 49.143 29.714 49.143 45.714 0 24.571-29.714 35.429-56.571 35.429-38.286 0-58.857-4.571-89.143-18.857l-12.571-6.286-13.143 82.286c22.286 10.286 62.857 19.429 105.714 19.429 99.429 0.571 164-49.143 165.143-125.143 0-41.714-25.714-73.143-80-99.429-33.143-16.571-53.143-28.571-53.143-45.714 0-15.429 17.143-31.429 54.286-31.429 30.857-0.571 53.714 5.714 70.857 13.714l8.571 4.571zM1166.857 329.143h-73.143c-22.857 0-40 6.857-49.714 30.857l-140.571 336h99.429c16-45.143 20-54.857 20-54.857h121.143c0 0 2.857 12.571 11.429 54.857h88zM1316.571 146.286v731.429c0 40-33.143 73.143-73.143 73.143h-1170.286c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h1170.286c40 0 73.143 33.143 73.143 73.143z"],"width":1316.5714285714284,"tags":["cc-visa"],"defaultCode":61936,"grid":14},{"paths":["M639.429 194.857c-47.429-31.429-103.429-48.571-160.571-48.571-160.571 0-290.857 130.286-290.857 290.286 0 160.571 130.286 290.857 290.857 290.857 57.143 0 113.143-17.143 160.571-48.571-153.143-124.571-152-359.429 0-484zM658.286 208.571c-147.429 116-148 341.143 0 456.571 148-115.429 147.429-340.571 0-456.571zM677.143 194.857c151.429 124.571 153.714 360 0 484 47.429 31.429 104 48.571 160.571 48.571 160.571 0 290.857-130.286 290.857-290.857 0-160-130.286-290.286-290.857-290.286-57.143 0-113.143 17.143-160.571 48.571zM1100.571 607.429h4v-1.714h-9.714v1.714h4v9.714h1.714v-9.714zM1117.143 617.143h2.286v-11.429h-2.857l-3.429 7.429-3.429-7.429h-2.857v11.429h1.714v-8.571l3.429 7.429h2.286l2.857-7.429v8.571zM1112.571 868.571v1.143h-2.857v-1.714h2.857v0.571zM1112.571 873.714h1.714l-2.286-2.857c1.143 0 1.143-0.571 1.714-0.571 0.571-0.571 0.571-1.143 0.571-1.714s0-1.143-0.571-1.714c-0.571 0-1.143-0.571-2.286-0.571h-3.429v7.429h1.714v-2.857h0.571zM391.429 834.857c0-13.714 8.571-24.571 23.429-24.571 13.714 0 22.857 10.857 22.857 24.571 0 14.286-9.143 24.571-22.857 24.571-14.857 0-23.429-10.857-23.429-24.571zM661.714 809.714c10.857 0 18.286 6.286 20 18.286h-40c1.714-10.857 8.571-18.286 20-18.286zM865.143 834.857c0-13.714 8.571-24.571 22.857-24.571s23.429 10.857 23.429 24.571c0 14.286-9.143 24.571-23.429 24.571s-22.857-10.857-22.857-24.571zM1020.571 834.857c0-13.714 9.143-24.571 23.429-24.571 13.714 0 23.429 10.857 23.429 24.571 0 14.286-9.714 24.571-23.429 24.571-14.286 0-23.429-10.857-23.429-24.571zM1110.857 876c-0.571 0-1.143 0-2.286-0.571-0.571 0-1.143-0.571-1.714-1.143s-1.143-1.143-1.143-1.714-0.571-1.714-0.571-2.286 0-1.714 0.571-2.286c0-1.143 0.571-1.714 1.143-2.286s1.143-0.571 1.714-1.143 1.714-0.571 2.286-0.571 1.714 0 2.286 0.571 1.714 0.571 2.286 1.143 0.571 1.143 1.143 2.286c0 0.571 0.571 1.143 0.571 2.286 0 0.571-0.571 1.143-0.571 2.286-0.571 0.571-0.571 1.143-1.143 1.714s-1.143 1.143-2.286 1.143c-0.571 0.571-1.143 0.571-2.286 0.571zM342.286 873.714h17.143v-48.571c0-18.286-12-30.286-30.857-30.857-9.714 0-20 2.857-26.857 13.714-5.143-8.571-13.714-13.714-25.714-13.714-8 0-16 2.857-22.286 11.429v-9.143h-17.143v77.143h17.143v-42.857c0-13.714 7.429-20.571 18.857-20.571s17.143 7.429 17.143 20.571v42.857h16.571v-42.857c0-13.714 8-20.571 18.857-20.571 11.429 0 17.143 7.429 17.143 20.571v42.857zM437.143 873.714h16.571v-77.143h-16.571v9.143c-5.714-6.857-13.714-11.429-24.571-11.429-21.714 0-38.286 17.143-38.286 40.571s16.571 40.571 38.286 40.571c10.857 0 18.857-4 24.571-11.429v9.714zM538.857 850.286c0-13.714-10.286-20.571-26.857-22.857l-8-1.143c-7.429-1.143-13.143-2.857-13.143-8s5.143-8.571 14.286-8.571c10.286 0 19.429 3.429 24.571 6.286l6.857-13.714c-8-5.143-18.857-8-31.429-8-19.429 0-32 9.714-32 25.143 0 12.571 9.143 20 26.857 22.286l7.429 1.143c9.714 1.714 13.714 4 13.714 8 0 6.286-6.286 9.714-17.714 9.714s-20-4-25.714-8l-7.429 13.143c9.143 6.286 20.571 9.714 33.143 9.714 22.286 0 35.429-10.286 35.429-25.143zM613.143 869.714l-4.571-14.286c-5.143 2.857-10.286 4-14.857 4-8.571 0-10.857-5.143-10.857-12.571v-34.857h27.429v-15.429h-27.429v-23.429h-17.143v23.429h-16v15.429h16v34.857c0 17.714 6.857 28.571 26.857 28.571 6.857 0 15.429-2.286 20.571-5.714zM662.286 794.286c-22.286 0-38.286 16.571-38.286 40.571 0 24.571 16.571 40.571 39.429 40.571 11.429 0 22.286-2.857 31.429-10.857l-8-12.571c-6.286 5.143-14.857 8.571-22.286 8.571-10.857 0-20.571-5.143-23.429-18.857h57.714v-6.857c0-24-14.857-40.571-36.571-40.571zM753.143 794.286c-9.714 0-16 4.571-20 11.429v-9.143h-17.143v77.143h17.143v-43.429c0-12.571 5.143-20 16.571-20 3.429 0 6.857 0.571 10.286 2.286l5.143-16c-4-1.714-8.571-2.286-12-2.286zM770.286 834.857c0 23.429 16 40.571 41.143 40.571 11.429 0 19.429-2.286 27.429-9.143l-8-13.714c-6.286 4.571-12.571 7.429-20 6.857-13.714 0-23.429-9.714-23.429-24.571s9.714-24.571 23.429-24.571c7.429 0 13.714 2.286 20 6.857l8-13.714c-8-6.286-16-9.143-27.429-9.143-25.143 0-41.143 17.143-41.143 40.571zM910.286 873.714h17.143v-77.143h-17.143v9.143c-5.143-6.857-13.143-11.429-24-11.429-21.714 0-38.857 17.143-38.857 40.571s17.143 40.571 38.857 40.571c10.857 0 18.857-4 24-11.429v9.714zM986.286 794.286c-9.714 0-16 4.571-20 11.429v-9.143h-16.571v77.143h16.571v-43.429c0-12.571 5.714-20 16.571-20 3.429 0 6.857 0.571 10.286 2.286l5.143-16c-3.429-1.714-8.571-2.286-12-2.286zM1066.286 873.714h16.571v-108.571h-16.571v40.571c-5.143-6.857-13.143-11.429-24.571-11.429-21.143 0-38.286 17.143-38.286 40.571s17.143 40.571 38.286 40.571c11.429 0 19.429-4 24.571-11.429v9.714zM1110.857 862.286c-0.571 0-1.714 0.571-2.857 0.571-1.143 0.571-1.714 1.143-2.286 1.714-1.143 0.571-1.714 1.714-1.714 2.286-0.571 1.143-0.571 2.286-0.571 3.429 0 0.571 0 1.714 0.571 2.857 0 0.571 0.571 1.714 1.714 2.286 0.571 0.571 1.143 1.143 2.286 1.714s2.286 0.571 2.857 0.571c1.143 0 2.286 0 3.429-0.571 0.571-0.571 1.714-1.143 2.286-1.714s1.143-1.714 1.714-2.286c0.571-1.143 0.571-2.286 0.571-2.857 0-1.143 0-2.286-0.571-3.429-0.571-0.571-1.143-1.714-1.714-2.286s-1.714-1.143-2.286-1.714c-1.143 0-2.286-0.571-3.429-0.571zM1316.571 146.286v731.429c0 40-33.143 73.143-73.143 73.143h-1170.286c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h1170.286c40 0 73.143 33.143 73.143 73.143z"],"width":1316.5714285714284,"tags":["cc-mastercard"],"defaultCode":61937,"grid":14},{"paths":["M178.857 444c0 18.286-7.429 36-20.571 48-11.429 10.286-26.857 14.857-50.857 14.857h-9.714v-125.714h9.714c24 0 38.857 4 50.857 15.429 13.143 11.429 20.571 29.143 20.571 47.429zM1193.714 406.857c0 19.429-12.571 29.714-36.571 29.714h-10.857v-57.714h11.429c23.429 0 36 9.714 36 28zM217.143 444c0-56-41.714-95.429-102.286-95.429h-54.286v190.286h54.286c28.571 0 49.714-6.286 68-21.714 21.714-18.286 34.286-45.143 34.286-73.143zM234.286 538.857h37.143v-190.286h-37.143v190.286zM417.143 481.143c0-30.286-12.571-44-54.857-59.429-22.286-8-28.571-13.714-28.571-24 0-12 11.429-21.143 27.429-21.143 11.429 0 20.571 4.571 30.286 15.429l19.429-25.143c-16-14.286-35.429-21.143-56-21.143-33.714 0-59.429 23.429-59.429 54.286 0 26.286 12 40 46.857 52.571 14.286 5.143 21.714 8 25.714 10.857 7.429 4.571 10.857 11.429 10.857 19.429 0 15.429-12 26.857-28.571 26.857-17.714 0-32-8.571-40.571-25.143l-24 22.857c17.143 25.143 37.714 36.571 65.714 36.571 38.857 0 65.714-25.714 65.714-62.857zM576 532.571v-44c-14.857 14.857-28 21.143-44.571 21.143-37.714 0-64-27.429-64-65.714 0-36.571 27.429-65.714 62.286-65.714 17.714 0 30.857 6.286 46.286 21.714v-44c-16-8-29.714-11.429-45.714-11.429-56 0-101.143 44-101.143 99.429 0 56 44 99.429 100.571 99.429 16 0 29.714-2.857 46.286-10.857zM1280 877.714v-301.143c-91.429 57.143-413.143 240-933.143 337.714h896.571c20 0 36.571-16.571 36.571-36.571zM793.714 445.143c0-57.143-46.286-103.429-103.429-103.429s-103.429 46.286-103.429 103.429 46.286 103.429 103.429 103.429 103.429-46.286 103.429-103.429zM880.571 544l82.286-195.429h-40.571l-51.429 128-50.857-128h-40.571l81.143 195.429h20zM979.429 538.857h105.143v-32h-68v-51.429h65.714v-32h-65.714v-42.286h68v-32.571h-105.143v190.286zM1202.857 538.857h45.714l-60-80c28-5.714 43.429-24.571 43.429-53.714 0-36-24.571-56.571-67.429-56.571h-55.429v190.286h37.143v-76h5.143zM1316.571 149.714v724.571c0 42.286-33.714 76.571-75.429 76.571h-1165.714c-41.714 0-75.429-34.286-75.429-76.571v-724.571c0-42.286 33.714-76.571 75.429-76.571h1165.714c41.714 0 75.429 34.286 75.429 76.571z"],"width":1316.5714285714284,"tags":["cc-discover"],"defaultCode":61938,"grid":14},{"paths":["M68 389.714h50.857l-25.714-61.714zM422.857 690.286l42.286-45.143-40-45.143h-93.143v28h81.143v31.429h-81.143v30.857h90.857zM513.143 645.714l56.571 62.857v-124zM677.714 618.857c0-13.714-10.286-18.857-22.857-18.857h-48v39.429h47.429c13.143 0 23.429-6.286 23.429-20.571zM842.857 616.571c0-14.286-12.571-16.571-24-16.571h-46.857v34.857h46.286c12.571 0 24.571-2.857 24.571-18.286zM684 350.286c0-14.286-12.571-16.571-24-16.571h-46.857v34.286h46.286c12.571 0 24.571-2.857 24.571-17.714zM946.286 389.714h50.857l-25.143-61.714zM399.429 301.143v154.857h-37.714v-121.143l-53.714 121.143h-32.571l-53.714-121.143v121.143h-75.429l-14.286-34.286h-77.143l-14.286 34.286h-40l66.286-154.857h54.857l62.857 146.857v-146.857h60.571l48.571 105.143 44-105.143h61.714zM717.143 618.857c0 62.286-68 52-110.286 52v52h-72l-45.714-51.429-47.429 51.429h-146.286v-154.857h148.571l45.714 50.857 46.857-50.857h118.286c34.857 0 62.286 12 62.286 50.857zM550.857 424v32h-124v-154.857h124v32.571h-86.857v28h84.571v31.429h-84.571v30.857h86.857zM1316.571 743.429v130.857c0 41.714-33.714 76.571-75.429 76.571h-1165.714c-41.714 0-75.429-34.857-75.429-76.571v-387.429h63.429l14.286-34.857h31.429l14.286 34.857h124.571v-26.286l10.857 26.286h64.571l11.429-26.857v26.857h309.143v-56.571l5.714-0.571c5.143 0 5.714 4 5.714 8v49.143h159.429v-13.143c37.143 19.429 88 13.143 126.857 13.143l14.286-34.857h32l14.286 34.857h129.714v-33.143l19.429 33.143h104v-216h-102.857v25.143l-14.286-25.143h-105.714v25.143l-13.143-25.143h-142.286c-21.143 0-43.429 2.286-62.286 12.571v-12.571h-98.286v12.571c-11.429-10.286-26.857-12.571-41.714-12.571h-358.857l-24.571 55.429-24.571-55.429h-113.143v25.143l-12.571-25.143h-96.571l-44.571 102.286v-223.429c0-41.714 33.714-76.571 75.429-76.571h1165.714c41.714 0 75.429 34.857 75.429 76.571v387.429h-68.571c-16 0-33.143 2.857-46.286 12.571v-12.571h-101.143c-14.286 0-33.714 2.286-44.571 12.571v-12.571h-180.571v12.571c-13.714-9.714-33.714-12.571-49.714-12.571h-119.429v12.571c-12-11.429-36.571-12.571-52-12.571h-133.714l-30.857 33.143-28.571-33.143h-199.429v216h196l31.429-33.714 29.714 33.714h120.571v-50.857h12c17.143 0 34.857-0.571 51.429-7.429v58.286h99.429v-56.571h4.571c5.714 0 6.857 0.571 6.857 6.857v49.714h302.286c16.571 0 37.143-3.429 50.286-13.714v13.714h96c18.286 0 37.714-1.714 54.286-9.714zM883.429 609.714c0 17.143-9.143 34.286-26.286 41.143 20.571 7.429 24.571 21.143 24.571 41.143v30.857h-37.143v-25.714c0-26.286-8.571-30.857-33.143-30.857h-39.429v56.571h-37.143v-154.857h88c29.143 0 60.571 5.143 60.571 41.714zM725.143 342.857c0 17.714-9.714 34.857-26.286 41.714 21.143 7.429 24.571 20.571 24.571 41.143v30.286h-37.143c-0.571-33.143 8-56-33.143-56h-40v56h-36.571v-154.857l87.429 0.571c29.714 0 61.143 4.571 61.143 41.143zM1027.429 690.857v32h-123.429v-154.857h123.429v32h-86.286v28h84.571v31.429h-84.571v30.857zM784 301.143v154.857h-37.714v-154.857h37.714zM1180 673.714c0 36.571-25.143 49.143-58.286 49.143h-72v-33.143h72c9.143 0 19.429-2.286 19.429-14.286 0-33.143-95.429 12.571-95.429-61.143 0-31.429 24-46.286 52.571-46.286h74.286v32.571h-68c-9.714 0-20.571 1.714-20.571 14.286 0 33.714 96-15.429 96 58.857zM1316.571 645.143v57.714c-10.857 16-32 20-50.286 20h-71.429v-33.143h71.429c9.143 0 18.857-2.857 18.857-14.286 0-32.571-95.429 12.571-95.429-61.143 0-31.429 24.571-46.286 53.143-46.286h73.714v32.571h-67.429c-10.286 0-20.571 1.714-20.571 14.286 0 27.429 64.571-0.571 88 30.286zM1222.286 301.714v154.286h-52.571l-69.714-116v116h-75.429l-14.857-34.286h-76.571l-14.286 34.286h-42.857c-50.857 0-73.714-26.286-73.714-76 0-52 23.429-78.857 76-78.857h36v33.714c-38.857-0.571-74.286-9.143-74.286 44 0 26.286 6.286 44.571 36 44.571h16.571l52.571-121.714h55.429l62.286 146.286v-146.286h56.571l65.143 107.429v-107.429h37.714z"],"width":1316.5714285714284,"tags":["cc-amex"],"defaultCode":61939,"grid":14},{"paths":["M425.714 517.714c0 28-22.286 49.143-50.286 49.143-21.143 0-36.571-12-36.571-34.286 0-28 21.714-50.286 49.714-50.286 21.143 0 37.143 13.143 37.143 35.429zM874.286 432.571c0 34.286-20.571 41.143-50.286 41.143l-18.286 0.571 9.714-61.143c0.571-4 3.429-6.286 7.429-6.286h10.286c19.429 0 41.143 1.143 41.143 25.714zM1074.857 517.714c0 28-22.286 49.143-49.714 49.143-21.143 0-37.143-12-37.143-34.286 0-28 21.714-50.286 49.714-50.286 21.143 0 37.143 13.143 37.143 35.429zM293.143 420c0-48-37.143-64-79.429-64h-91.429c-5.714 0-11.429 4.571-12 10.857l-37.143 233.143c-0.571 4.571 2.857 9.143 7.429 9.143h43.429c6.286 0 12-4.571 12.571-10.857l10.286-62.857c2.286-16.571 30.286-10.857 41.143-10.857 65.143 0 105.143-38.857 105.143-104.571zM469.714 598.286l23.429-149.143c0.571-4.571-2.857-9.143-7.429-9.143h-43.429c-8.571 0-9.143 12.571-9.714 18.857-13.143-19.429-32.571-22.857-54.286-22.857-56 0-98.857 49.143-98.857 103.429 0 44.571 28 73.714 72.571 73.714 20.571 0 46.286-9.143 60.571-25.143-1.143 3.429-2.286 8.571-2.286 12 0 5.143 2.286 9.143 7.429 9.143h39.429c6.286 0 11.429-4.571 12.571-10.857zM725.143 448c0-4-3.429-8-7.429-8h-44c-4 0-8 2.286-10.286 5.714l-60.571 89.143-25.143-85.714c-1.714-5.143-6.857-9.143-12.571-9.143h-42.857c-4 0-7.429 4-7.429 8 0 2.857 44.571 132 48.571 144-6.286 8.571-46.857 61.714-46.857 68.571 0 4 3.429 7.429 7.429 7.429h44c4 0 8-2.286 10.286-5.714l145.714-210.286c1.143-1.143 1.143-2.286 1.143-4zM942.286 420c0-48-37.143-64-79.429-64h-90.857c-6.286 0-12 4.571-12.571 10.857l-37.143 233.143c-0.571 4.571 2.857 9.143 7.429 9.143h46.857c4.571 0 8-3.429 9.143-7.429l10.286-66.286c2.286-16.571 30.286-10.857 41.143-10.857 65.143 0 105.143-38.857 105.143-104.571zM1118.857 598.286l23.429-149.143c0.571-4.571-2.857-9.143-7.429-9.143h-43.429c-8.571 0-9.143 12.571-9.714 18.857-12.571-19.429-32-22.857-54.286-22.857-56 0-98.857 49.143-98.857 103.429 0 44.571 28 73.714 72.571 73.714 21.143 0 46.857-9.143 60.571-25.143-0.571 3.429-2.286 8.571-2.286 12 0 5.143 2.286 9.143 7.429 9.143h39.429c6.286 0 11.429-4.571 12.571-10.857zM1243.429 364.571v-0.571c0-4.571-3.429-8-7.429-8h-42.286c-3.429 0-6.857 2.857-7.429 6.286l-37.143 237.714-0.571 1.143c0 4 3.429 8 8 8h37.714c5.714 0 11.429-4.571 12-10.857zM224 441.143c-4.571 29.143-24 32.571-49.143 32.571l-18.857 0.571 9.714-61.143c0.571-4 4-6.286 7.429-6.286h10.857c25.714 0 45.143 3.429 40 34.286zM1316.571 146.286v731.429c0 40-33.143 73.143-73.143 73.143h-1170.286c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h1170.286c40 0 73.143 33.143 73.143 73.143z"],"width":1316.5714285714284,"tags":["cc-paypal"],"defaultCode":61940,"grid":14},{"paths":["M912.571 516c0 26.286-4 46.286-12 60.571-6.857 12.571-17.714 20-29.714 20-8.571 0-16.571-1.714-23.429-5.143v-128c14.857-15.429 28-17.143 32.571-17.143 21.714 0 32.571 24 32.571 69.714zM1162.857 495.429h-62.857c2.286-38.286 12.571-56 32-56s29.714 18.286 30.857 56zM272 572.571c0-48-29.143-68-76.571-85.143v0c-25.143-9.143-38.857-16.571-38.857-28 0-9.714 8-14.857 21.714-14.857 26.286 0 52.571 9.714 70.857 18.857l10.286-64c-14.286-6.857-44-18.286-85.143-18.286-29.143 0-53.143 7.429-70.286 21.714-18.286 14.857-27.429 36.571-27.429 62.286 0 46.857 28.571 67.429 75.429 84 29.714 10.857 40 18.286 40 30.286 0 11.429-9.714 17.714-27.429 17.714-21.714 0-57.714-10.857-81.143-24.571l-10.286 64.571c20 11.429 57.143 23.429 96 23.429 30.857 0 56-7.429 73.714-21.143 19.429-15.429 29.143-37.714 29.143-66.857zM440.571 449.714l10.857-63.429h-54.857v-77.143l-73.714 12-10.286 65.143-26.286 4.571-9.714 58.857h35.429v125.143c0 32.571 8.571 54.857 25.143 68.571 14.286 11.429 34.857 17.143 63.429 17.143 22.286 0 35.429-4 45.143-6.286v-67.429c-5.143 1.143-17.143 4-25.143 4-16.571 0-24-9.143-24-28.571v-112.571h44zM621.143 464v-79.429c-5.714-1.143-10.857-1.714-16-1.714-24 0-43.429 12.571-50.857 35.429l-5.714-32h-74.857v269.143h85.714v-174.857c10.857-13.143 26.286-17.714 46.857-17.714 4.571 0 9.143 0 14.857 1.143zM642.286 655.429h85.714v-269.143h-85.714v269.143zM997.714 513.143c0-45.714-8.571-80.571-25.714-102.286-15.429-20-36.571-29.714-63.429-29.714-24.571 0-46.286 10.286-66.857 32l-4.571-26.857h-75.429v368.571l85.714-14.286v-86.286c13.143 4 26.857 6.286 38.857 6.286 21.143 0 52.571-5.714 76.571-32 23.429-25.143 34.857-64 34.857-115.429zM730.286 314.286c0-25.143-20-45.143-45.143-45.143s-45.143 20-45.143 45.143 20 45.714 45.143 45.714 45.143-20.571 45.143-45.714zM1243.429 518.286c0-42.857-9.143-76.571-27.429-100.571-18.857-24-46.857-36.571-82.286-36.571-73.143 0-118.286 53.714-118.286 140.571 0 48 12 84.571 36 107.429 21.143 21.143 52 31.429 92 31.429 36.571 0 70.286-8.571 91.429-22.857l-9.143-58.857c-21.143 11.429-45.714 17.714-73.143 17.714-16.571 0-28-3.429-36-10.857-9.143-7.429-14.286-20-16-37.714h141.714c0.571-4 1.143-23.429 1.143-29.714zM1316.571 146.286v731.429c0 40-33.143 73.143-73.143 73.143h-1170.286c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h1170.286c40 0 73.143 33.143 73.143 73.143z"],"width":1316.5714285714284,"tags":["cc-stripe"],"defaultCode":61941,"grid":14},{"paths":["M890.286 486.857c29.143 170.286 104 261.714 170.286 317.714 0 40-33.143 73.143-73.143 73.143h-256c0 80.571-65.714 146.286-146.286 146.286s-145.714-65.143-146.286-145.714zM585.143 978.286c5.143 0 9.143-4 9.143-9.143s-4-9.143-9.143-9.143c-45.143 0-82.286-37.143-82.286-82.286 0-5.143-4-9.143-9.143-9.143s-9.143 4-9.143 9.143c0 55.429 45.143 100.571 100.571 100.571zM1157.714 64c6.286 8 5.714 19.429-1.714 26.286l-1069.714 926.857c-7.429 6.286-19.429 5.714-25.714-2.286l-48-54.857c-6.286-8-5.714-19.429 1.714-25.714l106.286-92c-6.857-11.429-10.857-24-10.857-37.714 84.571-71.429 182.857-199.429 182.857-475.429 0-109.714 90.857-229.714 242.286-252-2.857-6.857-4.571-14.286-4.571-22.286 0-30.286 24.571-54.857 54.857-54.857s54.857 24.571 54.857 54.857c0 8-1.714 15.429-4.571 22.286 98.286 14.286 170.857 69.714 209.714 137.143l238.857-207.429c7.429-6.286 19.429-5.714 25.714 2.286z"],"width":1170.2857142857142,"tags":["bell-slash"],"defaultCode":61942,"grid":14},{"paths":["M594.286 969.143c0-5.143-4-9.143-9.143-9.143-45.143 0-82.286-37.143-82.286-82.286 0-5.143-4-9.143-9.143-9.143s-9.143 4-9.143 9.143c0 55.429 45.143 100.571 100.571 100.571 5.143 0 9.143-4 9.143-9.143zM287.429 697.714l501.143-434.286c-28.571-60-94.857-117.143-203.429-117.143-149.714 0-219.429 109.143-219.429 182.857 0 146.286-25.714 268.571-78.286 368.571zM1060.571 804.571c0 40-33.143 73.143-73.143 73.143h-256c0 80.571-65.714 146.286-146.286 146.286s-145.714-65.143-146.286-145.714l85.143-73.714h432.571c-63.429-71.429-106.286-158.286-129.714-262.286l63.429-55.429c29.143 170.286 104 261.714 170.286 317.714zM1109.714 9.143l48 54.857c6.286 8 5.714 19.429-1.714 26.286l-1069.714 926.857c-7.429 6.286-19.429 5.714-25.714-2.286l-48-54.857c-6.286-8-5.714-19.429 1.714-25.714l106.286-92c-6.857-11.429-10.857-24-10.857-37.714 84.571-71.429 182.857-199.429 182.857-475.429 0-109.714 90.857-229.714 242.286-252-2.857-6.857-4.571-14.286-4.571-22.286 0-30.286 24.571-54.857 54.857-54.857s54.857 24.571 54.857 54.857c0 8-1.714 15.429-4.571 22.286 98.286 14.286 170.857 69.714 209.714 137.143l238.857-207.429c7.429-6.286 19.429-5.714 25.714 2.286z"],"width":1170.2857142857142,"tags":["bell-slash-o"],"defaultCode":61943,"grid":14},{"paths":["M292.571 786.286v-402.286c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v402.286c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM438.857 786.286v-402.286c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v402.286c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM585.143 786.286v-402.286c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v402.286c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM274.286 219.429h256l-27.429-66.857c-1.714-2.286-6.857-5.714-9.714-6.286h-181.143c-3.429 0.571-8 4-9.714 6.286zM804.571 237.714v36.571c0 10.286-8 18.286-18.286 18.286h-54.857v541.714c0 62.857-41.143 116.571-91.429 116.571h-475.429c-50.286 0-91.429-51.429-91.429-114.286v-544h-54.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h176.571l40-95.429c11.429-28 45.714-50.857 76-50.857h182.857c30.286 0 64.571 22.857 76 50.857l40 95.429h176.571c10.286 0 18.286 8 18.286 18.286z"],"width":804.5714285714286,"tags":["trash"],"defaultCode":61944,"grid":14},{"paths":["M657.143 613.714v62.286c0 80.571-128.571 110.286-209.143 110.286-156.571 0-274.286-119.429-274.286-277.143 0-154.857 116.571-271.429 271.429-271.429 56.571 0 204.571 20 204.571 110.857v62.286c0 5.143-4 9.143-9.143 9.143h-67.429c-5.143 0-9.143-4-9.143-9.143v-40c0-36-69.143-52.571-116-52.571-106.857 0-181.143 77.143-181.143 188 0 114.857 77.714 198.857 185.714 198.857 41.143 0 118.857-15.429 118.857-51.429v-40c0-5.143 4-9.143 8.571-9.143h68c4.571 0 9.143 4 9.143 9.143zM438.857 146.286c-201.714 0-365.714 164-365.714 365.714s164 365.714 365.714 365.714 365.714-164 365.714-365.714-164-365.714-365.714-365.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857v0c242.286 0 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["copyright"],"defaultCode":61945,"grid":14},{"paths":["M555.429 442.857c0-82.286-42.857-131.429-114.857-131.429-94.857 0-196.571 94.286-196.571 246.857 0 85.143 42.286 133.714 116.571 133.714 114.857 0 194.857-131.429 194.857-249.143zM877.714 512c0 177.714-126.857 244.571-235.429 248-7.429 0-10.286 0.571-18.286 0.571-35.429 0-63.429-10.286-81.143-30.286-10.857-12.571-17.143-28.571-18.857-47.429-35.429 44.571-97.143 88-174.286 88-122.857 0-193.143-76-193.143-208.571 0-182.286 126.286-330.286 280.571-330.286 66.857 0 120.571 28.571 149.143 77.143l1.143-10.857 6.286-32c0.571-4.571 4.571-10.286 8.571-10.286h67.429c2.857 0 5.714 4 7.429 6.286 1.714 1.714 2.286 6.286 1.714 9.143l-68.571 350.857c-2.286 10.857-2.857 19.429-2.857 27.429 0 30.857 9.143 37.143 32.571 37.143 38.857-1.143 164.571-17.143 164.571-174.857 0-222.286-143.429-365.714-365.714-365.714-201.714 0-365.714 164-365.714 365.714s164 365.714 365.714 365.714c84 0 166.286-29.143 231.429-82.286 8-6.857 19.429-5.714 25.714 2.286l23.429 28c2.857 4 4.571 8.571 4 13.714-0.571 4.571-2.857 9.143-6.857 12.571-77.714 63.429-176.571 98.857-277.714 98.857-241.714 0-438.857-197.143-438.857-438.857s197.143-438.857 438.857-438.857c262.286 0 438.857 176.571 438.857 438.857z"],"width":877.7142857142857,"tags":["at"],"defaultCode":61946,"grid":14},{"paths":["M970.286 53.714c71.429 71.429 72 187.429 0 258.286l-128.571 127.429 59.429 59.429c7.429 7.429 7.429 18.857 0 26.286l-120 120c-7.429 7.429-18.857 7.429-26.286 0l-60-60-344.571 344.571c-13.714 13.714-32 21.143-51.429 21.143h-116l-146.286 73.143-36.571-36.571 73.143-146.286v-116c0-19.429 7.429-37.714 21.143-51.429l344.571-344.571-60-60c-7.429-7.429-7.429-18.857 0-26.286l120-120c7.429-7.429 18.857-7.429 26.286 0l59.429 59.429 127.429-128.571c70.857-72 186.857-71.429 258.286 0zM292.571 841.143l329.143-329.143-109.714-109.714-329.143 329.143v109.714h109.714z"],"width":1042.2857142857142,"tags":["eyedropper"],"defaultCode":61947,"grid":14},{"paths":["M922.857 0c52 0 100 38.857 100 93.143 0 30.286-12 59.429-25.714 86.286-44.571 84.571-194.286 364-265.714 429.714-34.857 32.571-76 52-124.571 52-96.571 0-175.429-82.286-175.429-178.286 0-45.714 18.857-90.286 52.571-121.143l364.571-330.857c20-18.286 46.286-30.857 74.286-30.857zM403.429 590.857c29.714 57.714 84 101.143 146.857 117.714l0.571 40.571c3.429 162.857-109.714 274.857-273.143 274.857-193.714 0-277.714-154.286-277.714-329.714 21.143 14.286 94.857 73.143 118.857 73.143 14.286 0 26.286-8 31.429-21.143 48.571-126.857 124.571-149.714 253.143-155.429z"],"width":1022.8297142857142,"tags":["paint-brush"],"defaultCode":61948,"grid":14},{"paths":["M1024 804.571v219.429h-1024v-219.429c56 0 85.714-25.143 109.143-45.143 19.429-17.143 32.571-28 61.714-28s41.714 10.857 61.714 28c23.429 20 52.571 45.143 109.143 45.143 56 0 85.143-25.143 109.143-45.143 19.429-17.143 32-28 61.143-28s42.286 10.857 61.714 28c23.429 20 53.143 45.143 109.143 45.143s85.714-25.143 109.143-45.143c19.429-17.143 32.571-28 61.714-28 28.571 0 41.714 10.857 61.143 28 23.429 20 53.143 45.143 109.143 45.143zM1024 621.714v109.714c-29.143 0-41.714-10.857-61.714-28-23.429-20-52.571-45.143-108.571-45.143-56.571 0-85.714 25.143-109.143 45.143-20 17.143-32.571 28-61.714 28s-42.286-10.857-61.714-28c-23.429-20-52.571-45.143-109.143-45.143-56 0-85.143 25.143-109.143 45.143-19.429 17.143-32 28-61.143 28s-42.286-10.857-61.714-28c-23.429-20-53.143-45.143-109.143-45.143-56.571 0-85.714 25.143-109.143 45.143-19.429 17.143-32.571 28-61.714 28v-109.714c0-60.571 49.143-109.714 109.714-109.714h36.571v-256h146.286v256h146.286v-256h146.286v256h146.286v-256h146.286v256h36.571c60.571 0 109.714 49.143 109.714 109.714zM292.571 128c0 60.571-32.571 91.429-73.143 91.429s-73.143-32.571-73.143-73.143c0-70.857 73.143-52.571 73.143-146.286 27.429 0 73.143 67.429 73.143 128zM585.143 128c0 60.571-32.571 91.429-73.143 91.429s-73.143-32.571-73.143-73.143c0-70.857 73.143-52.571 73.143-146.286 27.429 0 73.143 67.429 73.143 128zM877.714 128c0 60.571-32.571 91.429-73.143 91.429s-73.143-32.571-73.143-73.143c0-70.857 73.143-52.571 73.143-146.286 27.429 0 73.143 67.429 73.143 128z"],"width":1024,"tags":["birthday-cake"],"defaultCode":61949,"grid":14},{"paths":["M1170.286 877.714v73.143h-1170.286v-877.714h73.143v804.571h1097.143zM950.857 292.571l146.286 512h-950.857v-329.143l256-329.143 329.143 329.143z"],"width":1170.2857142857142,"tags":["area-chart"],"defaultCode":61950,"grid":14},{"paths":["M438.857 508.571l312 312c-79.429 80.571-190.286 130.286-312 130.286-242.286 0-438.857-196.571-438.857-438.857s196.571-438.857 438.857-438.857v435.429zM545.714 512h441.714c0 121.714-49.714 232.571-130.286 312zM950.857 438.857h-438.857v-438.857c242.286 0 438.857 196.571 438.857 438.857z"],"width":987.4285714285713,"tags":["pie-chart"],"defaultCode":61952,"grid":14},{"paths":["M1170.286 877.714v73.143h-1170.286v-877.714h73.143v804.571h1097.143zM1097.143 164.571v248.571c0 16-19.429 24.571-31.429 12.571l-69.143-69.143-361.714 361.714c-7.429 7.429-18.857 7.429-26.286 0l-133.143-133.143-237.714 237.714-109.714-109.714 334.286-334.286c7.429-7.429 18.857-7.429 26.286 0l133.143 133.143 265.143-265.143-69.143-69.143c-12-12-3.429-31.429 12.571-31.429h248.571c10.286 0 18.286 8 18.286 18.286z"],"width":1170.2857142857142,"tags":["line-chart"],"defaultCode":61953,"grid":14},{"paths":["M738.286 402.286c0 3.429 4.571 19.429 5.714 23.429 15.429 46.857 51.429 56.571 94.286 68.571 95.429 26.857 185.714 77.714 185.714 189.714 0 113.714-94.857 193.714-205.714 193.714-184 0-241.143-225.143-294.286-362.286-44-113.143-90.286-179.429-217.714-179.429-113.143 0-212.571 108.571-212.571 220 0 118.286 88.571 228 211.429 228 54.286 0 110.857-11.429 147.429-54.286v0c17.714-20 34.857-41.714 47.429-66.286l48 86.857c-6.286 14.286-15.429 28-25.143 40l0.571 0.571c-57.714 66.857-136.571 86.857-221.714 86.857-172.571 0-301.714-152.571-301.714-320.571 0-162.857 141.714-314.286 306.286-314.286 273.143 0 286.857 236.571 379.429 426.857 25.143 52.571 68 114.286 133.143 114.286 59.429 0 112-38.286 112-101.143 0-136-249.714-43.429-285.143-266.857-1.143-6.286-1.714-12.571-1.714-18.857 0-84.571 79.429-157.143 163.429-154.286 50.286 1.714 80.571 3.429 120.571 38.857h-0.571c15.429 14.286 26.857 33.714 38.857 50.286l-73.714 56.571c-8.571-16-16.571-29.143-30.857-40v-0.571c-13.714-12.571-38.286-12-55.429-12-37.143 0-68 28-68 66.286z"],"width":1024,"tags":["lastfm"],"defaultCode":61954,"grid":14},{"paths":["M818.286 601.143c0-80.571-65.143-117.143-133.714-136.571-31.429-8.571-57.143-16-68.571-50.286-0.571-2.857-3.429-13.714-3.429-16 0-27.429 21.714-47.429 48.571-47.429 12.571 0 30.286-0.571 40.571 8.571h-0.571c10.857 8 16 17.143 22.286 29.143l53.143-40.571c-8.571-12-17.143-26.286-28-36.571v0c-26.857-24-52-28-87.429-28-60 0-116.571 49.143-116.571 111.429 0 4.571 0.571 8.571 1.143 13.143 12.571 77.714 52 101.714 121.714 121.714 34.286 9.714 82.857 25.143 83.429 67.429v2.857c0.571 45.714-37.714 73.143-80.571 73.143-46.857 0-77.143-44.571-95.429-82.286-66.286-136.571-76.571-307.429-273.143-307.429-118.286 0-224.571 109.143-220.571 226.286v0.571c4 122.286 88 230.286 217.143 230.286 61.143 0 118.286-14.286 159.429-62.857v0c6.857-9.143 13.143-18.857 17.714-29.143l-34.286-62.286c-32 60.571-71.429 86.857-140 86.857-90.286 0-152.571-80-152.571-166.286 0-79.429 73.143-156 153.143-156 91.429 0 124.571 47.429 156.571 129.143 38.286 98.286 79.429 260.571 212 260.571 79.429 0 148-57.714 148-139.429zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["lastfm-square"],"defaultCode":61955,"grid":14},{"paths":["M658.286 512c0-161.143-131.429-292.571-292.571-292.571s-292.571 131.429-292.571 292.571 131.429 292.571 292.571 292.571 292.571-131.429 292.571-292.571zM1097.143 512c0-161.143-131.429-292.571-292.571-292.571h-220.571c89.143 66.857 147.429 173.143 147.429 292.571s-58.286 225.714-147.429 292.571h220.571c161.143 0 292.571-131.429 292.571-292.571zM1170.286 512c0 201.714-164 365.714-365.714 365.714h-438.857c-201.714 0-365.714-164-365.714-365.714s164-365.714 365.714-365.714h438.857c201.714 0 365.714 164 365.714 365.714z"],"width":1170.2857142857142,"tags":["toggle-off"],"defaultCode":61956,"grid":14},{"paths":["M0 512c0-201.714 164-365.714 365.714-365.714h438.857c201.714 0 365.714 164 365.714 365.714s-164 365.714-365.714 365.714h-438.857c-201.714 0-365.714-164-365.714-365.714zM804.571 804.571c161.143 0 292.571-131.429 292.571-292.571s-131.429-292.571-292.571-292.571-292.571 131.429-292.571 292.571 131.429 292.571 292.571 292.571z"],"width":1170.2857142857142,"tags":["toggle-on"],"defaultCode":61957,"grid":14},{"paths":["M435.429 658.286h-179.429c-30.286 0-47.429-34.286-29.143-58.286l107.429-143.429c-24-11.429-50.286-17.714-78.286-17.714-100.571 0-182.857 82.286-182.857 182.857s82.286 182.857 182.857 182.857c88.571 0 162.286-62.857 179.429-146.286zM329.143 585.143h106.286c-6.857-32-21.714-61.143-42.857-84.571zM603.429 585.143l164.571-219.429h-274.286l-56.571 75.429c38.286 37.714 64 88 72 144h94.286zM1243.429 621.714c0-100.571-82.286-182.857-182.857-182.857-24.571 0-47.429 5.143-69.143 13.714l99.429 148.571c11.429 17.143 6.857 40-9.714 50.857-6.286 4.571-13.714 6.286-20.571 6.286-12 0-23.429-5.714-30.286-16.571l-99.429-148.571c-32.571 33.143-53.143 78.286-53.143 128.571 0 100.571 82.286 182.857 182.857 182.857s182.857-82.286 182.857-182.857zM1316.571 621.714c0 141.143-114.857 256-256 256s-256-114.857-256-256c0-75.429 33.143-143.429 85.143-190.286l-37.143-56-201.714 268c-6.857 9.714-17.714 14.857-29.143 14.857h-112.571c-17.714 124-124 219.429-253.143 219.429-141.143 0-256-114.857-256-256s114.857-256 256-256c44.571 0 86.286 11.429 122.857 31.429l78.286-104.571h-128c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h219.429v73.143h248.571l-48.571-73.143h-126.857c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h146.286c12 0 23.429 6.286 30.286 16l152.571 228.571c33.143-16 70.286-25.143 109.714-25.143 141.143 0 256 114.857 256 256z"],"width":1316.5714285714284,"tags":["bicycle"],"defaultCode":61958,"grid":14},{"paths":["M219.429 694.857c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM804.571 694.857c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM778.286 468.571l-41.143-219.429c-3.429-17.143-18.286-29.714-36-29.714h-524.571c-17.714 0-32.571 12.571-36 29.714l-41.143 219.429c-4 22.857 13.143 43.429 36 43.429h606.857c22.857 0 40-20.571 36-43.429zM649.143 118.857c0-15.429-12-27.429-27.429-27.429h-365.714c-14.857 0-27.429 12-27.429 27.429s12.571 27.429 27.429 27.429h365.714c15.429 0 27.429-12 27.429-27.429zM877.714 533.143v344.571h-73.143v73.143c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143v-73.143h-438.857v73.143c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143v-73.143h-73.143v-344.571c0-46.857 4-81.714 14.286-127.429l58.857-259.429c10.857-91.429 170.857-146.286 365.714-146.286s354.857 54.857 365.714 146.286l60 259.429c10.286 45.714 13.143 80.571 13.143 127.429z"],"width":877.7142857142857,"tags":["bus"],"defaultCode":61959,"grid":14},{"paths":["M836 475.429c0 26.857-21.714 49.143-49.143 49.143h-401.143c-27.429 0-49.143-22.286-49.143-49.143s21.714-49.143 49.143-49.143h401.143c27.429 0 49.143 22.286 49.143 49.143zM958.286 475.429c0-33.714-4.571-65.714-13.143-97.143h-561.143c-27.429 0-49.143-21.714-49.143-48.571 0-27.429 21.714-49.143 49.143-49.143h518.857c-65.714-106.857-183.429-177.714-317.143-177.714-205.714 0-373.143 166.857-373.143 372.571 0 33.714 4.571 65.714 13.143 97.143h561.143c27.429 0 49.143 21.714 49.143 48.571 0 27.429-21.714 49.143-49.143 49.143h-518.857c65.714 106.857 183.429 177.714 317.714 177.714 205.143 0 372.571-166.857 372.571-372.571zM1170.286 329.714c0 26.857-21.714 48.571-49.143 48.571h-74.857c6.286 31.429 9.714 64 9.714 97.143 0 259.429-210.857 470.857-470.286 470.857-190.286 0-354.286-113.143-428.571-276h-108c-27.429 0-49.143-21.714-49.143-49.143 0-26.857 21.714-48.571 49.143-48.571h75.429c-6.286-31.429-9.714-64-9.714-97.143 0-259.429 210.857-470.857 470.857-470.857 189.714 0 353.714 113.143 428 276h107.429c27.429 0 49.143 21.714 49.143 49.143z"],"width":1170.2857142857142,"tags":["ioxhost"],"defaultCode":61960,"grid":14},{"paths":["M544.571 216l-65.143 187.429 66.857 12c17.143-46.857 94.286-257.714 94.286-296 0-14.286-4.571-32-21.714-32-32 0-66.286 104-74.286 128.571zM373.714 608.571c6.286 16.571 13.143 33.143 18.857 50.286 12.571-14.286 25.714-27.429 40.571-38.286-20-4-40-5.714-59.429-12zM206.857 96.571c0 58.286 69.143 240 90.857 297.714 8-4.571 18.286-5.714 28-5.714 13.714 0 29.143 1.714 42.857 2.857l-69.143-200.571c-7.429-21.714-40.571-125.714-70.286-125.714-15.429 0-22.286 18.286-22.286 31.429zM161.714 530.286c0 41.714 112 195.429 153.714 195.429 11.429 0 21.143-12.571 21.143-22.857 0-13.143-13.143-45.714-18.286-58.286-14.857-38.286-69.143-156.571-116-156.571-15.429 0-40.571 26.857-40.571 42.286zM71.429 721.714c0 20.571 6.857 40.571 14.286 59.429 45.143 111.429 146.857 176.571 265.714 176.571 86.857 0 160-33.143 218.286-97.143 61.714-68.571 86.857-153.143 86.857-244 0-32 0.571-82.857-24.571-105.714-48-42.286-210.857-58.286-275.429-58.286-8 0-21.714 0.571-28 6.286-6.857 2.857-6.857 13.714-6.857 20 0 87.429 184.571 79.429 240 79.429 10.857 0 16 2.857 22.857 10.857 7.429 9.143 9.714 20 10.857 31.429-14.857 14.857-35.429 23.429-54.857 30.857-18.857 6.857-37.143 14.286-53.143 26.286-44 32-87.429 86.857-87.429 143.429 0 35.429 21.143 65.714 21.143 100.571 0 0.571-4 13.143-4 14.857-65.143-4.571-81.143-69.143-83.429-123.429-6.857 1.714-16 1.143-23.429 1.143 1.143 4 1.143 8 1.143 12 0 41.714-37.143 72-77.143 72-61.714 0-143.429-72.571-143.429-135.429 0-17.143 7.429-26.857 18.857-38.286 11.429 14.286 23.429 28.571 34.286 43.429 16.571 22.286 45.143 59.429 76 59.429 8 0 23.429-6.857 23.429-16.571 0-25.714-93.714-146.286-116.571-146.286-36 0-55.429 47.429-55.429 77.143zM6.286 726.857c0-74.286 28.571-123.429 102.286-143.429-6.286-16.571-16-41.714-16-59.429 0-46.857 57.714-105.143 104.571-105.143 13.714 0 27.429 4 40 8.571-24-68-93.143-259.429-93.143-324 0-57.714 29.143-103.429 91.429-103.429 80 0 170.857 288 190.286 345.143 25.143-62.857 104-326.286 193.143-326.286 56 0 87.429 44.571 87.429 97.714 0 60.571-67.429 249.143-90.857 314.286 96 23.429 109.714 101.143 109.714 187.429 0 228.571-145.714 405.714-381.714 405.714-43.429 0-86.286-8.571-127.429-24-108.571-41.143-209.714-152.571-209.714-273.143z"],"width":731.4285714285713,"tags":["angellist"],"defaultCode":61961,"grid":14},{"paths":["M448.571 576h118.286c-10.857 120.571-80 193.714-178.857 193.714-123.429 0-198.286-94.857-198.286-246.857 0-150.857 82.286-245.143 186.286-245.143 114.286 0 178.286 70.857 188 190.857h-116c-4-48.571-28-76.571-66.857-76.571-42.857 0-68.571 45.714-68.571 136 0 65.714 11.429 127.429 73.714 127.429 39.429 0 57.714-34.286 62.286-79.429zM855.429 576h117.714c-10.857 120.571-79.429 193.714-178.286 193.714-123.429 0-198.286-94.857-198.286-246.857 0-150.857 82.286-245.143 186.286-245.143 114.286 0 178.286 70.857 188 190.857h-116.571c-3.429-48.571-28-76.571-66.286-76.571-42.857 0-68.571 45.714-68.571 136 0 65.714 10.857 127.429 73.143 127.429 39.429 0 58.286-34.286 62.857-79.429zM1060.571 508c0-153.143-8-219.429-43.429-267.429-7.429-9.714-19.429-16-29.143-22.857-36-26.286-203.429-36-398.286-36s-370.286 9.714-405.714 36c-10.286 7.429-22.857 13.143-30.286 22.857-35.429 47.429-42.857 114.286-42.857 267.429 0 153.714 8 220 42.857 267.429 8 10.857 20 15.429 30.286 23.429 35.429 26.286 210.857 37.143 405.714 37.143s362.286-10.286 398.286-37.143c9.714-7.429 22.286-12 29.143-23.429 36-46.857 43.429-113.714 43.429-267.429zM1170.286 73.143v877.714h-1170.286v-877.714h1170.286z"],"width":1170.2857142857142,"tags":["cc"],"defaultCode":61962,"grid":14},{"paths":["M566.857 356.571v283.429c0 10.286-8 18.286-18.286 18.286h-91.429c-10.286 0-18.286-8-18.286-18.286v-283.429c0-85.714-69.714-155.429-155.429-155.429h-155.429v658.286c0 10.286-8 18.286-18.286 18.286h-91.429c-10.286 0-18.286-8-18.286-18.286v-768c0-10.286 8-18.286 18.286-18.286h265.143c156.571 0 283.429 126.857 283.429 283.429zM786.286 91.429v502.857c0 156.571-126.857 283.429-283.429 283.429h-265.143c-10.286 0-18.286-8-18.286-18.286v-548.571c0-10.286 8-18.286 18.286-18.286h91.429c10.286 0 18.286 8 18.286 18.286v438.857h155.429c85.714 0 155.429-69.714 155.429-155.429v-502.857c0-10.286 8-18.286 18.286-18.286h91.429c10.286 0 18.286 8 18.286 18.286z"],"width":786.2857142857142,"tags":["ils","shekel","sheqel"],"defaultCode":61963,"grid":14},{"paths":["M749.143 481.143v65.143c0 18.286-10.857 29.714-29.143 29.714h-115.429c-18.286 0-29.714-11.429-29.714-29.714v-65.143c0-18.286 11.429-29.714 29.714-29.714h115.429c18.286 0 29.143 11.429 29.143 29.714zM469.143 612.571v-142.857c0-40.571-26.857-67.429-67.429-67.429h-76c-25.714 0-44.571 10.857-54.857 29.714-10.286-18.857-29.143-29.714-54.857-29.714h-74.286c-40 0-67.429 26.857-67.429 67.429v142.857c0 8.571 4 12.571 12 12.571h31.429c8.571 0 12.571-4 12.571-12.571v-131.429c0-18.286 10.857-29.714 29.714-29.714h53.714c18.286 0 29.714 11.429 29.714 29.714v131.429c0 8.571 3.429 12.571 12 12.571h30.857c8.571 0 12.571-4 12.571-12.571v-131.429c0-18.286 11.429-29.714 29.714-29.714h55.429c18.286 0 29.143 11.429 29.143 29.714v131.429c0 8.571 4 12.571 12.571 12.571h31.429c8 0 12-4 12-12.571zM805.714 557.714v-88c0-40.571-27.429-67.429-68-67.429h-150.857c-40.571 0-68 26.857-68 67.429v234.286c0 8.571 4.571 12 12.571 12h31.429c8.571 0 12-3.429 12-12v-102.857c10.857 14.857 28 24 53.714 24h109.143c40.571 0 68-27.429 68-67.429zM877.714 205.714v612.571c0 73.143-59.429 132.571-132.571 132.571h-612.571c-73.143 0-132.571-59.429-132.571-132.571v-612.571c0-73.143 59.429-132.571 132.571-132.571h612.571c73.143 0 132.571 59.429 132.571 132.571z"],"width":877.7142857142857,"tags":["meanpath"],"defaultCode":61964,"grid":14},{"paths":["M522.857 620.571h-168l84-314.857zM572 804.571h177.714l-185.143-585.143h-251.429l-185.143 585.143h177.714l218.857-179.429zM877.714 237.714v548.571c0 90.286-74.286 164.571-164.571 164.571h-548.571c-90.286 0-164.571-74.286-164.571-164.571v-548.571c0-90.286 74.286-164.571 164.571-164.571h548.571c90.286 0 164.571 74.286 164.571 164.571z"],"width":877.7142857142857,"tags":["buysellads"],"defaultCode":61965,"grid":14},{"paths":["M1170.286 511.429c0 16-11.429 29.143-26.286 32l-117.143 203.429c1.143 3.429 1.714 6.857 1.714 10.286 0 15.429-10.857 28.571-25.714 31.429l-110.286 192.571c1.143 2.857 1.714 5.714 1.714 9.143 0 17.714-14.286 32.571-32.571 32.571-9.143 0-17.714-4-23.429-10.286h-228.571c-5.714 6.857-14.857 11.429-24.571 11.429s-18.857-4.571-24.571-11.429h-228c-5.714 6.857-14.286 11.429-24.571 11.429-17.714 0-32.571-14.286-32.571-32.571 0-4 1.143-8 2.286-11.429l-110.286-191.429c-14.857-2.857-25.714-16-25.714-31.429 0-4 0.571-6.857 1.714-10.286l-117.714-203.429c-14.857-3.429-25.714-16.571-25.714-32 0-16 11.429-29.143 26.857-32l113.714-196.571c0-1.143-0.571-2.286-0.571-3.429 0-13.143 8-24 19.429-29.143l119.429-207.429c-1.143-2.857-2.286-6.857-2.286-10.286 0-18.286 14.857-32.571 32.571-32.571 10.286 0 18.857 4.571 25.143 12h226.286c5.714-7.429 14.286-12 24.571-12s18.857 4.571 24.571 12h227.429c6.286-7.429 14.857-12 25.143-12 17.714 0 32.571 14.286 32.571 32.571 0 3.429-1.143 6.857-2.286 10.286l118.286 204.571c17.143 0.571 31.429 14.857 31.429 32 0 5.714-1.714 10.857-4 15.429l106.857 185.143c14.286 2.857 25.143 16 25.143 31.429zM607.429 968h222.286l-195.429-202.286h-81.714l-195.429 202.286h205.714c5.714-5.143 13.714-9.143 22.286-9.143s16.571 4 22.286 9.143zM64 504c0.571 2.286 0.571 4.571 0.571 7.429s0 5.714-1.143 8.571l118.857 205.714c2.857 0.571 5.714 2.286 8.571 3.429l107.429-113.714v-198.286l-106.857-110.857c-5.143 3.429-10.857 5.143-16.571 5.714zM563.429 56h-221.714l108.571 114.286 316.571-114.286h-160c-5.714 5.714-13.143 9.143-21.714 9.143s-16-3.429-21.714-9.143zM965.143 748.571c0.571-2.286 1.714-4.571 2.857-6.286l-36.571-38.857-9.714 45.143h43.429zM904.571 748.571l12.571-60-144-152-169.143 175.429 36 36.571h264.571zM854.286 958.857l9.143-16 37.143-177.143h-244l190.286 196c2.286-1.143 4.571-2.286 7.429-2.857zM330.286 968h2.857l195.429-202.286h-213.143v191.429l2.286 3.429c5.143 1.714 9.143 4 12.571 7.429zM315.429 748.571h229.714l36.571-37.714-176.571-183.429-89.714 94.857v126.286zM205.143 748.571h93.143v-108l-96 101.143c1.143 2.286 2.286 4.571 2.857 6.857zM204.571 277.143c0 0.571 0.571 1.714 0.571 2.286 0 6.286-1.714 12-4.571 16.571l97.714 101.143v-153.714zM315.429 237.143v177.714l87.429 89.714 169.714-179.429-127.429-134.857zM317.714 63.429l-2.286 4.571v150.857l117.143-42.286-109.143-114.857c-1.714 0.571-3.429 1.143-5.714 1.714zM826.857 56h-9.143l-354.857 128 121.714 128.571zM584.571 337.143l-169.714 180 177.714 182.286 169.143-175.429zM393.143 515.429l-77.714-80.571v162.286zM593.143 723.429l-24 25.143h48.571zM785.143 524.571l136 143.429 75.429-356.571-1.714-2.857-0.571-0.571zM981.714 296c-2.857-4.571-4.571-10.286-4.571-16.571v-1.143l-123.429-214.857c-2.857-0.571-5.143-1.714-7.429-2.857l-249.714 264.571 177.143 186.857zM298.286 225.143v-127.429l-93.143 161.143zM298.286 765.714h-93.143l93.143 161.714v-161.714zM918.286 765.714l-27.429 129.714 74.286-129.714h-46.857zM988 725.714l118.286-206.286c-0.571-2.857-1.143-5.143-1.143-8 0-3.429 1.143-6.286 1.714-9.143l-97.714-169.143-73.714 349.714 44 46.857c2.857-1.714 5.714-2.857 8.571-4z"],"width":1170.2857142857142,"tags":["connectdevelop"],"defaultCode":61966,"grid":14},{"paths":["M0 388.571c0-98.857 78.857-184 179.429-184h424l201.143-204.571v840c0 99.429-78.857 184-179.429 184h-445.714c-100.571 0-179.429-84.571-179.429-184v-451.429zM704 819.429l-100.571-102.857v-242.857c0-34.857-28-64-62.857-64h-276.571c-34.857 0-62.857 29.143-62.857 64v281.143c0 34.857 28 64.571 62.857 64.571h440z"],"width":804.5714285714286,"tags":["dashcube"],"defaultCode":61968,"grid":14},{"paths":["M533.714 85.714c-241.714 92-432 285.143-522.286 527.429-7.429-33.143-11.429-66.857-11.429-100.571 0-241.714 195.429-437.714 437.143-437.714 32.571 0 65.143 4 96.571 10.857zM687.429 153.714c35.429 24.571 66.857 54.286 93.714 88.571-296 86.286-527.429 318.857-612 615.429-33.714-26.286-64-57.143-88.571-92.571 85.143-293.714 313.714-524.571 606.857-611.429zM268.571 916c88-271.429 300.571-485.143 570.857-574.857 15.429 35.429 25.714 73.143 30.857 111.429-222.857 91.429-400 269.714-490.857 493.143-38.286-5.143-75.429-14.857-110.857-29.714zM877.714 949.143c-70.857-18.286-141.143-40-209.714-65.714-50.286 31.429-106.857 52.571-165.714 61.143 83.429-156 212-285.143 367.429-369.143-8 57.143-28 113.143-57.714 162.286 25.714 69.143 47.429 140 65.714 211.429z"],"width":877.7142857142857,"tags":["forumbee"],"defaultCode":61969,"grid":14},{"paths":["M1081.714 224l88.571 726.857c-53.143 0-98.857-10.857-146.857-32.571-71.429-32.571-145.714-52-224.571-52-81.143 0-156 26.857-213.714 84.571-57.714-57.714-132.571-84.571-213.714-84.571-78.857 0-153.143 19.429-224.571 52-46.286 20.571-93.143 32.571-144 32.571h-2.857l88.571-726.857c81.714-46.286 181.143-72.571 275.429-72.571 77.143 0 156.571 16 221.143 60.571 64.571-44.571 144-60.571 221.143-60.571 94.286 0 193.714 26.286 275.429 72.571zM798.857 788c108.571 0 182.857 29.143 281.143 69.714l-70.857-583.429c-64-29.143-140-44.571-210.286-44.571-80 0-154.857 25.143-213.714 80.571-58.857-55.429-133.714-80.571-213.714-80.571-70.286 0-146.286 15.429-210.286 44.571l-70.857 583.429c98.286-40.571 172.571-69.714 281.143-69.714 78.286 0 147.429 20 213.714 61.714 66.286-41.714 135.429-61.714 213.714-61.714zM821.714 768.571l-31.429-518.286c-82.286 1.714-147.429 29.714-205.143 88.571-60-61.143-128-88.571-213.714-88.571-64 0-132.571 13.143-192 37.714l-65.143 537.714c86.286-35.429 162.286-57.714 257.143-57.714 75.429 0 149.143 18.286 213.714 58.286 64.571-40 138.286-60 213.714-58.286z"],"width":1170.2857142857142,"tags":["leanpub"],"defaultCode":61970,"grid":14},{"paths":["M857.143 783.429v-418.857c0-16-13.143-29.143-28.571-29.143h-53.143c-15.429 0-28.571 13.143-28.571 29.143v418.857c0 15.429 13.143 28.571 28.571 28.571h53.143c15.429 0 28.571-13.143 28.571-28.571zM694.857 783.429v-303.429c0-15.429-13.143-28.571-28.571-28.571h-57.714c-15.429 0-28.571 13.143-28.571 28.571v303.429c0 15.429 13.143 28.571 28.571 28.571h57.714c15.429 0 28.571-13.143 28.571-28.571zM528 783.429v-245.143c0-15.429-13.143-28.571-28.571-28.571h-57.714c-15.429 0-28.571 13.143-28.571 28.571v245.143c0 15.429 13.143 28.571 28.571 28.571h57.714c15.429 0 28.571-13.143 28.571-28.571zM361.143 783.429v-206.857c0-15.429-13.143-28.571-28.571-28.571h-57.714c-15.429 0-28.571 13.143-28.571 28.571v206.857c0 15.429 13.143 28.571 28.571 28.571h57.714c15.429 0 28.571-13.143 28.571-28.571zM1170.286 700c0 126.857-103.429 229.714-229.714 229.714h-710.857c-126.286 0-229.714-102.857-229.714-229.714 0-88.571 52-169.714 132-207.429-4-13.714-5.714-28-5.714-41.714 0-86.286 70.286-156.571 156.571-156.571 37.714 0 74.286 13.714 102.857 38.286 34.286-139.429 160-238.286 304-238.286 172.571 0 313.143 140.571 313.143 313.143 0 23.429-2.286 46.857-8 69.714 102.857 25.143 175.429 117.714 175.429 222.857z"],"width":1170.2857142857142,"tags":["sellsy"],"defaultCode":61971,"grid":14},{"paths":["M0 0h877.714v795.429l-443.429 193.143-434.286-193.143v-795.429zM820.571 758.286v-529.143h-763.429v529.143l377.714 168zM820.571 172v-114.857h-763.429v114.857h763.429zM103.429 342.286v65.714h-21.143v-65.714h21.143zM103.429 426.857v65.714h-21.143v-65.714h21.143zM103.429 511.429v65.714h-21.143v-65.714h21.143zM103.429 596v65.714h-21.143v-65.714h21.143zM103.429 680.571v65.714h-21.143v-65.714h21.143zM118.286 762.286l8.571-19.429 60 26.857-8.571 18.857zM196 796.571l8.571-19.429 60 26.286-8.571 19.429zM273.143 830.857l8.571-19.429 60 26.286-8.571 19.429zM350.857 864.571l8.571-18.857 59.429 26.286-8.571 19.429zM455.429 872l60-26.286 8.571 18.857-60 26.857zM532.571 837.714l60-26.286 8.571 19.429-60 26.286zM610.286 803.429l60-26.286 8.571 19.429-60 26.286zM687.429 769.714l60-26.857 8.571 19.429-60 26.286zM148 84v20.571h-65.143v-20.571h65.143zM240.571 84v20.571h-65.714v-20.571h65.714zM333.143 84v20.571h-65.714v-20.571h65.714zM425.143 84v20.571h-65.143v-20.571h65.143zM517.714 84v20.571h-65.143v-20.571h65.143zM610.286 84v20.571h-65.714v-20.571h65.714zM702.857 84v20.571h-65.714v-20.571h65.714zM794.857 84v20.571h-65.143v-20.571h65.143zM103.429 278.286v45.143h-21.143v-65.714h65.714v20.571h-44.571zM240.571 257.714v20.571h-65.714v-20.571h65.714zM333.143 257.714v20.571h-65.714v-20.571h65.714zM425.143 257.714v20.571h-65.143v-20.571h65.143zM517.714 257.714v20.571h-65.143v-20.571h65.143zM610.286 257.714v20.571h-65.714v-20.571h65.714zM702.857 257.714v20.571h-65.714v-20.571h65.714zM774.286 323.429v-45.143h-44.571v-20.571h65.714v65.714h-21.143zM774.286 408v-65.714h21.143v65.714h-21.143zM774.286 492.571v-65.714h21.143v65.714h-21.143zM774.286 577.143v-65.714h21.143v65.714h-21.143zM774.286 661.714v-65.714h21.143v65.714h-21.143zM774.286 746.286v-65.714h21.143v65.714h-21.143zM434.286 726.286c-98.286 0-178.857-80-178.857-178.857 0-98.286 80.571-178.857 178.857-178.857 98.857 0 178.857 80.571 178.857 178.857 0 98.857-80 178.857-178.857 178.857zM340 508.571c0 86.857 152 23.429 152 74.286 0 25.714-46.857 28-64 28-24 0-58.286-5.143-70.286-29.143h-1.714l-17.714 36c29.143 18.286 57.143 24 92.571 24 38.286 0 100-11.429 100-61.143 0-94.286-153.714-32-153.714-74.286 0-25.714 40.571-29.143 58.286-29.143 21.143 0 57.143 6.286 69.714 25.714h1.714l17.143-33.143c-29.714-12-53.714-23.429-86.857-23.429-39.429 0-97.143 12.571-97.143 62.286z"],"width":877.7142857142857,"tags":["shirtsinbulk"],"defaultCode":61972,"grid":14},{"paths":["M493.143 589.714c0-85.714-69.143-154.857-154.857-154.857-85.143 0-154.286 69.143-154.286 154.857 0 85.143 69.143 154.286 154.286 154.286 85.714 0 154.857-69.143 154.857-154.286zM986.286 589.143c0-85.143-69.143-154.286-154.286-154.286-85.714 0-154.857 69.143-154.857 154.286 0 85.714 69.143 154.857 154.857 154.857 85.143 0 154.286-69.143 154.286-154.857zM1170.286 126.857v770.286c0 33.714-27.429 61.143-61.714 61.143h-1046.857c-34.286 0-61.714-27.429-61.714-61.143v-770.286c0-33.714 27.429-61.143 61.714-61.143h246.286c33.714 0 61.714 27.429 61.714 61.143v92h430.857v-92c0-33.714 28-61.143 61.714-61.143h246.286c34.286 0 61.714 27.429 61.714 61.143z"],"width":1170.2857142857142,"tags":["simplybuilt"],"defaultCode":61973,"grid":14},{"paths":["M817.143 333.143c0 0-0.571-0.571 0 0v0zM965.714 449.714c110.857 0 204.571 82.857 204.571 196 0 120.571-96 209.143-214.857 209.143-303.429 0-359.429-456.571-657.714-456.571-115.429 0-199.429 73.714-199.429 192 0 122.286 91.429 196 209.714 196 77.714 0 166.286-32.571 229.143-77.714 10.286-7.429 30.857-29.714 41.714-29.714s20 9.143 20 20c0 14.286-24 34.857-34.286 44-74.857 65.143-183.429 112-282.857 112-152.571 0-281.714-108-281.714-265.143s123.429-272.571 279.429-272.571c338.857 0 406.857 449.714 661.714 449.714 76.571 0 134.286-49.714 134.286-128 0-72.571-56-127.429-128-127.429-32 0-64 21.143-85.714 21.143-15.429 0-29.143-13.143-29.143-28.571 0-21.143 9.714-43.429 9.714-66.286 0-121.714-93.143-209.714-213.714-209.714-97.143 0-146.286 67.429-162.286 67.429-11.429 0-20.571-9.143-20.571-20.571 0-10.286 7.429-18.857 14.286-26.286 46.286-52.571 118.286-80 188-80 145.143 0 254.286 106.857 254.286 252 0 12.571-0.571 25.143-2.286 37.714 21.714-5.714 44-8.571 65.714-8.571z"],"width":1170.2857142857142,"tags":["skyatlas"],"defaultCode":61974,"grid":14},{"paths":["M694.857 402.286c0-20-16.571-36.571-36.571-36.571h-73.143v-73.143c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571v73.143h-73.143c-20 0-36.571 16.571-36.571 36.571s16.571 36.571 36.571 36.571h73.143v73.143c0 20 16.571 36.571 36.571 36.571s36.571-16.571 36.571-36.571v-73.143h73.143c20 0 36.571-16.571 36.571-36.571zM365.714 877.714c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM877.714 877.714c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM950.857 256v292.571c0 18.286-13.714 34.286-32.571 36.571l-596.571 69.714c2.286 12.571 7.429 26.857 7.429 40s-8 25.143-13.714 36.571h525.714c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571h-585.143c-20 0-36.571-16.571-36.571-36.571 0-17.714 26.857-61.714 34.857-78.286l-101.143-470.286h-116.571c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h146.286c38.857 0 39.429 45.714 45.143 73.143h686.286c20 0 36.571 16.571 36.571 36.571z"],"width":950.8571428571428,"tags":["cart-plus"],"defaultCode":61975,"grid":14},{"paths":["M731.429 402.286c0-20-16.571-36.571-36.571-36.571-9.714 0-18.857 4-25.714 10.857l-84 83.429v-167.429c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571v167.429l-84-83.429c-6.857-6.857-16-10.857-25.714-10.857-20 0-36.571 16.571-36.571 36.571 0 9.714 4 18.857 10.857 25.714l146.286 146.286c6.857 6.857 16 10.857 25.714 10.857s18.857-4 25.714-10.857l146.286-146.286c6.857-6.857 10.857-16 10.857-25.714zM365.714 877.714c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM877.714 877.714c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM950.857 256v292.571c0 18.286-13.714 34.286-32.571 36.571l-596.571 69.714c2.286 12.571 7.429 26.857 7.429 40s-8 25.143-13.714 36.571h525.714c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571h-585.143c-20 0-36.571-16.571-36.571-36.571 0-17.714 26.857-61.714 34.857-78.286l-101.143-470.286h-116.571c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h146.286c38.857 0 39.429 45.714 45.143 73.143h686.286c20 0 36.571 16.571 36.571 36.571z"],"width":950.8571428571428,"tags":["cart-arrow-down"],"defaultCode":61976,"grid":14},{"paths":["M121.143 438.857l356 380-171.429-380h-184.571zM585.143 880l199.429-441.143h-398.857zM307.429 365.714l116.571-219.429h-149.714l-164.571 219.429h197.714zM693.143 818.857l356-380h-184.571zM390.286 365.714h389.714l-116.571-219.429h-156.571zM862.857 365.714h197.714l-164.571-219.429h-149.714zM943.429 88l219.429 292.571c10.857 13.714 9.714 33.714-2.286 46.857l-548.571 585.143c-6.857 7.429-16.571 11.429-26.857 11.429s-20-4-26.857-11.429l-548.571-585.143c-12-13.143-13.143-33.143-2.286-46.857l219.429-292.571c6.857-9.714 17.714-14.857 29.143-14.857h658.286c11.429 0 22.286 5.143 29.143 14.857z"],"width":1170.2857142857142,"tags":["diamond"],"defaultCode":61977,"grid":14},{"paths":["M1034.857 888.571c14.286-14.286 37.143-14.286 51.429 0l73.143 73.143-51.429 51.429-47.429-47.429-47.429 47.429c-6.857 7.429-16.571 10.857-25.714 10.857s-18.857-3.429-25.714-10.857l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-73.143-73.143 51.429-51.429 47.429 47.429 47.429-47.429c14.286-14.286 37.143-14.286 51.429 0l47.429 47.429 47.429-47.429c14.286-14.286 37.143-14.286 51.429 0l47.429 47.429 47.429-47.429c14.286-14.286 37.143-14.286 51.429 0l47.429 47.429 47.429-47.429c14.286-14.286 37.143-14.286 51.429 0l47.429 47.429 47.429-47.429c14.286-14.286 37.143-14.286 51.429 0l47.429 47.429 47.429-47.429c14.286-14.286 37.143-14.286 51.429 0l47.429 47.429zM135.429 866.857c-14.286 14.286-37.143 14.286-51.429 0l-73.143-73.143 51.429-51.429 47.429 46.857 47.429-46.857c14.286-14.286 37.143-14.286 51.429 0l47.429 46.857 36.571-36.571v-167.429l-120-179.429c-13.143-20-4-47.429 18.857-55.429l101.143-33.143v-170.857h73.143v-73.143h146.286v-73.143h146.286v73.143h146.286v73.143h73.143v170.857l101.143 33.143c22.857 8 32 35.429 18.857 55.429l-120 179.429v167.429l10.857-10.286c14.286-14.286 37.143-14.286 51.429 0l47.429 46.857 47.429-46.857c14.286-14.286 37.143-14.286 51.429 0l73.143 73.143-51.429 51.429-47.429-47.429-47.429 47.429c-6.857 7.429-16.571 10.857-25.714 10.857s-18.857-3.429-25.714-10.857l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-47.429-47.429-47.429 47.429c-14.286 14.286-37.143 14.286-51.429 0l-47.429-47.429zM365.714 219.429v73.143l219.429-73.143 219.429 73.143v-73.143h-73.143v-73.143h-292.571v73.143h-73.143z"],"width":1170.2857142857142,"tags":["ship"],"defaultCode":61978,"grid":14},{"paths":["M329.143 877.714l54.857-256-54.857-73.143-73.143-36.571zM475.429 877.714l73.143-365.714-73.143 36.571-54.857 73.143zM566.857 300.571c-0.571-1.143-1.143-2.286-2.286-3.429-5.143-4-46.286-4.571-54.857-4.571-32.571 0-63.429 4.571-95.429 10.857-4 1.143-8 1.143-12 1.143s-8 0-12-1.143c-32-6.286-62.857-10.857-95.429-10.857-8.571 0-49.714 0.571-54.857 4.571-1.143 1.143-1.714 2.286-2.286 3.429 0.571 5.143 1.143 10.286 2.286 15.429 3.429 4.571 6.286 2.857 8.571 9.714 14.857 40.571 21.714 72 73.143 72 73.714 0 53.143-68 77.143-68h6.857c24 0 3.429 68 77.143 68 51.429 0 58.286-31.429 73.143-72 2.286-6.857 5.143-5.143 8.571-9.714 1.143-5.143 1.714-10.286 2.286-15.429zM804.571 802.857c0 93.143-61.143 148-152.571 148h-499.429c-91.429 0-152.571-54.857-152.571-148 0-103.429 18.286-260 124.571-311.429l-51.429-125.714h122.286c-8-23.429-12.571-48-12.571-73.143 0-6.286 0.571-12.571 1.143-18.286-22.286-4.571-110.857-22.857-110.857-54.857 0-33.714 97.143-52 120-56.571 12-42.857 40.571-108 69.714-141.714 11.429-13.143 25.714-21.143 43.429-21.143 34.286 0 61.714 35.429 96 35.429s61.714-35.429 96-35.429c17.714 0 32 8 43.429 21.143 29.143 33.714 57.714 98.857 69.714 141.714 22.857 4.571 120 22.857 120 56.571 0 32-88.571 50.286-110.857 54.857 2.857 30.857-1.143 61.714-11.429 91.429h122.286l-46.857 128.571c102.286 53.143 120 206.857 120 308.571z"],"width":804.5714285714286,"tags":["user-secret"],"defaultCode":61979,"grid":14},{"paths":["M1314.857 592c18.286 160.571-112.571 295.429-272 285.143-122.286-8-224-105.714-236.571-228-9.143-86.857 25.143-165.143 83.429-217.714l-40.571-61.143c-72 60-117.714 149.714-117.714 250.286 0 20.571-16 37.714-36.571 37.714h-185.714c-17.714 124-124 219.429-253.143 219.429-141.143 0-256-114.857-256-256s114.857-256 256-256c30.286 0 59.429 5.714 86.857 15.429l13.714-25.714c-44-39.429-101.714-62.857-173.714-62.857h-36.571c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571h73.143c128 0 193.143 52.571 219.429 73.143h358.286l-48.571-73.143h-126.857c-22.286 0-40-20-36-42.857 2.857-17.714 20-30.286 37.714-30.286h144.571c12 0 23.429 6.286 30.286 16l40 60 65.143-65.143c6.857-6.857 16.571-10.857 26.286-10.857h57.714c20 0 36.571 16.571 36.571 36.571v73.143c0 20-16.571 36.571-36.571 36.571h-102.286l65.714 98.286c46.286-22.286 100-31.429 157.143-20.571 109.143 20 194.286 111.429 206.857 221.714zM256 804.571c88.571 0 162.286-62.857 179.429-146.286h-179.429c-12.571 0-24.571-6.857-31.429-17.714-6.286-10.857-6.857-24.571-0.571-36l84-158.286c-16.571-4.571-33.714-7.429-52-7.429-100.571 0-182.857 82.286-182.857 182.857s82.286 182.857 182.857 182.857zM1060.571 804.571c100.571 0 182.857-82.286 182.857-182.857s-82.286-182.857-182.857-182.857c-24.571 0-47.429 5.143-69.143 13.714l99.429 148.571c11.429 17.143 6.857 40-9.714 50.857-6.286 4.571-13.714 6.286-20.571 6.286-12 0-23.429-5.714-30.286-16.571l-99.429-148.571c-32.571 33.143-53.143 78.286-53.143 128.571 0 100.571 82.286 182.857 182.857 182.857z"],"width":1333.174857142857,"tags":["motorcycle"],"defaultCode":61980,"grid":14},{"paths":["M804.571 877.714c0 100.571-208.571 146.286-402.286 146.286s-402.286-45.714-402.286-146.286c0-77.714 116-114.286 213.143-130.857 20-3.429 38.857 9.714 42.286 29.714s-9.714 38.857-29.714 42.286c-117.714 20.571-150.857 52.571-152.571 59.429 5.714 19.429 115.429 72.571 329.143 72.571s323.429-53.143 329.143-73.714c-1.714-5.714-34.857-37.714-152.571-58.286-20-3.429-33.143-22.286-29.714-42.286s22.286-33.143 42.286-29.714c97.143 16.571 213.143 53.143 213.143 130.857zM585.143 365.714v219.429c0 20-16.571 36.571-36.571 36.571h-36.571v219.429c0 20-16.571 36.571-36.571 36.571h-146.286c-20 0-36.571-16.571-36.571-36.571v-219.429h-36.571c-20 0-36.571-16.571-36.571-36.571v-219.429c0-40.571 32.571-73.143 73.143-73.143h219.429c40.571 0 73.143 32.571 73.143 73.143zM530.286 146.286c0 70.857-57.143 128-128 128s-128-57.143-128-128 57.143-128 128-128 128 57.143 128 128z"],"width":804.5714285714286,"tags":["street-view"],"defaultCode":61981,"grid":14},{"paths":["M731.429 585.143h174.286c-6.857 7.429-11.429 11.429-12.571 12.571l-356 342.857c-6.857 6.857-16 10.286-25.143 10.286s-18.286-3.429-25.143-10.286l-356.571-344c-1.143-0.571-5.714-4.571-12-11.429h210.857c16.571 0 31.429-11.429 35.429-27.429l40-160.571 108.571 381.143c4.571 15.429 18.857 26.286 35.429 26.286v0c16 0 30.286-10.857 34.857-26.286l83.429-277.143 32 64c6.286 12 18.857 20 32.571 20zM1024 340.571c0 65.714-28.571 125.714-58.857 171.429h-210.857l-63.429-126.286c-6.286-13.143-21.143-21.143-35.429-20-15.429 1.714-28 11.429-32 26.286l-73.714 245.714-112-392c-4.571-15.429-18.857-26.286-36-26.286-16.571 0-30.857 11.429-34.857 27.429l-66.286 265.143h-241.714c-30.286-45.714-58.857-105.714-58.857-171.429 0-167.429 102.286-267.429 273.143-267.429 100 0 193.714 78.857 238.857 123.429 45.143-44.571 138.857-123.429 238.857-123.429 170.857 0 273.143 100 273.143 267.429z"],"width":1024,"tags":["heartbeat"],"defaultCode":61982,"grid":14},{"paths":["M658.286 329.143c0 169.143-128 308.571-292.571 326.857v148.571h128c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-128v128c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-128h-128c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h128v-148.571c-173.143-18.857-305.714-172.571-291.429-353.714 12.571-155.429 136-282.857 290.286-300 198.857-22.286 366.857 132.571 366.857 326.857zM73.143 329.143c0 141.143 114.857 256 256 256s256-114.857 256-256-114.857-256-256-256-256 114.857-256 256z"],"width":645.12,"tags":["venus"],"defaultCode":61985,"grid":14},{"paths":["M841.143 73.143c20 0 36.571 16.571 36.571 36.571v237.714c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-149.714l-218.286 218.857c45.143 56 72 127.429 72 205.143 0 181.714-147.429 329.143-329.143 329.143s-329.143-147.429-329.143-329.143 147.429-329.143 329.143-329.143c77.714 0 149.143 26.857 205.143 72l218.286-218.286h-149.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h237.714zM329.143 877.714c141.143 0 256-114.857 256-256s-114.857-256-256-256-256 114.857-256 256 114.857 256 256 256z"],"width":877.7142857142857,"tags":["mars"],"defaultCode":61986,"grid":14},{"paths":["M474.286 180.571c108.571 53.714 184 165.714 184 294.857 0 169.143-128 308.571-292.571 326.857v75.429h54.857c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-54.857v54.857c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-54.857h-54.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h54.857v-75.429c-164.571-18.286-292.571-157.714-292.571-326.857 0-129.143 75.429-241.143 184-294.857-60-34.857-106.857-89.714-130.286-156-4.571-12 4.571-24.571 17.143-24.571h39.429c7.429 0 13.714 4.571 16.571 11.429 33.143 79.429 111.429 134.857 202.286 134.857s169.143-55.429 202.286-134.857c2.857-6.857 9.143-11.429 21.143-11.429h34.857c12.571 0 21.714 12.571 17.143 24.571-23.429 66.286-70.286 121.143-130.286 156zM329.143 731.429c141.143 0 256-114.857 256-256s-114.857-256-256-256-256 114.857-256 256 114.857 256 256 256z"],"width":658.2857142857142,"tags":["mercury"],"defaultCode":61987,"grid":14},{"paths":["M585.143 18.286c0-10.286 8-18.286 18.286-18.286h164.571c20 0 36.571 16.571 36.571 36.571v164.571c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-76.571l-145.143 145.714c44.571 56 72 127.429 72 205.143 0 169.143-128 308.571-292.571 326.857v75.429h54.857c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-54.857v54.857c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-54.857h-54.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h54.857v-75.429c-172.571-18.857-305.714-172.571-291.429-353.143 12-155.429 135.429-282.857 289.714-300.571 92.571-10.857 178.286 17.714 243.429 69.714l145.714-145.143h-76.571c-10.286 0-18.286-8-18.286-18.286v-36.571zM329.143 731.429c141.143 0 256-114.857 256-256s-114.857-256-256-256-256 114.857-256 256 114.857 256 256 256z"],"width":791.4057142857142,"tags":["intersex","transgender"],"defaultCode":61988,"grid":14},{"paths":["M731.429 18.286c0-10.286 8-18.286 18.286-18.286h164.571c20 0 36.571 16.571 36.571 36.571v164.571c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-76.571l-145.143 145.714c44.571 56 72 127.429 72 205.143 0 169.143-128 308.571-292.571 326.857v75.429h54.857c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-54.857v54.857c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-54.857h-54.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h54.857v-75.429c-164.571-18.286-292.571-157.714-292.571-326.857 0-77.714 27.429-149.143 72-205.143l-29.714-30.286-57.714 63.429c-6.857 7.429-18.286 8-25.714 1.714l-27.429-25.143c-7.429-6.286-8-18.286-1.143-25.714l60-65.714-63.429-64v76.571c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-164.571c0-20 16.571-36.571 36.571-36.571h164.571c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-76l60.571 61.143 49.143-53.714c6.857-7.429 18.286-8 25.714-1.714l27.429 25.143c7.429 6.286 8 18.286 1.143 25.714l-51.429 56.571 32.571 32c56-44.571 127.429-72 205.143-72s149.143 27.429 205.143 72l145.714-145.143h-76.571c-10.286 0-18.286-8-18.286-18.286v-36.571zM475.429 731.429c141.143 0 256-114.857 256-256s-114.857-256-256-256-256 114.857-256 256 114.857 256 256 256z"],"width":950.8571428571428,"tags":["transgender-alt"],"defaultCode":61989,"grid":14},{"paths":["M1022.857 302.286c14.286 181.143-118.286 334.857-291.429 353.714v148.571h128c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-128v128c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-128h-292.571v128c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-128h-128c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h128v-148.571c-173.143-18.857-305.714-172.571-291.429-353.714 12.571-157.143 138.857-285.714 295.429-300.571 80-8 154.857 13.143 215.429 53.714 60.571-40.571 135.429-61.714 215.429-53.714 156.571 14.857 282.857 143.429 295.429 300.571zM512 508c45.143-46.286 73.143-109.143 73.143-178.857s-28-132.571-73.143-178.857c-45.143 46.286-73.143 109.143-73.143 178.857s28 132.571 73.143 178.857zM329.143 585.143c45.143 0 87.429-12 124.571-32.571-54.857-58.857-88-137.143-88-223.429s33.714-164.571 88-223.429c-37.143-20.571-79.429-32.571-124.571-32.571-141.143 0-256 114.857-256 256s114.857 256 256 256zM658.286 804.571v-148.571c-53.714-5.714-103.429-25.143-146.286-53.714-42.857 28.571-92.571 48-146.286 53.714v148.571h292.571zM694.857 585.143c141.143 0 256-114.857 256-256s-114.857-256-256-256c-45.143 0-87.429 12-124.571 32.571 54.286 58.857 88 137.143 88 223.429s-33.143 164.571-88 223.429c37.143 20.571 79.429 32.571 124.571 32.571z"],"width":1024,"tags":["venus-double"],"defaultCode":61990,"grid":14},{"paths":["M877.714 237.714c0-10.286 8-18.286 18.286-18.286h164.571c20 0 36.571 16.571 36.571 36.571v164.571c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-76.571l-145.143 145.714c56 70.286 84 163.429 66.857 263.429-24 138.857-137.143 248-276.571 267.429-163.429 22.857-308-74.857-357.714-217.143-180.571-9.143-322.857-164.571-310.857-350.286 10.286-156.571 134.286-286.857 290.286-304.571 92-10.857 177.714 17.714 243.429 69.714l145.714-145.143h-76.571c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h164.571c20 0 36.571 16.571 36.571 36.571v164.571c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-76.571l-145.143 145.714c22.857 28.571 40.571 61.143 53.143 96.571 70.857 3.429 135.429 29.714 187.429 70.857l145.714-145.143h-76.571c-10.286 0-18.286-8-18.286-18.286v-36.571zM585.143 475.429c0-11.429-1.143-22.286-2.286-33.143-122.857 18.857-217.143 124.571-217.143 252.571 0 11.429 1.143 22.286 2.286 33.143 122.857-18.857 217.143-124.571 217.143-252.571zM73.143 475.429c0 129.143 96.571 236 221.143 253.143-1.143-10.857-1.714-22.286-1.714-33.714 0-161.143 116.571-295.429 270.286-323.429-40-89.714-129.714-152-233.714-152-141.143 0-256 114.857-256 256zM621.714 950.857c141.143 0 256-114.857 256-256 0-129.143-96.571-236-221.143-253.143 1.143 10.857 1.714 22.286 1.714 33.714 0 161.143-116.571 295.429-270.286 323.429 40 89.714 129.714 152 233.714 152z"],"width":1085.7325714285714,"tags":["mars-double"],"defaultCode":61991,"grid":14},{"paths":["M950.857 18.286c0-10.286 8-18.286 18.286-18.286h164.571c20 0 36.571 16.571 36.571 36.571v164.571c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-76.571l-145.143 145.714c56 70.286 84 163.429 66.857 263.429-24 137.143-135.429 246.286-273.143 266.857-86.857 13.143-168.571-8-233.714-51.429-42.857 28.571-92.571 47.429-146.286 53.143v75.429h54.857c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-54.857v54.857c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-54.857h-54.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h54.857v-75.429c-179.429-20-316-184.571-289.143-373.714 19.429-142.286 132.571-256.571 274.286-278.286 87.429-13.143 169.143 8 234.286 51.429 52.571-34.857 115.429-55.429 182.857-55.429 77.714 0 149.143 27.429 205.143 72l145.714-145.143h-76.571c-10.286 0-18.286-8-18.286-18.286v-36.571zM512 654.286c45.143-46.286 73.143-109.143 73.143-178.857s-28-132.571-73.143-178.857c-45.143 46.286-73.143 109.143-73.143 178.857s28 132.571 73.143 178.857zM73.143 475.429c0 141.143 114.857 256 256 256 45.143 0 88-12 124.571-32.571-54.286-58.857-88-137.143-88-223.429s33.714-164.571 88-223.429c-36.571-20.571-79.429-32.571-124.571-32.571-141.143 0-256 114.857-256 256zM694.857 731.429c141.143 0 256-114.857 256-256s-114.857-256-256-256c-45.143 0-88 12-124.571 32.571 54.286 58.857 88 137.143 88 223.429s-33.714 164.571-88 223.429c36.571 20.571 79.429 32.571 124.571 32.571z"],"width":1146.8799999999999,"tags":["venus-mars"],"defaultCode":61992,"grid":14},{"paths":["M841.143 73.143c20 0 36.571 16.571 36.571 36.571v237.714c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-149.714l-121.714 122.286 80 80c6.857 7.429 6.857 18.857 0 25.714l-26.286 26.286c-6.857 6.857-18.286 6.857-25.714 0l-80-80.571-44.571 45.143c45.143 56 72 127.429 72 205.143 0 181.714-147.429 329.143-329.143 329.143s-329.143-147.429-329.143-329.143 147.429-329.143 329.143-329.143c77.714 0 149.143 26.857 205.143 72l44.571-44.571-98.286-98.286c-6.857-7.429-6.857-18.857 0-25.714l26.286-26.286c6.857-6.857 18.286-6.857 25.714 0l98.286 98.286 121.714-121.714h-149.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h237.714zM329.143 877.714c141.143 0 256-114.857 256-256s-114.857-256-256-256-256 114.857-256 256 114.857 256 256 256z"],"width":877.7142857142857,"tags":["mars-stroke"],"defaultCode":61993,"grid":14},{"paths":["M365.714 368c164.571 18.286 292.571 157.714 292.571 326.857 0 194.286-168 349.143-366.857 326.857-154.286-17.143-277.714-144.571-290.286-300-14.286-181.143 118.286-334.857 291.429-353.714v-75.429h-91.429c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h91.429v-94.286l-52.571 52.571c-7.429 6.857-18.857 6.857-25.714 0l-26.286-26.286c-6.857-6.857-6.857-18.286 0-25.714l115.429-114.857c14.286-14.286 37.143-14.286 51.429 0l115.429 114.857c6.857 7.429 6.857 18.857 0 25.714l-26.286 26.286c-6.857 6.857-18.286 6.857-25.714 0l-52.571-52.571v94.286h91.429c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-91.429v75.429zM329.143 950.857c141.143 0 256-114.857 256-256s-114.857-256-256-256-256 114.857-256 256 114.857 256 256 256z"],"width":645.12,"tags":["mars-stroke-v"],"defaultCode":61994,"grid":14},{"paths":["M1086.286 522.857c14.286 14.286 14.286 37.143 0 51.429l-168 168c-6.857 7.429-18.857 7.429-25.714 0l-25.714-25.714c-7.429-6.857-7.429-18.857 0-25.714l105.714-105.714h-168v128c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-128h-75.429c-18.286 164.571-157.714 292.571-326.857 292.571-194.286 0-349.143-168-326.857-366.857 17.143-154.286 144.571-277.714 300-290.286 181.143-14.286 334.857 118.286 353.714 291.429h75.429v-128c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286v128h168l-105.714-105.714c-7.429-6.857-7.429-18.857 0-25.714l25.714-25.714c6.857-7.429 18.857-7.429 25.714 0zM329.143 804.571c141.143 0 256-114.857 256-256s-114.857-256-256-256-256 114.857-256 256 114.857 256 256 256z"],"width":1080.5394285714285,"tags":["mars-stroke-h"],"defaultCode":61995,"grid":14},{"paths":["M658.286 329.143c0 169.143-128 308.571-292.571 326.857v349.714c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-349.714c-164.571-18.286-292.571-157.714-292.571-326.857 0-181.714 147.429-329.143 329.143-329.143s329.143 147.429 329.143 329.143zM329.143 585.143c141.143 0 256-114.857 256-256s-114.857-256-256-256-256 114.857-256 256 114.857 256 256 256z"],"width":658.2857142857142,"tags":["neuter"],"defaultCode":61996,"grid":14},{"paths":["M585.143 548.571c0-141.143-114.857-256-256-256s-256 114.857-256 256 114.857 256 256 256 256-114.857 256-256zM658.286 548.571c0 181.714-147.429 329.143-329.143 329.143s-329.143-147.429-329.143-329.143 147.429-329.143 329.143-329.143 329.143 147.429 329.143 329.143z"],"width":658.2857142857142,"tags":["genderless"],"defaultCode":61997,"grid":14},{"paths":["M829.143 73.143c26.857 0 48.571 21.714 48.571 48.571v780.571c0 26.857-21.714 48.571-48.571 48.571h-223.429v-340h113.714l17.143-132.571h-130.857v-84.571c0-38.286 10.286-64 65.714-64l69.714-0.571v-118.286c-12-1.714-53.714-5.143-101.714-5.143-101.143 0-170.857 61.714-170.857 174.857v97.714h-114.286v132.571h114.286v340h-420c-26.857 0-48.571-21.714-48.571-48.571v-780.571c0-26.857 21.714-48.571 48.571-48.571h780.571z"],"width":877.7142857142857,"tags":["facebook-official"],"defaultCode":62000,"grid":14},{"paths":["M0 341.143c0-210.857 193.143-341.143 388.571-341.143 179.429 0 342.857 123.429 342.857 312.571 0 177.714-90.857 374.857-293.143 374.857-48 0-108.571-24-132-68.571-43.429 172-40 197.714-136 329.143l-8 2.857-5.143-5.714c-3.429-36-8.571-71.429-8.571-107.429 0-116.571 53.714-285.143 80-398.286-14.286-29.143-18.286-64.571-18.286-96.571 0-57.714 40-130.857 105.143-130.857 48 0 73.714 36.571 73.714 81.714 0 74.286-50.286 144-50.286 216 0 49.143 40.571 83.429 88 83.429 131.429 0 172-189.714 172-290.857 0-135.429-96-209.143-225.714-209.143-150.857 0-267.429 108.571-267.429 261.714 0 73.714 45.143 111.429 45.143 129.143 0 14.857-10.857 67.429-29.714 67.429-2.857 0-6.857-1.143-9.714-1.714-81.714-24.571-111.429-133.714-111.429-208.571z"],"width":731.4285714285713,"tags":["pinterest-p"],"defaultCode":62001,"grid":14},{"paths":["M562.857 556.571c9.714 0 102.857 48.571 106.857 55.429 1.143 2.857 1.143 6.286 1.143 8.571 0 14.286-4.571 30.286-9.714 43.429-13.143 32-66.286 52.571-98.857 52.571-27.429 0-84-24-108.571-35.429-81.714-37.143-132.571-100.571-181.714-173.143-21.714-32-41.143-71.429-40.571-110.857v-4.571c1.143-37.714 14.857-64.571 42.286-90.286 8.571-8 17.714-12.571 29.714-12.571 6.857 0 13.714 1.714 21.143 1.714 15.429 0 18.286 4.571 24 19.429 4 9.714 33.143 87.429 33.143 93.143 0 21.714-39.429 46.286-39.429 59.429 0 2.857 1.143 5.714 2.857 8.571 12.571 26.857 36.571 57.714 58.286 78.286 26.286 25.143 54.286 41.714 86.286 57.714 4 2.286 8 4 12.571 4 17.143 0 45.714-55.429 60.571-55.429zM446.857 859.429c197.714 0 358.857-161.143 358.857-358.857s-161.143-358.857-358.857-358.857-358.857 161.143-358.857 358.857c0 75.429 24 149.143 68.571 210.286l-45.143 133.143 138.286-44c58.286 38.286 127.429 59.429 197.143 59.429zM446.857 69.714c237.714 0 430.857 193.143 430.857 430.857s-193.143 430.857-430.857 430.857c-72.571 0-144.571-18.286-208.571-53.714l-238.286 76.571 77.714-231.429c-40.571-66.857-61.714-144-61.714-222.286 0-237.714 193.143-430.857 430.857-430.857z"],"width":877.7142857142857,"tags":["whatsapp"],"defaultCode":62002,"grid":14},{"paths":["M73.143 804.571h585.143v-73.143h-585.143v73.143zM73.143 512h585.143v-73.143h-585.143v73.143zM969.143 768c0-30.286-24.571-54.857-54.857-54.857s-54.857 24.571-54.857 54.857 24.571 54.857 54.857 54.857 54.857-24.571 54.857-54.857zM73.143 219.429h585.143v-73.143h-585.143v73.143zM969.143 475.429c0-30.286-24.571-54.857-54.857-54.857s-54.857 24.571-54.857 54.857 24.571 54.857 54.857 54.857 54.857-24.571 54.857-54.857zM969.143 182.857c0-30.286-24.571-54.857-54.857-54.857s-54.857 24.571-54.857 54.857 24.571 54.857 54.857 54.857 54.857-24.571 54.857-54.857zM1024 658.286v219.429h-1024v-219.429h1024zM1024 365.714v219.429h-1024v-219.429h1024zM1024 73.143v219.429h-1024v-219.429h1024z"],"width":1024,"tags":["server"],"defaultCode":62003,"grid":14},{"paths":["M402.286 512c-121.143 0-219.429-98.286-219.429-219.429s98.286-219.429 219.429-219.429 219.429 98.286 219.429 219.429-98.286 219.429-219.429 219.429zM950.857 585.143h201.143c9.714 0 18.286 8.571 18.286 18.286v109.714c0 9.714-8.571 18.286-18.286 18.286h-201.143v201.143c0 9.714-8.571 18.286-18.286 18.286h-109.714c-9.714 0-18.286-8.571-18.286-18.286v-201.143h-201.143c-9.714 0-18.286-8.571-18.286-18.286v-109.714c0-9.714 8.571-18.286 18.286-18.286h201.143v-201.143c0-9.714 8.571-18.286 18.286-18.286h109.714c9.714 0 18.286 8.571 18.286 18.286v201.143zM530.286 713.143c0 40 33.143 73.143 73.143 73.143h146.286v136c-28 20.571-63.429 28.571-97.714 28.571h-499.429c-91.429 0-152.571-54.857-152.571-148 0-129.143 30.286-327.429 197.714-327.429 9.143 0 15.429 4 22.286 9.714 56 42.857 110.286 69.714 182.286 69.714s126.286-26.857 182.286-69.714c6.857-5.714 13.143-9.714 22.286-9.714 48.571 0 91.429 18.286 124 54.857h-127.429c-40 0-73.143 33.143-73.143 73.143v109.714z"],"width":1170.2857142857142,"tags":["user-plus"],"defaultCode":62004,"grid":14},{"paths":["M402.286 512c-121.143 0-219.429-98.286-219.429-219.429s98.286-219.429 219.429-219.429 219.429 98.286 219.429 219.429-98.286 219.429-219.429 219.429zM1017.714 694.857l142.286 142.286c3.429 3.429 5.143 8 5.143 13.143 0 4.571-1.714 9.143-5.143 12.571l-77.714 77.714c-3.429 3.429-8 5.143-12.571 5.143-5.143 0-9.714-1.714-13.143-5.143l-142.286-142.286-142.286 142.286c-3.429 3.429-8 5.143-13.143 5.143-4.571 0-9.143-1.714-12.571-5.143l-77.714-77.714c-3.429-3.429-5.143-8-5.143-12.571 0-5.143 1.714-9.714 5.143-13.143l142.286-142.286-142.286-142.286c-3.429-3.429-5.143-8-5.143-13.143 0-4.571 1.714-9.143 5.143-12.571l77.714-77.714c3.429-3.429 8-5.143 12.571-5.143 5.143 0 9.714 1.714 13.143 5.143l142.286 142.286 142.286-142.286c3.429-3.429 8-5.143 13.143-5.143 4.571 0 9.143 1.714 12.571 5.143l77.714 77.714c3.429 3.429 5.143 8 5.143 12.571 0 5.143-1.714 9.714-5.143 13.143zM733.143 694.857l-103.429 103.429c-13.714 13.714-21.143 32.571-21.143 52 0 18.857 7.429 37.714 21.143 51.429l47.429 47.429c-8 1.143-16.571 1.714-25.143 1.714h-499.429c-91.429 0-152.571-54.857-152.571-148 0-129.143 30.286-327.429 197.714-327.429 9.143 0 15.429 4 22.286 9.714 54.857 43.429 110.857 69.714 182.286 69.714s127.429-26.286 182.286-69.714c6.857-5.714 13.143-9.714 22.286-9.714 10.857 0 21.714 1.143 32.571 3.429-18.857 18.286-30.857 33.143-30.857 60.571 0 19.429 7.429 38.286 21.143 52z"],"width":1165.165714285714,"tags":["user-times"],"defaultCode":62005,"grid":14},{"paths":["M146.286 585.143h987.429c20 0 36.571 16.571 36.571 36.571v256h-146.286v-146.286h-877.714v146.286h-146.286v-694.857c0-20 16.571-36.571 36.571-36.571h73.143c20 0 36.571 16.571 36.571 36.571v402.286zM475.429 402.286c0-80.571-65.714-146.286-146.286-146.286s-146.286 65.714-146.286 146.286 65.714 146.286 146.286 146.286 146.286-65.714 146.286-146.286zM1170.286 548.571v-36.571c0-121.143-98.286-219.429-219.429-219.429h-402.286c-20 0-36.571 16.571-36.571 36.571v219.429h658.286z"],"width":1170.2857142857142,"tags":["bed","hotel"],"defaultCode":62006,"grid":14},{"paths":["M877.714 0l-109.714 256h109.714v109.714h-156.571l-31.429 73.143h188v109.714h-234.857l-204 475.429-204-475.429h-234.857v-109.714h188l-31.429-73.143h-156.571v-109.714h109.714l-109.714-256h146.286l184.571 438.857h216l184.571-438.857h146.286zM438.857 694.857l61.714-146.286h-123.429z"],"width":877.7142857142857,"tags":["viacoin"],"defaultCode":62007,"grid":14},{"paths":["M621.714 0c141.143 0 256 81.714 256 182.857v512c0 98.857-109.143 178.857-246.286 182.286l121.714 115.429c12 11.429 4 31.429-12.571 31.429h-603.429c-16.571 0-24.571-20-12.571-31.429l121.714-115.429c-137.143-3.429-246.286-83.429-246.286-182.286v-512c0-101.143 114.857-182.857 256-182.857h365.714zM438.857 768c60.571 0 109.714-49.143 109.714-109.714s-49.143-109.714-109.714-109.714-109.714 49.143-109.714 109.714 49.143 109.714 109.714 109.714zM768 438.857v-292.571h-658.286v292.571h658.286z"],"width":877.7142857142857,"tags":["train"],"defaultCode":62008,"grid":14},{"paths":["M621.714 0c141.143 0 256 81.714 256 182.857v512c0 98.857-109.143 178.857-246.286 182.286l121.714 115.429c12 11.429 4 31.429-12.571 31.429h-603.429c-16.571 0-24.571-20-12.571-31.429l121.714-115.429c-137.143-3.429-246.286-83.429-246.286-182.286v-512c0-101.143 114.857-182.857 256-182.857h365.714zM164.571 749.714c50.286 0 91.429-41.143 91.429-91.429s-41.143-91.429-91.429-91.429-91.429 41.143-91.429 91.429 41.143 91.429 91.429 91.429zM402.286 438.857v-292.571h-310.857v292.571h310.857zM713.143 749.714c50.286 0 91.429-41.143 91.429-91.429s-41.143-91.429-91.429-91.429-91.429 41.143-91.429 91.429 41.143 91.429 91.429 91.429zM804.571 438.857v-292.571h-329.143v292.571h329.143z"],"width":877.7142857142857,"tags":["subway"],"defaultCode":62009,"grid":14},{"paths":["M341.143 240.571v670.286c0 17.714-8.571 34.286-28 34.286-6.857 0-13.143-1.714-18.857-4.571l-265.714-133.143c-16-8-28.571-28.571-28.571-45.714v-651.429c0-14.286 6.857-27.429 22.286-27.429 9.143 0 17.143 4.571 25.143 8.571l292 146.286c0.571 0.571 1.714 2.286 1.714 2.857zM377.714 298.286l305.143 494.857-305.143-152v-342.857zM1024 308.571v602.286c0 18.857-10.857 32-29.714 32-9.714 0-18.857-2.857-26.857-7.429l-252-125.714zM1022.286 240c0 2.286-295.429 481.714-318.286 518.286l-222.857-362.286 185.143-301.143c6.286-10.286 17.714-16 29.714-16 5.143 0 10.286 1.143 14.857 3.429l309.143 154.286c1.143 0.571 2.286 1.714 2.286 3.429z"],"width":1024,"tags":["medium"],"defaultCode":62010,"grid":14},{"paths":["M462.286 573.714l152-285.143h-64l-89.714 178.286s-13.714 27.429-25.143 52.571c-10.857-26.286-24-52.571-24-52.571l-88.571-178.286h-68.571l150.286 281.714v185.143h57.714v-181.714zM877.714 73.143v877.714h-877.714v-877.714h877.714z"],"width":877.7142857142857,"tags":["y-combinator","yc"],"defaultCode":62011,"grid":14},{"paths":["M273.143 957.143c-5.714 12-22.286 28.571-36.571 34.286-20 6.857-44.571-6.286-45.714-20-1.143-17.714 42.857-49.714 61.714-53.143 18.286-3.429 26.857 24 20.571 38.857zM1039.429 957.143c5.143 12 21.714 28.571 36.571 34.286 19.429 6.857 44.571-6.286 45.143-20 1.714-17.714-42.857-49.714-61.714-53.143-17.714-3.429-26.286 24-20 38.857zM1066.857 894.857c10.286 20.571 50.857 50.857 76.571 57.714 34.857 9.714 68-6.857 68-31.429 0-37.714-71.429-88-104.571-91.429-31.429-4-52 40.571-40 65.143zM244.571 894.857c-10.286 20.571-50.286 50.857-76 57.714-34.857 9.714-68-6.857-68-31.429 0-37.714 71.429-88 104.571-91.429 31.429-4 52 40.571 39.429 65.143zM661.714 252.571h0.571c-15.429 0-30.286 2.857-43.429 8.571 20 6.286 34.857 24.571 34.857 45.714 0 26.857-23.429 48.571-52.571 48.571-19.429 0-36.571-10.286-45.714-24.571-1.714 8-2.857 15.429-2.857 24 0 56.571 48.571 102.286 109.143 102.286s109.714-45.714 109.714-102.286-49.143-102.286-109.714-102.286zM835.429 128c-75.429-82.857-172-101.143-266.286-49.714 53.143-118.857 258.286-102.857 266.286 49.714zM1264 836c2.857 4-0.571 14.286-6.286 24 2.286 7.429 4 14.857 4 22.857 1.714 66.857-93.714 135.429-155.429 137.714-36.571 1.714-73.143-17.714-90.286-49.714-240 8.571-480 10.286-719.429 0-17.714 32-54.286 50.857-90.857 49.714-61.143-2.286-156.571-70.857-155.429-137.714 0.571-8 1.714-15.429 4-22.857-5.714-9.714-9.143-20-6.286-24 2.286-3.429 9.714-3.429 17.714-0.571 6.857-10.857 14.857-20 23.429-29.143-2.286-9.714-2.286-18.286 1.143-21.714 4-3.429 13.143-2.286 22.286 2.286 9.714-6.857 21.143-13.714 33.714-19.429 0-10.286 2.857-18.286 7.429-21.143 6.857-3.429 18.857-1.143 29.143 9.143 12-1.714 24-1.714 34.857 1.143 7.429 1.714 14.857 5.714 21.714 10.857v-41.714c-3.429 0-6.286 0-10.286-1.143-37.143-6.857-77.714-32.571-86.857-75.429-3.429-14.286-3.429-29.714 0-46.286 6.857-28.571 31.429-45.143 53.143-54.286 1.714-12.571 17.143-29.714 31.429-33.714 16-4 26.286 9.714 29.714 21.714h7.429c10.286 1.143 26.857 3.429 34.286 13.143 1.143 1.143 2.286 2.857 2.857 4 11.429-1.143 23.429-2.857 34.857-4-5.143-4-10.857-7.429-17.143-9.714-10.857-18.857-29.143-23.429-52-24.571 0-1.714 0-3.429 0.571-5.714-41.714-1.143-93.143-12-116-37.714-26.286-29.143-30.857-78.857-25.714-116.571 4.571-37.143 20-80 51.429-102.286 17.714-12 45.714-1.714 48 20.571 1.143 9.714 2.857 42.857 12 48 10.286 5.143 26.857 7.429 43.429 6.857 17.143-16.571 35.429-30.857 56-42.286-31.429-2.857-61.143 3.429-92.571 8l26.857-26.286c26.286-25.143 61.143-46.857 93.143-63.429 49.714-25.143 105.714-44 161.143-49.143-39.429-16.571-84.571-25.143-126.286-34.857 161.714-34.286 369.143-46.857 516.571 79.429 38.286 32.571 68.571 76.571 90.286 126.857 23.429 2.857 53.143 3.429 69.143-5.143h0.571c9.143-5.143 10.857-37.714 12-48 2.286-21.714 30.286-32.571 48-20 31.429 22.286 46.857 65.143 52 101.714 4.571 37.714 0.571 87.429-26.286 116.571-22.857 25.714-72.571 37.143-113.714 38.286v5.714c-23.429 0.571-42.857 5.143-54.286 24.571-6.286 2.286-12 5.714-17.714 9.714 12 1.143 24 2.857 35.429 4 0.571-1.714 1.714-3.429 2.857-4.571 8-9.143 24.571-12 34.286-13.143h7.429c3.429-11.429 14.286-25.143 29.714-21.714s29.714 21.143 31.429 33.714c22.857 9.143 46.857 25.714 53.143 54.286 4 17.143 3.429 32 0.571 46.286-9.714 42.857-50.286 69.143-87.429 75.429-2.857 0.571-6.857 1.143-9.714 1.143 0 14.286 0 28-0.571 41.714 6.857-5.143 13.714-9.143 21.714-10.857 10.857-2.857 22.857-2.857 34.857-1.143 10.286-10.286 22.857-12.571 29.143-9.143 4.571 2.857 8 10.857 8 21.143 12 5.714 24 12.571 33.714 19.429 9.143-4.571 17.714-5.714 21.714-2.286 3.429 3.429 4 12 1.143 21.714 8.571 9.143 17.143 18.857 23.429 29.143 8-2.857 14.857-2.857 17.714 0.571zM1106.857 292c0 13.143-2.857 24.571-5.143 30.857 36.571 14.286 55.429 46.857 64 75.429 2.286-22.286-5.714-83.429-29.143-108-15.429-15.429-29.714-10.857-29.714 1.714zM1062.286 349.143v0c27.429 33.143 36 88 26.857 133.143 22.857-4.571 43.429-13.143 55.429-25.714 4-4.571 8-10.286 10.286-16-2.286-45.143-21.714-90.286-62.857-103.429-6.857 6.857-19.429 10.286-29.714 12v0zM1041.143 351.429c-8 0-17.143 0-25.143-0.571 16 43.429 26.286 90.286 30.286 136.571 7.429 0 16-0.571 24.571-1.714 12.571-51.429-0.571-109.143-29.714-134.286zM147.429 398.286c8.571-28.571 27.429-61.143 64-75.429-2.286-6.286-5.143-17.714-5.143-30.857 0-12.571-14.857-17.143-29.714-1.714-24 24.571-31.429 85.714-29.143 108zM168 456.571c12 13.143 32.571 21.143 55.429 25.714-9.143-45.143-0.571-100 26.857-133.143v0 0 0c-10.286-1.714-22.857-5.143-29.714-12-41.143 13.143-60 58.286-62.857 103.429 2.857 5.714 6.286 11.429 10.286 16zM269.143 487.429c5.143-46.857 19.429-92.571 41.714-134.286-10.857 2.286-21.143 6.286-31.429 10.286l-25.714 10.857v-0.571c-15.429 29.714-21.143 72.571-11.429 112 9.714 1.143 18.286 1.714 26.857 1.714zM819.429 509.714v0c7.429 37.714 10.286 75.429 16 113.143 2.286 13.143 6.286 16 18.857 9.714 33.714-17.143 48-82.857 48.571-120.571-27.429-1.714-55.429-1.714-83.429-2.286zM658.286 143.429c-88.571 0-161.143 72-161.143 160.571 0 89.143 72.571 161.143 161.143 161.143s161.143-72 161.143-161.143c0-88.571-72.571-160.571-161.143-160.571zM788.571 508.571c-40-0.571-80.571-0.571-120.571 0v-0.571c-0.571 10.857 0.571 80.571 9.143 86.857 23.429 11.429 83.429 9.714 108 2.286 11.429-3.429 5.143-78.286 3.429-88.571zM635.429 622.286c9.714-5.143 5.143-96 2.857-113.714v-0.571c-41.143 0.571-81.714 0.571-122.286 1.714-4 19.429-9.714 103.429 4 109.143 27.429 12 88 10.857 115.429 3.429zM410.286 514.286c-11.429 41.714 0.571 95.429 46.857 116 11.429 5.143 18.286 5.143 20.571-9.143 4-18.286 5.143-77.714 10.286-110.286v0c-25.714 0.571-52 1.714-77.714 3.429zM337.714 586.286c1.143 10.286-8 16.571-19.429 20.571 92.571 99.429 196 181.143 329.714 225.143 142.857-40.571 244.571-126.857 345.143-226.286-10.286-4-18.286-10.857-17.143-19.429 0.571-2.286 1.143-3.429 1.714-5.143v0 0c-18.857-1.714-37.714-4-56-5.714-20 69.714-76 112-98.857 66.857-5.714-10.857-7.429-24.571-9.714-35.429-8 17.714-28 17.143-52 18.857-28 2.286-66.857 2.857-93.143-6.286-6.286 27.429-23.429 27.429-56.571 30.286-29.714 2.857-102.857 8.571-116-22.857-2.286 60.571-74.286 21.143-95.429-14.857-6.857-12-11.429-24-14.857-37.143-16.571 1.714-33.143 3.429-49.714 5.714 1.143 1.714 1.714 4 2.286 5.714zM289.714 945.143c1.143-5.143 1.714-10.857 1.714-17.143-12-49.143-39.429-105.143-70.857-114.286-47.429-14.286-145.714 49.714-140 115.429 26.857 41.143 84.571 75.429 125.143 77.143 37.714 1.714 76-23.429 84-61.143zM291.429 847.429c6.857 18.857 13.714 44 15.429 68 70.857-41.143 146.286-75.429 224-99.429-81.714-43.429-144-101.143-205.714-162.857-4.571 2.857-10.857 5.143-16.571 7.429-0.571 1.714-0.571 3.429-1.143 5.143 9.714 5.714 16.571 12.571 12.571 21.143-4.571 8.571-18.286 16-32 19.429-4.571 5.714-10.857 10.286-16.571 13.714h-0.571c-0.571 28.571-0.571 57.143 0.571 85.714 8 14.286 14.857 29.143 20 41.714zM330.857 942.286c218.286 8.571 436.571 7.429 654.286 0-77.714-45.143-156.571-87.429-244.571-112-29.143 13.143-58.857 24-89.143 32.571-4.571 1.714-4.571 1.714-9.143 0-25.143-8-49.143-17.143-73.714-28-85.143 24.571-163.429 61.714-237.714 107.429h-0.571v0.571c0.571 0 0.571 0 0.571-0.571zM1007.429 916c1.714-24 9.143-49.714 16-68.571 4.571-12.571 10.857-26.857 18.857-40.571l-0.571 0.571c1.143-29.143 1.714-58.286 1.714-87.429-6.286-3.429-12-8.571-17.143-14.286-13.714-2.857-27.429-10.857-32-18.857-4-8.571 2.857-16 12.571-21.714-0.571-1.143-1.143-3.429-1.143-5.143-6.286-1.714-11.429-4-16-6.857-66.857 62.286-138.286 120-218.857 162.286 82.286 24.571 160.571 59.429 236.571 100.571zM1231.429 929.143c6.286-65.714-92-129.714-140-115.429-30.857 9.143-58.857 65.143-70.857 114.286 0 6.286 0.571 12 1.714 17.143 8 37.714 46.286 62.857 84 61.143 40.571-1.714 98.286-36 125.143-77.143z"],"width":1311.9634285714285,"tags":["optin-monster"],"defaultCode":62012,"grid":14},{"paths":["M870.857 892c0 52-41.714 93.714-93.714 93.714s-94.286-41.714-94.286-93.714 42.286-94.286 94.286-94.286 93.714 42.286 93.714 94.286zM442.857 892c0 52-42.286 93.714-94.286 93.714s-93.714-41.714-93.714-93.714 41.714-94.286 93.714-94.286 94.286 42.286 94.286 94.286zM0 38.286c168.571 177.714 326.857 204 948.571 204s348.571 138.286-35.429 481.143c121.714-211.429 540-398.857-145.714-388.571-657.714 9.714-696.571-190.286-767.429-296.571z"],"width":1570.304,"tags":["opencart"],"defaultCode":62013,"grid":14},{"paths":["M512 36.571c-262.286 0-475.429 213.143-475.429 475.429s213.143 475.429 475.429 475.429 475.429-213.143 475.429-475.429-213.143-475.429-475.429-475.429zM512 0c282.857 0 512 229.143 512 512s-229.143 512-512 512-512-229.143-512-512 229.143-512 512-512zM283.429 475.429c5.143 0 9.143 4 9.143 9.143v274.286c0 5.143-4 9.143-9.143 9.143h-18.286c-5.143 0-9.143-4-9.143-9.143v-274.286c0-5.143 4-9.143 9.143-9.143h18.286zM512 512c40.571 0 73.143 32.571 73.143 73.143 0 26.857-14.857 50.286-36.571 62.857v65.143c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-65.143c-21.714-12.571-36.571-36-36.571-62.857 0-40.571 32.571-73.143 73.143-73.143zM512 73.143c242.286 0 438.857 196.571 438.857 438.857s-196.571 438.857-438.857 438.857-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857zM310.857 347.429v54.857c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286v-54.857c0-70.857 57.143-128 128-128s128 57.143 128 128v54.857c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286v-54.857c0-110.857-90.286-201.143-201.143-201.143s-201.143 90.286-201.143 201.143zM804.571 768v-292.571c0-20-16.571-36.571-36.571-36.571h-512c-20 0-36.571 16.571-36.571 36.571v292.571c0 20 16.571 36.571 36.571 36.571h512c20 0 36.571-16.571 36.571-36.571z"],"width":1024,"tags":["expeditedssl"],"defaultCode":62014,"grid":14},{"paths":["M1097.143 292.571v438.857h-950.857v-438.857h950.857zM1170.286 621.714h73.143v-219.429h-73.143v-164.571c0-10.286-8-18.286-18.286-18.286h-1060.571c-10.286 0-18.286 8-18.286 18.286v548.571c0 10.286 8 18.286 18.286 18.286h1060.571c10.286 0 18.286-8 18.286-18.286v-164.571zM1316.571 402.286v219.429c0 40.571-32.571 73.143-73.143 73.143v91.429c0 50.286-41.143 91.429-91.429 91.429h-1060.571c-50.286 0-91.429-41.143-91.429-91.429v-548.571c0-50.286 41.143-91.429 91.429-91.429h1060.571c50.286 0 91.429 41.143 91.429 91.429v91.429c40.571 0 73.143 32.571 73.143 73.143z"],"width":1316.5714285714284,"tags":["battery","battery-4","battery-full"],"defaultCode":62016,"grid":14},{"paths":["M146.286 731.429v-438.857h731.429v438.857h-731.429zM1243.429 329.143c40.571 0 73.143 32.571 73.143 73.143v219.429c0 40.571-32.571 73.143-73.143 73.143v91.429c0 50.286-41.143 91.429-91.429 91.429h-1060.571c-50.286 0-91.429-41.143-91.429-91.429v-548.571c0-50.286 41.143-91.429 91.429-91.429h1060.571c50.286 0 91.429 41.143 91.429 91.429v91.429zM1243.429 621.714v-219.429h-73.143v-164.571c0-10.286-8-18.286-18.286-18.286h-1060.571c-10.286 0-18.286 8-18.286 18.286v548.571c0 10.286 8 18.286 18.286 18.286h1060.571c10.286 0 18.286-8 18.286-18.286v-164.571h73.143z"],"width":1316.5714285714284,"tags":["battery-3","battery-three-quarters"],"defaultCode":62017,"grid":14},{"paths":["M146.286 731.429v-438.857h512v438.857h-512zM1243.429 329.143c40.571 0 73.143 32.571 73.143 73.143v219.429c0 40.571-32.571 73.143-73.143 73.143v91.429c0 50.286-41.143 91.429-91.429 91.429h-1060.571c-50.286 0-91.429-41.143-91.429-91.429v-548.571c0-50.286 41.143-91.429 91.429-91.429h1060.571c50.286 0 91.429 41.143 91.429 91.429v91.429zM1243.429 621.714v-219.429h-73.143v-164.571c0-10.286-8-18.286-18.286-18.286h-1060.571c-10.286 0-18.286 8-18.286 18.286v548.571c0 10.286 8 18.286 18.286 18.286h1060.571c10.286 0 18.286-8 18.286-18.286v-164.571h73.143z"],"width":1316.5714285714284,"tags":["battery-2","battery-half"],"defaultCode":62018,"grid":14},{"paths":["M146.286 731.429v-438.857h292.571v438.857h-292.571zM1243.429 329.143c40.571 0 73.143 32.571 73.143 73.143v219.429c0 40.571-32.571 73.143-73.143 73.143v91.429c0 50.286-41.143 91.429-91.429 91.429h-1060.571c-50.286 0-91.429-41.143-91.429-91.429v-548.571c0-50.286 41.143-91.429 91.429-91.429h1060.571c50.286 0 91.429 41.143 91.429 91.429v91.429zM1243.429 621.714v-219.429h-73.143v-164.571c0-10.286-8-18.286-18.286-18.286h-1060.571c-10.286 0-18.286 8-18.286 18.286v548.571c0 10.286 8 18.286 18.286 18.286h1060.571c10.286 0 18.286-8 18.286-18.286v-164.571h73.143z"],"width":1316.5714285714284,"tags":["battery-1","battery-quarter"],"defaultCode":62019,"grid":14},{"paths":["M1243.429 329.143c40.571 0 73.143 32.571 73.143 73.143v219.429c0 40.571-32.571 73.143-73.143 73.143v91.429c0 50.286-41.143 91.429-91.429 91.429h-1060.571c-50.286 0-91.429-41.143-91.429-91.429v-548.571c0-50.286 41.143-91.429 91.429-91.429h1060.571c50.286 0 91.429 41.143 91.429 91.429v91.429zM1243.429 621.714v-219.429h-73.143v-164.571c0-10.286-8-18.286-18.286-18.286h-1060.571c-10.286 0-18.286 8-18.286 18.286v548.571c0 10.286 8 18.286 18.286 18.286h1060.571c10.286 0 18.286-8 18.286-18.286v-164.571h73.143z"],"width":1316.5714285714284,"tags":["battery-0","battery-empty"],"defaultCode":62020,"grid":14},{"paths":["M647.429 596c10.857 10.286 13.714 26.286 8 39.429-5.714 13.714-18.857 22.857-33.714 22.857h-218.286l114.857 272c8 18.857-1.143 40-19.429 48l-101.143 42.857c-18.857 8-40-1.143-48-19.429l-109.143-258.286-178.286 178.286c-6.857 6.857-16 10.857-25.714 10.857-4.571 0-9.714-1.143-13.714-2.857-13.714-5.714-22.857-18.857-22.857-33.714v-859.429c0-14.857 9.143-28 22.857-33.714 4-1.714 9.143-2.857 13.714-2.857 9.714 0 18.857 3.429 25.714 10.857z"],"width":661.1382857142856,"tags":["mouse-pointer"],"defaultCode":62021,"grid":14},{"paths":["M475.429 73.143c-121.143 0-182.857 42.857-182.857 128v237.714h73.143v73.143h-73.143v310.857c0 85.143 61.714 128 182.857 128h36.571v73.143h-36.571c-102.857 0-178.286-29.714-219.429-83.429-41.143 53.714-116.571 83.429-219.429 83.429h-36.571v-73.143h36.571c121.143 0 182.857-42.857 182.857-128v-310.857h-73.143v-73.143h73.143v-237.714c0-85.143-61.714-128-182.857-128h-36.571v-73.143h36.571c102.857 0 178.286 29.714 219.429 83.429 41.143-53.714 116.571-83.429 219.429-83.429h36.571v73.143h-36.571z"],"width":512,"tags":["i-cursor"],"defaultCode":62022,"grid":14},{"paths":["M1170.286 219.429h-73.143v585.143h73.143v219.429h-219.429v-73.143h-731.429v73.143h-219.429v-219.429h73.143v-585.143h-73.143v-219.429h219.429v73.143h731.429v-73.143h219.429v219.429zM1024 73.143v73.143h73.143v-73.143h-73.143zM73.143 73.143v73.143h73.143v-73.143h-73.143zM146.286 950.857v-73.143h-73.143v73.143h73.143zM950.857 877.714v-73.143h73.143v-585.143h-73.143v-73.143h-731.429v73.143h-73.143v585.143h73.143v73.143h731.429zM1097.143 950.857v-73.143h-73.143v73.143h73.143zM731.429 365.714h219.429v438.857h-512v-146.286h-219.429v-438.857h512v146.286zM292.571 585.143h365.714v-292.571h-365.714v292.571zM877.714 731.429v-292.571h-146.286v219.429h-219.429v73.143h365.714z"],"width":1170.2857142857142,"tags":["object-group"],"defaultCode":62023,"grid":14},{"paths":["M1316.571 438.857h-73.143v365.714h73.143v219.429h-219.429v-73.143h-512v73.143h-219.429v-219.429h73.143v-73.143h-219.429v73.143h-219.429v-219.429h73.143v-365.714h-73.143v-219.429h219.429v73.143h512v-73.143h219.429v219.429h-73.143v73.143h219.429v-73.143h219.429v219.429zM1170.286 292.571v73.143h73.143v-73.143h-73.143zM804.571 73.143v73.143h73.143v-73.143h-73.143zM73.143 73.143v73.143h73.143v-73.143h-73.143zM146.286 731.429v-73.143h-73.143v73.143h73.143zM877.714 658.286h-73.143v73.143h73.143v-73.143zM219.429 658.286h512v-73.143h73.143v-365.714h-73.143v-73.143h-512v73.143h-73.143v365.714h73.143v73.143zM512 950.857v-73.143h-73.143v73.143h73.143zM1243.429 950.857v-73.143h-73.143v73.143h73.143zM1170.286 804.571v-365.714h-73.143v-73.143h-219.429v219.429h73.143v219.429h-219.429v-73.143h-219.429v73.143h73.143v73.143h512v-73.143h73.143z"],"width":1316.5714285714284,"tags":["object-ungroup"],"defaultCode":62024,"grid":14},{"paths":["M585.143 713.143v237.714h-530.286c-30.286 0-54.857-24.571-54.857-54.857v-768c0-30.286 24.571-54.857 54.857-54.857h768c30.286 0 54.857 24.571 54.857 54.857v530.286h-237.714c-30.286 0-54.857 24.571-54.857 54.857zM658.286 731.429h217.714c-5.143 27.429-20 58.286-37.143 75.429l-105.143 105.143c-17.143 17.143-48 32-75.429 37.143v-217.714z"],"width":877.7142857142857,"tags":["sticky-note"],"defaultCode":62025,"grid":14},{"paths":["M800 731.429h-141.714v141.714c9.714-3.429 19.429-8.571 23.429-12.571l105.714-105.714c4-4 9.143-13.714 12.571-23.429zM640 658.286h164.571v-512h-731.429v731.429h512v-164.571c0-30.286 24.571-54.857 54.857-54.857zM877.714 128v585.143c0 30.286-17.714 72.571-38.857 93.714l-105.143 105.143c-21.143 21.143-63.429 38.857-93.714 38.857h-585.143c-30.286 0-54.857-24.571-54.857-54.857v-768c0-30.286 24.571-54.857 54.857-54.857h768c30.286 0 54.857 24.571 54.857 54.857z"],"width":877.7142857142857,"tags":["sticky-note-o"],"defaultCode":62026,"grid":14},{"paths":["M1114.857 570.286c0 20.571-13.714 35.429-30.857 38.857-2.286 0.571-7.429 1.143-10.286 1.143h-87.429v-80h87.429c2.857 0 8 0.571 10.286 1.143 17.143 3.429 30.857 18.857 30.857 38.857zM1104.571 448.571c0 20-13.714 33.143-30.286 36-1.714 0.571-5.714 0.571-8.571 0.571h-79.429v-73.714h79.429c2.857 0 6.857 0.571 8.571 0.571 16.571 2.857 30.286 16.571 30.286 36.571zM416 542.286v-176h-130.286v176c0 42.857-29.143 74.857-81.714 74.857-44.571 0-88.571-13.143-130.857-33.714v64c68.571 18.857 155.429 18.857 155.429 18.857 145.143 0 187.429-55.429 187.429-124zM824 647.429v-64.571c-29.714 15.429-67.429 30.286-114.286 33.714-82.286 6.286-131.429-33.714-131.429-104.571s49.143-110.857 131.429-104.571c46.857 3.429 84 17.714 114.286 33.143v-64c-61.143-15.429-118.857-17.714-118.857-17.714-201.143-9.143-258.286 70.286-258.286 153.143s57.143 162.286 258.286 153.143c0 0 57.714-2.286 118.857-17.714zM1243.429 581.714c0-42.286-37.714-69.714-86.857-73.143v-1.714c44.571-6.286 69.143-35.429 69.143-69.143 0-43.429-36-68.571-84.571-70.857-3.429 0-9.714-0.571-14.857-0.571h-260v291.429h280.571c55.429 0 96.571-29.714 96.571-76zM1316.571 146.286v731.429c0 40-33.143 73.143-73.143 73.143h-1170.286c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h1170.286c40 0 73.143 33.143 73.143 73.143z"],"width":1316.5714285714284,"tags":["cc-jcb"],"defaultCode":62027,"grid":14},{"paths":["M490.286 709.143v-396c-79.429 30.857-136 108-136 198.286s56.571 167.429 136 197.714zM778.286 511.429c0-90.286-56.571-167.429-136-198.286v396.571c79.429-30.857 136-108 136-198.286zM901.143 511.429c0 184.571-149.714 334.857-334.857 334.857-184.571 0-334.857-150.286-334.857-334.857 0-185.143 150.286-334.857 334.857-334.857 185.143 0 334.857 149.714 334.857 334.857zM1120 515.429c0-218.286-182.286-369.143-382.286-369.143h-172c-202.286 0-369.143 150.857-369.143 369.143 0 199.429 166.857 362.286 369.143 362.286h172c200 0 382.286-162.857 382.286-362.286zM1316.571 146.286v731.429c0 40-33.143 73.143-73.143 73.143h-1170.286c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h1170.286c40 0 73.143 33.143 73.143 73.143z"],"width":1316.5714285714284,"tags":["cc-diners-club"],"defaultCode":62028,"grid":14},{"paths":["M950.857 932.571v-621.714c0-9.714-8.571-18.286-18.286-18.286h-621.714c-9.714 0-18.286 8.571-18.286 18.286v621.714c0 9.714 8.571 18.286 18.286 18.286h621.714c9.714 0 18.286-8.571 18.286-18.286zM1024 310.857v621.714c0 50.286-41.143 91.429-91.429 91.429h-621.714c-50.286 0-91.429-41.143-91.429-91.429v-621.714c0-50.286 41.143-91.429 91.429-91.429h621.714c50.286 0 91.429 41.143 91.429 91.429zM804.571 91.429v91.429h-73.143v-91.429c0-9.714-8.571-18.286-18.286-18.286h-621.714c-9.714 0-18.286 8.571-18.286 18.286v621.714c0 9.714 8.571 18.286 18.286 18.286h91.429v73.143h-91.429c-50.286 0-91.429-41.143-91.429-91.429v-621.714c0-50.286 41.143-91.429 91.429-91.429h621.714c50.286 0 91.429 41.143 91.429 91.429z"],"width":1024,"tags":["clone"],"defaultCode":62029,"grid":14},{"paths":["M987.429 256l-219.429 402.286h438.857zM256 256l-219.429 402.286h438.857zM725.143 146.286c-10.857 30.857-36 56-66.857 66.857v737.714h347.429c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-768c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h347.429v-737.714c-30.857-10.857-56-36-66.857-66.857h-280.571c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h280.571c15.429-42.857 55.429-73.143 103.429-73.143s88 30.286 103.429 73.143h280.571c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-280.571zM621.714 155.429c25.143 0 45.714-20.571 45.714-45.714s-20.571-45.714-45.714-45.714-45.714 20.571-45.714 45.714 20.571 45.714 45.714 45.714zM1243.429 658.286c0 117.714-162.857 164.571-256 164.571s-256-46.857-256-164.571v0c0-22.286 199.429-375.429 224-420 6.286-11.429 18.857-18.857 32-18.857s25.714 7.429 32 18.857c24.571 44.571 224 397.714 224 420v0zM512 658.286c0 117.714-162.857 164.571-256 164.571s-256-46.857-256-164.571v0c0-22.286 199.429-375.429 224-420 6.286-11.429 18.857-18.857 32-18.857s25.714 7.429 32 18.857c24.571 44.571 224 397.714 224 420z"],"width":1243.4285714285713,"tags":["balance-scale"],"defaultCode":62030,"grid":14},{"paths":["M804.571 73.143c0 211.429-101.143 364.571-213.143 438.857 112 74.286 213.143 227.429 213.143 438.857h54.857c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-841.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h54.857c0-211.429 101.143-364.571 213.143-438.857-112-74.286-213.143-227.429-213.143-438.857h-54.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h841.143c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-54.857zM499.429 477.714c115.429-43.429 232-196 232-404.571h-585.143c0 208.571 116.571 361.143 232 404.571 14.286 5.143 24 18.857 24 34.286s-9.714 29.143-24 34.286c-115.429 43.429-232 196-232 404.571h585.143c0-208.571-116.571-361.143-232-404.571-14.286-5.143-24-18.857-24-34.286s9.714-29.143 24-34.286z"],"width":877.7142857142857,"tags":["hourglass-o"],"defaultCode":62032,"grid":14},{"paths":["M804.571 73.143c0 211.429-101.143 364.571-213.143 438.857 112 74.286 213.143 227.429 213.143 438.857h54.857c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-841.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h54.857c0-211.429 101.143-364.571 213.143-438.857-112-74.286-213.143-227.429-213.143-438.857h-54.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h841.143c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-54.857zM731.429 73.143h-585.143c0 25.143 1.714 49.714 5.143 73.143h574.857c3.429-23.429 5.143-48 5.143-73.143zM731.429 950.857c0-205.143-113.143-356.571-226.857-402.286h-131.429c-113.714 45.714-226.857 197.143-226.857 402.286h585.143z"],"width":877.7142857142857,"tags":["hourglass-1","hourglass-start"],"defaultCode":62033,"grid":14},{"paths":["M804.571 73.143c0 211.429-101.143 364.571-213.143 438.857 112 74.286 213.143 227.429 213.143 438.857h54.857c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-841.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h54.857c0-211.429 101.143-364.571 213.143-438.857-112-74.286-213.143-227.429-213.143-438.857h-54.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h841.143c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-54.857zM731.429 73.143h-585.143c0 83.429 18.857 157.143 48.571 219.429h488c29.714-62.286 48.571-136 48.571-219.429zM698.857 768c-42.286-110.286-118.286-188.571-194.286-219.429h-131.429c-76 30.857-152 109.143-194.286 219.429h520z"],"width":877.7142857142857,"tags":["hourglass-2","hourglass-half"],"defaultCode":62034,"grid":14},{"paths":["M804.571 73.143c0 211.429-101.143 364.571-213.143 438.857 112 74.286 213.143 227.429 213.143 438.857h54.857c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-841.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h54.857c0-211.429 101.143-364.571 213.143-438.857-112-74.286-213.143-227.429-213.143-438.857h-54.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h841.143c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-54.857zM499.429 477.714c115.429-43.429 232-196 232-404.571h-585.143c0 208.571 116.571 361.143 232 404.571 14.286 5.143 24 18.857 24 34.286s-9.714 29.143-24 34.286c-49.143 18.286-98.857 57.143-139.429 112h400c-40.571-54.857-90.286-93.714-139.429-112-14.286-5.143-24-18.857-24-34.286s9.714-29.143 24-34.286z"],"width":877.7142857142857,"tags":["hourglass-3","hourglass-end"],"defaultCode":62035,"grid":14},{"paths":["M859.429 914.286c10.286 0 18.286 8 18.286 18.286v73.143c0 10.286-8 18.286-18.286 18.286h-841.143c-10.286 0-18.286-8-18.286-18.286v-73.143c0-10.286 8-18.286 18.286-18.286h841.143zM74.286 877.714c10.857-192.571 168-296 273.143-365.714-105.143-69.714-262.286-173.143-273.143-365.714h729.143c-10.857 192.571-168 296-273.143 365.714 105.143 69.714 262.286 173.143 273.143 365.714h-729.143zM859.429 0c10.286 0 18.286 8 18.286 18.286v73.143c0 10.286-8 18.286-18.286 18.286h-841.143c-10.286 0-18.286-8-18.286-18.286v-73.143c0-10.286 8-18.286 18.286-18.286h841.143z"],"width":877.7142857142857,"tags":["hourglass"],"defaultCode":62036,"grid":14},{"paths":["M438.857 219.429c-40.571 0-73.143 32.571-73.143 73.143v73.143h-18.286v-53.143c0-36-27.429-65.714-64-65.714-35.429 0-64 28.571-64 64v245.143l-18.286-17.143v-98.286c0-36-27.429-65.714-64-65.714-35.429 0-64 28.571-64 64v128c0 17.714 7.429 34.286 20 46.857l177.143 169.143c16.571 16.571 22.286 35.429 22.286 58.286 0 20 16.571 36.571 36.571 36.571h365.714c20 0 36.571-16.571 36.571-36.571v-14.286c0-14.857 1.714-29.714 5.714-44l61.714-249.143c4-14.286 5.714-29.143 5.714-44v-140.571c0-36-27.429-65.714-64-65.714-35.429 0-64 28.571-64 64v18.286h-18.286v-71.429c0-30.286-20.571-58.286-50.857-64.571-4-0.571-8.571-1.143-13.143-1.143-35.429 0-64 28.571-64 64v73.143h-18.286v-69.714c0-38.286-27.429-72-65.714-76-2.857-0.571-5.143-0.571-7.429-0.571zM438.857 146.286c30.857 0 60.571 9.714 85.143 28.571 21.143-12.571 45.714-19.429 70.286-19.429 45.143 0 86.857 21.714 112.571 58.857 10.857-2.857 22.286-4 33.714-4 76.571 0 137.143 62.857 137.143 138.857v140.571c0 20.571-2.857 41.714-7.429 61.714l-62.286 249.143c-3.429 13.714-3.429 26.857-3.429 40.571 0 60.571-49.143 109.714-109.714 109.714h-365.714c-65.143 0-109.714-52-109.714-114.857l-176-169.143c-26.857-25.714-43.429-62.286-43.429-100v-128c0-75.429 61.714-137.143 137.143-137.143 3.429 0 6.286 0 9.143 0.571 4.571-72.571 65.143-128.571 137.143-128.571 19.429 0 38.286 4 56 12 26.857-25.714 62.286-39.429 99.429-39.429z"],"width":877.7142857142857,"tags":["hand-grab-o","hand-rock-o"],"defaultCode":62037,"grid":14},{"paths":["M502.857 73.143c-35.429 0-64 28.571-64 64v374.857h-18.286v-301.714c0-35.429-28.571-64-64-64s-64 28.571-64 64v448l-88-117.143c-13.714-18.286-35.429-29.143-58.286-29.143-40.571 0-73.143 33.143-73.143 73.143 0 16 5.143 31.429 14.857 44l219.429 292.571c13.714 18.286 35.429 29.143 58.286 29.143h393.143c26.286 0 49.143-18.857 54.286-44.571l43.429-231.429c1.714-10.857 2.857-22.286 2.857-33.714v-284.571c0-35.429-28.571-64-64-64s-64 28.571-64 64v155.429h-18.286v-301.714c0-35.429-28.571-64-64-64s-64 28.571-64 64v301.714h-18.286v-374.857c0-35.429-28.571-64-64-64zM502.857 0c51.429 0 98.857 29.143 122.286 75.429 8-1.714 16-2.286 24-2.286 75.429 0 137.143 61.714 137.143 137.143v9.714c79.429-4.571 146.286 56.571 146.286 136.571v284.571c0 16-1.714 32-4.571 47.429l-43.429 230.857c-10.857 60.571-64 104.571-125.714 104.571h-393.143c-45.714 0-89.714-22.286-117.143-58.286l-219.429-292.571c-18.857-25.143-29.143-56.571-29.143-88 0-80.571 65.143-146.286 146.286-146.286 24 0 53.143 5.714 73.143 19.429v-248c0-75.429 61.714-137.143 137.143-137.143 8 0 16 0.571 24 2.286 23.429-46.286 70.857-75.429 122.286-75.429z"],"width":932.5714285714286,"tags":["hand-paper-o","hand-stop-o"],"defaultCode":62038,"grid":14},{"paths":["M613.143 950.857h-101.143c-59.429 0-104.571-25.714-129.143-80.571-8.571-18.286-13.143-38.286-13.143-58.286v-2.857c-46.857-22.857-77.143-70.857-77.143-123.429 0-6.286 0-21.714 2.857-27.429h-149.143c-80.571 0-146.286-65.714-146.286-146.286s65.714-146.286 146.286-146.286h64.571l-25.143-9.714c-56.571-21.143-94.286-76-94.286-136.571 0-80.571 65.714-146.286 146.286-146.286 17.714 0 35.429 3.429 52 9.714l358.857 136.571h229.143c80.571 0 146.286 65.714 146.286 146.286v381.714c0 67.429-45.714 125.714-110.857 141.714l-193.714 48.571c-34.286 8.571-70.286 13.143-106.286 13.143zM585.143 544.571l-88.571 40.571-93.143 42.286c-22.857 10.286-37.714 33.143-37.714 58.286 0 35.429 28.571 64 64 64 9.143 0 18.286-1.714 26.286-5.714l193.143-88c-37.143-8-64-41.714-64-80v-31.429zM768 722.286c0-35.429-28.571-64-64-64-9.143 0-18.286 1.714-26.286 5.714l-165.714 75.429c-34.286 15.429-69.143 29.143-69.143 72.571 0 37.714 26.286 65.143 64.571 65.143 6.857 0 16-2.286 21.714-5.143l201.143-91.429c22.857-10.286 37.714-33.143 37.714-58.286zM635.429 292.571l-371.429-141.714c-8.571-2.857-17.143-4.571-26.286-4.571-40 0-73.143 32.571-73.143 73.143 0 30.286 18.857 57.714 46.857 68.571l300.571 114.286v36.571h-365.714c-40.571 0-73.143 32.571-73.143 73.143s32.571 73.143 73.143 73.143h305.714l133.143-60.571v-113.143c0-22.857 9.714-45.143 26.286-60.571l63.429-58.286h-39.429zM613.143 877.714c29.714 0 60-3.429 88.571-10.857l193.714-48.571c32.571-8 55.429-37.143 55.429-70.857v-381.714c0-40.571-32.571-73.143-73.143-73.143h-176l-77.714 72c-13.143 12-20.571 29.143-20.571 46.857v169.143c0 35.429 29.143 61.714 64 61.714 35.429 0 64-31.429 64-66.286v-118.857h18.286v118.857c0 25.714-12.571 49.714-32.571 65.143 40 6.286 69.143 41.143 69.143 81.143 0 32-18.857 61.714-48 74.857l-177.143 80.571h52z"],"width":1024,"tags":["hand-scissors-o"],"defaultCode":62039,"grid":14},{"paths":["M657.714 0c46.286 0 90.857 22.286 118.286 60l326.857 446.286c44 59.429 67.429 130.857 67.429 205.143v202.857c0 60.571-49.143 109.714-109.714 109.714h-219.429c-60.571 0-109.714-49.143-109.714-109.714v-101.143l-163.429-81.714h-312c-60.571 0-109.714-49.143-109.714-109.714v-18.286c0-90.857 73.714-164.571 164.571-164.571h240l24-73.143h-392c-76 0-139.429-58.286-145.714-133.714-24-29.143-37.143-66.286-37.143-104v-18.286c0-60.571 49.143-109.714 109.714-109.714h548zM1097.143 914.286v-202.857c0-57.714-18.857-115.429-53.143-162.286l-327.429-446.286c-13.714-18.286-35.429-29.714-58.857-29.714h-548c-20 0-36.571 16.571-36.571 36.571 0 30.286 0.571 51.429 20.571 76 7.429-23.429 28.571-39.429 52.571-39.429h475.429v18.286h-475.429c-20 0-36.571 16.571-36.571 36.571 0 10.857-0.571 22.286 1.714 33.143 6.286 33.714 37.143 58.286 71.429 58.286h417.714c30.286 0 54.857 24.571 54.857 54.857 0 5.714-1.143 12-2.857 17.143l-36.571 109.714c-7.429 22.286-28.571 37.714-52 37.714h-253.143c-50.286 0-91.429 41.143-91.429 91.429v18.286c0 20 16.571 36.571 36.571 36.571h320.571c5.714 0 11.429 1.143 16.571 4l181.143 90.286c18.286 9.714 30.286 28.571 30.286 49.143v112.571c0 20 16.571 36.571 36.571 36.571h219.429c20 0 36.571-16.571 36.571-36.571z"],"width":1170.2857142857142,"tags":["hand-lizard-o"],"defaultCode":62040,"grid":14},{"paths":["M262.286 1024c-58.857 0-109.714-40-124-97.143l-57.714-229.143c-4.571-20-7.429-41.143-7.429-61.714 0-13.143 0-25.714-2.857-38.286l-66.286-272.571c-2.857-10.857-4-21.714-4-32.571 0-70.857 53.714-129.143 124-136.571 12.571-64.571 68-110.286 134.286-110.286 63.429 0 118.286 43.429 133.143 105.143l47.429 198.857 58.857-244.571c14.857-61.714 69.714-105.143 133.143-105.143 68 0 124 49.143 134.857 115.429 70.286 8 121.143 67.429 121.143 137.714 0 10.857-1.714 22.286-4 33.714l-70.286 292.571c45.714-34.286 78.857-67.429 138.857-67.429 79.429 0 145.714 64.571 145.714 144.571 0 48-23.429 92.571-61.143 121.143l-289.714 217.143c-25.143 18.857-56 29.143-87.429 29.143h-396.571zM630.857 73.143c-29.143 0-54.857 20.571-61.714 49.143l-93.714 389.714h-72.571l-82.857-344c-6.857-28.571-32.571-49.143-61.714-49.143-36.571 0-64 29.143-64 64.571 0 5.714 0.571 10.857 1.714 16l75.429 312.571h-14.857l-56.571-233.143c-6.857-28-32.571-50.286-62.286-50.286-35.429 0-64.571 28.571-64.571 64 0 5.143 0.571 10.286 1.714 14.857l66.286 273.143c8 33.143 2.286 66.286 10.857 99.429l57.143 229.143c6.286 24.571 28 41.714 53.143 41.714h396.571c15.429 0 30.857-5.143 43.429-14.857l289.714-216.571c19.429-14.857 32-38.286 32-62.857 0-40-33.143-71.429-72.571-71.429-16 0-31.429 5.143-44 14.857l-175.429 131.429v-129.714c0-4.571 73.714-307.429 79.429-332 1.143-5.143 2.286-10.857 2.286-16.571 0-35.429-26.857-65.714-63.429-65.714-29.714 0-55.429 20.571-62.286 49.143l-66.286 275.429h-14.857l85.714-356.571c1.143-5.143 1.714-10.857 1.714-16 0-36-26.286-66.286-63.429-66.286z"],"width":1097.142857142857,"tags":["hand-spock-o"],"defaultCode":62041,"grid":14},{"paths":["M365.714 73.143c-40.571 0-73.143 32.571-73.143 73.143v512l-86.286-115.429c-14.286-18.857-37.143-30.857-61.143-30.857-40 0-72 33.714-72 73.143 0 16 5.143 31.429 14.857 44l219.429 292.571c13.714 18.286 35.429 29.143 58.286 29.143h410.286c16.571 0 31.429-11.429 35.429-27.429l52.571-210.286c9.143-36.571 13.714-73.714 13.714-110.857v-124c0-30.286-23.429-57.714-54.857-57.714-30.286 0-54.857 24.571-54.857 54.857h-18.286v-34.857c0-36-27.429-65.714-64-65.714-35.429 0-64 28.571-64 64v36.571h-18.286v-51.429c0-41.143-31.429-76.571-73.143-76.571-40.571 0-73.143 32.571-73.143 73.143v54.857h-18.286v-325.714c0-41.143-31.429-76.571-73.143-76.571zM365.714 0c81.714 0 146.286 68.571 146.286 149.714v125.714c6.286-0.571 12-1.143 18.286-1.143 37.143 0 72 14.286 98.857 39.429 17.714-8 37.143-12 56.571-12 41.143 0 79.429 18.286 105.143 49.714 10.857-2.857 21.143-4 32-4 72 0 128 60 128 130.857v124c0 42.857-5.143 86.286-16 128.571l-52.571 210.286c-12 48.571-56 82.857-106.286 82.857h-410.286c-45.714 0-89.714-22.286-117.143-58.286l-219.429-292.571c-18.857-25.143-29.143-56.571-29.143-88 0-80 65.143-146.286 145.143-146.286 26.286 0 52 6.857 74.286 20v-312.571c0-80.571 65.714-146.286 146.286-146.286zM438.857 804.571v-219.429h-18.286v219.429h18.286zM585.143 804.571v-219.429h-18.286v219.429h18.286zM731.429 804.571v-219.429h-18.286v219.429h18.286z"],"width":950.8571428571428,"tags":["hand-pointer-o"],"defaultCode":62042,"grid":14},{"paths":["M736 369.714c21.143 0 42.286 4 61.143 13.143 54.857 24.571 80.571 69.714 80.571 129.143v101.143c0 36-4.571 72-13.143 106.286l-48.571 193.714c-16 65.143-74.286 110.857-141.714 110.857h-381.714c-80.571 0-146.286-65.714-146.286-146.286v-229.143l-136.571-358.857c-6.286-16.571-9.714-34.286-9.714-52 0-80.571 65.714-146.286 146.286-146.286 60.571 0 115.429 37.714 136.571 94.286l9.714 25.143v-64.571c0-80.571 65.714-146.286 146.286-146.286s146.286 65.714 146.286 146.286v149.143c9.143-1.714 18.286-2.857 27.429-2.857 52.571 0 100.571 30.286 123.429 77.143zM612.571 365.714c-25.143 0-48 14.857-58.286 37.714l-42.286 93.143-40.571 88.571h31.429c38.286 0 72 26.857 80 64l88-193.143c4-8 5.714-17.143 5.714-26.286 0-35.429-28.571-64-64-64zM738.857 442.857c-43.429 0-57.143 34.857-72.571 69.143l-75.429 165.714c-4 8-5.714 17.143-5.714 26.286 0 35.429 28.571 64 64 64 25.143 0 48-14.857 58.286-37.714l91.429-201.143c2.857-5.714 5.143-14.857 5.143-21.714 0-38.286-27.429-64.571-65.143-64.571zM73.143 237.714c0 9.143 1.714 17.714 4.571 26.286l141.714 371.429v39.429l58.286-63.429c15.429-16.571 37.714-26.286 60.571-26.286h113.143l60.571-133.143v-305.714c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143v365.714h-36.571l-114.286-300.571c-10.857-28-38.286-46.857-68.571-46.857-40.571 0-73.143 33.143-73.143 73.143zM674.286 950.857c33.714 0 62.857-22.857 70.857-55.429l48.571-193.714c7.429-28.571 10.857-58.857 10.857-88.571v-52l-80.571 177.143c-13.143 29.143-42.857 48-74.857 48-40 0-74.857-29.143-81.143-69.143-15.429 20-39.429 32.571-65.143 32.571h-118.857v-18.286h118.857c34.857 0 66.286-28.571 66.286-64 0-34.857-26.286-64-61.714-64h-169.143c-17.714 0-34.857 7.429-46.857 20.571l-72 77.714v176c0 40.571 32.571 73.143 73.143 73.143h381.714z"],"width":877.7142857142857,"tags":["hand-peace-o"],"defaultCode":62043,"grid":14},{"paths":["M489.714 310.857v66.857c0 9.714-8.571 17.714-18.286 17.714h-170.286v464c0 10.286-8 18.286-17.714 18.286h-77.143c-10.286 0-18.286-8-18.286-18.286v-464h-169.714c-10.286 0-18.286-8-18.286-17.714v-66.857c0-10.286 8-18.286 18.286-18.286h453.143c9.714 0 18.286 8 18.286 18.286zM1082.857 309.143l44 549.143c0.571 5.143-1.143 9.714-4.571 13.714-3.429 3.429-8 5.714-13.143 5.714h-76.571c-9.143 0-17.143-7.429-17.714-16.571l-26.286-336-108 242.857c-2.857 6.857-9.143 10.857-16.571 10.857h-68.571c-6.857 0-13.143-4-16.571-10.857l-107.429-244-25.714 337.143c-0.571 9.143-8.571 16.571-17.714 16.571h-77.143c-5.143 0-9.714-2.286-13.143-5.714-3.429-4-5.143-8.571-5.143-13.714l44.571-549.143c0.571-9.143 8.571-16.571 17.714-16.571h81.143c7.429 0 13.714 4.571 16.571 10.857l125.714 297.143c4 9.143 8 19.429 11.429 29.143 4-9.714 7.429-20 11.429-29.143l126.286-297.143c2.857-6.286 9.143-10.857 16.571-10.857h80.571c9.714 0 17.714 7.429 18.286 16.571z"],"width":1127.424,"tags":["trademark"],"defaultCode":62044,"grid":14},{"paths":["M595.429 401.714c0-33.143-11.429-56.571-34.286-69.143-11.429-6.286-27.429-10.286-66.857-10.286h-70.286v160.571h92.571c50.286 0 78.857-29.714 78.857-81.143zM625.143 564.571l117.143 213.143c2.857 5.714 2.857 12.571-0.571 17.714-2.857 5.714-9.143 9.143-15.429 9.143h-86.857c-6.857 0-13.143-3.429-16-9.714l-110.857-208.571h-88.571v200c0 10.286-8 18.286-18.286 18.286h-76.571c-10.286 0-18.286-8-18.286-18.286v-548.571c0-10.286 8-18.286 18.286-18.286h168c60 0 86.286 5.143 108.571 13.714 64.571 24 104.571 87.429 104.571 165.143 0 70.286-34.857 129.714-90.286 157.143 1.714 2.857 3.429 5.714 5.143 9.143zM512 91.429c-232 0-420.571 188.571-420.571 420.571s188.571 420.571 420.571 420.571 420.571-188.571 420.571-420.571-188.571-420.571-420.571-420.571zM1024 512c0 282.857-229.143 512-512 512s-512-229.143-512-512 229.143-512 512-512v0c282.857 0 512 229.143 512 512z"],"width":1024,"tags":["registered"],"defaultCode":62045,"grid":14},{"paths":["M345.714 704.571c93.714 0 144.571-57.143 146.857-59.429 4.571-5.714 5.714-14.286 1.714-20.571l-25.714-46.857c-2.286-5.143-8-8.571-13.714-9.714-5.714-0.571-11.429 1.714-15.429 6.286-0.571 0-36.571 38.286-89.143 38.286-57.714 0-99.429-42.286-99.429-101.143 0-58.286 40.571-100 97.143-100 47.429 0 78.857 32 78.857 32 4 4 9.143 6.286 14.857 5.714s10.857-3.429 13.714-8l30.286-44.571c4.571-6.857 4-16-1.143-22.286-1.714-2.286-48-54.857-138.857-54.857-112.571 0-196.571 82.857-196.571 192.571 0 111.429 82.286 192.571 196.571 192.571zM705.714 704.571c94.286 0 144.571-57.143 146.857-59.429 4.571-5.714 5.714-14.286 2.286-20.571l-25.714-46.857c-2.857-5.143-8-8.571-14.286-9.714-5.714-0.571-11.429 1.714-15.429 6.286-0.571 0-36.571 38.286-89.143 38.286-57.714 0-99.429-42.286-99.429-101.143 0-58.286 40.571-100 97.143-100 48 0 78.857 32 78.857 32 4 4 9.143 6.286 14.857 5.714s10.857-3.429 13.714-8l30.286-44.571c4.571-6.857 4-16-1.143-22.286-1.714-2.286-48-54.857-138.857-54.857-112 0-196.571 82.857-196.571 192.571 0 111.429 82.286 192.571 196.571 192.571zM512 91.429c-232 0-420.571 188.571-420.571 420.571s188.571 420.571 420.571 420.571 420.571-188.571 420.571-420.571-188.571-420.571-420.571-420.571zM512 0c282.857 0 512 229.143 512 512s-229.143 512-512 512-512-229.143-512-512 229.143-512 512-512z"],"width":1024,"tags":["creative-commons"],"defaultCode":62046,"grid":14},{"paths":["M420.571 457.143l219.429 219.429-219.429 219.429-384-384 384-384 96 96-54.857 54.857-41.143-41.143-274.286 274.286 274.286 274.286 110.286-110.286-165.143-164zM749.714 128l384 384-384 384-96-96 54.857-54.857 41.143 41.143 274.286-274.286-274.286-274.286-110.286 110.286 165.143 164-54.857 54.857-219.429-219.429z"],"width":1170.2857142857142,"tags":["gg"],"defaultCode":62048,"grid":14},{"paths":["M409.714 773.714l154.857-154.857-159.429-159.429-50.286 50.286 109.714 109.143-54.857 54.857-159.429-159.429 159.429-159.429 22.857 22.857 49.714-49.714-72.571-73.143-259.429 259.429zM614.286 769.143l259.429-259.429-259.429-259.429-154.857 154.857 159.429 159.429 50.286-50.286-109.714-109.143 54.857-54.857 159.429 159.429-159.429 159.429-22.857-22.857-49.714 50.286zM1024 512c0 282.857-229.143 512-512 512s-512-229.143-512-512 229.143-512 512-512 512 229.143 512 512z"],"width":1024,"tags":["gg-circle"],"defaultCode":62049,"grid":14},{"paths":["M372 569.714c0 29.714-24 53.714-53.143 53.714-29.714 0-53.714-24-53.714-53.714 0-29.143 24-53.143 53.714-53.143 29.143 0 53.143 24 53.143 53.143zM1031.429 569.143c0 29.714-24 53.714-53.714 53.714s-53.714-24-53.714-53.714 24-53.143 53.714-53.143 53.714 23.429 53.714 53.143zM437.143 569.714c0-60.571-49.714-110.286-110.286-110.286-61.143 0-110.286 49.714-110.286 110.286 0 61.143 49.143 110.286 110.286 110.286 60.571 0 110.286-49.143 110.286-110.286zM1096 569.143c0-60.571-49.143-110.286-110.286-110.286-60.571 0-110.286 49.714-110.286 110.286 0 61.143 49.714 110.286 110.286 110.286 61.143 0 110.286-49.143 110.286-110.286zM485.714 569.714c0 88-70.857 159.429-158.857 159.429s-159.429-71.429-159.429-159.429c0-87.429 71.429-158.857 159.429-158.857s158.857 71.429 158.857 158.857zM1145.143 569.143c0 88-71.429 158.857-159.429 158.857-87.429 0-158.857-70.857-158.857-158.857s71.429-158.857 158.857-158.857c88 0 159.429 70.857 159.429 158.857zM594.286 570.857c0-145.714-118.286-264-264-264-145.143 0-263.429 118.286-263.429 264s118.286 264 263.429 264c145.714 0 264-118.286 264-264zM976 243.429c-94.286-41.143-200.571-63.429-317.714-63.429s-233.714 22.286-327.429 62.857c181.143 0.571 327.429 146.857 327.429 328 0-177.714 141.143-322.286 317.714-327.429zM1249.714 570.857c0-145.714-117.714-264-263.429-264s-264 118.286-264 264 118.286 264 264 264 263.429-118.286 263.429-264zM1097.714 247.429h218.857c-34.286 40-59.429 93.714-65.714 130.857 39.429 54.286 62.857 120.571 62.857 192.571 0 181.143-146.857 327.429-327.429 327.429-102.857 0-194.286-46.857-254.286-120.571 0 0-26.857 32-73.714 102.286-8-16.571-48.571-74.286-73.143-102.857-60 74.286-152 121.143-254.857 121.143-180.571 0-327.429-146.286-327.429-327.429 0-72 23.429-138.286 62.857-192.571-6.286-37.143-31.429-90.857-65.714-130.857h208.571c112-74.857 274.857-121.714 449.714-121.714s327.429 46.857 439.429 121.714z"],"width":1316.5714285714284,"tags":["tripadvisor"],"defaultCode":62050,"grid":14},{"paths":["M365.714 518.286c-142.857 0-259.429-116-259.429-258.857 0-143.429 116.571-259.429 259.429-259.429s259.429 116 259.429 259.429c0 142.857-116.571 258.857-259.429 258.857zM365.714 131.429c-70.286 0-127.429 57.143-127.429 128 0 70.286 57.143 127.429 127.429 127.429s127.429-57.143 127.429-127.429c0-70.857-57.143-128-127.429-128zM664.571 549.714c25.143 51.429-3.429 76-68.571 118.286-54.857 34.857-130.286 48.571-180 53.714l41.714 41.143 152.571 152.571c22.857 23.429 22.857 61.143 0 84l-6.857 7.429c-23.429 22.857-61.143 22.857-84.571 0-38.286-38.857-94.286-94.857-152.571-153.143l-152.571 153.143c-23.429 22.857-61.143 22.857-84 0l-6.857-7.429c-23.429-22.857-23.429-60.571 0-84 38.857-38.857 94.286-94.857 152.571-152.571l41.143-41.143c-49.143-5.143-125.714-18.286-181.143-53.714-65.143-42.286-93.714-66.857-68.571-118.286 14.857-29.143 55.429-53.714 109.143-11.429 0 0 72.571 57.714 189.714 57.714s189.714-57.714 189.714-57.714c53.714-42.286 94.286-17.714 109.143 11.429z"],"width":731.4285714285713,"tags":["odnoklassniki"],"defaultCode":62051,"grid":14},{"paths":["M529.714 331.429c0 50.286-40.571 90.857-90.857 90.857s-90.857-40.571-90.857-90.857 40.571-90.857 90.857-90.857 90.857 40.571 90.857 90.857zM652 538.857c-10.286-20.571-39.429-38.286-77.714-8 0 0-52 41.143-135.429 41.143s-135.429-41.143-135.429-41.143c-38.286-30.286-67.429-12.571-77.714 8-18.286 36.571 2.286 54.286 48.571 84.571 39.429 25.143 94.286 34.857 129.143 38.286l-29.143 29.714c-41.143 41.143-81.143 81.143-109.143 108.571-16.571 16.571-16.571 43.429 0 60l5.143 5.143c16.571 16.571 43.429 16.571 60 0l109.143-109.143c41.143 41.714 81.143 81.714 109.143 109.143 16.571 16.571 43.429 16.571 60 0l5.143-5.143c16.571-16.571 16.571-43.429 0-60l-109.143-108.571-29.714-29.714c35.429-3.429 89.143-13.143 128.571-38.286 46.286-30.286 66.857-48 48.571-84.571zM624 331.429c0-102.286-82.857-185.143-185.143-185.143s-185.143 82.857-185.143 185.143 82.857 185.143 185.143 185.143 185.143-82.857 185.143-185.143zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["odnoklassniki-square"],"defaultCode":62052,"grid":14},{"paths":["M894.286 73.143c49.714 0 88.571 40 88.571 89.143v296.571c0 273.714-218.857 492-490.857 492-273.143 0-492-218.286-492-492v-296.571c0-48.571 40.571-89.143 89.143-89.143h805.143zM492 681.143c17.143 0 34.286-6.857 46.857-18.857l230.857-221.714c13.143-12.571 21.143-30.286 21.143-48.571 0-37.143-30.286-67.429-67.429-67.429-17.714 0-34.286 6.857-46.857 18.857l-184.571 177.143-184.571-177.143c-12.571-12-29.143-18.857-46.286-18.857-37.143 0-67.429 30.286-67.429 67.429 0 18.286 7.429 36 20.571 48.571l231.429 221.714c12 12 29.143 18.857 46.286 18.857z"],"width":982.8205714285714,"tags":["get-pocket"],"defaultCode":62053,"grid":14},{"paths":["M853.714 936.571l-168.571-397.143c-66.857 130.857-140.571 267.429-204 397.143-0.571 0.571-30.857 0-30.857-0.571-96.571-225.714-197.714-449.714-294.286-676-23.429-54.857-101.714-144-155.429-143.429 0-6.286-0.571-20.571-0.571-29.143h333.143v28.571c-39.429 2.286-108.571 27.429-89.143 70.286 45.143 102.286 213.143 494.286 258.286 593.714 30.857-61.143 118.857-224.571 154.857-293.714-28.571-58.286-120.571-275.429-149.714-329.143-20-36.571-74.286-40-114.857-40.571v-28.571l293.143 0.571v26.857c-40 1.143-78.286 16-60.571 53.714 38.857 82.286 62.857 140 98.857 215.429 11.429-22.286 71.429-142.857 98.857-207.429 18.286-42.286-8-58.857-79.429-60.571 0.571-7.429 0-21.143 0.571-28 91.429-0.571 228.571-0.571 253.143-1.143v28c-46.286 1.714-94.286 26.286-119.429 65.143l-121.714 252.571c13.143 33.143 130.286 293.714 142.286 322.286l252-581.143c-17.714-47.429-74.857-57.714-97.143-58.286v-28.571l262.857 2.286 0.571 1.143-0.571 25.143c-57.714 1.714-92.571 32.571-114.857 82.857-51.429 118.857-212.571 493.714-319.429 737.714h-28z"],"width":1316.5714285714284,"tags":["wikipedia-w"],"defaultCode":62054,"grid":14},{"paths":["M542.286 510.286c0 18.857-13.143 36.571-33.143 36.571-18.857 0-36.571-13.714-36.571-33.143 0-18.857 13.714-36.571 33.714-36.571 18.286 0 36 13.143 36 33.143zM550.857 543.429l200-332c-26.857 25.143-277.143 255.429-284 267.429l-199.429 331.429c26.286-24.571 277.143-256 283.429-266.857zM920.571 512c0 74.857-20.571 148.571-59.429 212-5.714-2.857-29.714-20-34.286-20-4 0-7.429 3.429-7.429 7.429 0 7.429 26.857 21.143 33.714 25.143-56.571 85.714-144 147.429-243.429 172l-9.143-38.286c-0.571-5.143-4-5.714-8.571-5.714-4 0-6.286 5.714-5.714 8.571l9.143 38.857c-27.429 5.714-55.429 8.571-83.429 8.571-74.857 0-148.571-21.143-212.571-60 3.429-5.714 25.143-37.143 25.143-41.714 0-4-3.429-7.429-7.429-7.429-8 0-25.143 34.286-30.286 41.143-86.286-57.143-148.571-145.714-172.571-246.857l39.429-8.571c4.571-1.143 5.714-4.571 5.714-8.571s-5.714-6.286-9.143-5.714l-38.857 8.571c-5.143-26.286-8-52.571-8-79.429 0-76.571 21.714-152 62.286-216.571 5.714 3.429 33.143 22.286 37.714 22.286 4 0 7.429-2.857 7.429-6.857 0-8-30.286-23.429-37.143-28 58.286-85.143 146.857-146.286 247.429-169.143l8.571 38.286c1.143 4.571 4.571 5.714 8.571 5.714s6.286-5.714 5.714-9.143l-8.571-37.714c25.143-4.571 50.857-7.429 76.571-7.429v0c76.571 0 151.429 21.714 216.571 62.286-4 5.714-22.286 32.571-22.286 37.143 0 4 2.857 7.429 6.857 7.429 8 0 23.429-29.714 27.429-36.571 84.571 57.143 145.143 144.571 168.571 244l-32 6.857c-5.143 1.143-5.714 4.571-5.714 9.143 0 4 5.714 6.286 8.571 5.714l32.571-7.429c5.143 26.286 8 53.143 8 80zM969.143 512c0-252.571-204.571-457.143-457.143-457.143s-457.143 204.571-457.143 457.143 204.571 457.143 457.143 457.143 457.143-204.571 457.143-457.143zM1024 512c0 282.857-229.143 512-512 512s-512-229.143-512-512 229.143-512 512-512 512 229.143 512 512z"],"width":1024,"tags":["safari"],"defaultCode":62055,"grid":14},{"paths":["M510.286 0c87.429-0.571 176.571 21.714 257.714 68.571 89.714 52 157.714 126.857 201.143 212.571l-424-22.286c-120-6.857-234.286 60.571-273.714 173.714l-157.714-242.286c98.286-122.286 245.714-189.714 396.571-190.286zM83.429 231.429l192.571 378.857c54.286 106.857 169.143 172 288 149.714l-131.429 257.714c-245.143-37.714-432.571-249.714-432.571-505.714 0-103.429 30.857-200 83.429-280.571zM989.714 328c89.714 230.857 0 499.429-221.714 627.429-89.714 52-188.571 73.143-284.571 68l231.429-356c65.714-101.143 64.571-233.143-13.714-324.571zM512 339.429c95.429 0 172.571 77.143 172.571 172.571s-77.143 172.571-172.571 172.571-172.571-77.143-172.571-172.571 77.143-172.571 172.571-172.571z"],"width":1079.4422857142856,"tags":["chrome"],"defaultCode":62056,"grid":14},{"paths":["M516 1024c-220.571 0-396-129.143-476.571-313.714-90.286-205.143-18.286-533.714 142.286-678.857l-6.286 160.571c8-10.286 69.143-13.143 78.857 0 33.143-63.429 140-110.857 225.714-112.571-32.571 27.429-108 127.429-101.714 178.286 41.714 13.143 105.714 13.714 139.429 16 10.286 5.714 8.571 40.571-12 69.143 0 0-26.857 37.143-99.429 50.286l8.571 108-79.429-38.286c-25.714 65.143 36 122.857 100 112 70.857-12 96-58.286 145.714-55.429 49.143 2.857 68.571 30.286 62.286 56 0 0-8 30.857-61.143 25.714-45.143 71.429-105.143 102.857-202.286 94.286 147.429 122.286 346.286 11.429 396.571-88.571 50.286-99.429 6.286-247.429-44-289.143 59.429 25.714 100.571 52 122.286 109.714 11.429-128-47.429-273.143-152.571-358.286 197.714 57.714 318.286 210.857 321.714 455.429s-216.571 499.429-508 499.429z"],"width":976.6034285714286,"tags":["firefox"],"defaultCode":62057,"grid":14},{"paths":["M853.143 130.286c-60-40-130.286-62.857-205.143-62.857-121.714 0-229.143 62.286-304.571 156-54.857 68.571-93.143 165.714-96 276.571v24c2.857 110.857 41.143 208 96 276.571 75.429 93.714 182.857 156 304.571 156 74.857 0 145.143-22.857 205.143-62.857-90.286 81.143-210.286 130.286-341.143 130.286-8 0-16.571 0-24.571-0.571-271.429-12.571-487.429-236.571-487.429-511.429 0-282.857 229.143-512 512-512h1.714c130.286 0.571 249.143 49.714 339.429 130.286zM1024 512c0 149.143-64 282.857-165.714 376.571-38.857 23.429-81.714 36-126.857 36-52.571 0-102.286-17.143-145.714-48 116-42.286 201.714-189.143 201.714-364.571 0-174.857-85.143-321.714-201.143-364.571 43.429-30.286 92.571-47.429 145.143-47.429 46.286 0 89.714 13.143 129.143 37.143 100.571 93.714 163.429 226.857 163.429 374.857z"],"width":1024,"tags":["opera"],"defaultCode":62058,"grid":14},{"paths":["M1024 535.429c0 20-1.143 40-4 59.429h-657.714c0 113.714 100 196 209.714 196 74.286 0 145.714-36.571 184-101.143h241.714c-65.143 183.429-239.429 306.286-433.714 306.286-70.286 0-140.571-16.571-203.429-47.429-64 32.571-153.714 66.286-225.143 66.286-96 0-135.429-58.857-135.429-150.286 0-53.143 11.429-106.286 25.714-157.143 9.143-33.143 45.714-100.571 62.286-130.857 70.286-127.429 162.857-249.714 271.429-346.286-87.429 37.714-182.286 132.571-244 202.286 48-209.143 234.286-357.143 448.571-357.143 8.571 0 17.143 0 25.714 0.571 70.857-32.571 169.714-66.857 247.429-66.857 92.571 0 172 35.429 172 140 0 54.857-21.143 114.286-42.857 163.429 37.714 68 57.714 145.143 57.714 222.857zM984 169.714c0-64-45.714-103.429-108.571-103.429-48 0-102.286 19.429-145.143 40 92.571 36 172 102.286 224.571 186.857 14.286-37.714 29.143-83.429 29.143-123.429zM73.143 876.571c0 66.286 39.429 102.286 104.571 102.286 50.857 0 107.429-22.857 152-47.429-93.143-54.857-165.143-142.286-200.571-244.571-26.286 54.857-56 128-56 189.714zM361.143 469.143h416c-4-110.286-101.143-189.714-208-189.714-107.429 0-204 79.429-208 189.714z"],"width":1024,"tags":["internet-explorer"],"defaultCode":62059,"grid":14},{"paths":["M1024 713.143v-548.571c0-9.714-8.571-18.286-18.286-18.286h-914.286c-9.714 0-18.286 8.571-18.286 18.286v548.571c0 9.714 8.571 18.286 18.286 18.286h914.286c9.714 0 18.286-8.571 18.286-18.286zM1097.143 164.571v548.571c0 50.286-41.143 91.429-91.429 91.429h-420.571v73.143h201.143c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-475.429c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h201.143v-73.143h-420.571c-50.286 0-91.429-41.143-91.429-91.429v-548.571c0-50.286 41.143-91.429 91.429-91.429h914.286c50.286 0 91.429 41.143 91.429 91.429z"],"width":1097.142857142857,"tags":["television","tv"],"defaultCode":62060,"grid":14},{"paths":["M78.857 73.143h112.571c-26.857 24.571-50.857 53.143-72 85.143-88.571 136.571-52.571 286.286-18.286 447.429 28 130.857 51.429 255.429 133.143 345.143h-155.429c-36.571 0-66.286-29.714-66.286-66.286v-745.143c0-36.571 29.714-66.286 66.286-66.286zM769.143 73.143h176c36.571 0 66.286 29.714 66.286 66.286v745.143c0 36.571-29.714 66.286-66.286 66.286h-101.714c75.429-74.857 118.286-183.429 112-322.857l-268 57.714c-3.429 63.429-25.143 124.571-112 142.857-48.571 10.286-88.571-1.143-113.714-22.857-30.857-26.286-55.429-60.571-96.571-256-41.714-196-33.143-237.143-16-273.714 14.286-29.714 46.286-57.143 94.286-67.429 87.429-18.286 132 29.143 161.143 85.714l267.429-57.143c-26.286-67.429-61.143-122.286-102.857-164z"],"width":1024,"tags":["contao"],"defaultCode":62061,"grid":14},{"paths":["M800.571 884l-3.429 3.429c-42.857 42.857-92.571 76.571-148 100-57.714 24-118.286 36.571-181.143 36.571s-124-12.571-181.143-36.571c-55.429-23.429-105.714-57.143-148-100-42.857-42.286-76.571-92-100-147.429-14.286-34.857-25.714-70.857-30.857-108v0c-2.286-16 20-19.429 27.429-20.571 17.714-2.857 29.714-1.714 32 11.429 0.571 0.571 0.571 1.143 0.571 2.286 2.286 11.429 8 45.714 26.286 90.857 18.857 46.857 48 90.286 86.857 129.143 37.143 37.143 80.571 66.286 129.143 86.857 49.714 21.143 102.857 32 157.714 32 54.286 0 107.429-10.857 157.714-32 48-20.571 91.429-49.714 128.571-86.857l3.429-3.429c4-4 8.571-5.143 14.286-3.429 5.143 1.143 11.429 5.714 18.857 12.571v0c18.286 18.857 14.286 28 9.714 33.143zM530.857 532.571l-37.714 37.714 36 36c4 4 11.429 12.571-4 28-6.286 6.286-12.571 9.714-18.286 9.714-4 0-7.429-1.714-10.857-5.714l-35.429-34.857-37.714 37.714c-1.143 1.143-4 2.857-8.571 2.857-5.143 0-11.429-2.857-17.714-9.143l-1.143-1.143c-4-3.429-10.286-9.714-10.286-16.571 0-3.429 1.714-6.286 4.571-9.714l37.714-37.143-37.714-37.714c-6.286-6.286-3.429-14.286 8-25.714 6.857-6.857 12.571-10.286 17.714-10.286 2.857 0 5.143 1.143 7.429 2.857l37.143 37.714 37.143-37.143c6.286-6.286 16.571-3.429 27.429 7.429 6.857 6.857 14.286 16.571 6.286 25.143zM800 565.143c0 45.143-9.143 89.143-26.286 130.286-17.143 40-41.143 75.429-72 106.286s-66.857 54.857-106.857 72c-41.143 17.714-85.143 26.286-130.286 26.286s-89.143-8.571-130.286-26.286c-40-17.143-76-41.143-106.857-72s-54.857-66.286-71.429-106.286c-3.429-7.429-8.571-21.714-8.571-22.857h-0.571c-5.143-16 17.714-22.857 24.571-25.143 16.571-5.143 29.143-7.429 34.286 6.857 13.714 36.571 34.857 72 55.429 95.429h0.571v-194.857c1.143-48 21.143-96.571 58.286-132.571 38.286-37.714 89.714-58.857 144.571-58.857 112 0 202.857 90.286 202.857 201.143 0 112-91.429 202.857-202.857 202.857-22.286 0-38.857-1.714-64-9.143-2.857-1.143-16-6.857-7.429-34.857 2.286-7.429 9.143-29.143 25.143-24.571 1.143 0 29.143 6.857 44 6.857 79.429 0 141.714-61.714 141.714-140.571 0-37.143-14.857-72-41.143-97.714-26.286-26.286-61.714-40.571-100-40.571-39.429 0-75.429 16-101.714 45.714-22.857 25.714-36.571 60-36.571 91.429v236c41.143 25.143 88.571 38.286 138.286 38.286 73.143 0 144-29.143 194.857-80 51.429-51.429 80-120.571 80-193.143 0-73.143-28.571-141.714-80.571-193.714-51.429-51.429-120-80-193.714-80s-142.857 28.571-194.286 80c-0.571 0.571-33.143 34.286-44 49.714l-1.143 1.143c-6.857 9.714-13.143 18.857-41.714 12.571-14.286-3.429-29.714-12-29.714-24.571v-388.571c0-10.286 8-21.714 21.714-21.714h501.143c17.143 0 17.143 24 17.143 31.429 0 8 0 31.429-17.143 31.429h-463.429v276h0.571c32-33.714 87.429-69.143 120-82.857 40.571-17.143 86.286-26.286 132-26.286 45.143 0 89.143 8.571 130.286 26.286 40 17.143 76 41.143 106.857 72s54.857 66.286 72 106.286c17.143 41.714 26.286 85.143 26.286 130.857zM782.286 233.143c10.857 9.714 3.429 20-7.429 32.571-6.857 6.857-14.286 14.857-22.286 14.857-3.429 0-6.286-1.143-9.143-4-41.143-35.429-78.286-59.429-118.286-76-49.714-21.714-102.857-32-157.714-32-48.571 0-101.714 9.714-149.714 28-14.857 5.714-22.857-13.714-25.714-21.143-3.429-9.143-5.143-16.571-4.571-21.714 1.143-5.714 4-9.714 9.143-11.429 46.857-20.571 110.857-32.571 170.857-32.571 62.286 0 123.429 12.571 180.571 36.571 52.571 22.286 95.429 49.714 134.286 86.857z"],"width":814.8845714285713,"tags":["500px"],"defaultCode":62062,"grid":14},{"paths":["M886.286 843.429c17.143-8.571 30.286 4.571 12.571 27.429s-160 153.143-398.857 153.143-421.714-163.429-477.714-230.857c-15.429-17.714 2.286-25.714 12.571-18.857 167.429 101.714 429.143 269.143 851.429 69.143zM1004.571 777.714c8.571 11.429 0 61.714-14.857 98.286-14.857 36-36.571 61.143-48.571 70.857-12.571 10.286-21.714 6.286-14.857-8.571s44-106.286 29.143-125.714c-14.857-18.857-84.571-9.714-109.714-7.429-24.571 2.286-29.714 4.571-32-0.571-5.143-13.143 49.714-35.429 85.714-40 36-4 93.714-1.714 105.143 13.143zM779.429 524.571c0 62.857 73.714 120.571 73.714 120.571l-129.714 128c-50.857-48-89.143-88-89.143-88-5.714-5.714-10.286-12.571-14.286-18.857-103.429 161.714-419.429 151.429-419.429-98.857 0-233.143 276-264.571 387.429-268.571v-72.571c0-15.429 5.714-85.714-81.143-85.714 0 0-86.857 0-124 113.143l-168-15.429c0-112.571 106.857-238.286 308-238.286 200.571 0 256.571 130.286 256.571 188v336.571zM395.429 536.571c0 116 192.571 143.429 192.571-39.429v-92.571c-77.143 2.286-192.571 24-192.571 132z"],"width":1019.9771428571428,"tags":["amazon"],"defaultCode":62064,"grid":14},{"paths":["M877.714 146.286c40 0 73.143 33.143 73.143 73.143v731.429c0 40-33.143 73.143-73.143 73.143h-804.571c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h73.143v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h219.429v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h73.143zM658.286 91.429v164.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286v-164.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286zM219.429 91.429v164.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286v-164.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286zM877.714 950.857v-585.143h-804.571v585.143h804.571zM512 621.714h128c10.286 0 18.286 8 18.286 18.286v36.571c0 10.286-8 18.286-18.286 18.286h-128v128c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-128h-128c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h128v-128c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286v128z"],"width":950.8571428571428,"tags":["calendar-plus-o"],"defaultCode":62065,"grid":14},{"paths":["M658.286 640v36.571c0 10.286-8 18.286-18.286 18.286h-329.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h329.143c10.286 0 18.286 8 18.286 18.286zM73.143 950.857h804.571v-585.143h-804.571v585.143zM292.571 256v-164.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v164.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM731.429 256v-164.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v164.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM950.857 219.429v731.429c0 40-33.143 73.143-73.143 73.143h-804.571c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h73.143v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h219.429v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h73.143c40 0 73.143 33.143 73.143 73.143z"],"width":950.8571428571428,"tags":["calendar-minus-o"],"defaultCode":62066,"grid":14},{"paths":["M634.857 791.429l-26.286 26.286c-6.857 6.857-18.286 6.857-25.714 0l-107.429-108-107.429 108c-7.429 6.857-18.857 6.857-25.714 0l-26.286-26.286c-6.857-6.857-6.857-18.286 0-25.714l108-107.429-108-107.429c-6.857-7.429-6.857-18.857 0-25.714l26.286-26.286c6.857-6.857 18.286-6.857 25.714 0l107.429 107.429 107.429-107.429c7.429-6.857 18.857-6.857 25.714 0l26.286 26.286c6.857 6.857 6.857 18.286 0 25.714l-107.429 107.429 107.429 107.429c6.857 7.429 6.857 18.857 0 25.714zM73.143 950.857h804.571v-585.143h-804.571v585.143zM292.571 256v-164.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v164.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM731.429 256v-164.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v164.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM950.857 219.429v731.429c0 40-33.143 73.143-73.143 73.143h-804.571c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h73.143v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h219.429v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h73.143c40 0 73.143 33.143 73.143 73.143z"],"width":950.8571428571428,"tags":["calendar-times-o"],"defaultCode":62067,"grid":14},{"paths":["M744.571 550.857l-292.571 292.571c-7.429 6.857-18.857 6.857-26.286 0l-164.571-164.571c-6.857-7.429-6.857-18.857 0-25.714l26.286-26.286c6.857-6.857 18.286-6.857 25.714 0l125.714 125.714 253.714-253.714c7.429-6.857 18.857-6.857 25.714 0l26.286 26.286c6.857 6.857 6.857 18.286 0 25.714zM73.143 950.857h804.571v-585.143h-804.571v585.143zM292.571 256v-164.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v164.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM731.429 256v-164.571c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v164.571c0 10.286 8 18.286 18.286 18.286h36.571c10.286 0 18.286-8 18.286-18.286zM950.857 219.429v731.429c0 40-33.143 73.143-73.143 73.143h-804.571c-40 0-73.143-33.143-73.143-73.143v-731.429c0-40 33.143-73.143 73.143-73.143h73.143v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h219.429v-54.857c0-50.286 41.143-91.429 91.429-91.429h36.571c50.286 0 91.429 41.143 91.429 91.429v54.857h73.143c40 0 73.143 33.143 73.143 73.143z"],"width":950.8571428571428,"tags":["calendar-check-o"],"defaultCode":62068,"grid":14},{"paths":["M256 0c20 0 36.571 16.571 36.571 36.571v509.143l306.286-245.143c6.286-5.143 14.857-8 22.857-8 20 0 36.571 16.571 36.571 36.571v216.571l306.286-245.143c6.286-5.143 14.857-8 22.857-8 20 0 36.571 16.571 36.571 36.571v658.286c0 20-16.571 36.571-36.571 36.571h-950.857c-20 0-36.571-16.571-36.571-36.571v-950.857c0-20 16.571-36.571 36.571-36.571h219.429z"],"width":1024,"tags":["industry"],"defaultCode":62069,"grid":14},{"paths":["M292.571 621.714c25.143 0 49.714-2.857 73.143-8.571v374.286c0 20-16.571 36.571-36.571 36.571h-73.143c-20 0-36.571-16.571-36.571-36.571v-374.286c23.429 5.714 48 8.571 73.143 8.571zM292.571 0c161.714 0 292.571 130.857 292.571 292.571s-130.857 292.571-292.571 292.571-292.571-130.857-292.571-292.571 130.857-292.571 292.571-292.571zM292.571 128c10.286 0 18.286-8 18.286-18.286s-8-18.286-18.286-18.286c-110.857 0-201.143 90.286-201.143 201.143 0 10.286 8 18.286 18.286 18.286s18.286-8 18.286-18.286c0-90.857 73.714-164.571 164.571-164.571z"],"width":585.1428571428571,"tags":["map-pin"],"defaultCode":62070,"grid":14},{"paths":["M997.143 169.714c7.429 7.429 7.429 18.857 0 26.286l-80.571 80.571c-10.286 10.286-24.571 16-38.857 16h-768c-20 0-36.571-16.571-36.571-36.571v-146.286c0-20 16.571-36.571 36.571-36.571h329.143v-36.571c0-20 16.571-36.571 36.571-36.571h73.143c20 0 36.571 16.571 36.571 36.571v36.571h292.571c14.286 0 28.571 5.714 38.857 16zM438.857 694.857h146.286v292.571c0 20-16.571 36.571-36.571 36.571h-73.143c-20 0-36.571-16.571-36.571-36.571v-292.571zM914.286 438.857c20 0 36.571 16.571 36.571 36.571v146.286c0 20-16.571 36.571-36.571 36.571h-768c-14.286 0-28.571-5.714-38.857-16l-80.571-80.571c-7.429-7.429-7.429-18.857 0-26.286l80.571-80.571c10.286-10.286 24.571-16 38.857-16h292.571v-109.714h146.286v109.714h329.143z"],"width":1024,"tags":["map-signs"],"defaultCode":62071,"grid":14},{"paths":["M1154.286 6.286c9.714 6.857 16 18.286 16 30.286v804.571c0 14.857-9.143 28.571-22.857 33.714l-365.714 146.286c-9.143 4-18.286 4-27.429 0l-352-140.571-352 140.571c-4.571 2.286-9.143 2.857-13.714 2.857-7.429 0-14.286-2.286-20.571-6.286-9.714-6.857-16-18.286-16-30.286v-804.571c0-14.857 9.143-28.571 22.857-33.714l365.714-146.286c9.143-4 18.286-4 27.429 0l352 140.571 352-140.571c11.429-4.571 24-3.429 34.286 3.429zM420.571 83.429v725.714l329.143 131.429v-725.714zM73.143 207.429v725.714l310.857-124v-725.714zM1097.143 816.571v-725.714l-310.857 124v725.714z"],"width":1170.2857142857142,"tags":["map-o"],"defaultCode":62072,"grid":14},{"paths":["M292.571 0c9.714 0 18.286 8.571 18.286 18.286v841.143c0 6.857-4 13.143-9.714 16l-274.286 146.286c-2.857 1.714-5.714 2.286-8.571 2.286-9.714 0-18.286-8.571-18.286-18.286v-841.143c0-6.857 4-13.143 9.714-16l274.286-146.286c2.857-1.714 5.714-2.286 8.571-2.286zM1005.714 0c9.714 0 18.286 8.571 18.286 18.286v841.143c0 6.857-4 13.143-9.714 16l-274.286 146.286c-2.857 1.714-5.714 2.286-8.571 2.286-9.714 0-18.286-8.571-18.286-18.286v-841.143c0-6.857 4-13.143 9.714-16l274.286-146.286c2.857-1.714 5.714-2.286 8.571-2.286zM365.714 0c2.857 0 5.714 0.571 8 1.714l292.571 146.286c6.286 3.429 10.286 9.714 10.286 16.571v841.143c0 9.714-8.571 18.286-18.286 18.286-2.857 0-5.714-0.571-8-1.714l-292.571-146.286c-6.286-3.429-10.286-9.714-10.286-16.571v-841.143c0-9.714 8.571-18.286 18.286-18.286z"],"width":1024,"tags":["map"],"defaultCode":62073,"grid":14},{"paths":["M365.714 512c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM585.143 512c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM804.571 512c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM1024 512c0 202.286-229.143 365.714-512 365.714-41.714 0-82.286-3.429-120.571-10.286-65.143 65.143-150.286 109.714-248.571 130.857-15.429 2.857-32 5.714-49.143 7.429-9.143 1.143-17.714-5.143-20-13.714v0c-2.286-9.143 4.571-14.857 11.429-21.143 36-33.714 78.857-60.571 93.714-181.143-109.143-66.857-178.857-166.286-178.857-277.714 0-202.286 229.143-365.714 512-365.714s512 163.429 512 365.714z"],"width":1024,"tags":["commenting"],"defaultCode":62074,"grid":14},{"paths":["M365.714 512c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM585.143 512c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM804.571 512c0 40.571-32.571 73.143-73.143 73.143s-73.143-32.571-73.143-73.143 32.571-73.143 73.143-73.143 73.143 32.571 73.143 73.143zM512 219.429c-237.714 0-438.857 133.714-438.857 292.571 0 85.143 57.143 166.286 156 222.286l49.714 28.571-15.429 54.857c-10.857 40.571-25.143 72-40 98.286 57.714-24 110.286-56.571 157.143-97.714l24.571-21.714 32.571 3.429c24.571 2.857 49.714 4.571 74.286 4.571 237.714 0 438.857-133.714 438.857-292.571s-201.143-292.571-438.857-292.571zM1024 512c0 202.286-229.143 365.714-512 365.714-28 0-56-1.714-82.857-4.571-74.857 66.286-164 113.143-262.857 138.286-20.571 5.714-42.857 9.714-65.143 12.571h-2.857c-11.429 0-21.714-9.143-24.571-21.714v-0.571c-2.857-14.286 6.857-22.857 15.429-33.143 36-40.571 77.143-74.857 104-170.286-117.714-66.857-193.143-170.286-193.143-286.286 0-201.714 229.143-365.714 512-365.714v0c282.857 0 512 164 512 365.714z"],"width":1024,"tags":["commenting-o"],"defaultCode":62075,"grid":14},{"paths":["M292.571 680.571l292.571-168.571v337.714l-292.571 169.143v-338.286zM0 512v337.714l292.571-169.143-292.571-168.571zM292.571 5.143v337.714l-292.571 169.143v-337.714zM292.571 342.857l292.571-168.571v337.714z"],"width":585.1428571428571,"tags":["houzz"],"defaultCode":62076,"grid":14},{"paths":["M976.571 296c-4 90.286-67.429 214.286-189.714 372-126.857 164-233.143 246.286-321.143 246.286-54.286 0-100-50.286-137.143-150.286-25.143-91.429-50.286-183.429-75.429-275.429-27.429-100-57.714-149.714-89.714-149.714-6.857 0-30.857 14.286-72.571 43.429l-44-56c45.714-40.571 90.857-81.714 136-121.143 60.571-53.714 106.857-80.571 137.714-83.429 72.571-6.857 116.571 42.286 133.714 148 17.714 114.286 30.857 185.714 37.714 213.143 21.143 94.857 43.429 142.286 68.571 142.286 19.429 0 48.571-30.286 88-92 38.857-61.714 59.429-108.571 62.286-140.571 5.143-53.143-15.429-79.429-62.286-79.429-22.286 0-45.143 5.143-69.143 14.857 45.714-149.714 133.143-222.286 262.286-218.286 95.429 2.857 140.571 65.143 134.857 186.286z"],"width":1029.12,"tags":["vimeo"],"defaultCode":62077,"grid":14},{"paths":["M0 73.143h877.714v877.714h-877.714v-877.714zM620 710.286l-126.286-360.571 126.286-169.714h-362.286l126.286 169.714-126.286 360.571 181.143 173.714z"],"width":877.7142857142857,"tags":["black-tie"],"defaultCode":62078,"grid":14},{"paths":["M0 73.143h877.714v877.714h-877.714v-877.714zM518.857 256l-6.857 18.857 42.857 47.429-17.714 65.143 14.286 14.286 61.143-32.571 61.143 32.571 14.286-14.286-17.714-65.143 42.857-47.429-6.857-18.857h-54.286l-30.286-54.857h-18.286l-30.286 54.857h-54.286zM366.286 349.143c23.429 0 32.571 8.571 32 45.143l99.429-12c0-87.429-60-103.429-126.857-103.429-99.429 0-151.429 40-151.429 137.143v41.143h-54.857v73.143h43.429c5.714 0 11.429 0 11.429 4.571v218.286c0 10.857-2.857 14.286-13.143 15.429l-41.714 4v50.286h256v-49.143l-85.143-8c-10.286-1.143-6.286-2.857-6.286-14.286v-221.143h109.143l21.714-73.143h-132c-5.714 0 1.143-4 1.143-8.571v-45.714c0-34.286 1.143-53.714 37.143-53.714zM713.143 822.857v-49.143l-30.857-5.143c-10.857-1.714-5.714-2.857-5.714-14.286v-297.143h-157.143l-13.143 57.714 47.429 12.571c7.429 2.286 13.143 7.429 13.143 15.429v211.429c0 10.857-4.571 13.143-14.857 14.286l-40 5.143v49.143h201.143z"],"width":877.7142857142857,"tags":["fonticons"],"defaultCode":62080,"grid":14},{"paths":["M1024 483.429c0 44.571-25.143 82.857-62.286 101.714 4.571 17.714 6.857 36 6.857 54.857 0 180.571-204 326.857-455.429 326.857-250.857 0-454.857-146.286-454.857-326.857 0-18.286 2.286-36.571 6.286-53.714-38.286-18.857-64.571-57.714-64.571-102.857 0-62.857 50.857-113.714 113.714-113.714 32.571 0 61.714 13.714 82.857 36 77.143-53.714 180-88.571 294.286-92.571l66.286-297.714c2.286-10.286 13.143-17.143 23.429-14.857l210.857 46.286c13.714-27.429 42.857-46.857 76-46.857 47.429 0 85.714 38.286 85.714 85.143 0 47.429-38.286 85.714-85.714 85.714-46.857 0-85.143-38.286-85.143-85.143l-190.857-42.286-59.429 269.714c114.857 3.429 218.857 37.714 296.571 91.429 20.571-21.714 49.714-34.857 81.714-34.857 62.857 0 113.714 50.857 113.714 113.714zM238.857 597.143c0 47.429 38.286 85.714 85.143 85.714 47.429 0 85.714-38.286 85.714-85.714 0-46.857-38.286-85.143-85.714-85.143-46.857 0-85.143 38.286-85.143 85.143zM701.714 800c8.571-8.571 8.571-21.143 0-29.714-8-8-21.143-8-29.143 0-34.286 34.857-108 46.857-160.571 46.857s-126.286-12-160.571-46.857c-8-8-21.143-8-29.143 0-8.571 8-8.571 21.143 0 29.714 54.286 54.286 158.857 58.286 189.714 58.286s135.429-4 189.714-58.286zM700 682.857c46.857 0 85.143-38.286 85.143-85.714 0-46.857-38.286-85.143-85.143-85.143-47.429 0-85.714 38.286-85.714 85.143 0 47.429 38.286 85.714 85.714 85.714z"],"width":1024,"tags":["reddit-alien"],"defaultCode":62081,"grid":14},{"paths":["M39.429 454.286h0.571c29.714-236.571 191.429-454.857 480.571-454.286 175.429 0 320 82.286 404.571 233.714 43.429 78.286 59.429 161.714 59.429 252.571v107.429h-642.857c2.857 265.143 389.714 256 556.571 139.429v215.429c-97.714 58.857-318.286 109.714-490.286 44-145.714-56-247.429-207.429-249.143-354.857-2.286-190.286 94.286-316.571 249.143-388.571-32.571 41.143-57.714 85.714-70.857 162.857h362.857c21.143-216.571-205.143-216.571-205.143-216.571-213.714 7.429-368 132-455.429 258.857z"],"width":1024,"tags":["edge"],"defaultCode":62082,"grid":14},{"paths":["M0 859.429v-347.429h1316.571v347.429c0 50.286-41.143 91.429-91.429 91.429h-1133.714c-50.286 0-91.429-41.143-91.429-91.429zM365.714 731.429v73.143h219.429v-73.143h-219.429zM146.286 731.429v73.143h146.286v-73.143h-146.286zM1225.143 73.143c50.286 0 91.429 41.143 91.429 91.429v128h-1316.571v-128c0-50.286 41.143-91.429 91.429-91.429h1133.714z"],"width":1316.5714285714284,"tags":["credit-card-alt"],"defaultCode":62083,"grid":14},{"paths":["M905.143 737.143l-124.571-63.429c-56 91.429-155.429 147.429-262.857 147.429-170.286 0-308-137.714-308-307.429 0-170.286 137.714-308 308-308 100 0 193.714 48.571 251.429 130.857l122.857-71.429c-84-129.143-226.286-206.286-380-206.286-250.286 0-453.143 202.857-453.143 453.143s202.857 453.143 453.143 453.143c162.286 0 312.571-86.857 393.143-228zM588.571 510.286l396 201.143c-86.857 189.714-261.143 312.571-472.571 312.571-282.857 0-512-229.143-512-512s229.143-512 512-512c201.143 0 366.857 110.857 460.571 285.714zM881.714 512h-22.286v91.429h-54.857v-201.143h77.714c63.429 0 69.143 109.714-0.571 109.714z"],"width":984.576,"tags":["codiepie"],"defaultCode":62084,"grid":14},{"paths":["M815.429 405.143l-350.857-220.571 52.571-86.286h488.571zM231.429 556.571l-105.143-66.286v-490.286l676 424.571zM813.714 479.429l84 54.286v490.286l-304-191.429zM792.571 467.429l-285.714 458.286h-488.571l203.429-326.286z"],"width":1024,"tags":["modx"],"defaultCode":62085,"grid":14},{"paths":["M365.714 576v-128c0-5.143-4-9.143-9.143-9.143h-54.857c-5.143 0-9.143 4-9.143 9.143v128c0 5.143 4 9.143 9.143 9.143h54.857c5.143 0 9.143-4 9.143-9.143zM658.286 576v-128c0-5.143-4-9.143-9.143-9.143h-54.857c-5.143 0-9.143 4-9.143 9.143v128c0 5.143 4 9.143 9.143 9.143h54.857c5.143 0 9.143-4 9.143-9.143zM950.857 594.286v429.714h-365.714v-182.857c0-60.571-49.143-109.714-109.714-109.714s-109.714 49.143-109.714 109.714v182.857h-365.714v-429.714c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143v64h73.143v-356.571c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143v64h73.143v-64c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143v64h73.143v-64c0-12 16-9.143 23.429-9.143v-223.429c-10.857-5.143-18.286-16.571-18.286-28.571 0-17.143 14.286-31.429 31.429-31.429s31.429 14.286 31.429 31.429c0 12-7.429 23.429-18.286 28.571v9.714c15.429-3.429 31.429-5.714 47.429-5.714 23.429 0 45.714 8.571 65.143 8.571 17.714 0 37.714-8.571 48-8.571 5.143 0 9.143 4 9.143 9.143v120c0 13.714-46.286 16-55.429 16-21.143 0-41.143-8.571-62.857-8.571-17.143 0-34.857 2.857-51.429 6.857v76c7.429 0 23.429-2.857 23.429 9.143v64h73.143v-64c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143v64h73.143v-64c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143v356.571h73.143v-64c0-5.143 4-9.143 9.143-9.143h54.857c5.143 0 9.143 4 9.143 9.143z"],"width":950.8571428571428,"tags":["fort-awesome"],"defaultCode":62086,"grid":14},{"paths":["M1307.429 460c5.714 2.857 9.143 9.143 9.143 15.429s-3.429 12.571-9.143 15.429l-182.857 109.714c-2.857 1.714-5.714 2.857-9.143 2.857-2.857 0-6.286-0.571-9.143-2.286-5.714-3.429-9.143-9.143-9.143-16v-73.143h-490.286c18.286 28.571 33.714 62.286 47.429 94.286 27.429 61.714 55.429 125.143 95.429 125.143h54.857v-54.857c0-10.286 8-18.286 18.286-18.286h182.857c10.286 0 18.286 8 18.286 18.286v182.857c0 10.286-8 18.286-18.286 18.286h-182.857c-10.286 0-18.286-8-18.286-18.286v-54.857h-54.857c-87.429 0-126.857-89.714-162.286-168.571-26.857-61.143-54.857-124-93.714-124h-205.714c-16.571 62.857-73.714 109.714-141.714 109.714-80.571 0-146.286-65.714-146.286-146.286s65.714-146.286 146.286-146.286c68 0 125.143 46.857 141.714 109.714h59.429c38.857 0 66.857-62.857 93.714-124 35.429-78.857 74.857-168.571 162.286-168.571h61.143c15.429-42.857 55.429-73.143 103.429-73.143 60.571 0 109.714 49.143 109.714 109.714s-49.143 109.714-109.714 109.714c-48 0-88-30.286-103.429-73.143h-61.143c-40 0-68 63.429-95.429 125.143-13.714 32-29.143 65.714-47.429 94.286h636.571v-73.143c0-6.857 3.429-12.571 9.143-16s13.143-2.857 18.286 0.571z"],"width":1316.5714285714284,"tags":["usb"],"defaultCode":62087,"grid":14},{"paths":["M657.143 435.429c0 42.286-34.286 76.571-77.143 76.571v0h-144.571v-153.714h144.571c42.857 0 77.143 34.286 77.143 77.143zM759.429 435.429c0-99.429-80-179.429-179.429-179.429v0h-247.429v512h102.857v-153.714h144.571c99.429 0 179.429-80 179.429-178.857zM1024 512c0 282.857-229.143 512-512 512s-512-229.143-512-512 229.143-512 512-512 512 229.143 512 512z"],"width":1024,"tags":["product-hunt"],"defaultCode":62088,"grid":14},{"paths":["M940 627.429c0-45.714-29.143-84.571-69.143-100-2.857 17.714-7.429 35.429-13.143 52.571-5.714 18.286-22.857 29.714-41.143 29.714-4.571 0-9.143-0.571-13.714-1.714-23.429-8-35.429-32.571-28-55.429 8.571-26.286 13.143-53.714 13.143-81.714 0-142.857-116.571-259.429-260-259.429-102.857 0-195.429 61.143-236.571 152.571 40 10.286 77.143 30.857 107.429 60.571 17.143 17.143 17.143 45.143 0 62.286s-45.143 17.143-62.286 0c-27.429-27.429-64-42.857-102.857-42.857-80.571 0-146.286 65.143-146.286 145.714s65.714 145.714 146.286 145.714h597.714c60 0 108.571-48.571 108.571-108zM1027.429 627.429c0 108-88 195.429-196 195.429h-597.714c-129.143 0-233.714-104.571-233.714-233.143 0-117.143 86.857-213.714 199.429-230.286 47.429-139.429 179.429-235.429 328.571-235.429 180 0 328.571 137.714 345.714 313.143 87.429 18.857 153.714 97.143 153.714 190.286zM1170.286 627.429c0 65.143-18.857 128-55.429 182.286-8.571 12.571-22.286 18.857-36.571 18.857v0c-8.571 0-17.143-2.286-24.571-7.429-20-13.143-25.143-40.571-11.429-60.571 26.857-39.429 40.571-85.143 40.571-133.143 0-47.429-13.714-93.714-40.571-133.143-13.714-20-8.571-46.857 11.429-60.571s47.429-8 61.143 12c36.571 53.714 55.429 116.571 55.429 181.714zM1316.571 627.429c0 90.857-26.286 178.286-76.571 253.143-8.571 12.571-22.286 19.429-36.571 19.429v0c-8 0-16.571-2.286-24-7.429-20-13.714-25.714-40.571-12-60.571 40-60.571 61.714-131.429 61.714-204.571s-21.714-144-61.714-204c-13.714-20-8-47.429 12-60.571 20-13.714 46.857-8.571 60.571 12 50.286 74.286 76.571 161.714 76.571 252.571z"],"width":1316.5714285714284,"tags":["mixcloud"],"defaultCode":62089,"grid":14},{"paths":["M857.143 885.143c0 68-54.857 123.429-123.429 123.429s-124-55.429-124-123.429c0-68.571 55.429-124 124-124s123.429 55.429 123.429 124zM724 724.571c-86.857 11.429-154.286 85.714-154.286 176 0 28 6.857 55.429 18.857 78.857-51.429 27.429-121.143 44.571-216.571 44.571-304 0-351.429-214.857-351.429-243.429 0-29.143 17.143-124.571 124.571-124.571s122.286 92 122.286 110.857c0 0 0 19.429-13.143 46.286 36.571 34.286 122.857 34.286 122.857 34.286 86.286 0 151.429-42.286 151.429-105.143 0-63.429-73.143-94.286-240-172.571-166.857-78.857-229.714-136.571-229.714-280 0-144 96-289.714 335.429-289.714s329.714 134.286 329.714 226.286-78.286 114.857-107.429 114.857c-28.571 0-134.286 9.714-134.286-149.143-18.857-21.143-101.143-21.143-101.143-21.143-82.857 0-119.429 62.857-119.429 101.143 0 38.857 15.429 86.857 188 144 264.571 88 274.286 202.857 274.286 308.571z"],"width":877.7142857142857,"tags":["scribd"],"defaultCode":62090,"grid":14},{"paths":["M402.286 676.571v-329.143c0-10.286-8-18.286-18.286-18.286h-146.286c-10.286 0-18.286 8-18.286 18.286v329.143c0 10.286 8 18.286 18.286 18.286h146.286c10.286 0 18.286-8 18.286-18.286zM658.286 676.571v-329.143c0-10.286-8-18.286-18.286-18.286h-146.286c-10.286 0-18.286 8-18.286 18.286v329.143c0 10.286 8 18.286 18.286 18.286h146.286c10.286 0 18.286-8 18.286-18.286zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["pause-circle"],"defaultCode":62091,"grid":14},{"paths":["M438.857 73.143c242.286 0 438.857 196.571 438.857 438.857s-196.571 438.857-438.857 438.857-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857zM438.857 822.857c171.429 0 310.857-139.429 310.857-310.857s-139.429-310.857-310.857-310.857-310.857 139.429-310.857 310.857 139.429 310.857 310.857 310.857zM493.714 694.857c-10.286 0-18.286-8-18.286-18.286v-329.143c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v329.143c0 10.286-8 18.286-18.286 18.286h-109.714zM274.286 694.857c-10.286 0-18.286-8-18.286-18.286v-329.143c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286v329.143c0 10.286-8 18.286-18.286 18.286h-109.714z"],"width":877.7142857142857,"tags":["pause-circle-o"],"defaultCode":62092,"grid":14},{"paths":["M621.714 676.571v-329.143c0-10.286-8-18.286-18.286-18.286h-329.143c-10.286 0-18.286 8-18.286 18.286v329.143c0 10.286 8 18.286 18.286 18.286h329.143c10.286 0 18.286-8 18.286-18.286zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["stop-circle"],"defaultCode":62093,"grid":14},{"paths":["M438.857 73.143c242.286 0 438.857 196.571 438.857 438.857s-196.571 438.857-438.857 438.857-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857zM438.857 822.857c171.429 0 310.857-139.429 310.857-310.857s-139.429-310.857-310.857-310.857-310.857 139.429-310.857 310.857 139.429 310.857 310.857 310.857zM274.286 694.857c-10.286 0-18.286-8-18.286-18.286v-329.143c0-10.286 8-18.286 18.286-18.286h329.143c10.286 0 18.286 8 18.286 18.286v329.143c0 10.286-8 18.286-18.286 18.286h-329.143z"],"width":877.7142857142857,"tags":["stop-circle-o"],"defaultCode":62094,"grid":14},{"paths":["M1004 804.571l20 178.857c1.143 10.286-2.286 20.571-9.143 28.571-6.857 7.429-17.143 12-27.429 12h-950.857c-10.286 0-20.571-4.571-27.429-12-6.857-8-10.286-18.286-9.143-28.571l20-178.857h984zM950.857 325.143l49.143 442.857h-976l49.143-442.857c2.286-18.286 17.714-32.571 36.571-32.571h146.286v73.143c0 40.571 32.571 73.143 73.143 73.143s73.143-32.571 73.143-73.143v-73.143h219.429v73.143c0 40.571 32.571 73.143 73.143 73.143s73.143-32.571 73.143-73.143v-73.143h146.286c18.857 0 34.286 14.286 36.571 32.571zM731.429 219.429v146.286c0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571v-146.286c0-80.571-65.714-146.286-146.286-146.286s-146.286 65.714-146.286 146.286v146.286c0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571v-146.286c0-121.143 98.286-219.429 219.429-219.429s219.429 98.286 219.429 219.429z"],"width":1024,"tags":["shopping-bag"],"defaultCode":62096,"grid":14},{"paths":["M1097.143 438.857c40.571 0 73.143 32.571 73.143 73.143s-32.571 73.143-73.143 73.143h-8.571l-65.714 378.286c-6.286 34.857-36.571 60.571-72 60.571h-731.429c-35.429 0-65.714-25.714-72-60.571l-65.714-378.286h-8.571c-40.571 0-73.143-32.571-73.143-73.143s32.571-73.143 73.143-73.143h1024zM277.143 896c20-1.714 35.429-19.429 33.714-39.429l-18.286-237.714c-1.714-20-19.429-35.429-39.429-33.714s-35.429 19.429-33.714 39.429l18.286 237.714c1.714 18.857 17.714 33.714 36.571 33.714h2.857zM512 859.429v-237.714c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571v237.714c0 20 16.571 36.571 36.571 36.571s36.571-16.571 36.571-36.571zM731.429 859.429v-237.714c0-20-16.571-36.571-36.571-36.571s-36.571 16.571-36.571 36.571v237.714c0 20 16.571 36.571 36.571 36.571s36.571-16.571 36.571-36.571zM932.571 862.286l18.286-237.714c1.714-20-13.714-37.714-33.714-39.429s-37.714 13.714-39.429 33.714l-18.286 237.714c-1.714 20 13.714 37.714 33.714 39.429h2.857c18.857 0 34.857-14.857 36.571-33.714zM272 166.857l-53.143 235.429h-75.429l57.714-252c14.857-66.857 73.714-113.714 142.286-113.714h95.429c0-20 16.571-36.571 36.571-36.571h219.429c20 0 36.571 16.571 36.571 36.571h95.429c68.571 0 127.429 46.857 142.286 113.714l57.714 252h-75.429l-53.143-235.429c-8-33.714-37.143-57.143-71.429-57.143h-95.429c0 20-16.571 36.571-36.571 36.571h-219.429c-20 0-36.571-16.571-36.571-36.571h-95.429c-34.286 0-63.429 23.429-71.429 57.143z"],"width":1170.2857142857142,"tags":["shopping-basket"],"defaultCode":62097,"grid":14},{"paths":["M566.286 585.143l36.571-146.286h-145.143l-36.571 146.286h145.143zM1005.143 297.143l-32 128c-2.286 8-9.143 13.714-17.714 13.714h-186.857l-36.571 146.286h177.714c5.714 0 10.857 2.857 14.286 6.857 3.429 4.571 5.143 10.286 3.429 16l-32 128c-1.714 8-9.143 13.714-17.714 13.714h-186.857l-46.286 187.429c-2.286 8-9.714 13.714-17.714 13.714h-128c-5.714 0-11.429-2.857-14.857-6.857-3.429-4.571-4.571-10.286-3.429-16l44.571-178.286h-145.143l-46.286 187.429c-2.286 8-9.714 13.714-17.714 13.714h-128.571c-5.143 0-10.857-2.857-14.286-6.857-3.429-4.571-4.571-10.286-3.429-16l44.571-178.286h-177.714c-5.714 0-10.857-2.857-14.286-6.857-3.429-4.571-4.571-10.286-3.429-16l32-128c2.286-8 9.143-13.714 17.714-13.714h186.857l36.571-146.286h-177.714c-5.714 0-10.857-2.857-14.286-6.857-3.429-4.571-5.143-10.286-3.429-16l32-128c1.714-8 9.143-13.714 17.714-13.714h186.857l46.286-187.429c2.286-8 9.714-13.714 18.286-13.714h128c5.143 0 10.857 2.857 14.286 6.857 3.429 4.571 4.571 10.286 3.429 16l-44.571 178.286h145.143l46.286-187.429c2.286-8 9.714-13.714 18.286-13.714h128c5.143 0 10.857 2.857 14.286 6.857 3.429 4.571 4.571 10.286 3.429 16l-44.571 178.286h177.714c5.714 0 10.857 2.857 14.286 6.857 3.429 4.571 4.571 10.286 3.429 16z"],"width":1024,"tags":["hashtag"],"defaultCode":62098,"grid":14},{"paths":["M480.571 601.714l84.571 84.571-85.143 85.143zM480 252.571l85.143 85.143-84.571 84.571-0.571-169.714zM405.714 952l265.143-265.143-174.857-174.857 174.857-174.857-265.143-265.143v349.143l-145.714-145.714-53.143 53.143 182.857 183.429-182.857 183.429 53.143 53.143 145.714-145.714v349.143zM816.571 512c0 405.714-154.286 512-377.714 512v0c-223.429 0-377.714-106.286-377.714-512s154.286-512 377.714-512 377.714 106.286 377.714 512z"],"width":877.7142857142857,"tags":["bluetooth"],"defaultCode":62099,"grid":14},{"paths":["M340.571 813.143l98.857-98.286-98.857-98.286v196.571zM340.571 407.429l98.857-98.286-98.857-98.286v196.571zM358.857 512l203.429 203.429-308 308.571v-406.286l-169.714 169.143-61.714-61.714 212.571-213.143-212.571-213.143 61.714-61.714 169.714 169.143v-406.286l308 308.571z"],"width":585.1428571428571,"tags":["bluetooth-b"],"defaultCode":62100,"grid":14},{"paths":["M731.429 731.429c0-40-33.143-73.143-73.143-73.143s-73.143 33.143-73.143 73.143 33.143 73.143 73.143 73.143 73.143-33.143 73.143-73.143zM292.571 292.571c0-40-33.143-73.143-73.143-73.143s-73.143 33.143-73.143 73.143 33.143 73.143 73.143 73.143 73.143-33.143 73.143-73.143zM877.714 731.429c0 121.143-98.286 219.429-219.429 219.429s-219.429-98.286-219.429-219.429 98.286-219.429 219.429-219.429 219.429 98.286 219.429 219.429zM822.857 109.714c0 8-2.857 15.429-7.429 21.714l-603.429 804.571c-6.857 9.143-17.714 14.857-29.143 14.857h-91.429c-20 0-36.571-16.571-36.571-36.571 0-8 2.857-15.429 7.429-21.714l603.429-804.571c6.857-9.143 17.714-14.857 29.143-14.857h91.429c20 0 36.571 16.571 36.571 36.571zM438.857 292.571c0 121.143-98.286 219.429-219.429 219.429s-219.429-98.286-219.429-219.429 98.286-219.429 219.429-219.429 219.429 98.286 219.429 219.429z"],"width":877.7142857142857,"tags":["percent"],"defaultCode":62101,"grid":14},{"paths":["M59.429 403.429l452.571 580-496-360c-13.714-10.286-19.429-28-14.286-44l57.714-176zM323.429 403.429h377.143l-188.571 580zM210.286 53.714l113.143 349.714h-264l113.143-349.714c6.286-17.714 31.429-17.714 37.714 0zM964.571 403.429l57.714 176c5.143 16-0.571 33.714-14.286 44l-496 360 452.571-580zM964.571 403.429h-264l113.143-349.714c6.286-17.714 31.429-17.714 37.714 0z"],"width":1024,"tags":["gitlab"],"defaultCode":62102,"grid":14},{"paths":["M219.429 475.429h91.429v-128h-91.429v128zM697.714 665.143v-52.571c-49.143 17.143-89.714 21.143-138.857 21.714-110.286 0.571-208-45.143-274.286-96.571l0.571 54.857c62.286 56.571 157.714 101.143 276.571 100.571 49.714 0 96.571-10.286 136-28zM365.714 475.429h365.714v-128h-365.714v128zM1024 457.143c0 72.571-20.571 141.143-56.571 201.143 32 36.571 50.857 81.714 50.857 130.857 0 119.429-113.143 216.571-253.143 216.571-94.857 0-177.143-44.571-220.571-110.286-10.857 0.571-21.714 0.571-32.571 0.571s-21.714 0-32.571-0.571c-43.429 65.714-125.714 110.286-220.571 110.286-140 0-253.143-97.143-253.143-216.571 0-49.143 18.857-94.286 50.857-130.857-36-60-56.571-128.571-56.571-201.143 0-242.286 229.143-438.857 512-438.857s512 196.571 512 438.857z"],"width":1024,"tags":["wpbeginner"],"defaultCode":62103,"grid":14},{"paths":["M294.286 520.571v73.143h-144v-73.143h144zM294.286 374.857v72.571h-144v-72.571h144zM727.429 666.857v73.143h-194.857v-73.143h194.857zM727.429 520.571v73.143h-384v-73.143h384zM727.429 374.857v72.571h-384v-72.571h384zM804.571 866.286v-708.571c0-6.286-5.143-11.429-11.429-11.429h-18.286l-216 146.286-120-97.714-120 97.714-216-146.286h-18.286c-6.286 0-11.429 5.143-11.429 11.429v708.571c0 6.286 5.143 11.429 11.429 11.429h708.571c6.286 0 11.429-5.143 11.429-11.429zM316 232l105.714-85.714h-232zM561.714 232l126.286-85.714h-232zM877.714 157.714v708.571c0 46.857-37.714 84.571-84.571 84.571h-708.571c-46.857 0-84.571-37.714-84.571-84.571v-708.571c0-46.857 37.714-84.571 84.571-84.571h708.571c46.857 0 84.571 37.714 84.571 84.571z"],"width":877.7142857142857,"tags":["wpforms"],"defaultCode":62104,"grid":14},{"paths":["M512 466.286c-72.571-137.143-139.429-270.857-329.714-361.143-113.714-53.714-12 21.143-12 21.143 103.429 71.429 150.857 168 206.286 273.714 72 137.714 180.571 319.429 329.714 383.429 148.571 64 78.286 28.571 13.714-19.429-64.571-48.571-156-198.857-208-297.714zM313.714 776.571c-206.286-163.429-194.857-358.857-313.714-776.571 1092 0 838.286 725.143 839.429 837.143l184.571 186.857h-59.429l-160.571-162.857c-89.143 9.714-284.571 78.857-490.286-84.571z"],"width":1092.022857142857,"tags":["envira"],"defaultCode":62105,"grid":14},{"paths":["M785.143 375.429c-4.571-19.429-24-31.429-44-26.857-81.714 19.429-156 35.429-229.143 35.429s-147.429-16-229.143-35.429c-20-4.571-39.429 7.429-44 26.857-4.571 20 7.429 39.429 26.857 44 60.571 14.286 117.143 26.857 173.143 33.143-2.286 193.143-23.429 246.857-47.429 308.571l-5.143 12c-7.429 18.857 2.286 40 21.143 47.429 4 1.714 8.571 2.286 13.143 2.286 14.857 0 28.571-8.571 34.286-23.429l4.571-11.429c16-41.143 30.857-79.429 40.571-148h24c9.714 68.571 24.571 106.857 40.571 148l4.571 11.429c5.714 14.857 19.429 23.429 34.286 23.429 4.571 0 9.143-0.571 13.143-2.286 18.857-7.429 28.571-28.571 21.143-47.429l-5.143-12c-24-61.714-45.143-115.429-47.429-308.571 56-6.286 112.571-18.857 173.143-33.143 19.429-4.571 31.429-24 26.857-44zM585.143 292.571c0-40.571-32.571-73.143-73.143-73.143s-73.143 32.571-73.143 73.143 32.571 73.143 73.143 73.143 73.143-32.571 73.143-73.143zM914.286 512c0 222.286-180 402.286-402.286 402.286s-402.286-180-402.286-402.286 180-402.286 402.286-402.286 402.286 180 402.286 402.286zM512 73.143c-241.714 0-438.857 197.143-438.857 438.857s197.143 438.857 438.857 438.857 438.857-197.143 438.857-438.857-197.143-438.857-438.857-438.857zM1024 512c0 282.857-229.143 512-512 512s-512-229.143-512-512 229.143-512 512-512v0c282.857 0 512 229.143 512 512z"],"width":1024,"tags":["universal-access"],"defaultCode":62106,"grid":14},{"paths":["M821.714 464.571c12 12.571 18.286 29.714 16.571 46.857l-25.143 314.857c-2.857 32-29.143 56-60.571 56-1.714 0-3.429 0-5.143-0.571-33.714-2.286-58.286-32-56-65.143l20-245.143-81.714 4.571c20 41.143 31.429 88 31.429 137.143 0 82.286-32 157.143-84.571 212.571l-78.286-78.286c32-35.429 52-82.857 52-134.286 0-110.857-89.714-200.571-200-200.571-52 0-98.857 20-134.857 52.571l-78.286-78.857c44-41.714 100-70.286 162.286-80.571l150.857-171.429-85.143-49.714-103.429 92c-25.143 22.857-63.429 20.571-85.714-4.571s-20-63.429 4.571-85.714l136.571-121.714c19.429-17.714 48-20.571 70.857-6.857 278.286 161.714 278.857 161.714 278.857 161.714 14.857 8.571 23.429 23.429 27.429 38.857 5.714 22.286 1.714 47.429-14.857 66.857l-117.143 132.571 212-11.429c17.714-1.143 34.857 5.143 47.429 18.286zM708.571 203.429c-56 0-101.714-45.143-101.714-101.714 0-56 45.714-101.714 101.714-101.714 56.571 0 102.286 45.714 102.286 101.714 0 56.571-45.714 101.714-102.286 101.714zM350.286 913.143c41.143 0 80-13.143 112-34.857l79.429 79.429c-52.571 41.714-119.429 66.286-191.429 66.286-172 0-311.429-139.429-311.429-310.857 0-72.571 24.571-138.857 66.286-192l79.429 79.429c-21.714 32-34.286 70.857-34.286 112.571 0 110.286 89.714 200 200 200z"],"width":878.8845714285713,"tags":["wheelchair-alt"],"defaultCode":62107,"grid":14},{"paths":["M502.857 685.714v91.429c0 10.286-8 18.286-18.286 18.286h-91.429c-10.286 0-18.286-8-18.286-18.286v-91.429c0-10.286 8-18.286 18.286-18.286h91.429c10.286 0 18.286 8 18.286 18.286zM649.143 402.286c0 81.143-56.571 113.143-98.286 136.571-29.714 17.143-48 28-48 46.286v18.286c0 10.286-8 18.286-18.286 18.286h-91.429c-10.286 0-18.286-8-18.286-18.286v-38.857c0-70.286 50.286-92.571 90.857-110.857 34.286-16 55.429-26.857 55.429-52.571 0-33.143-41.714-57.714-79.429-57.714-20 0-41.143 6.286-54.286 15.429-12.571 8.571-24.571 21.143-45.714 47.429-3.429 4.571-8.571 6.857-14.286 6.857-4 0-8-1.143-10.857-3.429l-61.714-46.857c-7.429-5.714-9.143-16.571-4-24.571 46.857-73.714 112.571-109.714 199.429-109.714v0c93.714 0 198.857 74.286 198.857 173.714zM438.857 146.286c-201.714 0-365.714 164-365.714 365.714s164 365.714 365.714 365.714 365.714-164 365.714-365.714-164-365.714-365.714-365.714zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857v0c242.286 0 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["question-circle-o"],"defaultCode":62108,"grid":14},{"paths":["M209.143 177.714c-49.143 0-89.143-40-89.143-89.143 0-48.571 40-88.571 89.143-88.571s88.571 40 88.571 88.571c0 49.143-39.429 89.143-88.571 89.143zM524 544.571c0 61.714-65.714 48-80.571 22.857l-209.714-250.286c-9.143-14.857-16-8-16-8s-4 4.571 2.286 12l69.714 79.429 0.571 202.286c-49.143 142.857-92 261.143-92 261.143-26.857 76.571-49.143 142.857-68.571 152-23.429 12-40.571 9.143-58.857 0.571-24-10.857-30.857-40-29.143-57.143 0 0 1.143-9.143 112.571-353.143l2.857-237.714-48.571 93.714 20 126.857c7.429 48-33.143 54.286-33.143 54.286-38.857 6.286-46.857-38.857-46.857-40l-26.286-170.857c120-216.571 120.571-217.714 120.571-217.714v0c9.143-13.714 29.714-19.429 64.571-19.429 30.857 0 50.286 9.143 61.143 22.857v0l242.286 297.714c3.429 2.286 5.714 5.714 8 9.714l1.714 1.714-0.571 0.571c2.857 5.143 4 10.857 4 16.571zM293.714 630.286c54.857 145.714 104 256 104 256 16.571 42.286 45.143 102.857 3.429 126.857-41.143 24-74.286-4-83.429-23.429v0h-0.571c-1.714-4.571-3.429-9.143-4.571-14.286l-70.857-200.571zM764.571 968.571c12 18.857 22.286 32.571 16 36.571-10.857 6.857-14.286-13.143-26.286-32.571 0 0-64.571-97.714-241.714-377.714 3.429 1.143 9.714-4 9.714-4s6.286-5.143 6.286-9.714c176 287.429 236 387.429 236 387.429z"],"width":809.1794285714286,"tags":["blind"],"defaultCode":62109,"grid":14},{"paths":["M288 568h97.714l-0.571-151.429zM874.286 511.429c0-63.429-36.571-110.286-112.571-110.286h-30.857v221.714h29.714c71.429 0 113.714-52 113.714-111.429zM546.286 296l0.571 432c0 10.857-8.571 19.429-18.857 19.429h-123.429c-10.286 0-18.857-8.571-18.857-19.429v-35.429h-166.286l-31.429 46.286c-3.429 5.143-9.714 8.571-16 8.571h-152.571c-16 0-25.143-17.714-15.429-30.286l317.714-432.571c3.429-5.143 9.143-8 15.429-8h189.714c10.857 0 19.429 8.571 19.429 19.429zM1018.857 511.429c0 150.286-109.714 236-257.143 236h-154.286c-10.857 0-19.429-8.571-19.429-19.429v-432c0-10.857 8.571-19.429 19.429-19.429h153.143c148.571 0 258.286 84.571 258.286 234.857zM1108 512c0 0 2.286 148.571-84.571 236h-29.143c77.714-92.571 79.429-236.571 79.429-236.571s1.143-113.143-77.143-234.286h24.571c84.571 96.571 86.857 234.857 86.857 234.857zM1213.143 512c0 0 2.286 148.571-85.143 236h-29.143c77.714-92.571 79.429-236.571 79.429-236.571s1.143-113.143-76.571-234.286h24.571c84.571 96.571 86.857 234.857 86.857 234.857zM1316.571 512c0 0 2.286 148.571-84.571 236h-29.143c77.143-92.571 78.857-236.571 78.857-236.571s1.143-113.143-76.571-234.286h24.571c84.571 96.571 86.857 234.857 86.857 234.857z"],"width":1313.1337142857142,"tags":["audio-description"],"defaultCode":62110,"grid":14},{"paths":["M352.571 965.143c0-13.714-30.286-110.857-36.571-133.714-3.429-14.286-4.571-37.714-15.429-48-7.429-6.857-19.429-8-29.143-8-26.857 0-53.714 6.286-80.571 6.286-8 0-20-0.571-26.857-6.286-9.143-7.429-13.714-33.143-17.143-44.571-13.714-47.429-21.143-96-21.143-145.714s7.429-98.286 21.143-145.714c3.429-11.429 8-37.143 17.143-44.571 6.857-5.714 18.857-6.286 26.857-6.286 26.857 0 53.714 6.286 80.571 6.286 9.714 0 21.714-1.143 29.143-8 10.857-10.286 12-33.714 15.429-48 6.286-22.857 36.571-120 36.571-133.714 0-19.429-51.429-48-68-54.286-8.571-3.429-17.143-4.571-25.714-4.571-18.857 0-37.714 5.143-56 10.286-93.714 28-116 85.143-153.143 165.714-40 86.286-49.714 168.571-49.714 262.857s9.714 176.571 49.714 262.857c37.143 80.571 59.429 137.714 153.143 165.714 18.286 5.143 37.143 10.286 56 10.286 8.571 0 17.143-1.143 25.714-4.571 16.571-6.286 68-34.857 68-54.286zM443.429 443.429c-9.714 0-18.857-4-25.714-10.857-14.286-14.286-14.857-37.714 0-52 13.714-13.714 21.143-32 21.143-51.429s-7.429-37.714-21.143-52c-14.857-14.286-14.286-37.143 0-51.429s37.143-14.286 51.429 0c27.429 27.429 42.857 64.571 42.857 103.429s-15.429 76-42.857 103.429c-7.429 6.857-16.571 10.857-25.714 10.857zM546.857 546.857c-9.714 0-18.857-3.429-25.714-10.857-14.286-14.286-14.286-37.143 0-51.429 41.143-41.714 64-96.571 64-155.429s-22.857-113.714-64-155.429c-14.286-14.286-14.286-37.143 0-51.429s37.143-14.286 51.429 0c55.429 55.429 85.714 128.571 85.714 206.857s-30.286 151.429-85.714 206.857c-6.857 7.429-16.571 10.857-25.714 10.857zM650.286 650.286c-9.714 0-18.857-3.429-25.714-10.857-14.286-14.286-14.286-37.143 0-51.429 68.571-69.143 106.857-161.143 106.857-258.857s-38.286-189.714-106.857-258.857c-14.286-14.286-14.286-37.143 0-51.429s37.143-14.286 51.429 0c82.857 82.857 128.571 193.143 128.571 310.286s-45.714 227.429-128.571 310.286c-6.857 7.429-16.571 10.857-25.714 10.857z"],"width":804.5714285714286,"tags":["volume-control-phone"],"defaultCode":62112,"grid":14},{"paths":["M109.714 676.571c-50.286 0-91.429 41.143-91.429 91.429s41.143 91.429 91.429 91.429 91.429-41.143 91.429-91.429-41.143-91.429-91.429-91.429zM402.286 676.571c-50.286 0-91.429 41.143-91.429 91.429s41.143 91.429 91.429 91.429 91.429-41.143 91.429-91.429-41.143-91.429-91.429-91.429zM402.286 384c-50.286 0-91.429 41.143-91.429 91.429s41.143 91.429 91.429 91.429 91.429-41.143 91.429-91.429-41.143-91.429-91.429-91.429zM841.143 676.571c-50.286 0-91.429 41.143-91.429 91.429s41.143 91.429 91.429 91.429 91.429-41.143 91.429-91.429-41.143-91.429-91.429-91.429zM1133.714 676.571c-50.286 0-91.429 41.143-91.429 91.429s41.143 91.429 91.429 91.429 91.429-41.143 91.429-91.429-41.143-91.429-91.429-91.429zM841.143 384c-50.286 0-91.429 41.143-91.429 91.429s41.143 91.429 91.429 91.429 91.429-41.143 91.429-91.429-41.143-91.429-91.429-91.429zM1133.714 384c-50.286 0-91.429 41.143-91.429 91.429s41.143 91.429 91.429 91.429 91.429-41.143 91.429-91.429-41.143-91.429-91.429-91.429zM1133.714 91.429c-50.286 0-91.429 41.143-91.429 91.429s41.143 91.429 91.429 91.429 91.429-41.143 91.429-91.429-41.143-91.429-91.429-91.429zM219.429 768c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714v0c60.571 0 109.714 49.143 109.714 109.714zM512 768c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714v0c60.571 0 109.714 49.143 109.714 109.714zM219.429 475.429c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM512 475.429c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714v0c60.571 0 109.714 49.143 109.714 109.714zM219.429 182.857c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM950.857 768c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714v0c60.571 0 109.714 49.143 109.714 109.714zM512 182.857c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM1243.429 768c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714v0c60.571 0 109.714 49.143 109.714 109.714zM950.857 475.429c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714v0c60.571 0 109.714 49.143 109.714 109.714zM1243.429 475.429c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714v0c60.571 0 109.714 49.143 109.714 109.714zM950.857 182.857c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM1243.429 182.857c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714v0c60.571 0 109.714 49.143 109.714 109.714z"],"width":1243.4285714285713,"tags":["braille"],"defaultCode":62113,"grid":14},{"paths":["M73.143 987.429c0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571 36.571 16.571 36.571 36.571zM182.857 877.714c0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571 36.571 16.571 36.571 36.571zM208.571 669.143l146.286 146.286-51.429 51.429-146.286-146.286zM402.286 658.286c0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571 36.571 16.571 36.571 36.571zM806.286 475.429c0 94.857-44.571 145.714-83.429 190.857-36 41.143-64.571 73.714-64.571 138.286 0 121.143-98.286 219.429-219.429 219.429-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571c80.571 0 146.286-65.714 146.286-146.286 0-92 44-142.286 82.286-186.286 35.429-40.571 65.714-75.429 65.714-142.857 0-141.143-114.857-256-256-256s-256 114.857-256 256c0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571c0-181.714 147.429-329.143 329.143-329.143s329.143 147.429 329.143 329.143zM512 548.571c0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571 36.571 16.571 36.571 36.571zM676.571 475.429c0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571c0-70.857-57.143-128-128-128-70.286 0-128 57.143-128 128 0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571c0-110.857 90.286-201.143 201.143-201.143s201.143 90.286 201.143 201.143zM901.714 310.286c7.429 18.857-2.286 40-21.143 47.429-4 1.714-8.571 2.286-13.143 2.286-14.286 0-28.571-8.571-33.714-23.429-25.714-66.857-70.286-125.143-128-168.571-16-12-19.429-34.857-7.429-50.857 12.571-16 35.429-19.429 51.429-7.429 68.571 51.429 121.143 121.143 152 200.571zM1021.714 264c6.857 18.857-2.286 40-21.143 47.429-4.571 1.714-8.571 2.286-13.143 2.286-14.857 0-28.571-8.571-34.286-23.429-34.286-89.143-93.143-166.857-169.714-224.571-16.571-12-19.429-34.857-7.429-50.857 12-16.571 34.857-19.429 50.857-7.429 88 65.714 155.429 154.857 194.857 256.571z"],"width":1028.608,"tags":["assistive-listening-systems"],"defaultCode":62114,"grid":14},{"paths":["M589.714 548.571c-20-0.571-38.857-12-48-31.429-12.571-25.714-37.714-41.714-66.286-41.714-40.571 0-73.143 32.571-73.143 73.143 0 19.429 6.857 38.286 20.571 50.857l5.714 4.571c12.571 11.429 29.143 17.714 46.857 17.714 28.571 0 53.714-16 66.286-41.714 9.143-19.429 28-30.857 48-31.429zM914.286 475.429c0-19.429-6.857-38.286-20.571-50.857l-5.714-4.571c-12.571-11.429-29.143-17.714-46.857-17.714-28.571 0-53.714 16-66.286 41.714-9.143 19.429-28 30.857-48 31.429 20 0.571 38.857 12 48 31.429 12.571 25.714 37.714 41.714 66.286 41.714 40.571 0 73.143-32.571 73.143-73.143zM670.857 349.143c-13.143 26.857-46.286 38.286-73.143 25.143-24-12-49.714-17.714-76.571-17.714-20 0-38.857 3.429-56.571 9.714 3.429 0 7.429-0.571 10.857-0.571 70.286 0 134.857 41.143 165.143 104.571 13.143 27.429 1.143 60-26.286 73.143-6.857 3.429-14.286 5.143-22.286 5.143 8 0 15.429 1.714 22.286 5.143 27.429 13.143 39.429 45.714 26.286 73.143-30.286 63.429-94.857 104.571-165.143 104.571v0h-3.429c-8.571-1.143-16.571-1.714-25.143-2.286l-165.714-15.429-136.571 68.571c-5.714 2.857-10.857 4-16.571 4-13.143 0-26.286-7.429-32.571-20l-91.429-182.857c-8.571-17.714-2.286-38.857 14.286-48.571l119.429-68 84.571-152.571c13.143-117.714 71.429-225.714 164-301.714 23.429-19.429 58.286-16 77.143 7.429 19.429 23.429 16 57.714-7.429 77.143-25.714 21.714-48.571 46.286-66.857 73.143 44.571-30.286 96-50.857 152.571-57.714 30.286-4 57.714 17.143 61.143 47.429 4 30.286-17.143 57.714-47.429 61.143-33.143 4-64 15.429-90.857 31.429 18.286-4 37.143-5.714 56.571-5.714 43.429 0 85.714 9.714 124.571 28.571 27.429 13.714 38.857 46.286 25.143 73.714zM1221.143 257.714l91.429 182.857c8.571 17.714 2.286 38.857-14.286 48.571l-119.429 68-84.571 152.571c-13.143 117.714-71.429 225.714-164 301.714-10.286 8.571-22.857 12.571-34.857 12.571-16 0-31.429-6.857-42.286-20-19.429-23.429-16-57.714 7.429-77.143 25.714-21.714 48.571-46.286 66.857-73.143-44.571 30.286-96 50.857-152.571 57.714-2.286 0.571-4.571 0.571-6.857 0.571-27.429 0-50.857-20.571-54.286-48-4-30.286 17.143-57.714 47.429-61.143 33.143-4 64-15.429 90.857-31.429-18.286 4-37.143 5.714-56.571 5.714-43.429 0-85.714-9.714-124.571-28.571-27.429-13.714-38.857-46.286-25.143-73.714 13.143-26.857 46.286-38.286 73.143-25.143 24 12 49.714 17.714 76.571 17.714 20 0 38.857-3.429 56.571-9.714-3.429 0-7.429 0.571-10.857 0.571-70.286 0-134.857-41.143-165.143-104.571-13.143-27.429-1.143-60 26.286-73.143 6.857-3.429 14.286-5.143 22.286-5.143-8 0-15.429-1.714-22.286-5.143-27.429-13.143-39.429-45.714-26.286-73.143 30.286-63.429 94.857-104.571 165.143-104.571v0h4c8 1.143 16 1.714 24 2.286l166.286 15.429 136.571-68.571c5.714-2.857 10.857-4 16.571-4 13.143 0 26.286 7.429 32.571 20z"],"width":1316.5714285714284,"tags":["american-sign-language-interpreting","asl-interpreting"],"defaultCode":62115,"grid":14},{"paths":["M603.429 475.429c0 20 16.571 36.571 36.571 36.571s36.571-16.571 36.571-36.571c0-110.857-90.286-201.143-201.143-201.143s-201.143 90.286-201.143 201.143c0 20 16.571 36.571 36.571 36.571s36.571-16.571 36.571-36.571c0-70.857 57.714-128 128-128s128 57.143 128 128zM477.143 146.286c-181.714 0-329.143 147.429-329.143 329.143 0 20 16.571 36.571 36.571 36.571s36.571-16.571 36.571-36.571c0-141.143 114.857-256 256-256s256 114.857 256 256c0 67.429-30.286 102.286-65.714 142.857-38.286 44-82.286 94.286-82.286 186.286 0 80.571-65.714 146.286-146.286 146.286-20 0-36.571 16.571-36.571 36.571s16.571 36.571 36.571 36.571c121.143 0 219.429-98.286 219.429-219.429 0-64.571 28.571-97.143 64.571-138.286 38.857-45.143 83.429-96 83.429-190.857 0-181.714-147.429-329.143-329.143-329.143zM337.714 557.143l129.143 129.143-330.857 330.857c-9.143 9.143-24 9.143-33.143 0l-96-96c-9.143-9.143-9.143-24 0-33.143zM921.143 6.857l96 96c9.143 9.143 9.143 24 0 33.714l-133.143 133.143-14.857 14.286-40.571 40.571c-24.571-57.143-62.286-107.429-111.429-147.429l170.286-170.286c9.714-9.143 24.571-9.143 33.714 0z"],"width":1024,"tags":["deaf","deafness","hard-of-hearing"],"defaultCode":62116,"grid":14},{"paths":["M494.857 294.286c0 18.286-4 36-7.429 53.714-12 57.143-23.429 114.286-35.429 171.429-1.714 8-1.714 8-10.286 8.571-5.714 0.571-12 1.143-17.714 1.143-49.143 0-62.857-53.143-62.857-93.143 0-59.429 23.429-138.857 78.857-170.286 9.143-4.571 18.857-8 29.143-8 23.429 0 25.714 17.143 25.714 36.571zM772.571 536.571c0-10.286-42.286-77.143-52-81.143-4.571-1.714-14.286-4.571-19.429-4.571-46.857 0-89.143 21.143-129.143 44l-1.143-1.143c9.143-61.143 29.714-115.429 29.714-178.857 0-90.857-48.571-133.143-138.286-133.143-13.143 0-26.286 1.714-38.857 3.429-112.571 20-181.143 148.571-181.143 254.286 0 112 64.571 173.714 176 173.714 2.286 0 14.286-1.143 14.286 1.714 0 1.143 0 1.714-0.571 2.857-2.286 21.714-9.143 45.714-14.857 66.857-8.571 31.429-38.286 85.714-76.571 85.714-16.571 0-24-11.429-24-26.857 0-49.714 57.143-79.429 58.286-82.286 0-2.286-2.857-4.571-4-5.714-17.714-16-46.857-29.143-70.857-29.143-43.429 0-66.857 69.714-66.857 105.143 0 66.286 41.714 112 108.571 112 98.857 0 170.857-104 193.143-189.714 6.286-25.143 10.857-50.857 17.143-76 1.143-5.143 2.857-7.429 8-10.286 40.571-20.571 83.429-34.286 129.714-34.286 25.143 0 47.429 4.571 72.571 10.286 0.571 0.571 1.714 0.571 2.286 0.571 3.429 0 8-4 8-7.429zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["glide"],"defaultCode":62117,"grid":14},{"paths":["M425.143 174.286c0-30.286-2.857-56.571-39.429-56.571-15.429 0-30.857 5.143-44.571 13.143-86.286 47.429-121.714 170.286-121.714 262.857 0 61.714 21.143 144 96.571 144 17.143 0 38.857 4.571 43.429-15.429 18.286-88 36.571-176.571 54.857-264.571 5.714-27.429 10.857-55.429 10.857-83.429zM856 549.143c0 5.714-7.429 11.429-13.143 11.429l-3.429-0.571c-38.857-5.714-73.143-16-112.571-16-71.429 0-137.143 21.143-200.571 53.143-8 4-9.714 7.429-12 15.429-10.286 38.857-17.143 78.857-26.857 117.714-34.286 133.143-145.714 293.714-298.286 293.714-104 0-168-70.857-168-173.143 0-55.429 36-163.429 102.857-163.429 23.429 0 115.429 30.286 116 54.286-1.143 4.571-89.714 50.286-89.714 127.429 0 23.429 11.429 41.714 37.143 41.714 90.857 0 132.571-165.714 141.714-235.429v-5.143c0-4.571-18.286-2.286-21.714-2.286-172 0-272.571-96-272.571-269.143 0-163.429 106.286-362.857 280.571-393.143 20-3.429 40-5.143 60.571-5.143 138.286 0 213.714 64.571 213.714 205.714 0 95.429-32.571 183.429-46.286 276.571l1.714 1.714c61.714-34.857 126.857-68 200-68 7.429 0 23.429 4.571 30.286 7.429 14.857 5.714 80.571 109.143 80.571 125.143z"],"width":877.1291428571428,"tags":["glide-g"],"defaultCode":62118,"grid":14},{"paths":["M474.857 384.571c12 0 23.429 3.429 33.714 10.286l126.857 84.571c23.429 15.429 44.571 34.286 62.857 55.429l83.429 97.143c14.286 16.571 20.571 38.857 16.571 60.571l-41.143 236c-4.571 24-24 42.286-48.571 45.143l-301.143 32-201.143 18.286h-5.143c-29.714 0-54.857-24-54.857-54.857 0-28.571 24-51.429 52.571-54.857l148.571-18.286h-256c-31.429 0-56.571-26.286-54.857-57.714 1.714-29.714 28-52 57.714-52l252.571-0.571-297.714-36.571c-30.857-3.429-53.143-31.429-48.571-62.857 4.571-27.429 29.714-45.714 57.143-45.714h5.714l274.857 34.286-200.571-53.714c-28.571-7.429-50.286-33.714-45.714-62.857 4.571-27.429 28-46.286 54.286-46.286 4 0 7.429 0.571 11.429 1.143l256 54.857 124 21.143c1.143 0 2.286 0.571 3.429 0.571 17.143 0 25.714-23.429 10.286-33.714l-106.286-71.429c-26.286-17.714-32.571-53.143-13.714-78.286 10.286-14.286 26.857-21.714 43.429-21.714zM434.857 500l106.286 71.429-124.571-21.143-2.857-1.143-20.571-21.714-136-149.714c-1.143-1.143-1.714-2.857-2.857-4-17.714-23.429-13.714-57.714 10.857-76.571 22.857-17.714 55.429-12 75.429 9.143l81.143 84c-1.714 1.714-3.429 2.857-5.143 4.571-12 16.571-16.571 36.571-13.143 56.571 3.429 19.429 14.857 37.143 31.429 48.571zM941.714 240.571l8.571 152c1.714 28-0.571 56.571-6.286 84l-27.429 125.143c-4.571 21.714-18.286 39.429-38.286 49.714l-60.571 30.857c0.571-22.857-6.857-44.571-22.286-62.286l-83.429-97.143c-19.429-22.286-41.714-42.286-66.857-58.857l-126.857-84.571c-12.571-8.571-27.429-13.143-43.429-13.143-19.429 0-37.143 8-50.286 21.143l-134.286-178.286c-18.857-25.143-13.143-60.571 13.143-78.286 24.571-17.143 58.286-9.143 76.571 14.857l152 201.143-149.714-260c-16-26.857-6.857-61.714 21.143-76.571 26.286-13.714 59.429-2.857 74.286 22.857l137.714 240-77.714-192.571c-10.857-27.429-3.429-60.571 22.857-74.286 28-14.857 62.286-2.857 75.429 25.714l110.286 237.143 57.714 112c9.143 17.714 36 10.286 34.857-9.143l-6.857-128c-1.714-31.429 22.857-57.714 54.286-58.286 29.714 0 53.714 25.143 55.429 54.857z"],"width":948.0045714285714,"tags":["sign-language","signing"],"defaultCode":62119,"grid":14},{"paths":["M191.429 774.857c-1.143 0-2.286-0.571-3.429-1.143-66.857-44.571-133.714-117.714-176-185.714-8-11.429-12-25.143-12-39.429 0-29.714 20.571-53.714 37.143-76 66.286-90.286 154.857-164.571 258.286-208.571-8.571-15.429-62.857-110.286-62.857-120.571 0-6.857 4-13.143 9.714-16.571 11.429-6.286 62.857-36.571 73.143-36.571 6.286 0 12.571 3.429 16 9.143l70.857 130.857c36-7.429 73.143-10.857 109.714-10.857 206.857 0 390.857 117.143 500.571 289.714 7.429 11.429 11.429 25.143 11.429 39.429s-4 28-11.429 39.429c-68 106.857-167.429 195.429-284 245.143 8.571 15.429 62.857 110.286 62.857 120.571 0 6.857-3.429 13.143-9.714 16.571-11.429 6.286-62.857 36.571-72.571 36.571-6.857 0-13.143-3.429-16.571-9.143l-70.857-130.857-36.571-68-253.714-468.571 4-4c-19.429 8-38.286 16.571-56.571 26.857 6.857 13.143 279.429 513.714 279.429 517.714 0 2.857-2.286 4.571-5.143 5.143-12.571 2.857-28.571 1.714-41.143 1.714-6.286 0-32 1.143-34.286-4l-260.571-480.571c-16.571 12-32 25.143-46.857 38.857 12.571 22.286 230.857 424 230.857 427.429 0 4.571-2.857 5.714-6.286 5.714-9.714 0-85.714-23.429-88.571-28.571l-60.571-112.571-128-236c-16 19.429-30.857 39.429-44.571 60.571 7.429 10.857 17.143 22.286 23.429 33.714 8 14.857 100.571 183.429 100.571 186.857 0 2.857-2.857 5.714-5.714 5.714zM665.714 716.571l28 52c106.857-43.429 194.857-123.429 257.143-220-63.429-97.714-153.714-178.857-262.286-222.286 50.857 48.571 79.429 115.429 79.429 185.714 0 80.571-37.714 156.571-102.286 204.571zM484.571 365.714c0 14.857 12.571 27.429 27.429 27.429 31.429 0 61.714 12.571 84 34.857s34.857 52.571 34.857 84c0 14.857 12.571 27.429 27.429 27.429s27.429-12.571 27.429-27.429c0-96-77.714-173.714-173.714-173.714-14.857 0-27.429 12.571-27.429 27.429zM693.714 328.571l-5.143-2.286 4 4z"],"width":1024,"tags":["low-vision"],"defaultCode":62120,"grid":14},{"paths":["M600 632c0 81.714-28.571 153.714-84 213.714-57.714 62.857-130.857 92-216 92-84.571 0-158.286-28.571-216-92-55.429-60-84-132-84-213.714 0-169.714 128-308.571 300-308.571 35.429 0 70.857 5.714 104 17.714-11.429 22.286-19.429 46.857-22.286 72-25.714-10.857-53.714-16-81.714-16-129.714 0-225.143 110.857-225.143 236.571 0 128 94.857 232.571 225.143 232.571s224.571-104.571 224.571-232.571c0-32.571-5.714-64.571-18.286-94.857 25.143-5.143 49.143-14.857 70.286-28 16 38.286 23.429 80 23.429 121.143zM483.429 524c0 144-58.286 264-181.714 341.714l-8 0.571c-12 0-24-1.143-35.429-2.857 165.143-62.857 195.429-313.714 195.429-466.857 0-19.429 0-39.429-1.714-58.857 20.571 60 31.429 122.857 31.429 186.286zM452 336.571v1.143c-29.714-87.429-70.857-172-117.714-251.429 72 48.571 111.429 166.286 117.714 250.286zM591.429 452.571c-35.429 0-66.857-18.857-91.429-42.857 58.286-32 132-81.714 165.714-141.143 4-8 10.857-22.857 12-32-33.143 74.286-117.714 132.571-196.571 150.857-12.571-19.429-20-41.143-20-64.571 0-27.429 13.714-64 34.286-84 23.429-22.286 58.286-33.714 89.714-42.286 45.714-12.571 82.857-48 102.857-90.857 29.714 42.286 42.286 93.714 42.286 144.571 0 25.714-4 72.571-13.714 97.143-21.143 51.429-64 105.143-125.143 105.143z"],"width":730.2582857142856,"tags":["viadeo"],"defaultCode":62121,"grid":14},{"paths":["M600 594.857c0-28.571-5.143-57.143-16-84-14.857 9.143-31.429 16-48.571 19.429 9.143 20.571 12.571 42.857 12.571 65.143 0 88-65.143 160-154.286 160-89.714 0-154.857-72-154.857-160 0-86.286 65.714-162.286 154.857-162.286 19.429 0 38.286 3.429 56 10.857 1.714-17.143 7.429-34.286 15.429-49.714-22.857-8-46.857-12-71.429-12-118.286 0-206.286 95.429-206.286 212.571s88.571 209.714 206.286 209.714 206.286-93.143 206.286-209.714zM498.286 392c1.143 13.714 1.143 27.429 1.143 40.571 0 105.714-20.571 277.714-134.286 321.143 8 1.143 16 1.714 24 1.714h5.714c84.571-53.714 125.143-136 125.143-234.857 0-44-7.429-87.429-21.714-128.571zM498.286 392c-2.857-55.429-34.286-141.143-81.143-172.571 32 54.286 60.571 112.571 81.143 172.571zM689.714 332c0-34.857-8.571-70.286-29.143-99.429-13.714 29.143-39.429 53.714-70.857 62.286-45.143 12.571-85.143 33.714-85.143 87.429 0 15.429 5.143 30.857 13.714 44 54.286-12.571 112-52.571 134.857-104-3.429 45.714-88.571 101.143-121.714 119.429 16.571 16.571 38.286 29.714 62.857 29.714 41.714 0 71.429-37.143 85.714-72.571 6.857-17.143 9.714-49.143 9.714-66.857zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["viadeo-square"],"defaultCode":62122,"grid":14},{"paths":["M730.857 656c0-8-4.571-13.714-12.571-15.429-52-11.429-91.429-47.429-113.143-95.429-1.714-4.571-4-9.143-4-14.286 0-25.714 71.429-20.571 71.429-57.143 0-15.429-18.857-25.143-32.571-25.143-13.143 0-23.429 9.143-36 9.143-2.286 0-4.571-0.571-6.857-1.143 1.143-21.714 2.857-43.429 2.857-65.143 0-20-1.143-47.429-9.714-65.143-27.429-59.429-80.571-94.286-145.714-94.286-71.429 0-125.714 26.286-157.143 94.286-8.571 17.714-9.714 45.143-9.714 65.143 0 21.714 1.714 43.429 2.857 65.143-2.286 1.143-5.143 1.143-8 1.143-13.143 0-23.429-8.571-35.429-8.571-14.286 0-32 9.143-32 25.143 0 35.429 71.429 30.857 71.429 56.571 0 5.143-2.286 9.714-4 14.286-22.286 48-60.571 84-113.143 95.429-8 1.714-12.571 7.429-12.571 15.429 0 26.286 60.571 36 78.286 38.857 5.143 13.714 2.857 37.714 23.429 37.714 14.286 0 28.571-5.143 44-5.143 60 0 76 54.286 145.714 54.286 72.571 0 86.286-54.286 146.857-54.286 15.429 0 29.714 4.571 44.571 4.571 20 0 17.714-24 22.857-37.143 17.714-2.857 78.286-12.571 78.286-38.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["snapchat"],"defaultCode":62123,"grid":14},{"paths":["M484.571 73.143c102.857-1.143 188 56.571 230.857 149.143 13.143 28 15.429 71.429 15.429 102.286 0 36.571-2.857 72.571-5.143 109.143 4.571 2.286 10.857 4 16 4 20.571 0 37.714-15.429 58.286-15.429 19.429 0 47.429 13.714 47.429 36.571 0 54.857-114.857 44.571-114.857 92.571 0 8.571 3.429 16.571 6.857 24.571 27.429 60 79.429 117.714 141.143 143.429 14.857 6.286 29.714 9.714 45.714 13.143 10.286 2.286 16 9.714 16 20 0 38.857-98.857 54.857-125.143 58.857-11.429 17.714-2.857 59.429-33.143 59.429-23.429 0-46.857-7.429-72-7.429-12 0-24 0.571-35.429 2.857-68 11.429-90.857 84.571-202.286 84.571-107.429 0-133.143-73.143-199.429-84.571-12-2.286-24-2.857-36-2.857-25.714 0-50.286 8.571-70.857 8.571-32 0-22.286-42.286-34.286-60.571-26.286-4-125.143-20-125.143-58.857 0-10.286 5.714-17.714 16-20 16-3.429 30.857-6.857 45.714-13.143 61.143-25.143 114.286-83.429 141.143-143.429 3.429-8 6.857-16 6.857-24.571 0-48-115.429-38.857-115.429-92 0-22.286 26.286-36.571 46.286-36.571 17.714 0 35.429 14.857 57.714 14.857 6.286 0 12.571-1.143 18.286-4-2.286-36-5.143-72-5.143-108.571 0-30.857 2.286-74.857 15.429-102.857 50.286-108.571 135.429-148 249.143-149.143z"],"width":950.8571428571428,"tags":["snapchat-ghost"],"defaultCode":62124,"grid":14},{"paths":["M731.429 656c0-8-4.571-13.714-12.571-15.429-52-10.857-91.429-47.429-113.143-95.429-2.286-4.571-4-9.143-4-14.286 0-25.714 70.857-20.571 70.857-57.143 0-15.429-18.857-25.143-32.571-25.143-12.571 0-22.857 9.143-36 9.143-2.286 0-4.571-0.571-6.857-1.143 1.714-21.714 2.857-44 2.857-65.714 0-19.429-1.143-46.857-9.714-65.143-27.429-59.429-80-94.286-145.714-94.286-71.429 0-125.714 26.857-157.143 94.286-8.571 18.286-10.286 45.714-10.286 65.714 0 21.714 1.714 43.429 3.429 65.143-2.857 0.571-5.714 1.143-8.571 1.143-12.571 0-23.429-9.143-35.429-9.143-14.286 0-31.429 9.714-31.429 25.714 0 35.429 70.857 30.857 70.857 56.571 0 5.143-1.714 9.714-4 14.286-22.286 48-60.571 84-113.143 95.429-8 1.714-12.571 7.429-12.571 15.429 0 26.857 60.571 36.571 78.857 39.429 5.143 13.714 2.857 37.714 22.857 37.714 14.857 0 29.143-5.714 44-5.714 60.571 0 76.571 54.286 146.286 54.286 72.571 0 86.286-54.286 147.429-54.286 14.857 0 29.714 5.143 44.571 5.143 19.429 0 17.714-24 22.286-37.143 18.286-2.857 78.857-12.571 78.857-39.429zM877.714 237.714v548.571c0 90.857-73.714 164.571-164.571 164.571h-548.571c-90.857 0-164.571-73.714-164.571-164.571v-548.571c0-90.857 73.714-164.571 164.571-164.571h548.571c90.857 0 164.571 73.714 164.571 164.571z"],"width":877.7142857142857,"tags":["snapchat-square"],"defaultCode":62125,"grid":14},{"paths":["M1316.571 0c-166.286 110.286-184 190.286-198.286 214.857-13.714 25.143-24 124-48 172-24 48.571-111.429 86.857-136 102.857-24 16-58.286 78.286-86.286 132-126.286-5.143-251.429 25.714-360 90.286 0 0-52.571 30.286-173.143 102.286 60.571-20 89.143-34.286 89.143-34.286 150.857-57.714 190.857-85.143 312.571-105.143 93.714-15.429 214.857-2.857 265.714 4 2.286 0 4 1.143 5.714 1.714 8 4.571 10.857 14.286 6.286 22.286l-110.857 197.143c-5.143 9.714-16 14.857-26.857 12.571-27.429-5.143-90.286-13.714-202.286-13.714-162.286 0-294.286 49.714-453.714 52-134.286 1.714-186.857-53.143-200-70.857 0-0.571-0.571-1.143-0.571-1.714 0-2.286 1.143-3.429 3.429-3.429 0 0 78.857 0 212-31.429 151.429-288.571 286.286-389.714 433.143-389.714 0 0 147.429 0 186.286 127.429 46.857-81.714 58.286-101.143 58.286-101.143 10.857-19.429 72-158.857 177.714-290.857v0c106.286-132 186.286-164.571 245.714-189.143z"],"width":1316.5714285714284,"tags":["pied-piper"],"defaultCode":62126,"grid":14},{"paths":["M755.429 512c0 14.857-0.571 29.143-2.857 43.429l-134.857-8 128 44.571c-7.429 29.143-18.857 56-33.143 80.571l-122.286-58.857 101.143 90.286c-17.143 23.429-37.714 44-61.143 61.714l-89.714-101.714 58.857 122.857c-24.571 14.857-51.429 25.714-80 33.714l-45.143-130.286 8 137.143c-14.286 2.286-28.571 3.429-43.429 3.429-14.286 0-29.143-1.143-43.429-3.429l8-136-44.571 129.143c-28.571-7.429-55.429-18.857-80-33.714l58.857-122.857-89.714 101.714c-23.429-17.143-44-38.286-61.714-61.714l101.714-90.286-122.286 59.429c-14.286-25.143-25.714-52-33.143-80.571l128-45.143-135.429 8c-1.714-14.286-2.857-28.571-2.857-43.429s1.143-29.714 2.857-44l136 8-128.571-45.143c7.429-28.571 18.857-55.429 33.143-80l122.286 59.429-101.143-90.857c17.714-23.429 38.286-44 61.143-61.714l90.286 101.714-58.857-122.857c24.571-14.286 51.429-25.714 80-33.143l44 128-7.429-134.857c13.714-2.286 28.571-3.429 42.857-3.429 14.857 0 29.143 1.143 43.429 3.429l-8 135.429 44.571-128.571c28.571 7.429 55.429 18.857 80 33.714l-58.857 122.286 90.286-101.714c22.857 17.714 43.429 38.286 61.143 61.714l-101.143 90.857 121.714-59.429c14.857 24.571 25.714 52 33.143 80.571l-128 44.571 135.429-8c2.286 14.286 2.857 29.143 2.857 44zM772.571 512c0-185.714-149.714-336-333.714-336-184.571 0-333.714 150.286-333.714 336 0 185.143 149.143 335.429 333.714 335.429 184 0 333.714-150.286 333.714-335.429zM814.286 293.143v437.714l-375.429 218.857-375.429-218.857v-437.714l375.429-218.857zM438.857 982.286l404.571-235.429v-470.286l-404.571-234.857-404.571 234.857v470.286zM877.714 256v512l-438.857 256-438.857-256v-512l438.857-256z"],"width":877.7142857142857,"tags":["first-order"],"defaultCode":62128,"grid":14},{"paths":["M193.714 124.571h394.857l-14.857 41.143h-380c-84 0-152.571 69.143-152.571 153.143v440.571c0 72 51.429 135.429 122.286 150.286 18.286 4 37.143 2.857 56 2.857v41.143h-25.714c-106.857 0-193.714-87.429-193.714-194.286v-440.571c0-106.857 86.857-194.286 193.714-194.286zM680 0h141.143l-275.429 739.429c-51.429 137.143-113.714 280-282.857 284.571v-111.429c63.429-10.286 104-45.143 125.714-104 7.429-19.429 11.429-39.429 11.429-60s-4-41.143-11.429-60.571l-162.857-418.857h130.286l106.857 334.286zM950.857 318.857v634.857h-454.286c9.143-13.714 18.857-26.857 25.714-41.714h387.429v-593.143c0-65.143-41.143-123.429-102.286-145.143l14.286-38.286c77.714 26.286 129.143 101.714 129.143 183.429z"],"width":950.8571428571428,"tags":["yoast"],"defaultCode":62129,"grid":14},{"paths":["M486.857 176.571c0 20.571-13.143 43.429-35.429 43.429-22.857 0-35.429-22.857-35.429-43.429 0-20 12.571-43.429 35.429-43.429 22.286 0 35.429 23.429 35.429 43.429zM393.143 962.857v-65.143c0-22.286-17.714-41.714-40.571-41.714s-40 19.429-40 41.714v65.143c0 22.286 17.143 42.286 40 42.286s40.571-19.429 40.571-42.286zM491.429 962.857v-65.143c0-22.286-17.143-41.714-40-41.714s-40.571 19.429-40.571 41.714v65.143c0 22.286 17.714 42.286 40.571 42.286s40-20 40-42.286zM590.857 962.857v-65.143c0-22.286-17.714-41.714-40.571-41.714s-40.571 19.429-40.571 41.714v65.143c0 22.286 17.714 42.286 40.571 42.286s40.571-19.429 40.571-42.286zM690.286 962.857v-65.143c0-22.286-17.714-41.714-40.571-41.714s-40.571 19.429-40.571 41.714v65.143c0 22.286 17.714 42.286 40.571 42.286s40.571-20 40.571-42.286zM843.429 572c-61.714 118.286-180.571 205.143-317.143 205.143-193.143 0-321.143-169.143-321.143-353.143 0-33.714 4-66.857 12-99.429-40 67.429-59.429 145.143-59.429 222.857 0 120.571 49.714 243.429 142.857 321.714 10.286-19.429 29.714-32.571 52-32.571 20 0 38.857 11.429 49.143 28.571 10.857-17.143 29.143-28.571 49.714-28.571 20 0 38.857 11.429 49.143 28.571 10.857-17.143 29.714-28.571 49.714-28.571s38.857 11.429 49.714 28.571c10.286-17.143 29.143-28.571 49.143-28.571 21.714 0 41.714 13.143 51.429 32 86.857-72.571 137.143-184 142.857-296.571zM757.714 555.429c0-28.571-12.571-42.857-41.143-42.857-9.143 0-18.286 1.714-26.857 3.429-28.571 5.714-56.571 10.857-85.143 10.857-90.286 0-129.143-52.571-129.143-138.857 0-39.429 7.429-78.286 17.143-116.571-30.286 46.286-47.429 101.714-47.429 157.143 0 108 68.571 212 185.143 212 42.857 0 85.143-15.429 120-40 4-14.857 7.429-29.714 7.429-45.143zM505.143 178.857c0-36-25.143-73.714-64.571-73.714s-64.571 37.714-64.571 73.714c0 36.571 25.143 74.286 64.571 74.286s64.571-37.714 64.571-74.286zM864.571 372.571c0-107.429-69.143-211.429-185.143-211.429-60.571 0-117.143 30.286-157.714 73.714-14.286 47.429-27.429 102.857-27.429 153.143 0 76 30.286 120 110.286 120 27.429 0 54.286-5.143 81.143-10.857 10.286-1.714 20-3.429 30.286-3.429 39.429 0 59.429 22.857 59.429 61.714 0 8.571-0.571 17.714-2.286 26.286 57.714-52 91.429-131.429 91.429-209.143zM1024 496.571c0 72-22.857 204.571-72.571 259.429-45.714 49.714-174.857 122.286-241.714 141.143l-2.286 0.571v65.143c0 32.571-25.143 61.143-58.286 61.143-20 0-38.857-11.429-49.143-28.571-10.857 17.143-29.714 28.571-49.714 28.571s-38.857-11.429-49.714-28.571c-10.286 17.143-29.143 28.571-49.143 28.571-20.571 0-38.857-11.429-49.714-28.571-10.286 17.143-29.143 28.571-49.143 28.571-37.714 0-58.857-31.429-58.857-65.714-32.571 24.571-71.429 38.857-113.143 38.857-44 0-86.857-16.571-120.571-45.714 20.571-0.571 41.143-4.571 60.571-11.429-41.714-11.429-78.857-37.714-104-72.571 13.143 2.857 26.857 4 40.571 4 33.143 0 65.714-9.143 93.714-26.286-44-44-113.143-117.714-137.143-174.857-11.429-26.857-13.714-62.857-13.714-91.429 0-99.429 40.571-320 172.571-320 21.143 0 37.714 9.714 46.286 29.714 7.429-10.857 15.429-21.143 24-30.857 4-5.143 11.429-10.857 14.286-16.571 16-25.143 23.429-42.286 43.429-68 64.571-82.286 163.429-138.857 269.714-138.857 12 0 24 0.571 35.429 2.286 21.714-23.429 52-36.571 83.429-36.571 29.143 0 59.429 12 80 32.571 1.714 1.714 2.857 4.571 2.857 6.857 0 7.429-20.571 26.857-25.714 32.571 8.571 2.857 31.429 13.714 31.429 24 0 5.714-5.714 10.286-9.143 14.286 62.857 55.429 98.857 134.286 112.571 216 8.571-10.286 20.571-17.143 34.286-17.143 21.143 0 41.714 14.286 57.143 28 41.714 37.143 51.429 106.286 51.429 159.429z"],"width":1024,"tags":["themeisle"],"defaultCode":62130,"grid":14},{"paths":["M524 517.143c0-12.571-1.143-24.571-3.429-36.571h-206.857v75.429h124c-9.143 60.571-66.286 94.286-124 94.286-76 0-136.571-62.857-136.571-138.286s60.571-138.286 136.571-138.286c32 0 64 10.857 87.429 33.714l59.429-57.714c-40.571-37.714-91.429-57.143-146.857-57.143-121.714 0-219.429 98.286-219.429 219.429s97.714 219.429 219.429 219.429c126.286 0 210.286-89.143 210.286-214.286zM721.143 543.429h62.286v-62.857h-62.286v-62.857h-62.857v62.857h-62.857v62.857h62.857v62.857h62.857v-62.857zM877.714 512c0 242.286-196.571 438.857-438.857 438.857s-438.857-196.571-438.857-438.857 196.571-438.857 438.857-438.857 438.857 196.571 438.857 438.857z"],"width":877.7142857142857,"tags":["google-plus-circle","google-plus-official"],"defaultCode":62131,"grid":14},{"paths":["M877.714 292.571v479.429c0 17.714-11.429 30.857-28 35.429-61.143 18.286-129.714 29.714-193.143 29.714-85.714 0-158.286-33.714-253.143-33.714-70.286 0-142.857 11.429-211.429 27.429v193.143h-91.429v-781.714c-48-18.857-79.429-65.714-79.429-117.143 0-69.143 56-125.143 125.143-125.143s125.143 56 125.143 125.143c0 51.429-31.429 98.286-79.429 117.143v38.857c64-14.857 130.286-25.143 196-25.143 37.714 0 75.429 2.857 113.143 8.571 49.143 7.429 98.857 24.571 149.143 24.571 31.429 0 63.429-4 94.286-10.286 23.429-4.571 77.143-22.857 96.571-22.857 20 0 36.571 16.571 36.571 36.571z"],"width":898.8525714285713,"tags":["fa","font-awesome"],"defaultCode":62132,"grid":14},{"paths":["M109.714 658.286c48 0 48-73.143 0-73.143s-48 73.143 0 73.143zM951.429 625.143c-45.143-58.857-89.143-118.857-140.571-172.571l-71.429 80c-62.857 71.429-175.429 69.714-236.571-3.429-43.429-52.571-43.429-128 1.143-180l101.143-117.714c-35.429-18.286-78.286-12-116.571-12-33.714 0-66.286 13.714-90.286 37.714l-90.286 90.286h-88.571v310.857c25.143 0 48-3.429 68 16l169.714 166.857c34.857 33.714 80 63.429 129.714 63.429 25.714 0 53.143-8.571 71.429-26.857 42.857 14.857 92.571-9.143 105.714-53.143 27.429 2.286 52.571-6.286 72.571-25.143 13.143-12 30.286-36 28.571-54.857 5.143 5.143 17.714 5.714 24.571 5.714 68 0 103.429-71.429 61.714-125.143zM1042.286 658.286h54.857v-292.571h-53.143l-89.714-102.857c-24-27.429-60-43.429-96.571-43.429h-95.429c-32 0-62.857 14.286-83.429 38.286l-119.429 138.857c-21.143 25.143-21.143 60.571-0.571 85.714 32.571 38.857 92.571 39.429 126.286 1.714l110.286-124.571c26.286-29.143 74.286-1.714 62.286 35.429 21.714 25.143 45.143 49.714 66.286 74.857 28.571 35.429 56 72.571 84 108.571 17.714 22.857 30.857 50.286 34.286 80zM1206.857 658.286c48 0 48-73.143 0-73.143s-48 73.143 0 73.143zM1316.571 329.143v365.714c0 20-16.571 36.571-36.571 36.571h-248c-20.571 49.714-65.714 82.857-118.286 90.286-24.571 36-62.286 63.429-104.571 72.571-31.429 40-82.286 64-133.143 60.571-94.286 53.143-200.571 6.857-270.857-62.286l-164-161.143h-204.571c-20 0-36.571-16.571-36.571-36.571v-384c0-20 16.571-36.571 36.571-36.571h240.571c66.286-66.286 112-128 211.429-128h66.857c37.143 0 73.143 11.429 103.429 32 30.286-20.571 66.286-32 103.429-32h95.429c108.571 0 153.714 70.857 219.429 146.286h202.857c20 0 36.571 16.571 36.571 36.571z"],"width":1316.5714285714284,"tags":["handshake-o"],"defaultCode":62133,"grid":14},{"paths":["M1024 373.714v558.857c0 50.286-41.143 91.429-91.429 91.429h-841.143c-50.286 0-91.429-41.143-91.429-91.429v-558.857c0-5.143 2.286-10.286 6.286-13.714 60-52.571 60.571-58.857 358.857-276.571 36-26.286 99.429-83.429 146.857-83.429s111.429 57.714 146.857 83.429c298.286 217.714 298.857 224 358.857 276.571 4 3.429 6.286 8.571 6.286 13.714zM701.714 708c89.143-64.571 151.429-109.714 197.143-144 8-5.714 9.714-17.143 3.429-25.143l-21.714-29.714c-6.286-8-17.714-9.714-25.714-3.429-45.143 33.143-106.857 78.857-196 142.857-35.429 25.714-99.429 82.857-146.857 82.857s-111.429-57.143-146.857-82.857c-89.143-64.571-150.857-109.714-196-142.857-8-6.286-19.429-4.571-25.714 3.429l-21.714 29.714c-6.286 8-4.571 19.429 3.429 25.143 45.714 34.286 108 79.429 197.143 144 44.571 32 114.857 96.571 189.714 96.571 75.429 0 147.429-65.714 189.714-96.571z"],"width":1024,"tags":["envelope-open"],"defaultCode":62134,"grid":14},{"paths":["M842.286 521.714l22.286 29.143c6.286 8 4.571 18.857-2.857 25.143-57.143 44.571-188.571 145.714-194.286 150.286-40.571 33.143-95.429 78.857-154.857 78.286h-1.143c-59.429 0-114.286-45.143-154.857-78.286-6.286-5.143-133.143-102.857-189.143-146.286-8-6.286-9.714-17.143-3.429-25.143l21.143-29.714c6.286-8.571 18.286-10.286 26.286-3.429 38.857 30.286 93.714 72.571 174.857 134.857 28.571 21.714 85.143 74.857 125.143 74.857h1.143c40 0 96.571-53.143 125.143-74.857 84-64.571 140-107.429 178.857-138.286 8-6.286 19.429-4.571 25.714 3.429zM950.857 932.571v-530.286c-57.143-53.143-48.571-48.571-313.143-253.143-28.571-22.286-85.143-76-125.143-76h-1.143c-40 0-96.571 53.714-125.143 76-264.571 204.571-256 200-313.143 253.143v530.286c0 9.714 8.571 18.286 18.286 18.286h841.143c9.714 0 18.286-8.571 18.286-18.286zM1024 402.286v530.286c0 50.286-41.143 91.429-91.429 91.429h-841.143c-50.286 0-91.429-41.143-91.429-91.429v-530.286c0-20.571 8.571-40 23.429-53.714 117.143-108.571 252-202.857 333.143-269.714 40-33.143 95.429-78.857 154.857-78.857h1.143c59.429 0 114.857 45.714 154.857 78.857 75.429 62.286 218.857 163.429 333.143 269.714 14.857 13.714 23.429 33.143 23.429 53.714z"],"width":1024,"tags":["envelope-open-o"],"defaultCode":62135,"grid":14},{"paths":["M188.571 877.143l115.429 122.286-19.429-134.857-123.429-121.714zM317.714 1006.286l156.571-124.571-6.286-140-171.429 122.857zM140 641.714l129.714 121.714-27.429-186.857-140-116.571zM282.857 769.714l181.143-122.286-8-185.143-201.143 114.286zM481.714 776l54.286 45.714-1.143-136.571-58.857-45.143c0 4.571 2.286 12.571-2.286 16l-44.571 29.714 48.571 40c5.714 4.571 4 43.429 4 50.286zM78.857 346.286l146.286 114.286-38.857-265.714-159.429-98.857zM670.286 725.143l8.571-133.714-131.429 93.714 1.143 137.143zM238.286 465.143l213.143-110.857-10.857-252-241.714 93.143zM725.714 673.714l11.429-133.143-129.143-81.143-1.143 60 82.286 54.286c1.714 1.143 2.857 3.429 2.286 5.143l-4 68zM834.857 594.286l17.143-126.857-102.286 73.143-11.429 130.286zM727.429 689.714l-40.571-28-4.571 66.857c0 1.714-0.571 3.429-2.286 4.571l-133.714 106.857c-2.286 1.714-5.714 1.714-8 0l-56-47.429 4 92c0 1.714-0.571 3.429-2.286 4.571l-167.429 133.714c-1.143 0.571-2.286 1.143-3.429 1.143-1.714-0.571-3.429-0.571-4.571-1.714l-130.286-138.286c-2.857-2.857-30.857-144-33.714-158.286-0.571-2.286 1.143-5.143 2.857-6.286l34.857-21.143c-6.857-6.286-53.143-46.857-54.286-52.571l-41.143-200.571c-0.571-2.286 0.571-5.143 3.429-6.857l53.714-25.714c-9.143-6.857-75.429-54.857-77.143-61.714l-54.857-266.286c-0.571-3.429 1.143-6.286 4-7.429l247.429-77.143c1.143 0 2.857 0 4.571 0.571l181.143 87.429c1.714 1.143 3.429 3.429 3.429 5.143l11.429 264.571c0 2.286-1.143 4.571-3.429 5.714l-67.429 34.857 72 48.571c1.714 0.571 2.857 2.857 2.857 4.571l2.857 70.286 69.143-42.286c1.714-1.143 4.571-1.143 6.286 0l48 32 1.714-62.857c0-1.714 1.143-4 2.857-5.143l117.714-72c2.286-1.143 4.571-1.143 6.286 0l140 77.143c1.143 1.143 2.286 2.286 2.857 4 1.143 4-17.714 132.571-19.429 145.714 0 1.714-1.143 3.429-2.286 4l-109.143 87.429c-2.286 1.714-5.143 1.714-7.429 0z"],"width":878.2994285714285,"tags":["linode"],"defaultCode":62136,"grid":14},{"paths":["M686.286 707.429c0-101.143-24.571-213.714-126.286-213.714-31.429 18.286-74.286 49.714-121.143 49.714s-89.714-31.429-121.143-49.714c-101.714 0-126.286 112.571-126.286 213.714 0 56.571 37.143 97.143 82.857 97.143h329.143c45.714 0 82.857-40.571 82.857-97.143zM587.429 368c0-82.286-66.857-148.571-148.571-148.571s-148.571 66.286-148.571 148.571c0 81.714 66.857 148 148.571 148s148.571-66.286 148.571-148zM950.857 676.571v109.714c0 10.286-8 18.286-18.286 18.286h-54.857v128c0 50.286-41.143 91.429-91.429 91.429h-694.857c-50.286 0-91.429-41.143-91.429-91.429v-841.143c0-50.286 41.143-91.429 91.429-91.429h694.857c50.286 0 91.429 41.143 91.429 91.429v128h54.857c10.286 0 18.286 8 18.286 18.286v109.714c0 10.286-8 18.286-18.286 18.286h-54.857v73.143h54.857c10.286 0 18.286 8 18.286 18.286v109.714c0 10.286-8 18.286-18.286 18.286h-54.857v73.143h54.857c10.286 0 18.286 8 18.286 18.286z"],"width":950.8571428571428,"tags":["address-book"],"defaultCode":62137,"grid":14},{"paths":["M587.429 368c0 81.714-66.857 148-148.571 148s-148.571-66.286-148.571-148c0-82.286 66.857-148.571 148.571-148.571s148.571 66.286 148.571 148.571zM560 493.714c109.143 0 126.286 129.714 126.286 213.714 0 48-30.286 97.143-82.857 97.143h-329.143c-52.571 0-82.857-49.143-82.857-97.143 0-80.571 17.143-213.714 123.429-213.714h2.857c37.714 22.286 76 49.714 121.143 49.714s83.429-27.429 121.143-49.714zM950.857 347.429c0 9.714-8.571 18.286-18.286 18.286h-54.857v73.143h54.857c9.714 0 18.286 8.571 18.286 18.286v109.714c0 9.714-8.571 18.286-18.286 18.286h-54.857v73.143h54.857c9.714 0 18.286 8.571 18.286 18.286v109.714c0 9.714-8.571 18.286-18.286 18.286h-54.857v128c0 50.286-41.143 91.429-91.429 91.429h-694.857c-50.286 0-91.429-41.143-91.429-91.429v-841.143c0-50.286 41.143-91.429 91.429-91.429h694.857c50.286 0 91.429 41.143 91.429 91.429v128h54.857c9.714 0 18.286 8.5711 18.286 18.286v109.714zM804.571 932.571v-841.143c0-9.714-8.571-18.286-18.286-18.286h-694.857c-9.714 0-18.286 8.571-18.286 18.286v841.143c0 9.714 8.571 18.286 18.286 18.286h694.857c9.714 0 18.286-8.571 18.286-18.286z"],"width":950.8571428571428,"tags":["address-book-o"],"defaultCode":62138,"grid":14},{"paths":["M585.143 646.286c0-88.571-21.714-186.857-112-186.857-28 16-65.714 43.429-107.429 43.429s-79.429-27.429-107.429-43.429c-90.286 0-112 98.286-112 186.857 0 49.714 32.571 85.143 73.143 85.143h292.571c40.571 0 73.143-35.429 73.143-85.143zM495.429 349.143c0-71.429-58.286-129.714-129.714-129.714s-129.714 58.286-129.714 129.714c0 72 58.286 129.714 129.714 129.714s129.714-57.714 129.714-129.714zM1024 640v-36.571c0-10.286-8-18.286-18.286-18.286h-329.143c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h329.143c10.286 0 18.286-8 18.286-18.286zM1024 491.429v-32c0-11.429-9.143-20.571-20.571-20.571h-324.571c-11.429 0-20.571 9.143-20.571 20.571v32c0 11.429 9.143 20.571 20.571 20.571h324.571c11.429 0 20.571-9.143 20.571-20.571zM1024 347.429v-36.571c0-10.286-8-18.286-18.286-18.286h-329.143c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h329.143c10.286 0 18.286-8 18.286-18.286zM1170.286 164.571v694.857c0 50.286-41.143 91.429-91.429 91.429h-201.143v-54.857c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v54.857h-438.857v-54.857c0-10.286-8-18.286-18.286-18.286h-36.571c-10.286 0-18.286 8-18.286 18.286v54.857h-201.143c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h987.429c50.286 0 91.429 41.143 91.429 91.429z"],"width":1170.2857142857142,"tags":["address-card","vcard"],"defaultCode":62139,"grid":14},{"paths":["M585.143 646.286c0 49.714-32.571 85.143-73.143 85.143h-292.571c-40.571 0-73.143-35.429-73.143-85.143 0-88.571 21.714-186.857 112-186.857 28 16 65.714 43.429 107.429 43.429s79.429-27.429 107.429-43.429c90.286 0 112 98.286 112 186.857zM495.429 349.143c0 72-58.286 129.714-129.714 129.714s-129.714-57.714-129.714-129.714c0-71.429 58.286-129.714 129.714-129.714s129.714 58.286 129.714 129.714zM1024 603.429v36.571c0 10.286-8 18.286-18.286 18.286h-329.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h329.143c10.286 0 18.286 8 18.286 18.286zM1024 459.429v32c0 11.429-9.143 20.571-20.571 20.571h-324.571c-11.429 0-20.571-9.143-20.571-20.571v-32c0-11.429 9.143-20.571 20.571-20.571h324.571c11.429 0 20.571 9.143 20.571 20.571zM1024 310.857v36.571c0 10.286-8 18.286-18.286 18.286h-329.143c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h329.143c10.286 0 18.286 8 18.286 18.286zM1097.143 859.429v-694.857c0-9.714-8.571-18.286-18.286-18.286h-987.429c-9.714 0-18.286 8.571-18.286 18.286v694.857c0 9.714 8.571 18.286 18.286 18.286h201.143v-54.857c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286v54.857h438.857v-54.857c0-10.286 8-18.286 18.286-18.286h36.571c10.286 0 18.286 8 18.286 18.286v54.857h201.143c9.714 0 18.286-8.571 18.286-18.286zM1170.286 164.571v694.857c0 50.286-41.143 91.429-91.429 91.429h-987.429c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h987.429c50.286 0 91.429 41.143 91.429 91.429z"],"width":1170.2857142857142,"tags":["address-card-o","vcard-o"],"defaultCode":62140,"grid":14},{"paths":["M870.286 765.143c-14.857-106.857-58.286-201.714-155.429-214.857-50.286 54.857-122.857 89.714-202.857 89.714s-152.571-34.857-202.857-89.714c-97.143 13.143-140.571 108-155.429 214.857 79.429 112 210.286 185.714 358.286 185.714s278.857-73.714 358.286-185.714zM731.429 365.714c0-121.143-98.286-219.429-219.429-219.429s-219.429 98.286-219.429 219.429 98.286 219.429 219.429 219.429 219.429-98.286 219.429-219.429zM1024 512c0 281.714-228.571 512-512 512-282.857 0-512-229.714-512-512 0-282.857 229.143-512 512-512s512 229.143 512 512z"],"width":1024,"tags":["user-circle"],"defaultCode":62141,"grid":14},{"paths":["M512 0c282.857 0 512 229.143 512 512 0 281.143-228 512-512 512-283.429 0-512-230.286-512-512 0-282.857 229.143-512 512-512zM865.714 772c53.143-73.143 85.143-162.857 85.143-260 0-241.714-197.143-438.857-438.857-438.857s-438.857 197.143-438.857 438.857c0 97.143 32 186.857 85.143 260 20.571-102.286 70.286-186.857 174.857-186.857 46.286 45.143 109.143 73.143 178.857 73.143s132.571-28 178.857-73.143c104.571 0 154.286 84.571 174.857 186.857zM731.429 402.286c0-121.143-98.286-219.429-219.429-219.429s-219.429 98.286-219.429 219.429 98.286 219.429 219.429 219.429 219.429-98.286 219.429-219.429z"],"width":1024,"tags":["user-circle-o"],"defaultCode":62142,"grid":14},{"paths":["M686.286 448c80.571 23.429 191.429 102.857 191.429 362.857 0 117.714-87.429 213.143-194.857 213.143h-488c-107.429 0-194.857-95.429-194.857-213.143 0-260 110.857-339.429 191.429-362.857-28.571-45.143-45.143-98.286-45.143-155.429 0-161.143 131.429-292.571 292.571-292.571s292.571 131.429 292.571 292.571c0 57.143-16.571 110.286-45.143 155.429zM438.857 73.143c-121.143 0-219.429 98.286-219.429 219.429s98.286 219.429 219.429 219.429 219.429-98.286 219.429-219.429-98.286-219.429-219.429-219.429zM682.857 950.857c66.857 0 121.714-62.286 121.714-140 0-180-60.571-292.571-173.714-298.286-51.429 45.143-118.286 72.571-192 72.571s-140.571-27.429-192-72.571c-113.143 5.714-173.714 118.286-173.714 298.286 0 77.714 54.857 140 121.714 140h488z"],"width":877.7142857142857,"tags":["user-o"],"defaultCode":62144,"grid":14},{"paths":["M585.143 718.857c0 49.143-32.571 85.714-73.143 85.714h-292.571c-40.571 0-73.143-36.571-73.143-85.714 0-89.143 22.286-188 112-188 28 26.286 65.714 42.857 107.429 42.857s79.429-16.571 107.429-42.857c89.714 0 112 98.857 112 188zM497.143 422.286c0 72-58.857 129.714-131.429 129.714s-131.429-57.714-131.429-129.714c0-71.429 58.857-129.714 131.429-129.714s131.429 58.286 131.429 129.714zM658.286 932.571v-786.286h-585.143v786.286c0 9.714 8.571 18.286 18.286 18.286h548.571c9.714 0 18.286-8.571 18.286-18.286zM731.429 91.429v841.143c0 50.286-41.143 91.429-91.429 91.429h-548.571c-50.286 0-91.429-41.143-91.429-91.429v-841.143c0-50.286 41.143-91.429 91.429-91.429h201.143v54.857c0 10.286 8 18.286 18.286 18.286h109.714c10.286 0 18.286-8 18.286-18.286v-54.857h201.143c50.286 0 91.429 41.143 91.429 91.429z"],"width":731.4285714285713,"tags":["id-badge"],"defaultCode":62145,"grid":14},{"paths":["M512 692.571c0-75.429-18.286-162.286-93.714-162.286-22.857 22.857-54.286 36.571-89.143 36.571s-66.286-13.714-89.143-36.571c-75.429 0-93.714 86.857-93.714 162.286 0 41.714 27.429 75.429 61.143 75.429h243.429c33.714 0 61.143-33.714 61.143-75.429zM438.857 438.857c0-60.571-49.143-109.714-109.714-109.714s-109.714 49.143-109.714 109.714 49.143 109.714 109.714 109.714 109.714-49.143 109.714-109.714zM1024 713.143v-36.571c0-10.286-8-18.286-18.286-18.286h-402.286c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h402.286c10.286 0 18.286-8 18.286-18.286zM804.571 566.857v-36.571c0-10.286-8-18.286-18.286-18.286h-182.857c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h182.857c10.286 0 18.286-8 18.286-18.286zM1024 566.857v-36.571c0-10.286-8-18.286-18.286-18.286h-109.714c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h109.714c10.286 0 18.286-8 18.286-18.286zM1024 420.571v-36.571c0-10.286-8-18.286-18.286-18.286h-402.286c-10.286 0-18.286 8-18.286 18.286v36.571c0 10.286 8 18.286 18.286 18.286h402.286c10.286 0 18.286-8 18.286-18.286zM73.143 219.429h1024v-54.857c0-10.286-8-18.286-18.286-18.286h-987.429c-10.286 0-18.286 8-18.286 18.286v54.857zM1170.286 164.571v694.857c0 50.286-41.143 91.429-91.429 91.429h-987.429c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h987.429c50.286 0 91.429 41.143 91.429 91.429z"],"width":1170.2857142857142,"tags":["drivers-license","id-card"],"defaultCode":62146,"grid":14},{"paths":["M512 692.571c0 41.714-27.429 75.429-61.143 75.429h-243.429c-33.714 0-61.143-33.714-61.143-75.429 0-75.429 18.286-162.286 93.714-162.286 22.857 22.857 54.286 36.571 89.143 36.571s66.286-13.714 89.143-36.571c75.429 0 93.714 86.857 93.714 162.286zM438.857 438.857c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714 49.143-109.714 109.714-109.714 109.714 49.143 109.714 109.714zM1024 676.571v36.571c0 10.286-8 18.286-18.286 18.286h-402.286c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h402.286c10.286 0 18.286 8 18.286 18.286zM804.571 530.286v36.571c0 10.286-8 18.286-18.286 18.286h-182.857c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h182.857c10.286 0 18.286 8 18.286 18.286zM1024 530.286v36.571c0 10.286-8 18.286-18.286 18.286h-109.714c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h109.714c10.286 0 18.286 8 18.286 18.286zM1024 384v36.571c0 10.286-8 18.286-18.286 18.286h-402.286c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h402.286c10.286 0 18.286 8 18.286 18.286zM1097.143 859.429v-640h-1024v640c0 9.714 8.571 18.286 18.286 18.286h987.429c9.714 0 18.286-8.571 18.286-18.286zM1170.286 164.571v694.857c0 50.286-41.143 91.429-91.429 91.429h-987.429c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h987.429c50.286 0 91.429 41.143 91.429 91.429z"],"width":1170.2857142857142,"tags":["drivers-license-o","id-card-o"],"defaultCode":62147,"grid":14},{"paths":["M717.143 449.714c0-238.286-74.286-360.571-248.571-360.571-171.429 0-245.714 122.286-245.714 360.571 0 237.143 74.286 358.286 245.714 358.286 27.429 0 52-2.857 74.857-9.714v0c-35.429-69.714-77.143-140-158.286-140-15.429 0-30.857 2.286-45.143 9.143l-28-55.429c33.714-29.143 88-52 157.714-52 109.143 0 164.571 52.571 209.143 119.429 25.714-57.143 38.286-134.286 38.286-229.714zM940 810.857h66.857c4 41.143-16.571 213.143-203.429 213.143-113.143 0-172.571-65.714-217.714-142.286v0c-37.143 10.286-77.143 15.429-117.143 15.429-228.571 0-452-182.286-452-447.429 0-267.429 224-449.714 452-449.714 232.571 0 453.714 181.143 453.714 449.714 0 149.714-69.714 271.429-170.857 349.714 32.571 49.143 66.286 81.714 113.143 81.714 51.429 0 72-39.429 75.429-70.286z"],"width":1027.4377142857143,"tags":["quora"],"defaultCode":62148,"grid":14},{"paths":["M258.857 935.429c0 16-14.286 30.857-30.286 30.857-2.286 0-5.143-1.143-7.429-1.714v0c-32-7.429-73.143-55.429-92.571-80-89.143-112.571-128.571-244-128.571-386.286 0-132.571 40-246.286 121.714-350.857 18.857-24.571 74.857-89.143 108-89.143 14.286 0 29.143 11.429 29.143 26.286 0 17.143-25.143 40.571-36 51.429-31.429 32.571-60.571 65.714-84 105.143-48.571 81.143-68 162.286-68 256.571 0 101.143 18.857 192.571 70.286 280.571 21.714 37.143 47.429 68 77.714 98.857 12 13.143 40 38.857 40 58.286zM1026.286 858.857c0 21.143-14.286 38.857-36.571 38.857h-617.714c-20 0-36.571-16.571-36.571-36.571 0-21.143 14.286-38.857 36.571-38.857h617.714c20 0 36.571 16.571 36.571 36.571zM903.429 509.714c0 48-10.857 92.571-38.286 133.143-18.857 28-57.143 64-87.429 79.429-4.571 2.857-10.286 5.714-15.429 5.714-4.571 0-13.143-5.143-13.143-10.286 0-16.571 69.714-56 69.714-132.571 0-25.143-6.286-53.143-20-74.286-4-5.714-18.286-24-26.286-24-1.714 0-1.714 1.143-1.714 2.857 0 13.714 8.571 26.857 8.571 41.143 0 18.286-22.286 27.429-37.714 27.429-26.857 0-37.714-18.857-37.714-43.429 0-16.571 1.714-33.714 1.714-50.286 0-12-0.571-15.429-5.714-26.286-8-15.429-34.286-46.857-53.143-46.857-5.143 0-6.857 0-6.857 5.143 0 8 18.286 16.571 18.286 45.714 0 76-104.571 89.714-104.571 165.714 0 34.286 4.571 62.857 24 91.429 12 17.714 25.143 28 45.143 36 5.143 1.714 10.286 2.286 10.286 8.571s-5.143 9.143-10.286 9.143c-2.857 0-16-5.143-18.857-6.286v0c-88-32-154.857-108.571-154.857-204.571 0-113.714 136.571-213.143 136.571-322.286 0-21.143-3.429-36-14.286-53.714-6.286-10.286-21.714-30.286-32-36.571-4.571-2.286-10.857-6.286-10.857-12 0-9.714 16.571-11.429 23.429-11.429 20.571 0 44 7.429 62.857 16.571 79.429 37.714 96 95.429 109.714 175.429 3.429 18.857 10.286 78.857 37.714 78.857 17.714 0 29.143-12 29.143-29.143 0-25.714-22.857-53.714-22.857-68 0-4 2.286-5.714 5.714-5.714 14.286 0 44 30.286 53.143 40 55.429 58.857 76 116 76 195.429zM1316.571 526.286c0 100.571-26.857 201.143-78.857 287.429-24 40-102.857 152-154.857 152-12 0-26.286-14.857-26.286-26.857 0-19.429 66.857-81.714 83.429-102.857 70.857-89.143 104.571-189.714 104.571-303.429 0-93.714-11.429-169.714-53.143-254.857-25.714-52.571-52.571-88-93.143-130.286-13.143-13.714-41.714-39.429-41.714-60 0-14.286 14.857-29.714 29.143-29.714 37.714 0 92 69.714 112 96.571 76.571 102.857 109.143 208.571 117.714 335.429 0.571 12 1.143 24.571 1.143 36.571z"],"width":1316.5714285714284,"tags":["free-code-camp"],"defaultCode":62149,"grid":14},{"paths":["M679.429 746.857l84-396c7.429-34.857-12.571-48.571-35.429-40l-493.714 190.286c-33.714 13.143-33.143 32-5.714 40.571l126.286 39.429 293.143-184.571c13.714-9.143 26.286-4 16 5.143l-237.143 214.286-9.143 130.286c13.143 0 18.857-5.714 25.714-12.571l61.714-59.429 128 94.286c23.429 13.143 40 6.286 46.286-21.714zM1024 512c0 282.857-229.143 512-512 512s-512-229.143-512-512 229.143-512 512-512 512 229.143 512 512z"],"width":1024,"tags":["telegram"],"defaultCode":62150,"grid":14},{"paths":["M365.714 768c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714c0-45.714 28.571-87.429 73.143-103.429v-518.286h73.143v518.286c44.571 16 73.143 57.714 73.143 103.429zM438.857 768c0-60-28.571-112.571-73.143-146.286v-438.857c0-60.571-49.143-109.714-109.714-109.714s-109.714 49.143-109.714 109.714v438.857c-44.571 33.714-73.143 86.286-73.143 146.286 0 101.143 81.714 182.857 182.857 182.857s182.857-81.714 182.857-182.857zM512 768c0 141.143-114.857 256-256 256s-256-114.857-256-256c0-69.714 28-132.571 73.143-178.857v-406.286c0-101.143 81.714-182.857 182.857-182.857s182.857 81.714 182.857 182.857v406.286c45.143 46.286 73.143 109.143 73.143 178.857zM585.143 438.857v73.143h-109.714v-73.143h109.714zM585.143 292.571v73.143h-109.714v-73.143h109.714zM585.143 146.286v73.143h-109.714v-73.143h109.714z"],"width":585.1428571428571,"tags":["thermometer","thermometer-4","thermometer-full"],"defaultCode":62151,"grid":14},{"paths":["M365.714 768c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714c0-45.714 28.571-87.429 73.143-103.429v-372h73.143v372c44.571 16 73.143 57.714 73.143 103.429zM438.857 768c0-60-28.571-112.571-73.143-146.286v-438.857c0-60.571-49.143-109.714-109.714-109.714s-109.714 49.143-109.714 109.714v438.857c-44.571 33.714-73.143 86.286-73.143 146.286 0 101.143 81.714 182.857 182.857 182.857s182.857-81.714 182.857-182.857zM512 768c0 141.143-114.857 256-256 256s-256-114.857-256-256c0-69.714 28-132.571 73.143-178.857v-406.286c0-101.143 81.714-182.857 182.857-182.857s182.857 81.714 182.857 182.857v406.286c45.143 46.286 73.143 109.143 73.143 178.857zM585.143 438.857v73.143h-109.714v-73.143h109.714zM585.143 292.571v73.143h-109.714v-73.143h109.714zM585.143 146.286v73.143h-109.714v-73.143h109.714z"],"width":585.1428571428571,"tags":["thermometer-3","thermometer-three-quarters"],"defaultCode":62152,"grid":14},{"paths":["M365.714 768c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714c0-45.714 28.571-87.429 73.143-103.429v-225.714h73.143v225.714c44.571 16 73.143 57.714 73.143 103.429zM438.857 768c0-60-28.571-112.571-73.143-146.286v-438.857c0-60.571-49.143-109.714-109.714-109.714s-109.714 49.143-109.714 109.714v438.857c-44.571 33.714-73.143 86.286-73.143 146.286 0 101.143 81.714 182.857 182.857 182.857s182.857-81.714 182.857-182.857zM512 768c0 141.143-114.857 256-256 256s-256-114.857-256-256c0-69.714 28-132.571 73.143-178.857v-406.286c0-101.143 81.714-182.857 182.857-182.857s182.857 81.714 182.857 182.857v406.286c45.143 46.286 73.143 109.143 73.143 178.857zM585.143 438.857v73.143h-109.714v-73.143h109.714zM585.143 292.571v73.143h-109.714v-73.143h109.714zM585.143 146.286v73.143h-109.714v-73.143h109.714z"],"width":585.1428571428571,"tags":["thermometer-2","thermometer-half"],"defaultCode":62153,"grid":14},{"paths":["M365.714 768c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714c0-45.714 28.571-87.429 73.143-103.429v-79.429h73.143v79.429c44.571 16 73.143 57.714 73.143 103.429zM438.857 768c0-60-28.571-112.571-73.143-146.286v-438.857c0-60.571-49.143-109.714-109.714-109.714s-109.714 49.143-109.714 109.714v438.857c-44.571 33.714-73.143 86.286-73.143 146.286 0 101.143 81.714 182.857 182.857 182.857s182.857-81.714 182.857-182.857zM512 768c0 141.143-114.857 256-256 256s-256-114.857-256-256c0-69.714 28-132.571 73.143-178.857v-406.286c0-101.143 81.714-182.857 182.857-182.857s182.857 81.714 182.857 182.857v406.286c45.143 46.286 73.143 109.143 73.143 178.857zM585.143 438.857v73.143h-109.714v-73.143h109.714zM585.143 292.571v73.143h-109.714v-73.143h109.714zM585.143 146.286v73.143h-109.714v-73.143h109.714z"],"width":585.1428571428571,"tags":["thermometer-1","thermometer-quarter"],"defaultCode":62154,"grid":14},{"paths":["M365.714 768c0 60.571-49.143 109.714-109.714 109.714s-109.714-49.143-109.714-109.714c0-60 48.571-109.714 109.714-109.714s109.714 50.286 109.714 109.714zM438.857 768c0-60-28.571-112.571-73.143-146.286v-438.857c0-60.571-49.143-109.714-109.714-109.714s-109.714 49.143-109.714 109.714v438.857c-44.571 33.714-73.143 86.286-73.143 146.286 0 101.143 81.714 182.857 182.857 182.857s182.857-81.714 182.857-182.857zM512 768c0 141.143-114.857 256-256 256s-256-114.857-256-256c0-69.714 28-132.571 73.143-178.857v-406.286c0-101.143 81.714-182.857 182.857-182.857s182.857 81.714 182.857 182.857v406.286c45.143 46.286 73.143 109.143 73.143 178.857zM585.143 438.857v73.143h-109.714v-73.143h109.714zM585.143 292.571v73.143h-109.714v-73.143h109.714zM585.143 146.286v73.143h-109.714v-73.143h109.714z"],"width":585.1428571428571,"tags":["thermometer-0","thermometer-empty"],"defaultCode":62155,"grid":14},{"paths":["M818.857 142.286c7.429 7.429 7.429 18.857 0 26.286l-357.714 357.714c-7.429 7.429-18.857 7.429-26.286 0l-46.857-46.857c-7.429-7.429-7.429-18.857 0-26.286l25.143-25.143c-55.429-69.714-62.286-165.143-20-241.143-26.286-25.143-61.714-40.571-100.571-40.571-80.571 0-146.286 65.714-146.286 146.286v731.429h-146.286v-731.429c0-161.143 131.429-292.571 292.571-292.571 82.286 0 156.571 34.286 209.714 89.143 72-29.143 155.429-18.286 218.286 31.429l25.143-25.143c7.429-7.429 18.857-7.429 26.286 0zM768 292.571c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM914.286 365.714c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571 36.571 16.571 36.571 36.571-16.571 36.571-36.571 36.571zM1060.571 292.571c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM694.857 365.714c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM804.571 402.286c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571zM987.429 365.714c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM621.714 438.857c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM768 512c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571 36.571 16.571 36.571 36.571-16.571 36.571-36.571 36.571zM914.286 438.857c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM694.857 585.143c-20 0-36.571-16.571-36.571-36.571s16.571-36.571 36.571-36.571 36.571 16.571 36.571 36.571-16.571 36.571-36.571 36.571zM841.143 512c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM621.714 585.143c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM768 585.143c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM694.857 658.286c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571zM621.714 731.429c20 0 36.571 16.571 36.571 36.571s-16.571 36.571-36.571 36.571-36.571-16.571-36.571-36.571 16.571-36.571 36.571-36.571z"],"width":1097.142857142857,"tags":["shower"],"defaultCode":62156,"grid":14},{"paths":["M950.857 621.714v109.714c0 65.143-28.571 122.857-73.143 163.429v110.857c0 10.286-8 18.286-18.286 18.286h-36.571c-10.286 0-18.286-8-18.286-18.286v-67.429c-22.857 8-47.429 12.571-73.143 12.571h-438.857c-25.714 0-50.286-4.571-73.143-12.571v62.857c0 12.571-8 22.857-18.286 22.857h-36.571c-10.286 0-18.286-10.286-18.286-22.857v-106.286c-44.571-40.571-73.143-98.286-73.143-163.429v-109.714h877.714zM402.286 384c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM438.857 347.429c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM402.286 310.857c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM475.429 310.857c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM438.857 274.286c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM402.286 237.714c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM1024 530.286v36.571c0 10.286-8 18.286-18.286 18.286h-987.429c-10.286 0-18.286-8-18.286-18.286v-36.571c0-10.286 8-18.286 18.286-18.286h54.857v-365.714c0-80.571 65.714-146.286 146.286-146.286 41.143 0 78.286 17.143 105.143 44.571 35.429-14.286 77.714-9.143 109.143 15.429l12.571-12.571c3.429-3.429 9.143-3.429 12.571 0l24 24c3.429 3.429 3.429 9.143 0 12.571l-179.429 179.429c-3.429 3.429-9.143 3.429-12.571 0l-24-24c-3.429-3.429-3.429-9.143 0-12.571l12.571-12.571c-27.429-34.857-30.857-82.857-9.714-121.143-13.143-12.571-30.857-20-50.286-20-40.571 0-73.143 32.571-73.143 73.143v365.714h859.429c10.286 0 18.286 8 18.286 18.286zM512 274.286c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM475.429 237.714c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM438.857 201.143c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM548.571 237.714c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM512 201.143c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM475.429 164.571c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM585.143 201.143c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM548.571 164.571c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286zM621.714 164.571c0 10.286-8 18.286-18.286 18.286s-18.286-8-18.286-18.286 8-18.286 18.286-18.286 18.286 8 18.286 18.286z"],"width":1024,"tags":["bath","bathtub","s15"],"defaultCode":62157,"grid":14},{"paths":["M568 681.143c0 37.714-4 75.429-9.714 112.571-8.571 59.429-17.143 120.571-31.429 178.857-10.286 41.714-49.143 51.429-86.857 51.429s-76.571-9.714-86.857-51.429c-14.286-58.286-22.857-119.429-31.429-178.857-5.714-37.143-9.714-74.857-9.714-112.571 0-77.143 62.286-96 128-96s128 18.857 128 96zM877.714 438.857c0 185.143-114.286 343.429-276.571 408-6.286 2.286-13.143-3.429-12-10.286 1.714-12 3.429-24.571 5.714-37.714 1.143-9.143 2.286-18.286 3.429-26.857 0.571-3.429 2.286-5.714 5.143-6.857 118.857-60.571 201.143-184 201.143-326.286 0-208.571-174.857-376.571-385.714-365.143-193.143 10.286-346.857 174.857-345.714 368 1.143 142.286 84 265.143 203.429 324.571 2.857 1.143 4.571 4 5.143 6.857 1.143 8 2.286 16.571 3.429 25.714 2.286 13.714 4 26.286 6.286 38.857 1.143 6.857-6.286 12.571-12.571 9.714-169.714-66.286-288-235.429-278.286-430.286 10.857-221.143 189.143-402.286 410.286-416 254.857-16 466.857 186.286 466.857 437.714zM568 420.571c0 70.857-57.143 128-128 128s-128-57.143-128-128 57.143-128 128-128 128 57.143 128 128zM732.571 438.857c0 94.286-45.143 178.857-114.286 232-5.714 4.571-13.714 0.571-14.857-6.857-1.714-16-6.286-34.857-16.571-52.571-2.286-3.429-1.714-8 1.714-11.429 43.429-40 70.857-97.143 70.857-161.143 0-129.143-112.571-232.571-244.571-218.286-101.143 11.429-183.429 94.857-193.143 196.571-7.429 72 21.143 138.286 69.714 182.857 3.429 3.429 4 8 1.714 11.429-10.286 17.714-14.857 36.571-16.571 53.143-1.143 6.857-9.143 10.857-14.857 6.286-70.857-54.857-116-141.143-114.286-238.286 3.429-152 126.857-278.857 278.286-285.714 168-8 306.857 125.714 306.857 292z"],"width":868.5714285714286,"tags":["podcast"],"defaultCode":62158,"grid":14},{"paths":["M146.286 804.571h731.429v-438.857h-731.429v438.857zM1024 164.571v694.857c0 50.286-41.143 91.429-91.429 91.429h-841.143c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h841.143c50.286 0 91.429 41.143 91.429 91.429z"],"width":1024,"tags":["window-maximize"],"defaultCode":62160,"grid":14},{"paths":["M1024 749.714v109.714c0 50.286-41.143 91.429-91.429 91.429h-841.143c-50.286 0-91.429-41.143-91.429-91.429v-109.714c0-50.286 41.143-91.429 91.429-91.429h841.143c50.286 0 91.429 41.143 91.429 91.429z"],"width":1024,"tags":["window-minimize"],"defaultCode":62161,"grid":14},{"paths":["M146.286 877.714h438.857v-292.571h-438.857v292.571zM731.429 585.143h292.571v-438.857h-438.857v146.286h54.857c50.286 0 91.429 41.143 91.429 91.429v201.143zM1170.286 91.429v548.571c0 50.286-41.143 91.429-91.429 91.429h-347.429v201.143c0 50.286-41.143 91.429-91.429 91.429h-548.571c-50.286 0-91.429-41.143-91.429-91.429v-548.571c0-50.286 41.143-91.429 91.429-91.429h347.429v-201.143c0-50.286 41.143-91.429 91.429-91.429h548.571c50.286 0 91.429 41.143 91.429 91.429z"],"width":1170.2857142857142,"tags":["window-restore"],"defaultCode":62162,"grid":14},{"paths":["M671.429 754.857l83.429-83.429c7.429-7.429 7.429-18.857 0-26.286l-133.143-133.143 133.143-133.143c7.429-7.429 7.429-18.857 0-26.286l-83.429-83.429c-7.429-7.429-18.857-7.429-26.286 0l-133.143 133.143-133.143-133.143c-7.429-7.429-18.857-7.429-26.286 0l-83.429 83.429c-7.429 7.429-7.429 18.857 0 26.286l133.143 133.143-133.143 133.143c-7.429 7.429-7.429 18.857 0 26.286l83.429 83.429c7.429 7.429 18.857 7.429 26.286 0l133.143-133.143 133.143 133.143c7.429 7.429 18.857 7.429 26.286 0zM1024 164.571v694.857c0 50.286-41.143 91.429-91.429 91.429h-841.143c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h841.143c50.286 0 91.429 41.143 91.429 91.429z"],"width":1024,"tags":["times-rectangle","window-close"],"defaultCode":62163,"grid":14},{"paths":["M718.286 634.857l-83.429 83.429c-7.429 7.429-18.857 7.429-26.286 0l-96.571-96.571-96.571 96.571c-7.429 7.429-18.857 7.429-26.286 0l-83.429-83.429c-7.429-7.429-7.429-18.857 0-26.286l96.571-96.571-96.571-96.571c-7.429-7.429-7.429-18.857 0-26.286l83.429-83.429c7.429-7.429 18.857-7.429 26.286 0l96.571 96.571 96.571-96.571c7.429-7.429 18.857-7.429 26.286 0l83.429 83.429c7.429 7.429 7.429 18.857 0 26.286l-96.571 96.571 96.571 96.571c7.429 7.429 7.429 18.857 0 26.286zM146.286 804.571h731.429v-585.143h-731.429v585.143zM1024 164.571v694.857c0 50.286-41.143 91.429-91.429 91.429h-841.143c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h841.143c50.286 0 91.429 41.143 91.429 91.429z"],"width":1024,"tags":["times-rectangle-o","window-close-o"],"defaultCode":62164,"grid":14},{"paths":["M611.429 673.143l174.857-322.286h-373.714l-174.857 322.286h373.714zM1024 512c0 282.857-229.143 512-512 512s-512-229.143-512-512 229.143-512 512-512 512 229.143 512 512z"],"width":1024,"tags":["bandcamp"],"defaultCode":62165,"grid":14},{"paths":["M737.714 272c-18.286-20.571-48 14.286-32 33.143 15.429 18.857 66.286 5.143 32-33.143zM511.429 412.571c-6.286 6.286-16 6.286-21.714 0-6.286-5.714-6.286-15.429 0-21.143 5.714-6.286 15.429-6.286 21.714 0 5.714 5.714 5.714 15.429 0 21.143zM605.714 454.857l-20 20c-9.143 9.714-24.571 9.714-34.286 0l-21.714-21.714c-9.143-9.714-9.143-24.571 0-34.286l20-20c9.143-9.143 24.571-9.143 34.286 0l21.714 22.286c9.143 9.143 9.143 24.571 0 33.714zM543.429 380.571c-5.714 5.714-15.429 5.714-21.714 0-5.714-6.286-5.714-16 0-21.714 6.286-6.286 16-6.286 21.714 0 6.286 5.714 6.286 15.429 0 21.714zM773.714 324.571c-25.714 48.571-93.143 68.571-134.286 39.429-41.143-29.714-69.714-89.143-24.571-140.571 44.571-51.429 84-35.429 123.429 1.714 24.571 23.429 60.571 51.429 35.429 99.429zM888.571 600c5.143-33.143-42.286-34.286-52.571-53.143-28-49.714-57.143-76-112.571-62.857 24-16.571 48.571-12.571 48.571-12.571 0.571-13.143 0-26.857-19.429-51.429 8-25.714 0.571-46.286 0.571-46.286 32-17.714 55.429-50.286 60-89.143 7.429-64-38.857-122.286-102.857-129.714-45.714-5.143-90.286 16-112 53.143-48 82.857 2.857 146.286 46.286 168-29.714-2.857-70.857-24.571-82.857-70.857-13.714-53.143 5.714-102.857 18.286-126.857 0 0-9.143-12-16.571-18.286 0 0-28.571 0-50.857 10.857 24.571-31.429 52-29.714 52-29.714 0-13.143-1.143-30.857-7.429-44.571-11.429-23.429-51.429-26.857-66.857 8.571 0.571-1.714 1.143-2.857 2.286-4-10.286 24.571-2.286 115.429 34.857 180-5.143 2.857-18.857 12.571-26.857 20.571-44.571 20-116 124.571-116 124.571-58.286 22.286-160 105.143-146.286 164.571v0c0.571 6.286 2.857 11.429 6.286 15.429-5.714 4.571-11.429 10.286-17.143 17.143-24.571 28.571-10.857 72.571 36.571 50.286 32.571-14.857 61.714-41.714 75.429-62.857 0 0-12-10.286-34.286-9.143 57.143-13.714 71.429-19.429 96-18.857 16.571 8 16.571-70.857 16.571-70.857 0-30.286-4.571-64-22.857-85.714 25.714 25.143 60 67.429 57.714 125.143-1.714 37.714-31.429 47.429-31.429 47.429-18.857 34.286-89.143 136-62.857 218.857 0 0-20-30.857-21.143-45.714-36 40-96.571 108-51.429 133.143 54.857 30.286 225.143-182.857 261.143-293.714 71.429-42.857 114.286-97.714 132-134.286 45.714 90.857 197.714 196 209.714 122.857zM1025.143 512c0 282.857-229.714 512-512.571 512s-512.571-229.143-512.571-512 229.714-512 512.571-512 512.571 229.143 512.571 512z"],"width":1025.1702857142857,"tags":["grav"],"defaultCode":62166,"grid":14},{"paths":["M296 104.571v374.286c132.571 1.143 202.286-5.714 202.286-5.714 53.714-1.714 61.714-15.429 74.286-68l18.857-81.143h58.857l-8 184 4 182.286h-58.857l-16.571-72.571c-12-54.286-35.429-67.429-73.714-68 0 0-49.143-4.571-201.143-4.571v317.714c0 59.429 32.571 87.429 101.143 87.429h204c68.571 0 130.286-6.857 172.571-104.571l53.143-123.429h50.857c-4 24.571-31.429 251.429-35.429 301.714-188-6.857-268.571-6.857-268.571-6.857h-358.857l-214.857 6.857v-58.286l72.571-14.286c50.857-9.714 66.286-24.571 66.857-66.286 3.429-138.286 4.571-367.429 4.571-367.429s1.714-229.714-4.571-368.571c-1.714-47.429-16-58.857-66.857-68.571l-72.571-13.714v-58.286l214.857 6.857h401.143s79.429 0 213.714-15.429c-8 87.429-17.714 289.143-17.714 289.143h-53.143l-18.286-70.857c-22.286-88.571-52-136-106.857-136h-313.143c-23.429 0-24.571 8-24.571 22.286z"],"width":877.7142857142857,"tags":["etsy"],"defaultCode":62167,"grid":14},{"paths":["M526.857 455.429v104c0 20.571 4 39.429-21.714 38.857v-176.571c25.143 0 21.714 13.143 21.714 33.714zM707.429 510.286v69.143c0 11.429 3.429 30.286-13.143 30.286-3.429 0-6.286-1.714-8-5.143-4.571-10.857-2.286-93.143-2.286-94.286 0-8-2.286-26.857 10.286-26.857 15.429 0 13.143 15.429 13.143 26.857zM102.857 645.143h69.714v-269.714h-69.714v269.714zM350.857 645.143h60.571v-269.714h-90.857l-16 126.286c-5.714-42.286-11.429-84.571-18.286-126.286h-90.286v269.714h61.143v-178.286l25.714 178.286h43.429l24.571-182.286v182.286zM593.714 470.857c0-17.143 0.571-35.429-2.857-51.429-9.143-47.429-66.286-44-103.429-44h-52v269.714c181.714 0 158.286 12.571 158.286-174.286zM774.857 583.429v-76c0-36.571-1.714-63.429-46.857-63.429-18.857 0-31.429 5.714-44 19.429v-88h-66.857v269.714h62.857l4-17.143c12 14.286 25.143 20.571 44 20.571 41.714 0 46.857-32 46.857-65.143zM877.714 164.571v694.857c0 50.286-41.143 91.429-91.429 91.429h-694.857c-50.286 0-91.429-41.143-91.429-91.429v-694.857c0-50.286 41.143-91.429 91.429-91.429h694.857c50.286 0 91.429 41.143 91.429 91.429z"],"width":877.7142857142857,"tags":["imdb"],"defaultCode":62168,"grid":14},{"paths":["M653.143 990.286c-2.286-0.571-4-1.143-6.286-2.286 0 0-188-110.286-251.429-288.571-21.143-3.429-65.714-13.714-100-21.143v0c49.714 161.714 188 285.143 357.714 312zM286.857 644l96 16c-32.571-97.714-36.571-209.143-36.571-209.143-38.286 37.143-58.857 88-69.143 128v0c1.714 22.286 4.571 44 9.714 65.143zM349.714 296v0c-17.714 26.286-32 54.857-44 84.571 18.857-20 34.286-33.143 42.286-38.857-1.143-17.143 1.714-45.714 1.714-45.714zM1170.857 544c0-249.143-201.143-451.429-448-451.429-114.286 0-218.286 43.429-297.714 114.857-12 23.429-20 53.143-25.714 91.429 121.714-103.429 338.857-77.714 338.857-77.714 54.286 2.286 48 50.286 47.429 65.143-197.714-16.571-294.857 40-390.857 121.714 0 0 18.857 182.857 62.286 257.143 250.286 11.429 440.571-124.571 440.571-124.571 24-17.143 45.143-18.857 49.714 10.857 3.429 24 5.143 56.571-22.286 69.143-83.429 38.857-175.429 63.429-266.857 76.571-59.429 8.571-92.571 10.857-181.143 9.143 84.571 196.571 296 250.286 296 250.286 66.286 10.857 116.571 2.286 150.286-8.571v0c146.286-74.286 247.429-227.429 247.429-404zM1213.143 522.857c-4 38.857-10.286 84-22.857 121.143-51.429 152.571-122.857 252-285.714 342.857-14.857 10.286-30.857 20-46.857 25.143-29.143 10.286-60.571 12.571-93.143 9.143-13.714 1.143-27.429 1.714-41.714 1.714-217.714 0-401.714-148.571-457.143-351.429-1.714 0-3.429-0.571-5.143-0.571-13.143 102.857 62.857 241.714 62.857 241.714s4.571 6.857 30.857 46.857c-145.714-77.143-149.714-304.571-149.714-304.571-34.857-13.143-156-54.286-177.143-88 0 0 94.857 52 176.571 62.286-0.571-0.571 1.143-18.286 1.143-18.286 5.143-69.714 29.143-124 53.714-165.714 16-78.286 51.429-149.143 100.571-208.571 8.571-35.429 22.286-77.714 46.286-122.286 10.286-19.429 20-32 46.286-44 173.714-81.143 345.143-101.714 521.143-10.286v0c168.571 88 260 272 240 462.857z"],"width":1260.544,"tags":["ravelry"],"defaultCode":62169,"grid":14},{"paths":["M766.286 448c20-30.857-3.429-109.143-73.143-155.429-69.143-46.286-157.714-42.857-178.286-12-20 30.286 22.857 10.857 101.143 40 129.143 48 130.286 158.286 150.286 127.429zM973.714 776c-161.714 397.714-890.286 297.143-874.857-218.857 1.714-65.714 20-109.714 38.857-172.571-120.571 493.714 552 781.143 828 391.429 10.286-14.286 13.143-13.143 8 0zM837.143 519.429c0 161.714-130.286 293.143-290.857 293.143s-290.857-131.429-290.857-293.143 130.286-293.143 290.857-293.143 290.857 131.429 290.857 293.143zM1001.143 354.857c-203.429-461.714-1043.429-291.429-950.286 336.571-193.143-629.143 602.857-917.714 897.143-469.714 24 36.571 51.429 100.571 53.143 133.143zM965.714 550.286c9.714-193.143-124-325.143-304.571-374.857-2.857 0-15.429-5.143 8-7.429 441.143 14.857 457.143 720-23.429 728 156.571-43.429 310.286-152 320-345.714z"],"width":983.9908571428571,"tags":["eercast"],"defaultCode":62170,"grid":14},{"paths":["M109.714 731.429v73.143h-64c-5.143 0-9.143-4-9.143-9.143v-9.143h-27.429c-5.143 0-9.143-4-9.143-9.143v-18.286c0-5.143 4-9.143 9.143-9.143h27.429v-9.143c0-5.143 4-9.143 9.143-9.143h64zM109.714 585.143v73.143h-64c-5.143 0-9.143-4-9.143-9.143v-9.143h-27.429c-5.143 0-9.143-4-9.143-9.143v-18.286c0-5.143 4-9.143 9.143-9.143h27.429v-9.143c0-5.143 4-9.143 9.143-9.143h64zM109.714 438.857v73.143h-64c-5.143 0-9.143-4-9.143-9.143v-9.143h-27.429c-5.143 0-9.143-4-9.143-9.143v-18.286c0-5.143 4-9.143 9.143-9.143h27.429v-9.143c0-5.143 4-9.143 9.143-9.143h64zM109.714 292.571v73.143h-64c-5.143 0-9.143-4-9.143-9.143v-9.143h-27.429c-5.143 0-9.143-4-9.143-9.143v-18.286c0-5.143 4-9.143 9.143-9.143h27.429v-9.143c0-5.143 4-9.143 9.143-9.143h64zM109.714 146.286v73.143h-64c-5.143 0-9.143-4-9.143-9.143v-9.143h-27.429c-5.143 0-9.143-4-9.143-9.143v-18.286c0-5.143 4-9.143 9.143-9.143h27.429v-9.143c0-5.143 4-9.143 9.143-9.143h64zM731.429 54.857v841.143c0 30.286-24.571 54.857-54.857 54.857h-475.429c-30.286 0-54.857-24.571-54.857-54.857v-841.143c0-30.286 24.571-54.857 54.857-54.857h475.429c30.286 0 54.857 24.571 54.857 54.857zM877.714 758.857v18.286c0 5.143-4 9.143-9.143 9.143h-27.429v9.143c0 5.143-4 9.143-9.143 9.143h-64v-73.143h64c5.143 0 9.143 4 9.143 9.143v9.143h27.429c5.143 0 9.143 4 9.143 9.143zM877.714 612.571v18.286c0 5.143-4 9.143-9.143 9.143h-27.429v9.143c0 5.143-4 9.143-9.143 9.143h-64v-73.143h64c5.143 0 9.143 4 9.143 9.143v9.143h27.429c5.143 0 9.143 4 9.143 9.143zM877.714 466.286v18.286c0 5.143-4 9.143-9.143 9.143h-27.429v9.143c0 5.143-4 9.143-9.143 9.143h-64v-73.143h64c5.143 0 9.143 4 9.143 9.143v9.143h27.429c5.143 0 9.143 4 9.143 9.143zM877.714 320v18.286c0 5.143-4 9.143-9.143 9.143h-27.429v9.143c0 5.143-4 9.143-9.143 9.143h-64v-73.143h64c5.143 0 9.143 4 9.143 9.143v9.143h27.429c5.143 0 9.143 4 9.143 9.143zM877.714 173.714v18.286c0 5.143-4 9.143-9.143 9.143h-27.429v9.143c0 5.143-4 9.143-9.143 9.143h-64v-73.143h64c5.143 0 9.143 4 9.143 9.143v9.143h27.429c5.143 0 9.143 4 9.143 9.143z"],"width":877.7142857142857,"tags":["microchip"],"defaultCode":62171,"grid":14},{"paths":["M894.857 638.286l-95.429 18.857 106.286 61.143c17.143 9.714 23.429 32.571 13.143 49.714s-32.571 23.429-49.714 13.143l-106.286-60.571 31.429 91.429c16 45.714-53.714 69.143-69.143 24l-58.286-171.429-154.857-89.143v178.857l118.857 136c32 36-23.429 84.571-54.857 48l-64-73.143v122.286c0 20-16.571 36.571-36.571 36.571s-36.571-16.571-36.571-36.571v-122.286l-64 73.143c-31.429 36.571-86.857-12-54.857-48l118.857-136v-178.857l-154.857 89.143-58.286 171.429c-15.429 45.143-85.143 21.714-69.143-24l31.429-91.429-106.286 60.571c-17.143 10.286-39.429 4-49.714-13.143s-4-40 13.143-49.714l106.286-61.143-95.429-18.857c-47.429-9.714-33.143-81.143 14.286-72l177.143 35.429 154.857-89.714-154.857-89.714-177.143 35.429c-2.286 0.571-5.143 0.571-7.429 0.571-43.429 0-49.714-64-6.857-72.571l95.429-18.857-106.286-61.143c-17.143-9.714-23.429-32.571-13.143-49.714 10.286-17.714 32.571-23.429 49.714-13.143l106.286 60.571-31.429-91.429c-16-45.714 53.714-69.143 69.143-24l58.286 171.429 154.857 89.143v-178.857l-118.857-136c-32-36 23.429-84.571 54.857-48l64 73.143v-122.286c0-20 16.571-36.571 36.571-36.571s36.571 16.571 36.571 36.571v122.286l64-73.143c31.429-36.571 86.857 12 54.857 48l-118.857 136v178.857l154.857-89.143 58.286-171.429c15.429-45.143 85.143-21.714 69.143 24l-31.429 91.429 106.286-60.571c17.143-10.286 39.429-4 49.714 13.143s4 40-13.143 49.714l-106.286 61.143 95.429 18.857c42.857 8.571 36.571 72.571-6.857 72.571-2.286 0-5.143 0-7.429-0.571l-177.143-35.429-154.857 89.714 154.857 89.714 177.143-35.429c47.429-9.143 61.714 62.286 14.286 72z"],"width":950.8571428571428,"tags":["snowflake-o"],"defaultCode":62172,"grid":14},{"paths":["M841.714 530.857c10.286-182.857-129.714-334.286-310.857-345.143-180-10.857-339.429 126.286-349.714 307.429-10.286 182.857 129.714 334.286 311.429 345.143 180 10.857 339.429-125.714 349.143-307.429zM1024 0l-199.429 198.857c90.857 88.571 140 212 132 338.857-12.571 212.571-176 382.286-385.714 410.857l-570.857 75.429 198.286-198.286c-90.857-88.571-139.429-212-132-338.857 13.143-213.143 176-382.857 386.286-411.429 190.286-25.143 381.143-50.286 571.429-75.429z"],"width":1024,"tags":["superpowers"],"defaultCode":62173,"grid":14},{"paths":["M541.714 587.429l93.143 188h-29.143l-100-200-97.714 200h-28l102.286-213.714-44.571-18.857 12-28 137.143 58.286-12 28.571zM321.714 249.143l173.714 74.286-74.286 173.714-173.714-74.286zM518.286 354.857l137.143 58.857-58.857 136.571-136.571-58.286zM678.857 440.571l109.143 46.286-46.857 108.571-108.571-46.286zM960 512c0-246.857-201.143-448-448-448s-448 201.143-448 448 201.143 448 448 448 448-201.143 448-448zM1024 512c0 282.286-229.714 512-512 512s-512-229.714-512-512 229.714-512 512-512 512 229.714 512 512z"],"width":1024,"tags":["wpexplorer"],"defaultCode":62174,"grid":14},{"paths":["M762.286 705.143c-6.286-41.143-81.714-9.143-86.286-54.286-6.286-64 87.429-202.286 80-256-6.857-48-38.857-58.286-66.857-58.857-26.857-0.571-33.714 4-42.857 9.143-5.714 3.429-13.143 9.714-23.429-0.571-12.571-12-22.286-23.429-38.857-25.714-24.571-4-35.429 4-53.143 19.429-6.857 5.714-24 25.714-40 18.286-6.857-3.429-30.857-15.429-48-22.857-32.571-14.286-80 9.143-97.143 40-25.714 45.714-76 226.286-83.429 250.286-17.143 53.143 21.714 97.143 73.714 94.286 22.286-1.143 36.571-9.143 50.857-34.857 8-14.857 83.429-215.429 89.143-225.143 4-6.857 17.714-16 29.143-10.286 11.429 6.286 13.714 18.857 12 30.286-2.286 19.429-56 141.714-57.714 155.429-6.857 45.714 53.714 53.143 77.143 8 7.429-14.286 91.429-185.143 98.857-196.571 8.571-12.571 14.857-16.571 23.429-16 6.286 0 16.571 1.714 14.286 21.714-2.857 18.857-70.286 144.571-77.714 175.429-9.143 41.143 13.143 82.857 49.714 101.143 22.857 11.429 125.143 31.429 117.143-22.286zM218.857 828.571c2.286 11.429-4.571 22.286-16 24.571-10.857 2.286-21.714-4.571-24-16-2.286-10.857 4.571-22.286 15.429-24.571s22.286 4.571 24.571 16zM544.571 978.857c9.143 13.143 5.714 30.857-6.857 40-13.143 9.143-30.857 5.714-40-7.429-8.571-13.143-5.143-30.857 7.429-40 13.143-9.143 30.857-5.714 39.429 7.429zM101.143 514.857c-13.714 20.571-41.143 25.714-61.143 11.429-20-13.714-25.143-41.714-11.429-61.714 13.714-20.571 41.143-25.714 61.143-12 20 14.286 25.143 41.714 11.429 62.286zM838.286 901.714c14.286 21.143 9.143 50.286-12 65.143-21.143 14.286-49.714 9.143-64-12s-9.143-50.286 11.429-65.143c21.143-14.857 49.714-9.143 64.571 12zM902.286 556.571c52.571 86.286 30.286 200-52.571 258.286-34.857 24.571-74.286 35.429-113.714 34.286-24 94.286-138.857 129.143-210.286 65.143-2.286 1.714-5.143 3.429-7.429 5.714-78.286 54.286-184.571 34.857-238.857-44.571-19.429-28.571-29.143-61.143-30.286-93.714-130.857-21.714-180-188-82.286-279.429-56.571-93.714 1.143-214.857 106.857-229.714 50.286-132.571 215.429-195.429 327.429-108.571 134.857-44.571 272.571 58.857 261.714 202.286 82.286 25.143 105.714 133.714 39.429 190.286zM260 179.429c10.286 15.429 6.857 36.571-8.571 47.429-14.857 10.286-36 6.857-46.286-8.571s-6.857-36.571 8.571-47.429c14.857-10.286 36-6.857 46.286 8.571zM350.857 18.857c2.857 12.571-5.143 25.143-17.714 28s-25.143-5.143-28-18.286c-2.286-12.571 5.714-25.143 18.286-28s25.143 5.143 27.429 18.286zM1028.571 560.571c3.429 15.429-6.286 30.286-21.143 33.143-14.857 3.429-29.714-6.286-32.571-21.143-3.429-15.429 6.286-30.286 21.143-33.714 14.857-2.857 29.714 6.857 32.571 21.714zM649.143 50.286c12 20.571 5.714 48-15.429 60.571-20.571 12.571-47.429 5.714-59.429-14.857-12.571-21.143-5.714-48.571 14.857-61.143s47.429-5.714 60 15.429zM1075.429 425.143c2.857 11.429-4.571 22.286-15.429 25.143-11.429 2.286-22.286-5.143-24.571-16-2.286-11.429 4.571-22.857 16-25.143 10.857-2.286 21.714 4.571 24 16zM966.286 287.429c11.429 17.143 7.429 40.571-9.143 52.571-17.143 11.429-40.571 7.429-52-9.714s-7.429-40.571 9.714-52.571c16.571-12 40-7.429 51.429 9.714z"],"width":1093.12,"tags":["meetup"],"defaultCode":62176,"grid":14}],"preferences":{"showGlyphs":true,"showQuickUse":true,"showQuickUse2":true,"showSVGs":true,"fontPref":{"prefix":"icon-","metadata":{"fontFamily":"icomoon"},"metrics":{"emSize":1024,"baseline":6.25,"whitespace":50},"embed":false},"imagePref":{"prefix":"icon-","png":true,"useClassSelector":true,"color":0,"bgColor":16777215,"classSelector":".icon","name":"icomoon"},"historySize":50,"showCodes":true,"gridSize":16},"IcoMoonType":"icon-set"};/* harmony default export */ var font_awesome = (fontAwesome);
// CONCATENATED MODULE: ./src/components/icons/sources/material-icons.js
var materialIcons = {
  "selection": [{
    "ligatures": "3d_rotation",
    "order": 2
  }, {
    "ligatures": "ac_unit",
    "order": 3
  }, {
    "ligatures": "access_alarm, alarm",
    "order": 4
  }, {
    "ligatures": "access_alarms",
    "order": 5
  }, {
    "ligatures": "access_time, query_builder, schedule",
    "order": 6
  }, {
    "ligatures": "accessibility",
    "order": 7
  }, {
    "ligatures": "accessible",
    "order": 8
  }, {
    "ligatures": "account_balance",
    "order": 9
  }, {
    "ligatures": "account_balance_wallet",
    "order": 10
  }, {
    "ligatures": "account_box",
    "order": 11
  }, {
    "ligatures": "account_circle",
    "order": 12
  }, {
    "ligatures": "adb",
    "order": 13
  }, {
    "ligatures": "add",
    "order": 14
  }, {
    "ligatures": "add_a_photo",
    "order": 15
  }, {
    "ligatures": "add_alarm, alarm_add",
    "order": 16
  }, {
    "ligatures": "add_alert",
    "order": 17
  }, {
    "ligatures": "add_box",
    "order": 18
  }, {
    "ligatures": "add_circle",
    "order": 19
  }, {
    "ligatures": "add_circle_outline, control_point",
    "order": 20
  }, {
    "ligatures": "add_location",
    "order": 21
  }, {
    "ligatures": "add_shopping_cart",
    "order": 22
  }, {
    "ligatures": "add_to_photos, library_add, queue",
    "order": 23
  }, {
    "ligatures": "add_to_queue",
    "order": 24
  }, {
    "ligatures": "adjust",
    "order": 25
  }, {
    "ligatures": "airline_seat_flat",
    "order": 26
  }, {
    "ligatures": "airline_seat_flat_angled",
    "order": 27
  }, {
    "ligatures": "airline_seat_individual_suite",
    "order": 28
  }, {
    "ligatures": "airline_seat_legroom_extra",
    "order": 29
  }, {
    "ligatures": "airline_seat_legroom_normal",
    "order": 30
  }, {
    "ligatures": "airline_seat_legroom_reduced",
    "order": 31
  }, {
    "ligatures": "airline_seat_recline_extra",
    "order": 32
  }, {
    "ligatures": "airline_seat_recline_normal",
    "order": 33
  }, {
    "ligatures": "airplanemode_active, flight",
    "order": 34
  }, {
    "ligatures": "airplanemode_inactive",
    "order": 35
  }, {
    "ligatures": "airplay",
    "order": 36
  }, {
    "ligatures": "airport_shuttle",
    "order": 37
  }, {
    "ligatures": "alarm_off",
    "order": 38
  }, {
    "ligatures": "alarm_on",
    "order": 39
  }, {
    "ligatures": "album",
    "order": 40
  }, {
    "ligatures": "all_inclusive",
    "order": 41
  }, {
    "ligatures": "all_out",
    "order": 42
  }, {
    "ligatures": "android",
    "order": 43
  }, {
    "ligatures": "announcement",
    "order": 44
  }, {
    "ligatures": "apps",
    "order": 45
  }, {
    "ligatures": "archive",
    "order": 46
  }, {
    "ligatures": "arrow_back",
    "order": 47
  }, {
    "ligatures": "arrow_downward",
    "order": 48
  }, {
    "ligatures": "arrow_drop_down",
    "order": 49
  }, {
    "ligatures": "arrow_drop_down_circle",
    "order": 50
  }, {
    "ligatures": "arrow_drop_up",
    "order": 51
  }, {
    "ligatures": "arrow_forward",
    "order": 52
  }, {
    "ligatures": "arrow_upward",
    "order": 53
  }, {
    "ligatures": "art_track",
    "order": 54
  }, {
    "ligatures": "aspect_ratio",
    "order": 55
  }, {
    "ligatures": "assessment, insert_chart, poll",
    "order": 56
  }, {
    "ligatures": "assignment",
    "order": 57
  }, {
    "ligatures": "assignment_ind",
    "order": 58
  }, {
    "ligatures": "assignment_late",
    "order": 59
  }, {
    "ligatures": "assignment_return",
    "order": 60
  }, {
    "ligatures": "assignment_returned",
    "order": 61
  }, {
    "ligatures": "assignment_turned_in",
    "order": 62
  }, {
    "ligatures": "assistant",
    "order": 63
  }, {
    "ligatures": "assistant_photo, flag",
    "order": 64
  }, {
    "ligatures": "attach_file",
    "order": 65
  }, {
    "ligatures": "attach_money",
    "order": 66
  }, {
    "ligatures": "attachment",
    "order": 67
  }, {
    "ligatures": "audiotrack",
    "order": 68
  }, {
    "ligatures": "autorenew",
    "order": 69
  }, {
    "ligatures": "av_timer",
    "order": 70
  }, {
    "ligatures": "backspace",
    "order": 71
  }, {
    "ligatures": "backup, cloud_upload",
    "order": 72
  }, {
    "ligatures": "battery_alert",
    "order": 73
  }, {
    "ligatures": "battery_charging_full",
    "order": 74
  }, {
    "ligatures": "battery_full, battery_std",
    "order": 75
  }, {
    "ligatures": "battery_unknown",
    "order": 76
  }, {
    "ligatures": "beach_access",
    "order": 77
  }, {
    "ligatures": "beenhere",
    "order": 78
  }, {
    "ligatures": "block",
    "order": 79
  }, {
    "ligatures": "bluetooth",
    "order": 80
  }, {
    "ligatures": "bluetooth_audio, bluetooth_searching",
    "order": 81
  }, {
    "ligatures": "bluetooth_connected",
    "order": 82
  }, {
    "ligatures": "bluetooth_disabled",
    "order": 83
  }, {
    "ligatures": "blur_circular",
    "order": 84
  }, {
    "ligatures": "blur_linear",
    "order": 85
  }, {
    "ligatures": "blur_off",
    "order": 86
  }, {
    "ligatures": "blur_on",
    "order": 87
  }, {
    "ligatures": "book, class",
    "order": 88
  }, {
    "ligatures": "bookmark, turned_in",
    "order": 89
  }, {
    "ligatures": "bookmark_border, turned_in_not",
    "order": 90
  }, {
    "ligatures": "border_all",
    "order": 91
  }, {
    "ligatures": "border_bottom",
    "order": 92
  }, {
    "ligatures": "border_clear",
    "order": 93
  }, {
    "ligatures": "border_color",
    "order": 94
  }, {
    "ligatures": "border_horizontal",
    "order": 95
  }, {
    "ligatures": "border_inner",
    "order": 96
  }, {
    "ligatures": "border_left",
    "order": 97
  }, {
    "ligatures": "border_outer",
    "order": 98
  }, {
    "ligatures": "border_right",
    "order": 99
  }, {
    "ligatures": "border_style",
    "order": 100
  }, {
    "ligatures": "border_top",
    "order": 101
  }, {
    "ligatures": "border_vertical",
    "order": 102
  }, {
    "ligatures": "branding_watermark",
    "order": 103
  }, {
    "ligatures": "brightness_1",
    "order": 104
  }, {
    "ligatures": "brightness_2",
    "order": 105
  }, {
    "ligatures": "brightness_3",
    "order": 106
  }, {
    "ligatures": "brightness_4",
    "order": 107
  }, {
    "ligatures": "brightness_5, brightness_low",
    "order": 108
  }, {
    "ligatures": "brightness_6, brightness_medium",
    "order": 109
  }, {
    "ligatures": "brightness_7, brightness_high",
    "order": 110
  }, {
    "ligatures": "brightness_auto",
    "order": 111
  }, {
    "ligatures": "broken_image",
    "order": 112
  }, {
    "ligatures": "brush",
    "order": 113
  }, {
    "ligatures": "bubble_chart",
    "order": 114
  }, {
    "ligatures": "bug_report",
    "order": 115
  }, {
    "ligatures": "build",
    "order": 116
  }, {
    "ligatures": "burst_mode",
    "order": 117
  }, {
    "ligatures": "business, domain",
    "order": 118
  }, {
    "ligatures": "business_center",
    "order": 119
  }, {
    "ligatures": "cached",
    "order": 120
  }, {
    "ligatures": "cake",
    "order": 121
  }, {
    "ligatures": "call, local_phone, phone",
    "order": 122
  }, {
    "ligatures": "call_end",
    "order": 123
  }, {
    "ligatures": "call_made",
    "order": 124
  }, {
    "ligatures": "call_merge, merge_type",
    "order": 125
  }, {
    "ligatures": "call_missed",
    "order": 126
  }, {
    "ligatures": "call_missed_outgoing",
    "order": 127
  }, {
    "ligatures": "call_received",
    "order": 128
  }, {
    "ligatures": "call_split",
    "order": 129
  }, {
    "ligatures": "call_to_action",
    "order": 130
  }, {
    "ligatures": "camera",
    "order": 131
  }, {
    "ligatures": "camera_alt, local_see, photo_camera",
    "order": 132
  }, {
    "ligatures": "camera_enhance",
    "order": 133
  }, {
    "ligatures": "camera_front",
    "order": 134
  }, {
    "ligatures": "camera_rear",
    "order": 135
  }, {
    "ligatures": "camera_roll",
    "order": 136
  }, {
    "ligatures": "cancel",
    "order": 137
  }, {
    "ligatures": "card_giftcard, redeem",
    "order": 138
  }, {
    "ligatures": "card_membership",
    "order": 139
  }, {
    "ligatures": "card_travel",
    "order": 140
  }, {
    "ligatures": "casino",
    "order": 141
  }, {
    "ligatures": "cast",
    "order": 142
  }, {
    "ligatures": "cast_connected",
    "order": 143
  }, {
    "ligatures": "center_focus_strong",
    "order": 144
  }, {
    "ligatures": "center_focus_weak",
    "order": 145
  }, {
    "ligatures": "change_history",
    "order": 146
  }, {
    "ligatures": "chat",
    "order": 147
  }, {
    "ligatures": "chat_bubble",
    "order": 148
  }, {
    "ligatures": "chat_bubble_outline",
    "order": 149
  }, {
    "ligatures": "check",
    "order": 150
  }, {
    "ligatures": "check_box",
    "order": 151
  }, {
    "ligatures": "check_box_outline_blank",
    "order": 152
  }, {
    "ligatures": "check_circle",
    "order": 153
  }, {
    "ligatures": "chevron_left, navigate_before",
    "order": 154
  }, {
    "ligatures": "chevron_right, navigate_next",
    "order": 155
  }, {
    "ligatures": "child_care",
    "order": 156
  }, {
    "ligatures": "child_friendly",
    "order": 157
  }, {
    "ligatures": "chrome_reader_mode",
    "order": 158
  }, {
    "ligatures": "clear, close",
    "order": 159
  }, {
    "ligatures": "clear_all",
    "order": 160
  }, {
    "ligatures": "closed_caption",
    "order": 161
  }, {
    "ligatures": "cloud, wb_cloudy",
    "order": 162
  }, {
    "ligatures": "cloud_circle",
    "order": 163
  }, {
    "ligatures": "cloud_done",
    "order": 164
  }, {
    "ligatures": "cloud_download",
    "order": 165
  }, {
    "ligatures": "cloud_off",
    "order": 166
  }, {
    "ligatures": "cloud_queue",
    "order": 167
  }, {
    "ligatures": "code",
    "order": 168
  }, {
    "ligatures": "collections, photo_library",
    "order": 169
  }, {
    "ligatures": "collections_bookmark",
    "order": 170
  }, {
    "ligatures": "color_lens, palette",
    "order": 171
  }, {
    "ligatures": "colorize",
    "order": 172
  }, {
    "ligatures": "comment",
    "order": 173
  }, {
    "ligatures": "compare",
    "order": 174
  }, {
    "ligatures": "compare_arrows",
    "order": 175
  }, {
    "ligatures": "computer, laptop",
    "order": 176
  }, {
    "ligatures": "confirmation_number",
    "order": 177
  }, {
    "ligatures": "contact_mail",
    "order": 178
  }, {
    "ligatures": "contact_phone",
    "order": 179
  }, {
    "ligatures": "contacts",
    "order": 180
  }, {
    "ligatures": "content_copy",
    "order": 181
  }, {
    "ligatures": "content_cut",
    "order": 182
  }, {
    "ligatures": "content_paste",
    "order": 183
  }, {
    "ligatures": "control_point_duplicate",
    "order": 184
  }, {
    "ligatures": "copyright",
    "order": 185
  }, {
    "ligatures": "create, edit, mode_edit",
    "order": 186
  }, {
    "ligatures": "create_new_folder",
    "order": 187
  }, {
    "ligatures": "credit_card, payment",
    "order": 188
  }, {
    "ligatures": "crop",
    "order": 189
  }, {
    "ligatures": "crop_16_9",
    "order": 190
  }, {
    "ligatures": "crop_3_2",
    "order": 191
  }, {
    "ligatures": "crop_5_4, crop_landscape",
    "order": 192
  }, {
    "ligatures": "crop_7_5",
    "order": 193
  }, {
    "ligatures": "crop_din",
    "order": 194
  }, {
    "ligatures": "crop_free",
    "order": 195
  }, {
    "ligatures": "crop_original",
    "order": 196
  }, {
    "ligatures": "crop_portrait",
    "order": 197
  }, {
    "ligatures": "crop_rotate",
    "order": 198
  }, {
    "ligatures": "crop_square",
    "order": 199
  }, {
    "ligatures": "dashboard",
    "order": 200
  }, {
    "ligatures": "data_usage",
    "order": 201
  }, {
    "ligatures": "date_range",
    "order": 202
  }, {
    "ligatures": "dehaze",
    "order": 203
  }, {
    "ligatures": "delete",
    "order": 204
  }, {
    "ligatures": "delete_forever",
    "order": 205
  }, {
    "ligatures": "delete_sweep",
    "order": 206
  }, {
    "ligatures": "description",
    "order": 207
  }, {
    "ligatures": "desktop_mac",
    "order": 208
  }, {
    "ligatures": "desktop_windows",
    "order": 209
  }, {
    "ligatures": "details",
    "order": 210
  }, {
    "ligatures": "developer_board",
    "order": 211
  }, {
    "ligatures": "developer_mode",
    "order": 212
  }, {
    "ligatures": "device_hub",
    "order": 213
  }, {
    "ligatures": "devices, phonelink",
    "order": 214
  }, {
    "ligatures": "devices_other",
    "order": 215
  }, {
    "ligatures": "dialer_sip",
    "order": 216
  }, {
    "ligatures": "dialpad",
    "order": 217
  }, {
    "ligatures": "directions",
    "order": 218
  }, {
    "ligatures": "directions_bike",
    "order": 219
  }, {
    "ligatures": "directions_boat",
    "order": 220
  }, {
    "ligatures": "directions_bus",
    "order": 221
  }, {
    "ligatures": "directions_car",
    "order": 222
  }, {
    "ligatures": "directions_railway",
    "order": 223
  }, {
    "ligatures": "directions_run",
    "order": 224
  }, {
    "ligatures": "directions_subway, directions_transit",
    "order": 225
  }, {
    "ligatures": "directions_walk",
    "order": 226
  }, {
    "ligatures": "disc_full",
    "order": 227
  }, {
    "ligatures": "dns",
    "order": 228
  }, {
    "ligatures": "do_not_disturb, not_interested",
    "order": 229
  }, {
    "ligatures": "do_not_disturb_alt",
    "order": 230
  }, {
    "ligatures": "do_not_disturb_off",
    "order": 231
  }, {
    "ligatures": "do_not_disturb_on, remove_circle",
    "order": 232
  }, {
    "ligatures": "dock",
    "order": 233
  }, {
    "ligatures": "done",
    "order": 234
  }, {
    "ligatures": "done_all",
    "order": 235
  }, {
    "ligatures": "donut_large",
    "order": 236
  }, {
    "ligatures": "donut_small",
    "order": 237
  }, {
    "ligatures": "drafts",
    "order": 238
  }, {
    "ligatures": "drag_handle",
    "order": 239
  }, {
    "ligatures": "drive_eta, time_to_leave",
    "order": 240
  }, {
    "ligatures": "dvr",
    "order": 241
  }, {
    "ligatures": "edit_location",
    "order": 242
  }, {
    "ligatures": "eject",
    "order": 243
  }, {
    "ligatures": "email, local_post_office, mail, markunread",
    "order": 244
  }, {
    "ligatures": "enhanced_encryption",
    "order": 245
  }, {
    "ligatures": "equalizer",
    "order": 246
  }, {
    "ligatures": "error",
    "order": 247
  }, {
    "ligatures": "error_outline",
    "order": 248
  }, {
    "ligatures": "euro_symbol",
    "order": 249
  }, {
    "ligatures": "ev_station",
    "order": 250
  }, {
    "ligatures": "event, insert_invitation",
    "order": 251
  }, {
    "ligatures": "event_available",
    "order": 252
  }, {
    "ligatures": "event_busy",
    "order": 253
  }, {
    "ligatures": "event_note",
    "order": 254
  }, {
    "ligatures": "event_seat",
    "order": 255
  }, {
    "ligatures": "exit_to_app",
    "order": 256
  }, {
    "ligatures": "expand_less",
    "order": 257
  }, {
    "ligatures": "expand_more",
    "order": 258
  }, {
    "ligatures": "explicit",
    "order": 259
  }, {
    "ligatures": "explore",
    "order": 260
  }, {
    "ligatures": "exposure",
    "order": 261
  }, {
    "ligatures": "exposure_neg_1",
    "order": 262
  }, {
    "ligatures": "exposure_neg_2",
    "order": 263
  }, {
    "ligatures": "exposure_plus_1",
    "order": 264
  }, {
    "ligatures": "exposure_plus_2",
    "order": 265
  }, {
    "ligatures": "exposure_zero",
    "order": 266
  }, {
    "ligatures": "extension",
    "order": 267
  }, {
    "ligatures": "face",
    "order": 268
  }, {
    "ligatures": "fast_forward",
    "order": 269
  }, {
    "ligatures": "fast_rewind",
    "order": 270
  }, {
    "ligatures": "favorite",
    "order": 271
  }, {
    "ligatures": "favorite_border",
    "order": 272
  }, {
    "ligatures": "featured_play_list",
    "order": 273
  }, {
    "ligatures": "featured_video",
    "order": 274
  }, {
    "ligatures": "feedback, sms_failed",
    "order": 275
  }, {
    "ligatures": "fiber_dvr",
    "order": 276
  }, {
    "ligatures": "fiber_manual_record",
    "order": 277
  }, {
    "ligatures": "fiber_new",
    "order": 278
  }, {
    "ligatures": "fiber_pin",
    "order": 279
  }, {
    "ligatures": "fiber_smart_record",
    "order": 280
  }, {
    "ligatures": "file_download, get_app",
    "order": 281
  }, {
    "ligatures": "file_upload",
    "order": 282
  }, {
    "ligatures": "filter",
    "order": 283
  }, {
    "ligatures": "filter_1",
    "order": 284
  }, {
    "ligatures": "filter_2",
    "order": 285
  }, {
    "ligatures": "filter_3",
    "order": 286
  }, {
    "ligatures": "filter_4",
    "order": 287
  }, {
    "ligatures": "filter_5",
    "order": 288
  }, {
    "ligatures": "filter_6",
    "order": 289
  }, {
    "ligatures": "filter_7",
    "order": 290
  }, {
    "ligatures": "filter_8",
    "order": 291
  }, {
    "ligatures": "filter_9",
    "order": 292
  }, {
    "ligatures": "filter_9_plus",
    "order": 293
  }, {
    "ligatures": "filter_b_and_w",
    "order": 294
  }, {
    "ligatures": "filter_center_focus",
    "order": 295
  }, {
    "ligatures": "filter_drama",
    "order": 296
  }, {
    "ligatures": "filter_frames",
    "order": 297
  }, {
    "ligatures": "filter_hdr, landscape, terrain",
    "order": 298
  }, {
    "ligatures": "filter_list",
    "order": 299
  }, {
    "ligatures": "filter_none",
    "order": 300
  }, {
    "ligatures": "filter_tilt_shift",
    "order": 301
  }, {
    "ligatures": "filter_vintage",
    "order": 302
  }, {
    "ligatures": "find_in_page",
    "order": 303
  }, {
    "ligatures": "find_replace",
    "order": 304
  }, {
    "ligatures": "fingerprint",
    "order": 305
  }, {
    "ligatures": "first_page",
    "order": 306
  }, {
    "ligatures": "fitness_center",
    "order": 307
  }, {
    "ligatures": "flare",
    "order": 308
  }, {
    "ligatures": "flash_auto",
    "order": 309
  }, {
    "ligatures": "flash_off",
    "order": 310
  }, {
    "ligatures": "flash_on",
    "order": 311
  }, {
    "ligatures": "flight_land",
    "order": 312
  }, {
    "ligatures": "flight_takeoff",
    "order": 313
  }, {
    "ligatures": "flip",
    "order": 314
  }, {
    "ligatures": "flip_to_back",
    "order": 315
  }, {
    "ligatures": "flip_to_front",
    "order": 316
  }, {
    "ligatures": "folder",
    "order": 317
  }, {
    "ligatures": "folder_open",
    "order": 318
  }, {
    "ligatures": "folder_shared",
    "order": 319
  }, {
    "ligatures": "folder_special",
    "order": 320
  }, {
    "ligatures": "font_download",
    "order": 321
  }, {
    "ligatures": "format_align_center",
    "order": 322
  }, {
    "ligatures": "format_align_justify",
    "order": 323
  }, {
    "ligatures": "format_align_left",
    "order": 324
  }, {
    "ligatures": "format_align_right",
    "order": 325
  }, {
    "ligatures": "format_bold",
    "order": 326
  }, {
    "ligatures": "format_clear",
    "order": 327
  }, {
    "ligatures": "format_color_fill",
    "order": 328
  }, {
    "ligatures": "format_color_reset",
    "order": 329
  }, {
    "ligatures": "format_color_text",
    "order": 330
  }, {
    "ligatures": "format_indent_decrease",
    "order": 331
  }, {
    "ligatures": "format_indent_increase",
    "order": 332
  }, {
    "ligatures": "format_italic",
    "order": 333
  }, {
    "ligatures": "format_line_spacing",
    "order": 334
  }, {
    "ligatures": "format_list_bulleted",
    "order": 335
  }, {
    "ligatures": "format_list_numbered",
    "order": 336
  }, {
    "ligatures": "format_paint",
    "order": 337
  }, {
    "ligatures": "format_quote",
    "order": 338
  }, {
    "ligatures": "format_shapes",
    "order": 339
  }, {
    "ligatures": "format_size",
    "order": 340
  }, {
    "ligatures": "format_strikethrough",
    "order": 341
  }, {
    "ligatures": "format_textdirection_l_to_r",
    "order": 342
  }, {
    "ligatures": "format_textdirection_r_to_l",
    "order": 343
  }, {
    "ligatures": "format_underlined",
    "order": 344
  }, {
    "ligatures": "forum, question_answer",
    "order": 345
  }, {
    "ligatures": "forward",
    "order": 346
  }, {
    "ligatures": "forward_10",
    "order": 347
  }, {
    "ligatures": "forward_30",
    "order": 348
  }, {
    "ligatures": "forward_5",
    "order": 349
  }, {
    "ligatures": "free_breakfast",
    "order": 350
  }, {
    "ligatures": "fullscreen",
    "order": 351
  }, {
    "ligatures": "fullscreen_exit",
    "order": 352
  }, {
    "ligatures": "functions",
    "order": 353
  }, {
    "ligatures": "g_translate",
    "order": 354
  }, {
    "ligatures": "gamepad, games",
    "order": 355
  }, {
    "ligatures": "gavel",
    "order": 356
  }, {
    "ligatures": "gesture",
    "order": 357
  }, {
    "ligatures": "gif",
    "order": 358
  }, {
    "ligatures": "goat",
    "order": 359
  }, {
    "ligatures": "golf_course",
    "order": 360
  }, {
    "ligatures": "gps_fixed, my_location",
    "order": 361
  }, {
    "ligatures": "gps_not_fixed, location_searching",
    "order": 362
  }, {
    "ligatures": "gps_off, location_disabled",
    "order": 363
  }, {
    "ligatures": "grade, star",
    "order": 364
  }, {
    "ligatures": "gradient",
    "order": 365
  }, {
    "ligatures": "grain",
    "order": 366
  }, {
    "ligatures": "graphic_eq",
    "order": 367
  }, {
    "ligatures": "grid_off",
    "order": 368
  }, {
    "ligatures": "grid_on",
    "order": 369
  }, {
    "ligatures": "group, people",
    "order": 370
  }, {
    "ligatures": "group_add",
    "order": 371
  }, {
    "ligatures": "group_work",
    "order": 372
  }, {
    "ligatures": "hd",
    "order": 373
  }, {
    "ligatures": "hdr_off",
    "order": 374
  }, {
    "ligatures": "hdr_on",
    "order": 375
  }, {
    "ligatures": "hdr_strong",
    "order": 376
  }, {
    "ligatures": "hdr_weak",
    "order": 377
  }, {
    "ligatures": "headset",
    "order": 378
  }, {
    "ligatures": "headset_mic",
    "order": 379
  }, {
    "ligatures": "healing",
    "order": 380
  }, {
    "ligatures": "hearing",
    "order": 381
  }, {
    "ligatures": "help",
    "order": 382
  }, {
    "ligatures": "help_outline",
    "order": 383
  }, {
    "ligatures": "high_quality",
    "order": 384
  }, {
    "ligatures": "highlight",
    "order": 385
  }, {
    "ligatures": "highlight_off",
    "order": 386
  }, {
    "ligatures": "history, restore",
    "order": 387
  }, {
    "ligatures": "home",
    "order": 388
  }, {
    "ligatures": "hot_tub",
    "order": 389
  }, {
    "ligatures": "hotel, local_hotel",
    "order": 390
  }, {
    "ligatures": "hourglass_empty",
    "order": 391
  }, {
    "ligatures": "hourglass_full",
    "order": 392
  }, {
    "ligatures": "http",
    "order": 393
  }, {
    "ligatures": "https, lock",
    "order": 394
  }, {
    "ligatures": "image, insert_photo, photo",
    "order": 395
  }, {
    "ligatures": "image_aspect_ratio",
    "order": 396
  }, {
    "ligatures": "import_contacts",
    "order": 397
  }, {
    "ligatures": "import_export",
    "order": 398
  }, {
    "ligatures": "important_devices",
    "order": 399
  }, {
    "ligatures": "inbox",
    "order": 400
  }, {
    "ligatures": "indeterminate_check_box",
    "order": 401
  }, {
    "ligatures": "info",
    "order": 402
  }, {
    "ligatures": "info_outline",
    "order": 403
  }, {
    "ligatures": "input",
    "order": 404
  }, {
    "ligatures": "insert_comment",
    "order": 405
  }, {
    "ligatures": "insert_drive_file",
    "order": 406
  }, {
    "ligatures": "insert_emoticon, mood, tag_faces",
    "order": 407
  }, {
    "ligatures": "insert_link, link",
    "order": 408
  }, {
    "ligatures": "invert_colors",
    "order": 409
  }, {
    "ligatures": "invert_colors_off",
    "order": 410
  }, {
    "ligatures": "iso",
    "order": 411
  }, {
    "ligatures": "keyboard",
    "order": 412
  }, {
    "ligatures": "keyboard_arrow_down",
    "order": 413
  }, {
    "ligatures": "keyboard_arrow_left",
    "order": 414
  }, {
    "ligatures": "keyboard_arrow_right",
    "order": 415
  }, {
    "ligatures": "keyboard_arrow_up",
    "order": 416
  }, {
    "ligatures": "keyboard_backspace",
    "order": 417
  }, {
    "ligatures": "keyboard_capslock",
    "order": 418
  }, {
    "ligatures": "keyboard_hide",
    "order": 419
  }, {
    "ligatures": "keyboard_return",
    "order": 420
  }, {
    "ligatures": "keyboard_tab",
    "order": 421
  }, {
    "ligatures": "keyboard_voice",
    "order": 422
  }, {
    "ligatures": "kitchen",
    "order": 423
  }, {
    "ligatures": "label",
    "order": 424
  }, {
    "ligatures": "label_outline",
    "order": 425
  }, {
    "ligatures": "language",
    "order": 426
  }, {
    "ligatures": "laptop_chromebook",
    "order": 427
  }, {
    "ligatures": "laptop_mac",
    "order": 428
  }, {
    "ligatures": "laptop_windows",
    "order": 429
  }, {
    "ligatures": "last_page",
    "order": 430
  }, {
    "ligatures": "launch, open_in_new",
    "order": 431
  }, {
    "ligatures": "layers",
    "order": 432
  }, {
    "ligatures": "layers_clear",
    "order": 433
  }, {
    "ligatures": "leak_add",
    "order": 434
  }, {
    "ligatures": "leak_remove",
    "order": 435
  }, {
    "ligatures": "lens",
    "order": 436
  }, {
    "ligatures": "library_books",
    "order": 437
  }, {
    "ligatures": "library_music",
    "order": 438
  }, {
    "ligatures": "lightbulb_outline",
    "order": 439
  }, {
    "ligatures": "line_style",
    "order": 440
  }, {
    "ligatures": "line_weight",
    "order": 441
  }, {
    "ligatures": "linear_scale",
    "order": 442
  }, {
    "ligatures": "linked_camera",
    "order": 443
  }, {
    "ligatures": "list",
    "order": 444
  }, {
    "ligatures": "live_help",
    "order": 445
  }, {
    "ligatures": "live_tv",
    "order": 446
  }, {
    "ligatures": "local_activity, local_play",
    "order": 447
  }, {
    "ligatures": "local_airport",
    "order": 448
  }, {
    "ligatures": "local_atm",
    "order": 449
  }, {
    "ligatures": "local_bar",
    "order": 450
  }, {
    "ligatures": "local_cafe",
    "order": 451
  }, {
    "ligatures": "local_car_wash",
    "order": 452
  }, {
    "ligatures": "local_convenience_store",
    "order": 453
  }, {
    "ligatures": "local_dining, restaurant_menu",
    "order": 454
  }, {
    "ligatures": "local_drink",
    "order": 455
  }, {
    "ligatures": "local_florist",
    "order": 456
  }, {
    "ligatures": "local_gas_station",
    "order": 457
  }, {
    "ligatures": "local_grocery_store, shopping_cart",
    "order": 458
  }, {
    "ligatures": "local_hospital",
    "order": 459
  }, {
    "ligatures": "local_laundry_service",
    "order": 460
  }, {
    "ligatures": "local_library",
    "order": 461
  }, {
    "ligatures": "local_mall",
    "order": 462
  }, {
    "ligatures": "local_movies, theaters",
    "order": 463
  }, {
    "ligatures": "local_offer",
    "order": 464
  }, {
    "ligatures": "local_parking",
    "order": 465
  }, {
    "ligatures": "local_pharmacy",
    "order": 466
  }, {
    "ligatures": "local_pizza",
    "order": 467
  }, {
    "ligatures": "local_printshop, print",
    "order": 468
  }, {
    "ligatures": "local_shipping",
    "order": 469
  }, {
    "ligatures": "local_taxi",
    "order": 470
  }, {
    "ligatures": "location_city",
    "order": 471
  }, {
    "ligatures": "location_off",
    "order": 472
  }, {
    "ligatures": "location_on, place, room",
    "order": 473
  }, {
    "ligatures": "lock_open",
    "order": 474
  }, {
    "ligatures": "lock_outline",
    "order": 475
  }, {
    "ligatures": "looks",
    "order": 476
  }, {
    "ligatures": "looks_3",
    "order": 477
  }, {
    "ligatures": "looks_4",
    "order": 478
  }, {
    "ligatures": "looks_5",
    "order": 479
  }, {
    "ligatures": "looks_6",
    "order": 480
  }, {
    "ligatures": "looks_one",
    "order": 481
  }, {
    "ligatures": "looks_two",
    "order": 482
  }, {
    "ligatures": "loop, sync",
    "order": 483
  }, {
    "ligatures": "loupe",
    "order": 484
  }, {
    "ligatures": "low_priority",
    "order": 485
  }, {
    "ligatures": "loyalty",
    "order": 486
  }, {
    "ligatures": "mail_outline",
    "order": 487
  }, {
    "ligatures": "map",
    "order": 488
  }, {
    "ligatures": "markunread_mailbox",
    "order": 489
  }, {
    "ligatures": "memory",
    "order": 490
  }, {
    "ligatures": "menu",
    "order": 491
  }, {
    "ligatures": "message",
    "order": 492
  }, {
    "ligatures": "mic",
    "order": 493
  }, {
    "ligatures": "mic_none",
    "order": 494
  }, {
    "ligatures": "mic_off",
    "order": 495
  }, {
    "ligatures": "mms",
    "order": 496
  }, {
    "ligatures": "mode_comment",
    "order": 497
  }, {
    "ligatures": "monetization_on",
    "order": 498
  }, {
    "ligatures": "money_off",
    "order": 499
  }, {
    "ligatures": "monochrome_photos",
    "order": 500
  }, {
    "ligatures": "mood_bad",
    "order": 501
  }, {
    "ligatures": "more",
    "order": 502
  }, {
    "ligatures": "more_horiz",
    "order": 503
  }, {
    "ligatures": "more_vert",
    "order": 504
  }, {
    "ligatures": "motorcycle",
    "order": 505
  }, {
    "ligatures": "mouse",
    "order": 506
  }, {
    "ligatures": "move_to_inbox",
    "order": 507
  }, {
    "ligatures": "movie, movie_creation",
    "order": 508
  }, {
    "ligatures": "movie_filter",
    "order": 509
  }, {
    "ligatures": "multiline_chart",
    "order": 510
  }, {
    "ligatures": "music_note",
    "order": 511
  }, {
    "ligatures": "music_video",
    "order": 512
  }, {
    "ligatures": "nature",
    "order": 513
  }, {
    "ligatures": "nature_people",
    "order": 514
  }, {
    "ligatures": "navigation",
    "order": 515
  }, {
    "ligatures": "near_me",
    "order": 516
  }, {
    "ligatures": "network_cell",
    "order": 517
  }, {
    "ligatures": "network_check",
    "order": 518
  }, {
    "ligatures": "network_locked",
    "order": 519
  }, {
    "ligatures": "network_wifi",
    "order": 520
  }, {
    "ligatures": "new_releases",
    "order": 521
  }, {
    "ligatures": "next_week",
    "order": 522
  }, {
    "ligatures": "nfc",
    "order": 523
  }, {
    "ligatures": "no_encryption",
    "order": 524
  }, {
    "ligatures": "no_sim, signal_cellular_no_sim",
    "order": 525
  }, {
    "ligatures": "note",
    "order": 526
  }, {
    "ligatures": "note_add",
    "order": 527
  }, {
    "ligatures": "notifications",
    "order": 528
  }, {
    "ligatures": "notifications_active",
    "order": 529
  }, {
    "ligatures": "notifications_none",
    "order": 530
  }, {
    "ligatures": "notifications_off",
    "order": 531
  }, {
    "ligatures": "notifications_paused",
    "order": 532
  }, {
    "ligatures": "offline_pin",
    "order": 533
  }, {
    "ligatures": "ondemand_video",
    "order": 534
  }, {
    "ligatures": "opacity",
    "order": 535
  }, {
    "ligatures": "open_in_browser",
    "order": 536
  }, {
    "ligatures": "open_with",
    "order": 537
  }, {
    "ligatures": "pages",
    "order": 538
  }, {
    "ligatures": "pageview",
    "order": 539
  }, {
    "ligatures": "pan_tool",
    "order": 540
  }, {
    "ligatures": "panorama",
    "order": 541
  }, {
    "ligatures": "panorama_fish_eye, radio_button_unchecked",
    "order": 542
  }, {
    "ligatures": "panorama_horizontal",
    "order": 543
  }, {
    "ligatures": "panorama_vertical",
    "order": 544
  }, {
    "ligatures": "panorama_wide_angle",
    "order": 545
  }, {
    "ligatures": "party_mode",
    "order": 546
  }, {
    "ligatures": "pause",
    "order": 547
  }, {
    "ligatures": "pause_circle_filled",
    "order": 548
  }, {
    "ligatures": "pause_circle_outline",
    "order": 549
  }, {
    "ligatures": "people_outline",
    "order": 550
  }, {
    "ligatures": "perm_camera_mic",
    "order": 551
  }, {
    "ligatures": "perm_contact_calendar",
    "order": 552
  }, {
    "ligatures": "perm_data_setting",
    "order": 553
  }, {
    "ligatures": "perm_device_information",
    "order": 554
  }, {
    "ligatures": "perm_identity, person_outline",
    "order": 555
  }, {
    "ligatures": "perm_media",
    "order": 556
  }, {
    "ligatures": "perm_phone_msg",
    "order": 557
  }, {
    "ligatures": "perm_scan_wifi",
    "order": 558
  }, {
    "ligatures": "person",
    "order": 559
  }, {
    "ligatures": "person_add",
    "order": 560
  }, {
    "ligatures": "person_pin",
    "order": 561
  }, {
    "ligatures": "person_pin_circle",
    "order": 562
  }, {
    "ligatures": "personal_video",
    "order": 563
  }, {
    "ligatures": "pets",
    "order": 564
  }, {
    "ligatures": "phone_android",
    "order": 565
  }, {
    "ligatures": "phone_bluetooth_speaker",
    "order": 566
  }, {
    "ligatures": "phone_forwarded",
    "order": 567
  }, {
    "ligatures": "phone_in_talk",
    "order": 568
  }, {
    "ligatures": "phone_iphone",
    "order": 569
  }, {
    "ligatures": "phone_locked",
    "order": 570
  }, {
    "ligatures": "phone_missed",
    "order": 571
  }, {
    "ligatures": "phone_paused",
    "order": 572
  }, {
    "ligatures": "phonelink_erase",
    "order": 573
  }, {
    "ligatures": "phonelink_lock",
    "order": 574
  }, {
    "ligatures": "phonelink_off",
    "order": 575
  }, {
    "ligatures": "phonelink_ring",
    "order": 576
  }, {
    "ligatures": "phonelink_setup",
    "order": 577
  }, {
    "ligatures": "photo_album",
    "order": 578
  }, {
    "ligatures": "photo_filter",
    "order": 579
  }, {
    "ligatures": "photo_size_select_actual",
    "order": 580
  }, {
    "ligatures": "photo_size_select_large",
    "order": 581
  }, {
    "ligatures": "photo_size_select_small",
    "order": 582
  }, {
    "ligatures": "picture_as_pdf",
    "order": 583
  }, {
    "ligatures": "picture_in_picture",
    "order": 584
  }, {
    "ligatures": "picture_in_picture_alt",
    "order": 585
  }, {
    "ligatures": "pie_chart",
    "order": 586
  }, {
    "ligatures": "pie_chart_outlined",
    "order": 587
  }, {
    "ligatures": "pin_drop",
    "order": 588
  }, {
    "ligatures": "play_arrow",
    "order": 589
  }, {
    "ligatures": "play_circle_filled",
    "order": 590
  }, {
    "ligatures": "play_circle_outline",
    "order": 591
  }, {
    "ligatures": "play_for_work",
    "order": 592
  }, {
    "ligatures": "playlist_add",
    "order": 593
  }, {
    "ligatures": "playlist_add_check",
    "order": 594
  }, {
    "ligatures": "playlist_play",
    "order": 595
  }, {
    "ligatures": "plus_one",
    "order": 596
  }, {
    "ligatures": "polymer",
    "order": 597
  }, {
    "ligatures": "pool",
    "order": 598
  }, {
    "ligatures": "portable_wifi_off",
    "order": 599
  }, {
    "ligatures": "portrait",
    "order": 600
  }, {
    "ligatures": "power",
    "order": 601
  }, {
    "ligatures": "power_input",
    "order": 602
  }, {
    "ligatures": "power_settings_new",
    "order": 603
  }, {
    "ligatures": "pregnant_woman",
    "order": 604
  }, {
    "ligatures": "present_to_all",
    "order": 605
  }, {
    "ligatures": "priority_high",
    "order": 606
  }, {
    "ligatures": "public",
    "order": 607
  }, {
    "ligatures": "publish",
    "order": 608
  }, {
    "ligatures": "queue_music",
    "order": 609
  }, {
    "ligatures": "queue_play_next",
    "order": 610
  }, {
    "ligatures": "radio",
    "order": 611
  }, {
    "ligatures": "radio_button_checked",
    "order": 612
  }, {
    "ligatures": "rate_review",
    "order": 613
  }, {
    "ligatures": "receipt",
    "order": 614
  }, {
    "ligatures": "recent_actors",
    "order": 615
  }, {
    "ligatures": "record_voice_over",
    "order": 616
  }, {
    "ligatures": "redo",
    "order": 617
  }, {
    "ligatures": "refresh",
    "order": 618
  }, {
    "ligatures": "remove",
    "order": 619
  }, {
    "ligatures": "remove_circle_outline",
    "order": 620
  }, {
    "ligatures": "remove_from_queue",
    "order": 621
  }, {
    "ligatures": "remove_red_eye, visibility",
    "order": 622
  }, {
    "ligatures": "remove_shopping_cart",
    "order": 623
  }, {
    "ligatures": "reorder",
    "order": 624
  }, {
    "ligatures": "repeat",
    "order": 625
  }, {
    "ligatures": "repeat_one",
    "order": 626
  }, {
    "ligatures": "replay",
    "order": 627
  }, {
    "ligatures": "replay_10",
    "order": 628
  }, {
    "ligatures": "replay_30",
    "order": 629
  }, {
    "ligatures": "replay_5",
    "order": 630
  }, {
    "ligatures": "reply",
    "order": 631
  }, {
    "ligatures": "reply_all",
    "order": 632
  }, {
    "ligatures": "report",
    "order": 633
  }, {
    "ligatures": "report_problem, warning",
    "order": 634
  }, {
    "ligatures": "restaurant",
    "order": 635
  }, {
    "ligatures": "restore_page",
    "order": 636
  }, {
    "ligatures": "ring_volume",
    "order": 637
  }, {
    "ligatures": "room_service",
    "order": 638
  }, {
    "ligatures": "rotate_90_degrees_ccw",
    "order": 639
  }, {
    "ligatures": "rotate_left",
    "order": 640
  }, {
    "ligatures": "rotate_right",
    "order": 641
  }, {
    "ligatures": "rounded_corner",
    "order": 642
  }, {
    "ligatures": "router",
    "order": 643
  }, {
    "ligatures": "rowing",
    "order": 644
  }, {
    "ligatures": "rss_feed",
    "order": 645
  }, {
    "ligatures": "rv_hookup",
    "order": 646
  }, {
    "ligatures": "satellite",
    "order": 647
  }, {
    "ligatures": "save",
    "order": 648
  }, {
    "ligatures": "scanner",
    "order": 649
  }, {
    "ligatures": "school",
    "order": 650
  }, {
    "ligatures": "screen_lock_landscape",
    "order": 651
  }, {
    "ligatures": "screen_lock_portrait",
    "order": 652
  }, {
    "ligatures": "screen_lock_rotation",
    "order": 653
  }, {
    "ligatures": "screen_rotation",
    "order": 654
  }, {
    "ligatures": "screen_share",
    "order": 655
  }, {
    "ligatures": "sd_card, sd_storage",
    "order": 656
  }, {
    "ligatures": "search",
    "order": 657
  }, {
    "ligatures": "security",
    "order": 658
  }, {
    "ligatures": "select_all",
    "order": 659
  }, {
    "ligatures": "send",
    "order": 660
  }, {
    "ligatures": "sentiment_dissatisfied",
    "order": 661
  }, {
    "ligatures": "sentiment_neutral",
    "order": 662
  }, {
    "ligatures": "sentiment_satisfied",
    "order": 663
  }, {
    "ligatures": "sentiment_very_dissatisfied",
    "order": 664
  }, {
    "ligatures": "sentiment_very_satisfied",
    "order": 665
  }, {
    "ligatures": "settings",
    "order": 666
  }, {
    "ligatures": "settings_applications",
    "order": 667
  }, {
    "ligatures": "settings_backup_restore",
    "order": 668
  }, {
    "ligatures": "settings_bluetooth",
    "order": 669
  }, {
    "ligatures": "settings_brightness",
    "order": 670
  }, {
    "ligatures": "settings_cell",
    "order": 671
  }, {
    "ligatures": "settings_ethernet",
    "order": 672
  }, {
    "ligatures": "settings_input_antenna",
    "order": 673
  }, {
    "ligatures": "settings_input_component, settings_input_composite",
    "order": 674
  }, {
    "ligatures": "settings_input_hdmi",
    "order": 675
  }, {
    "ligatures": "settings_input_svideo",
    "order": 676
  }, {
    "ligatures": "settings_overscan",
    "order": 677
  }, {
    "ligatures": "settings_phone",
    "order": 678
  }, {
    "ligatures": "settings_power",
    "order": 679
  }, {
    "ligatures": "settings_remote",
    "order": 680
  }, {
    "ligatures": "settings_system_daydream",
    "order": 681
  }, {
    "ligatures": "settings_voice",
    "order": 682
  }, {
    "ligatures": "share",
    "order": 683
  }, {
    "ligatures": "shop",
    "order": 684
  }, {
    "ligatures": "shop_two",
    "order": 685
  }, {
    "ligatures": "shopping_basket",
    "order": 686
  }, {
    "ligatures": "short_text",
    "order": 687
  }, {
    "ligatures": "show_chart",
    "order": 688
  }, {
    "ligatures": "shuffle",
    "order": 689
  }, {
    "ligatures": "signal_cellular_4_bar",
    "order": 690
  }, {
    "ligatures": "signal_cellular_connected_no_internet_4_bar",
    "order": 691
  }, {
    "ligatures": "signal_cellular_null",
    "order": 692
  }, {
    "ligatures": "signal_cellular_off",
    "order": 693
  }, {
    "ligatures": "signal_wifi_4_bar",
    "order": 694
  }, {
    "ligatures": "signal_wifi_4_bar_lock",
    "order": 695
  }, {
    "ligatures": "signal_wifi_off",
    "order": 696
  }, {
    "ligatures": "sim_card",
    "order": 697
  }, {
    "ligatures": "sim_card_alert",
    "order": 698
  }, {
    "ligatures": "skip_next",
    "order": 699
  }, {
    "ligatures": "skip_previous",
    "order": 700
  }, {
    "ligatures": "slideshow",
    "order": 701
  }, {
    "ligatures": "slow_motion_video",
    "order": 702
  }, {
    "ligatures": "smartphone, stay_current_portrait, stay_primary_portrait",
    "order": 703
  }, {
    "ligatures": "smoke_free",
    "order": 704
  }, {
    "ligatures": "smoking_rooms",
    "order": 705
  }, {
    "ligatures": "sms, textsms",
    "order": 706
  }, {
    "ligatures": "snooze",
    "order": 707
  }, {
    "ligatures": "sort",
    "order": 708
  }, {
    "ligatures": "sort_by_alpha",
    "order": 709
  }, {
    "ligatures": "spa",
    "order": 710
  }, {
    "ligatures": "space_bar",
    "order": 711
  }, {
    "ligatures": "speaker",
    "order": 712
  }, {
    "ligatures": "speaker_group",
    "order": 713
  }, {
    "ligatures": "speaker_notes",
    "order": 714
  }, {
    "ligatures": "speaker_notes_off",
    "order": 715
  }, {
    "ligatures": "speaker_phone",
    "order": 716
  }, {
    "ligatures": "spellcheck",
    "order": 717
  }, {
    "ligatures": "star_border",
    "order": 718
  }, {
    "ligatures": "star_half",
    "order": 719
  }, {
    "ligatures": "stars",
    "order": 720
  }, {
    "ligatures": "stay_current_landscape, stay_primary_landscape",
    "order": 721
  }, {
    "ligatures": "stop",
    "order": 722
  }, {
    "ligatures": "stop_screen_share",
    "order": 723
  }, {
    "ligatures": "storage",
    "order": 724
  }, {
    "ligatures": "store, store_mall_directory",
    "order": 725
  }, {
    "ligatures": "straighten",
    "order": 726
  }, {
    "ligatures": "streetview",
    "order": 727
  }, {
    "ligatures": "strikethrough_s",
    "order": 728
  }, {
    "ligatures": "style",
    "order": 729
  }, {
    "ligatures": "subdirectory_arrow_left",
    "order": 730
  }, {
    "ligatures": "subdirectory_arrow_right",
    "order": 731
  }, {
    "ligatures": "subject",
    "order": 732
  }, {
    "ligatures": "subscriptions",
    "order": 733
  }, {
    "ligatures": "subtitles",
    "order": 734
  }, {
    "ligatures": "subway",
    "order": 735
  }, {
    "ligatures": "supervisor_account",
    "order": 736
  }, {
    "ligatures": "surround_sound",
    "order": 737
  }, {
    "ligatures": "swap_calls",
    "order": 738
  }, {
    "ligatures": "swap_horiz",
    "order": 739
  }, {
    "ligatures": "swap_vert",
    "order": 740
  }, {
    "ligatures": "swap_vertical_circle",
    "order": 741
  }, {
    "ligatures": "switch_camera",
    "order": 742
  }, {
    "ligatures": "switch_video",
    "order": 743
  }, {
    "ligatures": "sync_disabled",
    "order": 744
  }, {
    "ligatures": "sync_problem",
    "order": 745
  }, {
    "ligatures": "system_update",
    "order": 746
  }, {
    "ligatures": "system_update_alt",
    "order": 747
  }, {
    "ligatures": "tab",
    "order": 748
  }, {
    "ligatures": "tab_unselected",
    "order": 749
  }, {
    "ligatures": "tablet",
    "order": 750
  }, {
    "ligatures": "tablet_android",
    "order": 751
  }, {
    "ligatures": "tablet_mac",
    "order": 752
  }, {
    "ligatures": "tap_and_play",
    "order": 753
  }, {
    "ligatures": "text_fields",
    "order": 754
  }, {
    "ligatures": "text_format",
    "order": 755
  }, {
    "ligatures": "texture",
    "order": 756
  }, {
    "ligatures": "thumb_down",
    "order": 757
  }, {
    "ligatures": "thumb_up",
    "order": 758
  }, {
    "ligatures": "thumbs_up_down",
    "order": 759
  }, {
    "ligatures": "timelapse",
    "order": 760
  }, {
    "ligatures": "timeline",
    "order": 761
  }, {
    "ligatures": "timer",
    "order": 762
  }, {
    "ligatures": "timer_10",
    "order": 763
  }, {
    "ligatures": "timer_3",
    "order": 764
  }, {
    "ligatures": "timer_off",
    "order": 765
  }, {
    "ligatures": "title",
    "order": 766
  }, {
    "ligatures": "toc",
    "order": 767
  }, {
    "ligatures": "today",
    "order": 768
  }, {
    "ligatures": "toll",
    "order": 769
  }, {
    "ligatures": "tonality",
    "order": 770
  }, {
    "ligatures": "touch_app",
    "order": 771
  }, {
    "ligatures": "toys",
    "order": 772
  }, {
    "ligatures": "track_changes",
    "order": 773
  }, {
    "ligatures": "traffic",
    "order": 774
  }, {
    "ligatures": "train",
    "order": 775
  }, {
    "ligatures": "tram",
    "order": 776
  }, {
    "ligatures": "transfer_within_a_station",
    "order": 777
  }, {
    "ligatures": "transform",
    "order": 778
  }, {
    "ligatures": "translate",
    "order": 779
  }, {
    "ligatures": "trending_down",
    "order": 780
  }, {
    "ligatures": "trending_flat",
    "order": 781
  }, {
    "ligatures": "trending_up",
    "order": 782
  }, {
    "ligatures": "tune",
    "order": 783
  }, {
    "ligatures": "tv",
    "order": 784
  }, {
    "ligatures": "unarchive",
    "order": 785
  }, {
    "ligatures": "undo",
    "order": 786
  }, {
    "ligatures": "unfold_less",
    "order": 787
  }, {
    "ligatures": "unfold_more",
    "order": 788
  }, {
    "ligatures": "update",
    "order": 789
  }, {
    "ligatures": "usb",
    "order": 790
  }, {
    "ligatures": "verified_user",
    "order": 791
  }, {
    "ligatures": "vertical_align_bottom",
    "order": 792
  }, {
    "ligatures": "vertical_align_center",
    "order": 793
  }, {
    "ligatures": "vertical_align_top",
    "order": 794
  }, {
    "ligatures": "vibration",
    "order": 795
  }, {
    "ligatures": "video_call",
    "order": 796
  }, {
    "ligatures": "video_label",
    "order": 797
  }, {
    "ligatures": "video_library",
    "order": 798
  }, {
    "ligatures": "videocam",
    "order": 799
  }, {
    "ligatures": "videocam_off",
    "order": 800
  }, {
    "ligatures": "videogame_asset",
    "order": 801
  }, {
    "ligatures": "view_agenda",
    "order": 802
  }, {
    "ligatures": "view_array",
    "order": 803
  }, {
    "ligatures": "view_carousel",
    "order": 804
  }, {
    "ligatures": "view_column",
    "order": 805
  }, {
    "ligatures": "view_comfy",
    "order": 806
  }, {
    "ligatures": "view_compact",
    "order": 807
  }, {
    "ligatures": "view_day",
    "order": 808
  }, {
    "ligatures": "view_headline",
    "order": 809
  }, {
    "ligatures": "view_list",
    "order": 810
  }, {
    "ligatures": "view_module",
    "order": 811
  }, {
    "ligatures": "view_quilt",
    "order": 812
  }, {
    "ligatures": "view_stream",
    "order": 813
  }, {
    "ligatures": "view_week",
    "order": 814
  }, {
    "ligatures": "vignette",
    "order": 815
  }, {
    "ligatures": "visibility_off",
    "order": 816
  }, {
    "ligatures": "voice_chat",
    "order": 817
  }, {
    "ligatures": "voicemail",
    "order": 818
  }, {
    "ligatures": "volume_down",
    "order": 819
  }, {
    "ligatures": "volume_mute",
    "order": 820
  }, {
    "ligatures": "volume_off",
    "order": 821
  }, {
    "ligatures": "volume_up",
    "order": 822
  }, {
    "ligatures": "vpn_key",
    "order": 823
  }, {
    "ligatures": "vpn_lock",
    "order": 824
  }, {
    "ligatures": "wallpaper",
    "order": 825
  }, {
    "ligatures": "watch",
    "order": 826
  }, {
    "ligatures": "watch_later",
    "order": 827
  }, {
    "ligatures": "wb_auto",
    "order": 828
  }, {
    "ligatures": "wb_incandescent",
    "order": 829
  }, {
    "ligatures": "wb_iridescent",
    "order": 830
  }, {
    "ligatures": "wb_sunny",
    "order": 831
  }, {
    "ligatures": "wc",
    "order": 832
  }, {
    "ligatures": "web",
    "order": 833
  }, {
    "ligatures": "web_asset",
    "order": 834
  }, {
    "ligatures": "weekend",
    "order": 835
  }, {
    "ligatures": "whatshot",
    "order": 836
  }, {
    "ligatures": "widgets",
    "order": 837
  }, {
    "ligatures": "wifi",
    "order": 838
  }, {
    "ligatures": "wifi_lock",
    "order": 839
  }, {
    "ligatures": "wifi_tethering",
    "order": 840
  }, {
    "ligatures": "work",
    "order": 841
  }, {
    "ligatures": "wrap_text",
    "order": 842
  }, {
    "ligatures": "youtube_searched_for",
    "order": 843
  }, {
    "ligatures": "zoom_in",
    "order": 844
  }, {
    "ligatures": "zoom_out",
    "order": 845
  }, {
    "ligatures": "zoom_out_map",
    "order": 846
  }],
  "metadata": {
    "name": "Material Icons",
    "url": "https://www.google.com/design/icons/",
    "designerURL": "https://www.google.com/design",
    "designer": "Google",
    "licenseURL": "https://github.com/google/material-design-icons/blob/master/LICENSE",
    "license": "Apache License 2.0",
    "iconsHash": 689547153
  },
  "height": 1024,
  "prevSize": 24,
  "icons": [{
    "paths": ["M512 0c268 0 488 206 510 468h-64c-14-160-114-294-254-360l-58 56-162-162zM706 504c0-69.871-27.338-114-94-114h-40v246h38c51.287 0 80.544-27.904 92-68 4-14 4-30 4-48v-16zM612 342c76.364 0 121.865 38.664 144 94 8 20 10 44 10 68v16c0 52.811-15.142 91.142-42 118-26.824 26.824-61.104 44-114 44h-98v-340h100zM414 508c30.607 12.243 56 36.493 56 78 0 16-4 28-10 40s-12 24-22 32c-18.756 15.005-47.096 24-80 24-62.192 0-108-31.488-108-94h54c0 30.904 23.204 50 54 50 35.74 0 56-17.079 56-54 0-37.687-24.79-54-62-54h-32v-44h32c34.608 0 58-16.061 58-50 0-33.049-17.68-50-52-50-28.888 0-50 17.163-50 46h-56c0-29.787 15.103-49.103 30-64 19.854-15.883 41.797-26 76-26 51.295 0 80.772 19.544 98 54 6 12 8 24 8 40 0 36.376-24.671 59.335-50 72zM320 916l58-56 162 162-28 2c-268 0-488-208-510-470h64c16 160 114 296 254 362z"],
    "tags": ["3d_rotation"],
    "defaultCode": 59469,
    "grid": 24
  }, {
    "paths": ["M938 470v84h-178l138 138-60 62-198-200h-86v86l200 198-62 60-138-138v178h-84v-178l-138 138-62-60 200-198v-86h-86l-198 200-60-62 138-138h-178v-84h178l-138-138 60-62 198 200h86v-86l-200-198 62-60 138 138v-178h84v178l138-138 62 60-200 198v86h86l198-200 60 62-138 138h178z"],
    "tags": ["ac_unit"],
    "defaultCode": 60219,
    "grid": 24
  }, {
    "paths": ["M512 854c166 0 298-134 298-300s-132-298-298-298-298 132-298 298 132 300 298 300zM512 170c212 0 384 172 384 384s-172 384-384 384-384-172-384-384 172-384 384-384zM534 342v224l170 100-32 52-202-120v-256h64zM336 144l-196 164-54-64 196-164zM938 244l-54 66-196-166 54-64z"],
    "tags": ["alarm"],
    "defaultCode": 59477,
    "grid": 24
  }, {
    "paths": ["M512 854c166 0 298-134 298-300s-132-298-298-298-298 132-298 298 132 300 298 300zM512 170c214 0 384 170 384 384s-170 384-384 384-384-170-384-384 170-384 384-384zM534 342v226l170 102-34 52-200-124v-256h64zM338 146l-198 162-54-64 196-162zM938 244l-54 64-198-168 56-64z"],
    "tags": ["access_alarms"],
    "defaultCode": 57745,
    "grid": 24
  }, {
    "paths": ["M534 298v224l192 114-32 54-224-136v-256h64zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["schedule"],
    "defaultCode": 59573,
    "grid": 24
  }, {
    "paths": ["M896 384h-256v554h-86v-256h-84v256h-86v-554h-256v-86h768v86zM512 86c46 0 86 38 86 84s-40 86-86 86-86-40-86-86 40-84 86-84z"],
    "tags": ["accessibility"],
    "defaultCode": 59470,
    "grid": 24
  }, {
    "paths": ["M548 768h88c-20 98-106 170-210 170-118 0-212-94-212-212 0-104 72-190 170-210v88c-50 18-86 66-86 122 0 70 58 128 128 128 56 0 104-36 122-86zM426 388c0-59.978 66.716-113.020 128-78h2v2c10 4 18 10 26 18l56 62c42 46 106 78 172 78v84c-74 0-156-36-212-82v146h128c46 0 84 40 84 86v234h-84v-212h-214c-46 0-86-40-86-86v-252zM426 170c0-48 38-84 86-84s86 36 86 84-38 86-86 86-86-38-86-86z"],
    "tags": ["accessible"],
    "defaultCode": 59668,
    "grid": 24
  }, {
    "paths": ["M490 42l406 214v86h-810v-86zM682 426h128v300h-128v-300zM86 938v-128h810v128h-810zM426 426h128v300h-128v-300zM170 426h128v300h-128v-300z"],
    "tags": ["account_balance"],
    "defaultCode": 59471,
    "grid": 24
  }, {
    "paths": ["M682 576c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM512 682v-340h426v340h-426zM896 768v42c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h596c46 0 86 40 86 86v42h-384c-48 0-86 40-86 86v340c0 46 38 86 86 86h384z"],
    "tags": ["account_balance_wallet"],
    "defaultCode": 59472,
    "grid": 24
  }, {
    "paths": ["M256 726v42h512v-42c0-86-170-132-256-132s-256 46-256 132zM640 384c0-70-58-128-128-128s-128 58-128 128 58 128 128 128 128-58 128-128zM128 214c0-46 38-86 86-86h596c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596z"],
    "tags": ["account_box"],
    "defaultCode": 59473,
    "grid": 24
  }, {
    "paths": ["M512 820c106 0 200-56 256-138-2-84-172-132-256-132-86 0-254 48-256 132 56 82 150 138 256 138zM512 214c-70 0-128 58-128 128s58 128 128 128 128-58 128-128-58-128-128-128zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["account_circle"],
    "defaultCode": 59475,
    "grid": 24
  }, {
    "paths": ["M640 384c24 0 42-18 42-42s-18-44-42-44-42 20-42 44 18 42 42 42zM384 384c24 0 42-18 42-42s-18-44-42-44-42 20-42 44 18 42 42 42zM688 186c74 54 122 142 122 240v44h-596v-44c0-98 48-186 122-240l-90-90 36-34 98 98c40-20 84-32 132-32s92 12 132 32l98-98 36 34zM214 682v-170h596v170c0 166-132 300-298 300s-298-134-298-300z"],
    "tags": ["adb"],
    "defaultCode": 58894,
    "grid": 24
  }, {
    "paths": ["M810 554h-256v256h-84v-256h-256v-84h256v-256h84v256h256v84z"],
    "tags": ["add"],
    "defaultCode": 57669,
    "grid": 24
  }, {
    "paths": ["M418 598c0-76 60-138 136-138s138 62 138 138-62 136-138 136-136-60-136-136zM554 810c118 0 214-94 214-212s-96-214-214-214-212 96-212 214 94 212 212 212zM256 426v-128h128v-128h298l78 86h136c46 0 86 40 86 86v512c0 46-40 84-86 84h-682c-46 0-86-38-86-84v-428h128zM128 170v-128h86v128h128v86h-128v128h-86v-128h-128v-86h128z"],
    "tags": ["add_a_photo"],
    "defaultCode": 58425,
    "grid": 24
  }, {
    "paths": ["M554 384v128h128v86h-128v128h-84v-128h-128v-86h128v-128h84zM512 854c166 0 298-134 298-300s-132-298-298-298-298 132-298 298 132 300 298 300zM512 170c212 0 384 172 384 384s-172 384-384 384-384-172-384-384 172-384 384-384zM938 244l-54 66-196-166 54-64zM336 144l-196 164-54-64 196-164z"],
    "tags": ["alarm_add"],
    "defaultCode": 59478,
    "grid": 24
  }, {
    "paths": ["M682 556v-86h-128v-128h-84v128h-128v86h128v128h84v-128h128zM806 718l90 90v46h-768v-46l90-90v-248c0-138 96-256 226-286v-30c0-38 30-68 68-68s68 30 68 68v30c130 30 226 148 226 286v248zM428 896h168c0 46-38 86-84 86s-84-40-84-86z"],
    "tags": ["add_alert"],
    "defaultCode": 57347,
    "grid": 24
  }, {
    "paths": ["M726 554v-84h-172v-172h-84v172h-172v84h172v172h84v-172h172zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h596z"],
    "tags": ["add_box"],
    "defaultCode": 57670,
    "grid": 24
  }, {
    "paths": ["M726 554v-84h-172v-172h-84v172h-172v84h172v172h84v-172h172zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["add_circle"],
    "defaultCode": 57671,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM554 298v172h172v84h-172v172h-84v-172h-172v-84h172v-172h84z"],
    "tags": ["control_point"],
    "defaultCode": 58298,
    "grid": 24
  }, {
    "paths": ["M682 426v-84h-128v-128h-84v128h-128v84h128v128h84v-128h128zM512 86c164 0 298 134 298 298 0 224-298 554-298 554s-298-330-298-554c0-164 134-298 298-298z"],
    "tags": ["add_location"],
    "defaultCode": 58727,
    "grid": 24
  }, {
    "paths": ["M306 630c0 6 4 10 10 10h494v86h-512c-46 0-84-40-84-86 0-14 4-28 10-40l58-106-154-324h-86v-84h140c27.003 56.33 53.665 113.001 80 170 34.063 71.271 67.603 143.063 102 214h300c54.786-99.881 110.533-198.8 164-300l74 42-164 298c-14 26-42 44-74 44h-318l-38 70zM726 768c46 0 84 40 84 86s-38 84-84 84-86-38-86-84 40-86 86-86zM298 768c46 0 86 40 86 86s-40 84-86 84-84-38-84-84 38-86 84-86zM470 384v-128h-128v-86h128v-128h84v128h128v86h-128v128h-84z"],
    "tags": ["add_shopping_cart"],
    "defaultCode": 59476,
    "grid": 24
  }, {
    "paths": ["M810 470v-86h-170v-170h-86v170h-170v86h170v170h86v-170h170zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-512c-46 0-86-40-86-86v-512c0-46 40-84 86-84h512zM170 256v598h598v84h-598c-46 0-84-38-84-84v-598h84z"],
    "tags": ["queue"],
    "defaultCode": 57404,
    "grid": 24
  }, {
    "paths": ["M682 426v86h-128v128h-84v-128h-128v-86h128v-128h84v128h128zM896 726v-512h-768v512h768zM896 128c46 0 86 38 86 86l-2 512c0 46-38 84-84 84h-214v86h-340v-86h-214c-48 0-86-38-86-84v-512c0-48 38-86 86-86h768z"],
    "tags": ["add_to_queue"],
    "defaultCode": 57436,
    "grid": 24
  }, {
    "paths": ["M640 512c0 70-58 128-128 128s-128-58-128-128 58-128 128-128 128 58 128 128zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["adjust"],
    "defaultCode": 58270,
    "grid": 24
  }, {
    "paths": ["M304 516c-50 50-130 52-180 2s-52-130-2-180 130-52 180-2 52 130 2 180zM86 598h852v84h-256v86h-340v-86h-256v-84zM938 470v84h-554v-256h384c94 0 170 78 170 172z"],
    "tags": ["airline_seat_flat"],
    "defaultCode": 58928,
    "grid": 24
  }, {
    "paths": ["M312 436c-64 30-142 4-172-60s-4-142 60-172 142-4 172 60 4 142-60 172zM64 518l30-80 810 292-28 80-194-68v68h-340v-192zM950 610l-30 80-528-190 90-242 364 132c90 32 136 130 104 220z"],
    "tags": ["airline_seat_flat_angled"],
    "defaultCode": 58929,
    "grid": 24
  }, {
    "paths": ["M810 298c94 0 172 78 172 172v256h-940v-428h86v300h342v-300h340zM298 554c-70 0-128-58-128-128s58-128 128-128 128 58 128 128-58 128-128 128z"],
    "tags": ["airline_seat_individual_suite"],
    "defaultCode": 58930,
    "grid": 24
  }, {
    "paths": ["M974 736c18 32 2 72-30 88l-158 72-146-298h-298c-70 0-128-58-128-128v-342h256v256h150c32 0 62 18 76 48l144 298 48-22c32-14 70-2 86 28zM170 512c0 70 58 128 128 128h256v86h-256c-118 0-212-96-212-214v-384h84v384z"],
    "tags": ["airline_seat_legroom_extra"],
    "defaultCode": 58931,
    "grid": 24
  }, {
    "paths": ["M874 768c36 0 64 28 64 64s-28 64-64 64h-192v-298h-298c-70 0-128-58-128-128v-342h256v256h214c46 0 84 40 84 86v298h64zM214 512c0 70 58 128 128 128h256v86h-256c-118 0-214-96-214-214v-384h86v384z"],
    "tags": ["airline_seat_legroom_normal"],
    "defaultCode": 58932,
    "grid": 24
  }, {
    "paths": ["M214 512c0 70 58 128 128 128h170v86h-170c-118 0-214-96-214-214v-384h86v384zM852 820c8 40-22 76-62 76h-192v-128l42-170h-256c-70 0-128-58-128-128v-342h256v256h214c46 0 84 40 84 86l-84 298h60c32 0 60 22 66 52z"],
    "tags": ["airline_seat_legroom_reduced"],
    "defaultCode": 58933,
    "grid": 24
  }, {
    "paths": ["M692 640l246 192-64 64-162-128h-292c-62 0-114-44-126-104l-58-252c-8-52 26-102 78-112h2c30.359-4.337 56.628 4.102 74 18l70 54c54 42 130 68 200 54v92c-80 14-152-14-220-52l44 174h208zM682 810v86h-300c-106 0-196-76-212-180l-84-418h84l84 404c10 62 64 108 128 108h300zM228 240c-38-28-46-80-20-118s80-48 118-22c38 28 48 82 22 120-28 38-82 46-120 20z"],
    "tags": ["airline_seat_recline_extra"],
    "defaultCode": 58934,
    "grid": 24
  }, {
    "paths": ["M854 856l-62 62-150-150h-216c-70 0-128-58-128-128v-246c0-52 44-96 96-96h2c29.673 0 54.798 16.798 70 32l60 66c46 50 130 86 200 86v94c-82 0-176-44-236-94v158h148zM256 682c0 70 58 128 128 128h256v86h-256c-118 0-214-96-214-214v-384h86v384zM324 230c-34-34-34-86 0-120s86-34 120 0 34 86 0 120-86 34-120 0z"],
    "tags": ["airline_seat_recline_normal"],
    "defaultCode": 58935,
    "grid": 24
  }, {
    "paths": ["M896 682l-342-106v234l86 64v64l-150-42-148 42v-64l84-64v-234l-340 106v-84l340-214v-234c0-36 28-64 64-64s64 28 64 64v234l342 214v84z"],
    "tags": ["flight"],
    "defaultCode": 58681,
    "grid": 24
  }, {
    "paths": ["M128 224l54-54 672 672-54 54-246-244v158l86 64v64l-150-42-148 42v-64l84-64v-234l-340 106v-84l254-160zM554 384l342 214v84l-136-42-334-334v-156c0-36 28-64 64-64s64 28 64 64v234z"],
    "tags": ["airplanemode_inactive"],
    "defaultCode": 57748,
    "grid": 24
  }, {
    "paths": ["M896 128c46 0 86 40 86 86v512c0 46-40 84-86 84h-170v-84h170v-512h-768v512h170v84h-170c-46 0-86-38-86-84v-512c0-46 40-86 86-86h768zM256 938l256-256 256 256h-512z"],
    "tags": ["airplay"],
    "defaultCode": 57429,
    "grid": 24
  }, {
    "paths": ["M640 470h214l-172-172h-42v172zM746 746c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM554 470v-172h-170v172h170zM256 746c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM128 470h170v-172h-170v172zM726 214l256 256v212h-108c0 70-58 128-128 128s-128-58-128-128h-234c0 70-58 128-128 128s-128-58-128-128h-86v-384c0-48 40-84 86-84h598z"],
    "tags": ["airport_shuttle"],
    "defaultCode": 60220,
    "grid": 24
  }, {
    "paths": ["M342 140l-36 30-62-60 38-30zM702 784l-420-420c-42 52-68 118-68 190 0 166 132 300 298 300 72 0 138-28 190-70zM124 98c262.552 262.114 525.354 523.98 788 786l-54 54-94-94c-68 58-156 94-252 94-212 0-384-172-384-384 0-96 36-182 94-250l-34-34-48 40-60-62 48-38-58-58zM938 244l-54 66-196-166 54-64zM512 256c-36 0-70 6-102 18l-66-64c50-24 108-40 168-40 212 0 384 172 384 384 0 60-14 118-38 168l-66-64c12-32 18-68 18-104 0-166-132-298-298-298z"],
    "tags": ["alarm_off"],
    "defaultCode": 59479,
    "grid": 24
  }, {
    "paths": ["M450 620l210-212 46 46-256 256-136-136 44-44zM512 854c166 0 298-134 298-300s-132-298-298-298-298 132-298 298 132 300 298 300zM512 170c212 0 384 172 384 384s-172 384-384 384-384-172-384-384 172-384 384-384zM336 144l-196 164-54-64 196-164zM938 244l-54 66-196-166 54-64z"],
    "tags": ["alarm_on"],
    "defaultCode": 59480,
    "grid": 24
  }, {
    "paths": ["M512 470c24 0 42 18 42 42s-18 42-42 42-42-18-42-42 18-42 42-42zM512 704c106 0 192-86 192-192s-86-192-192-192-192 86-192 192 86 192 192 192zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["album"],
    "defaultCode": 57369,
    "grid": 24
  }, {
    "paths": ["M794 282c128 0 230 104 230 230s-102 230-230 230c-62 0-120-24-164-68l-54-48 64-56 50 42c30 30 66 44 104 44 80 0 144-64 144-144s-64-144-144-144c-38 0-74 14-102 42-60.266 53.067-120.945 105.722-180 160l-120 106c-42 42-100 66-162 66-128 0-230-104-230-230s102-230 230-230c62 0 120 24 164 68l54 48-66 56-48-42c-30-30-66-44-104-44-80 0-144 64-144 144s64 144 144 144c38 0 74-14 102-42 60.266-53.067 120.945-105.722 180-160l120-106c42-42 100-66 162-66z"],
    "tags": ["all_inclusive"],
    "defaultCode": 60221,
    "grid": 24
  }, {
    "paths": ["M686 684c90-90 90-240 0-330s-240-90-330 0-90 240 0 330 240 90 330 0zM732 308c116 116 116 306 0 422s-306 116-422 0-116-306 0-422 306-116 422 0zM180 348v-170h170zM350 860h-170v-170zM862 690v170h-170zM692 178h170v170z"],
    "tags": ["all_out"],
    "defaultCode": 59659,
    "grid": 24
  }, {
    "paths": ["M640 214v-44h-42v44h42zM426 214v-44h-42v44h42zM662 92c64 46 106 122 106 206h-512c0-84 40-160 104-206l-56-56c-8-8-8-22 0-30s22-8 30 0l64 64c34-18 74-28 114-28s78 10 112 28l64-64c8-8 22-8 30 0s8 22 0 30zM874 342c36 0 64 28 64 64v298c0 36-28 64-64 64s-64-28-64-64v-298c0-36 28-64 64-64zM150 342c36 0 64 28 64 64v298c0 36-28 64-64 64s-64-28-64-64v-298c0-36 28-64 64-64zM256 768v-426h512v426c0 24-18 42-42 42h-44v150c0 36-28 64-64 64s-64-28-64-64v-150h-84v150c0 36-28 64-64 64s-64-28-64-64v-150h-44c-24 0-42-18-42-42z"],
    "tags": ["android"],
    "defaultCode": 59481,
    "grid": 24
  }, {
    "paths": ["M554 640v-86h-84v86h84zM554 470v-256h-84v256h84zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["announcement"],
    "defaultCode": 59482,
    "grid": 24
  }, {
    "paths": ["M682 854v-172h172v172h-172zM682 598v-172h172v172h-172zM426 342v-172h172v172h-172zM682 170h172v172h-172v-172zM426 598v-172h172v172h-172zM170 598v-172h172v172h-172zM170 854v-172h172v172h-172zM426 854v-172h172v172h-172zM170 342v-172h172v172h-172z"],
    "tags": ["apps"],
    "defaultCode": 58819,
    "grid": 24
  }, {
    "paths": ["M218 214h588l-40-44h-512zM512 746l234-234h-148v-86h-172v86h-148zM876 224c12 14 20 34 20 54v532c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-532c0-20 8-40 20-54l58-72c12-14 30-24 50-24h512c20 0 38 10 50 24z"],
    "tags": ["archive"],
    "defaultCode": 57673,
    "grid": 24
  }, {
    "paths": ["M854 470v84h-520l238 240-60 60-342-342 342-342 60 60-238 240h520z"],
    "tags": ["arrow_back"],
    "defaultCode": 58820,
    "grid": 24
  }, {
    "paths": ["M854 512l-342 342-342-342 62-60 238 238v-520h84v520l240-238z"],
    "tags": ["arrow_downward"],
    "defaultCode": 58843,
    "grid": 24
  }, {
    "paths": ["M298 426h428l-214 214z"],
    "tags": ["arrow_drop_down"],
    "defaultCode": 58821,
    "grid": 24
  }, {
    "paths": ["M512 598l170-172h-340zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["arrow_drop_down_circle"],
    "defaultCode": 58822,
    "grid": 24
  }, {
    "paths": ["M298 598l214-214 214 214h-428z"],
    "tags": ["arrow_drop_up"],
    "defaultCode": 58823,
    "grid": 24
  }, {
    "paths": ["M512 170l342 342-342 342-60-60 238-240h-520v-84h520l-238-240z"],
    "tags": ["arrow_forward"],
    "defaultCode": 58824,
    "grid": 24
  }, {
    "paths": ["M170 512l342-342 342 342-62 60-238-238v520h-84v-520l-240 238z"],
    "tags": ["arrow_upward"],
    "defaultCode": 58840,
    "grid": 24
  }, {
    "paths": ["M448 640l-96-128-74 96-54-64-74 96h298zM512 384v256c0 46-40 86-86 86h-256c-46 0-84-40-84-86v-256c0-46 38-86 84-86h256c46 0 86 40 86 86zM598 726v-86h340v86h-340zM938 298v86h-340v-86h340zM938 554h-340v-84h340v84z"],
    "tags": ["art_track"],
    "defaultCode": 57440,
    "grid": 24
  }, {
    "paths": ["M896 812v-600h-768v600h768zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768zM298 384v128h-84v-214h212v86h-128zM810 512v214h-212v-86h128v-128h84z"],
    "tags": ["aspect_ratio"],
    "defaultCode": 59483,
    "grid": 24
  }, {
    "paths": ["M726 726v-172h-86v172h86zM554 726v-428h-84v428h84zM384 726v-300h-86v300h86zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["poll"],
    "defaultCode": 59393,
    "grid": 24
  }, {
    "paths": ["M726 384v-86h-428v86h428zM726 554v-84h-428v84h428zM598 726v-86h-300v86h300zM512 128c-24 0-42 18-42 42s18 44 42 44 42-20 42-44-18-42-42-42zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h178c18-50 64-86 120-86s102 36 120 86h178z"],
    "tags": ["assignment"],
    "defaultCode": 59485,
    "grid": 24
  }, {
    "paths": ["M768 810v-60c0-86-170-132-256-132s-256 46-256 132v60h512zM512 298c-70 0-128 58-128 128s58 128 128 128 128-58 128-128-58-128-128-128zM512 128c-24 0-42 18-42 42s18 44 42 44 42-20 42-44-18-42-42-42zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h178c18-50 64-86 120-86s102 36 120 86h178z"],
    "tags": ["assignment_ind"],
    "defaultCode": 59486,
    "grid": 24
  }, {
    "paths": ["M512 214c24 0 42-20 42-44s-18-42-42-42-42 18-42 42 18 44 42 44zM554 598v-256h-84v256h84zM554 768v-86h-84v86h84zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h178c18-50 64-86 120-86s102 36 120 86h178z"],
    "tags": ["assignment_late"],
    "defaultCode": 59487,
    "grid": 24
  }, {
    "paths": ["M682 640v-170h-170v-128l-214 212 214 214v-128h170zM512 128c-24 0-42 18-42 42s18 44 42 44 42-20 42-44-18-42-42-42zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h178c18-50 64-86 120-86s102 36 120 86h178z"],
    "tags": ["assignment_return"],
    "defaultCode": 59488,
    "grid": 24
  }, {
    "paths": ["M512 768l214-214h-128v-170h-172v170h-128zM512 128c-24 0-42 18-42 42s18 44 42 44 42-20 42-44-18-42-42-42zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h178c18-50 64-86 120-86s102 36 120 86h178z"],
    "tags": ["assignment_returned"],
    "defaultCode": 59489,
    "grid": 24
  }, {
    "paths": ["M426 726l342-342-60-60-282 280-110-110-60 60zM512 128c-24 0-42 18-42 42s18 44 42 44 42-20 42-44-18-42-42-42zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h178c18-50 64-86 120-86s102 36 120 86h178z"],
    "tags": ["assignment_turned_in"],
    "defaultCode": 59490,
    "grid": 24
  }, {
    "paths": ["M592 550l176-80-176-80-80-176-80 176-176 80 176 80 80 176zM810 86c46 0 86 38 86 84v598c0 46-40 86-86 86h-170l-128 128-128-128h-170c-46 0-86-40-86-86v-598c0-46 40-84 86-84h596z"],
    "tags": ["assistant"],
    "defaultCode": 58271,
    "grid": 24
  }, {
    "paths": ["M614 256h240v426h-300l-16-84h-240v298h-84v-726h384z"],
    "tags": ["flag"],
    "defaultCode": 57683,
    "grid": 24
  }, {
    "paths": ["M704 256h64v490c0 130-104 236-234 236s-236-106-236-236v-532c0-94 78-172 172-172s170 78 170 172v448c0 58-48 106-106 106s-108-48-108-106v-406h64v406c0 24 20 42 44 42s42-18 42-42v-448c0-58-48-108-106-108s-108 50-108 108v532c0 94 78 172 172 172s170-78 170-172v-490z"],
    "tags": ["attach_file"],
    "defaultCode": 57894,
    "grid": 24
  }, {
    "paths": ["M504 466c96 26 200 64 200 186 0 88-66 136-150 152v92h-128v-92c-82-18-150-70-156-164h94c4 50 38 90 126 90 94 0 116-46 116-76 0-40-22-78-128-104-120-28-200-78-200-176 0-82 66-136 148-154v-92h128v94c90 22 136 88 138 162h-94c-2-54-32-90-108-90-72 0-114 34-114 80 0 40 32 66 128 92z"],
    "tags": ["attach_money"],
    "defaultCode": 57895,
    "grid": 24
  }, {
    "paths": ["M86 534c0-130 104-236 234-236h448c94 0 170 78 170 172s-76 170-170 170h-362c-58 0-108-48-108-106s50-108 108-108h320v86h-324c-24 0-24 42 0 42h366c46 0 86-38 86-84s-40-86-86-86h-448c-82 0-150 68-150 150s68 148 150 148h406v86h-406c-130 0-234-104-234-234z"],
    "tags": ["attachment"],
    "defaultCode": 58044,
    "grid": 24
  }, {
    "paths": ["M512 128h298v128h-170v470h-2c-10 96-92 170-190 170-106 0-192-86-192-192s86-192 192-192c22 0 44 4 64 12v-396z"],
    "tags": ["audiotrack"],
    "defaultCode": 58273,
    "grid": 24
  }, {
    "paths": ["M800 330c34 52 54 116 54 182 0 188-154 342-342 342v128l-170-172 170-170v128c142 0 256-114 256-256 0-44-12-84-30-120zM512 256c-142 0-256 114-256 256 0 44 10 84 30 120l-62 62c-34-52-54-116-54-182 0-188 154-342 342-342v-128l170 172-170 170v-128z"],
    "tags": ["autorenew"],
    "defaultCode": 59491,
    "grid": 24
  }, {
    "paths": ["M256 512c0-24 18-42 42-42s44 18 44 42-20 42-44 42-42-18-42-42zM768 512c0 24-18 42-42 42s-44-18-44-42 20-42 44-42 42 18 42 42zM470 128h42c212 0 384 172 384 384s-172 384-384 384-384-172-384-384c0-126 60-236 154-306v-2l290 290-60 60-232-230c-42 52-66 116-66 188 0 166 132 298 298 298s298-132 298-298c0-150-112-276-256-296v82h-84v-170zM470 726c0-24 18-44 42-44s42 20 42 44-18 42-42 42-42-18-42-42z"],
    "tags": ["av_timer"],
    "defaultCode": 57371,
    "grid": 24
  }, {
    "paths": ["M810 666l-152-154 152-154-60-60-152 154-154-154-60 60 154 154-154 154 60 60 154-154 152 154zM938 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-640c-30 0-52-16-68-38l-230-346 230-346c16-22 38-38 68-38h640z"],
    "tags": ["backspace"],
    "defaultCode": 57674,
    "grid": 24
  }, {
    "paths": ["M598 554h128l-214-212-214 212h128v172h172v-172zM826 428c110 8 198 100 198 212 0 118-96 214-214 214h-554c-142 0-256-114-256-256 0-132 100-240 228-254 54-102 160-174 284-174 156 0 284 110 314 258z"],
    "tags": ["cloud_upload"],
    "defaultCode": 58051,
    "grid": 24
  }, {
    "paths": ["M554 598v-214h-84v214h84zM554 768v-86h-84v86h84zM668 170c32 0 58 26 58 58v654c0 32-26 56-58 56h-312c-32 0-58-24-58-56v-654c0-32 26-58 58-58h70v-84h172v84h70z"],
    "tags": ["battery_alert"],
    "defaultCode": 57756,
    "grid": 24
  }, {
    "paths": ["M470 854l170-320h-86v-236l-170 320h86v236zM668 170c32 0 58 26 58 58v654c0 32-26 56-58 56h-312c-32 0-58-24-58-56v-654c0-32 26-58 58-58h70v-84h172v84h70z"],
    "tags": ["battery_charging_full"],
    "defaultCode": 57763,
    "grid": 24
  }, {
    "paths": ["M668 170c32 0 58 26 58 58v654c0 32-26 56-58 56h-312c-32 0-58-24-58-56v-654c0-32 26-58 58-58h70v-84h172v84h70z"],
    "tags": ["battery_std"],
    "defaultCode": 57765,
    "grid": 24
  }, {
    "paths": ["M610 542c18-18 30-44 30-72 0-70-58-128-128-128s-128 58-128 128h64c0-36 28-64 64-64s64 28 64 64c0 18-6 32-18 44l-40 40c-20 20-40 50-40 86h68c0-20 16-48 36-68 12-12 28-30 28-30zM552 766v-82h-80v82h80zM668 170c32 0 58 26 58 58v654c0 32-26 56-58 56h-312c-32 0-58-24-58-56v-654c0-32 26-58 58-58h70v-84h172v84h70z"],
    "tags": ["battery_unknown"],
    "defaultCode": 57766,
    "grid": 24
  }, {
    "paths": ["M744 376c-133.701-133.701-319.17-177.803-486.874-122.374 127.568-14.55 291.962 51.462 424.874 184.374l-244 244c-132.912-132.912-198.924-297.306-184.374-424.874-55.43 167.705-11.327 353.174 122.374 486.874l-122 122c-167.908-167.908-168-441.7-0.275-609.724 0.259-2.212 0.333-2.291 2.551-2.551 168.024-167.725 441.816-167.633 609.724 0.275zM560 622l62-62 274 276-62 60z"],
    "tags": ["beach_access"],
    "defaultCode": 60222,
    "grid": 24
  }, {
    "paths": ["M426 682l384-384-60-60-324 324-152-152-60 60zM810 42c46 0 86 40 86 86v552c0 30-16 54-38 70l-346 232-346-232c-22-16-38-40-38-70v-552c0-46 40-86 86-86h596z"],
    "tags": ["beenhere"],
    "defaultCode": 58669,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342 0-78-26-152-72-210l-480 480c58 46 132 72 210 72zM170 512c0 78 26 152 72 210l480-480c-58-46-132-72-210-72-188 0-342 154-342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["block"],
    "defaultCode": 57675,
    "grid": 24
  }, {
    "paths": ["M634 696l-80-82v162zM554 248v162l80-82zM756 328l-184 184 184 184-244 242h-42v-324l-196 196-60-60 238-238-238-238 60-60 196 196v-324h42z"],
    "tags": ["bluetooth"],
    "defaultCode": 57767,
    "grid": 24
  }, {
    "paths": ["M550 696l-80-82v162zM470 248v162l80-82zM670 328l-184 184 184 184-244 242h-42v-324l-196 196-60-60 238-238-238-238 60-60 196 196v-324h42zM834 286c40 64 62 142 62 222 0 84-24 160-66 226l-50-50c26-52 42-110 42-172s-16-120-42-172zM608 512l98-98c12 30 20 64 20 98s-8 70-20 100z"],
    "tags": ["bluetooth_searching"],
    "defaultCode": 57770,
    "grid": 24
  }, {
    "paths": ["M810 426l86 86-86 86-84-86zM634 696l-80-82v162zM554 248v162l80-82zM756 328l-184 184 184 184-244 242h-42v-324l-196 196-60-60 238-238-238-238 60-60 196 196v-324h42zM298 512l-84 86-86-86 86-86z"],
    "tags": ["bluetooth_connected"],
    "defaultCode": 57768,
    "grid": 24
  }, {
    "paths": ["M554 776l80-80-80-82v162zM230 170l624 624-60 60-98-98-184 182h-42v-324l-196 196-60-60 238-238-282-282zM554 248v138l-84-86v-214h42l244 242-130 130-60-60 68-70z"],
    "tags": ["bluetooth_disabled"],
    "defaultCode": 57769,
    "grid": 24
  }, {
    "paths": ["M598 554c24 0 42 20 42 44s-18 42-42 42-44-18-44-42 20-44 44-44zM598 704c12 0 20 10 20 22s-8 20-20 20-22-8-22-20 10-22 22-22zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM726 406c12 0 20 8 20 20s-8 22-20 22-22-10-22-22 10-20 22-20zM726 576c12 0 20 10 20 22s-8 20-20 20-22-8-22-20 10-22 22-22zM598 320c-12 0-22-10-22-22s10-20 22-20 20 8 20 20-8 22-20 22zM598 384c24 0 42 18 42 42s-18 44-42 44-44-20-44-44 20-42 44-42zM426 320c-12 0-20-10-20-22s8-20 20-20 22 8 22 20-10 22-22 22zM298 576c12 0 22 10 22 22s-10 20-22 20-20-8-20-20 8-22 20-22zM426 704c12 0 22 10 22 22s-10 20-22 20-20-8-20-20 8-22 20-22zM298 406c12 0 22 8 22 20s-10 22-22 22-20-10-20-22 8-20 20-20zM426 554c24 0 44 20 44 44s-20 42-44 42-42-18-42-42 18-44 42-44zM426 384c24 0 44 18 44 42s-20 44-44 44-42-20-42-44 18-42 42-42z"],
    "tags": ["blur_circular"],
    "defaultCode": 58274,
    "grid": 24
  }, {
    "paths": ["M554 726c-24 0-42-20-42-44s18-42 42-42 44 18 44 42-20 44-44 44zM554 554c-24 0-42-18-42-42s18-42 42-42 44 18 44 42-20 42-44 42zM554 384c-24 0-42-18-42-42s18-44 42-44 44 20 44 44-20 42-44 42zM726 534c-12 0-22-10-22-22s10-22 22-22 20 10 20 22-8 22-20 22zM726 362c-12 0-22-8-22-20s10-22 22-22 20 10 20 22-8 20-20 20zM128 128h768v86h-768v-86zM726 704c-12 0-22-10-22-22s10-20 22-20 20 8 20 20-8 22-20 22zM384 726c-24 0-42-20-42-44s18-42 42-42 42 18 42 42-18 44-42 44zM214 576c-36 0-64-28-64-64s28-64 64-64 64 28 64 64-28 64-64 64zM214 406c-36 0-64-28-64-64s28-64 64-64 64 28 64 64-28 64-64 64zM128 896v-86h768v86h-768zM384 384c-24 0-42-18-42-42s18-44 42-44 42 20 42 44-18 42-42 42zM384 554c-24 0-42-18-42-42s18-42 42-42 42 18 42 42-18 42-42 42zM214 746c-36 0-64-28-64-64s28-64 64-64 64 28 64 64-28 64-64 64z"],
    "tags": ["blur_linear"],
    "defaultCode": 58275,
    "grid": 24
  }, {
    "paths": ["M128 576c12 0 22 10 22 22s-10 20-22 20-22-8-22-20 10-22 22-22zM256 726c24 0 42 18 42 42s-18 42-42 42-42-18-42-42 18-42 42-42zM426 874c12 0 22 10 22 22s-10 22-22 22-20-10-20-22 8-22 20-22zM128 406c12 0 22 8 22 20s-10 22-22 22-22-10-22-22 10-20 22-20zM256 554c24 0 42 20 42 44s-18 42-42 42-42-18-42-42 18-44 42-44zM896 576c12 0 22 10 22 22s-10 20-22 20-22-8-22-20 10-22 22-22zM426 726c24 0 44 18 44 42s-20 42-44 42-42-18-42-42 18-42 42-42zM106 224l54-54 694 694-56 54-160-162c2 4 2 8 2 12 0 24-18 42-42 42s-44-18-44-42 20-42 44-42c4 0 8 0 12 2l-120-120c-4 30-32 54-64 54-36 0-64-28-64-64 0-32 24-60 54-64l-120-120c2 4 2 8 2 12 0 24-18 44-42 44s-42-20-42-44 18-42 42-42l12 2zM598 874c12 0 20 10 20 22s-8 22-20 22-22-10-22-22 10-22 22-22zM768 298c-24 0-42-18-42-42s18-42 42-42 42 18 42 42-18 42-42 42zM768 470c-24 0-42-20-42-44s18-42 42-42 42 18 42 42-18 44-42 44zM768 640c-24 0-42-18-42-42s18-44 42-44 42 20 42 44-18 42-42 42zM426 298c-24 0-42-18-42-42s18-42 42-42 44 18 44 42-20 42-44 42zM896 448c-12 0-22-10-22-22s10-20 22-20 22 8 22 20-10 22-22 22zM426 150c-12 0-20-10-20-22s8-22 20-22 22 10 22 22-10 22-22 22zM598 150c-12 0-22-10-22-22s10-22 22-22 20 10 20 22-8 22-20 22zM588 490c-28-4-50-26-54-54v-10c0-36 28-64 64-64s64 28 64 64-28 64-64 64h-10zM598 298c-24 0-44-18-44-42s20-42 44-42 42 18 42 42-18 42-42 42z"],
    "tags": ["blur_off"],
    "defaultCode": 58276,
    "grid": 24
  }, {
    "paths": ["M598 362c36 0 64 28 64 64s-28 64-64 64-64-28-64-64 28-64 64-64zM598 534c36 0 64 28 64 64s-28 64-64 64-64-28-64-64 28-64 64-64zM426 726c24 0 44 18 44 42s-20 42-44 42-42-18-42-42 18-42 42-42zM426 362c36 0 64 28 64 64s-28 64-64 64-64-28-64-64 28-64 64-64zM598 874c12 0 20 10 20 22s-8 22-20 22-22-10-22-22 10-22 22-22zM598 726c24 0 42 18 42 42s-18 42-42 42-44-18-44-42 20-42 44-42zM896 576c12 0 22 10 22 22s-10 20-22 20-22-8-22-20 10-22 22-22zM768 214c24 0 42 18 42 42s-18 42-42 42-42-18-42-42 18-42 42-42zM768 384c24 0 42 18 42 42s-18 44-42 44-42-20-42-44 18-42 42-42zM768 726c24 0 42 18 42 42s-18 42-42 42-42-18-42-42 18-42 42-42zM768 554c24 0 42 20 42 44s-18 42-42 42-42-18-42-42 18-44 42-44zM426 534c36 0 64 28 64 64s-28 64-64 64-64-28-64-64 28-64 64-64zM426 298c-24 0-42-18-42-42s18-42 42-42 44 18 44 42-20 42-44 42zM426 150c-12 0-20-10-20-22s8-22 20-22 22 10 22 22-10 22-22 22zM426 874c12 0 22 10 22 22s-10 22-22 22-20-10-20-22 8-22 20-22zM128 576c12 0 22 10 22 22s-10 20-22 20-22-8-22-20 10-22 22-22zM598 150c-12 0-22-10-22-22s10-22 22-22 20 10 20 22-8 22-20 22zM598 298c-24 0-44-18-44-42s20-42 44-42 42 18 42 42-18 42-42 42zM896 448c-12 0-22-10-22-22s10-20 22-20 22 8 22 20-10 22-22 22zM256 214c24 0 42 18 42 42s-18 42-42 42-42-18-42-42 18-42 42-42zM128 406c12 0 22 8 22 20s-10 22-22 22-22-10-22-22 10-20 22-20zM256 384c24 0 42 18 42 42s-18 44-42 44-42-20-42-44 18-42 42-42zM256 726c24 0 42 18 42 42s-18 42-42 42-42-18-42-42 18-42 42-42zM256 554c24 0 42 20 42 44s-18 42-42 42-42-18-42-42 18-44 42-44z"],
    "tags": ["blur_on"],
    "defaultCode": 58277,
    "grid": 24
  }, {
    "paths": ["M256 170v342l106-64 108 64v-342h-214zM768 86c46 0 86 38 86 84v684c0 46-40 84-86 84h-512c-46 0-86-38-86-84v-684c0-46 40-84 86-84h512z"],
    "tags": ["class"],
    "defaultCode": 59502,
    "grid": 24
  }, {
    "paths": ["M726 128c46 0 84 40 84 86v682l-298-128-298 128v-682c0-46 38-86 84-86h428z"],
    "tags": ["turned_in"],
    "defaultCode": 59622,
    "grid": 24
  }, {
    "paths": ["M726 768v-554h-428v554l214-94zM726 128c46 0 84 40 84 86v682l-298-128-298 128v-682c0-46 38-86 84-86h428z"],
    "tags": ["turned_in_not"],
    "defaultCode": 59623,
    "grid": 24
  }, {
    "paths": ["M810 470v-256h-256v256h256zM810 810v-256h-256v256h256zM470 470v-256h-256v256h256zM470 810v-256h-256v256h256zM128 128h768v768h-768v-768z"],
    "tags": ["border_all"],
    "defaultCode": 57896,
    "grid": 24
  }, {
    "paths": ["M214 640v86h-86v-86h86zM128 896v-86h768v86h-768zM214 470v84h-86v-84h86zM810 384v-86h86v86h-86zM810 128h86v86h-86v-86zM214 298v86h-86v-86h86zM810 726v-86h86v86h-86zM810 554v-84h86v84h-86zM726 128v86h-86v-86h86zM554 128v86h-84v-86h84zM726 470v84h-86v-84h86zM554 298v86h-84v-86h84zM214 128v86h-86v-86h86zM554 470v84h-84v-84h84zM384 128v86h-86v-86h86zM554 640v86h-84v-86h84zM384 470v84h-86v-84h86z"],
    "tags": ["border_bottom"],
    "defaultCode": 57897,
    "grid": 24
  }, {
    "paths": ["M640 214v-86h86v86h-86zM640 554v-84h86v84h-86zM640 896v-86h86v86h-86zM470 214v-86h84v86h-84zM810 128h86v86h-86v-86zM470 384v-86h84v86h-84zM810 384v-86h86v86h-86zM810 896v-86h86v86h-86zM810 554v-84h86v84h-86zM810 726v-86h86v86h-86zM470 554v-84h84v84h-84zM128 214v-86h86v86h-86zM128 384v-86h86v86h-86zM128 554v-84h86v84h-86zM128 726v-86h86v86h-86zM128 896v-86h86v86h-86zM470 896v-86h84v86h-84zM470 726v-86h84v86h-84zM298 896v-86h86v86h-86zM298 554v-84h86v84h-86zM298 214v-86h86v86h-86z"],
    "tags": ["border_clear"],
    "defaultCode": 57898,
    "grid": 24
  }, {
    "paths": ["M0 854h1024v170h-1024v-170zM884 172l-84 84-160-160 84-84c16-16 44-16 60 0l100 100c16 16 16 44 0 60zM758 298l-428 428h-160v-160l428-428z"],
    "tags": ["border_color"],
    "defaultCode": 57899,
    "grid": 24
  }, {
    "paths": ["M810 896v-86h86v86h-86zM640 896v-86h86v86h-86zM470 726v-86h84v86h-84zM810 384v-86h86v86h-86zM810 128h86v86h-86v-86zM128 554v-84h768v84h-768zM470 896v-86h84v86h-84zM810 726v-86h86v86h-86zM554 128v86h-84v-86h84zM554 298v86h-84v-86h84zM726 128v86h-86v-86h86zM384 128v86h-86v-86h86zM214 128v86h-86v-86h86zM298 896v-86h86v86h-86zM128 726v-86h86v86h-86zM214 298v86h-86v-86h86zM128 896v-86h86v86h-86z"],
    "tags": ["border_horizontal"],
    "defaultCode": 57900,
    "grid": 24
  }, {
    "paths": ["M810 726v-86h86v86h-86zM810 896v-86h86v86h-86zM554 128v342h342v84h-342v342h-84v-342h-342v-84h342v-342h84zM640 896v-86h86v86h-86zM810 128h86v86h-86v-86zM810 384v-86h86v86h-86zM726 128v86h-86v-86h86zM214 128v86h-86v-86h86zM384 128v86h-86v-86h86zM128 726v-86h86v86h-86zM214 298v86h-86v-86h86zM298 896v-86h86v86h-86zM128 896v-86h86v86h-86z"],
    "tags": ["border_inner"],
    "defaultCode": 57901,
    "grid": 24
  }, {
    "paths": ["M640 214v-86h86v86h-86zM640 554v-84h86v84h-86zM810 896v-86h86v86h-86zM810 554v-84h86v84h-86zM810 128h86v86h-86v-86zM810 726v-86h86v86h-86zM640 896v-86h86v86h-86zM810 384v-86h86v86h-86zM128 896v-768h86v768h-86zM298 554v-84h86v84h-86zM298 214v-86h86v86h-86zM298 896v-86h86v86h-86zM470 554v-84h84v84h-84zM470 384v-86h84v86h-84zM470 214v-86h84v86h-84zM470 726v-86h84v86h-84zM470 896v-86h84v86h-84z"],
    "tags": ["border_left"],
    "defaultCode": 57902,
    "grid": 24
  }, {
    "paths": ["M384 470v84h-86v-84h86zM554 640v86h-84v-86h84zM810 810v-596h-596v596h596zM128 128h768v768h-768v-768zM726 470v84h-86v-84h86zM554 470v84h-84v-84h84zM554 298v86h-84v-86h84z"],
    "tags": ["border_outer"],
    "defaultCode": 57903,
    "grid": 24
  }, {
    "paths": ["M470 384v-86h84v86h-84zM470 214v-86h84v86h-84zM470 554v-84h84v84h-84zM640 214v-86h86v86h-86zM640 896v-86h86v86h-86zM810 128h86v768h-86v-768zM640 554v-84h86v84h-86zM470 726v-86h84v86h-84zM128 384v-86h86v86h-86zM128 726v-86h86v86h-86zM128 554v-84h86v84h-86zM470 896v-86h84v86h-84zM128 896v-86h86v86h-86zM298 554v-84h86v84h-86zM298 214v-86h86v86h-86zM128 214v-86h86v86h-86zM298 896v-86h86v86h-86z"],
    "tags": ["border_right"],
    "defaultCode": 57904,
    "grid": 24
  }, {
    "paths": ["M810 384v-86h86v86h-86zM128 128h768v86h-682v682h-86v-768zM810 554v-84h86v84h-86zM810 726v-86h86v86h-86zM470 896v-86h84v86h-84zM298 896v-86h86v86h-86zM810 896v-86h86v86h-86zM640 896v-86h86v86h-86z"],
    "tags": ["border_style"],
    "defaultCode": 57905,
    "grid": 24
  }, {
    "paths": ["M640 554v-84h86v84h-86zM810 896v-86h86v86h-86zM470 384v-86h84v86h-84zM640 896v-86h86v86h-86zM810 726v-86h86v86h-86zM128 128h768v86h-768v-86zM810 554v-84h86v84h-86zM810 384v-86h86v86h-86zM470 726v-86h84v86h-84zM128 384v-86h86v86h-86zM128 554v-84h86v84h-86zM128 896v-86h86v86h-86zM128 726v-86h86v86h-86zM470 896v-86h84v86h-84zM470 554v-84h84v84h-84zM298 554v-84h86v84h-86zM298 896v-86h86v86h-86z"],
    "tags": ["border_top"],
    "defaultCode": 57906,
    "grid": 24
  }, {
    "paths": ["M640 554v-84h86v84h-86zM640 896v-86h86v86h-86zM640 214v-86h86v86h-86zM810 384v-86h86v86h-86zM810 128h86v86h-86v-86zM810 554v-84h86v84h-86zM810 896v-86h86v86h-86zM470 896v-768h84v768h-84zM810 726v-86h86v86h-86zM298 214v-86h86v86h-86zM128 726v-86h86v86h-86zM128 896v-86h86v86h-86zM128 554v-84h86v84h-86zM298 554v-84h86v84h-86zM298 896v-86h86v86h-86zM128 214v-86h86v86h-86zM128 384v-86h86v86h-86z"],
    "tags": ["border_vertical"],
    "defaultCode": 57907,
    "grid": 24
  }, {
    "paths": ["M896 810v-256h-384v256h384zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768z"],
    "tags": ["branding_watermark"],
    "defaultCode": 57451,
    "grid": 24
  }, {
    "paths": ["M86 512c0-236 190-426 426-426s426 190 426 426-190 426-426 426-426-190-426-426z"],
    "tags": ["brightness_1"],
    "defaultCode": 58278,
    "grid": 24
  }, {
    "paths": ["M426 86c236 0 428 190 428 426s-192 426-428 426c-78 0-150-20-212-56 128-74 212-212 212-370s-84-296-212-370c62-36 134-56 212-56z"],
    "tags": ["brightness_2"],
    "defaultCode": 58279,
    "grid": 24
  }, {
    "paths": ["M384 86c236 0 426 190 426 426s-190 426-426 426c-44 0-88-6-128-18 174-54 298-216 298-408s-124-354-298-408c40-12 84-18 128-18z"],
    "tags": ["brightness_3"],
    "defaultCode": 58280,
    "grid": 24
  }, {
    "paths": ["M512 768c142 0 256-114 256-256s-114-256-256-256c-38 0-74 10-106 24 88 40 148 128 148 232s-60 192-148 232c32 14 68 24 106 24zM854 370l140 142-140 142v200h-200l-142 140-142-140h-200v-200l-140-142 140-142v-200h200l142-140 142 140h200v200z"],
    "tags": ["brightness_4"],
    "defaultCode": 58281,
    "grid": 24
  }, {
    "paths": ["M512 768c142 0 256-114 256-256s-114-256-256-256-256 114-256 256 114 256 256 256zM854 654v200h-200l-142 140-142-140h-200v-200l-140-142 140-142v-200h200l142-140 142 140h200v200l140 142z"],
    "tags": ["brightness_low"],
    "defaultCode": 57773,
    "grid": 24
  }, {
    "paths": ["M512 768c142 0 256-114 256-256s-114-256-256-256v512zM854 654v200h-200l-142 140-142-140h-200v-200l-140-142 140-142v-200h200l142-140 142 140h200v200l140 142z"],
    "tags": ["brightness_medium"],
    "defaultCode": 57774,
    "grid": 24
  }, {
    "paths": ["M512 342c94 0 170 76 170 170s-76 170-170 170-170-76-170-170 76-170 170-170zM512 768c142 0 256-114 256-256s-114-256-256-256-256 114-256 256 114 256 256 256zM854 370l140 142-140 142v200h-200l-142 140-142-140h-200v-200l-140-142 140-142v-200h200l142-140 142 140h200v200z"],
    "tags": ["brightness_high"],
    "defaultCode": 57772,
    "grid": 24
  }, {
    "paths": ["M610 682h82l-138-384h-84l-138 384h82l30-84h136zM854 370l140 142-140 142v200h-200l-142 140-142-140h-200v-200l-140-142 140-142v-200h200l142-140 142 140h200v200zM462 540l50-156 50 156h-100z"],
    "tags": ["brightness_auto"],
    "defaultCode": 57771,
    "grid": 24
  }, {
    "paths": ["M768 488l128 128v194c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-280l128 128 170-172 172 172zM896 214v280l-128-128-170 172-172-172-170 172-128-130v-194c0-46 40-86 86-86h596c46 0 86 40 86 86z"],
    "tags": ["broken_image"],
    "defaultCode": 58285,
    "grid": 24
  }, {
    "paths": ["M884 198c16 16 16 44 0 60l-382 382-118-118 382-382c16-16 44-16 60 0zM298 598c70 0 128 58 128 128 0 94-76 170-170 170-64 0-130-34-170-86 36 0 84-28 84-84 0-70 58-128 128-128z"],
    "tags": ["brush"],
    "defaultCode": 58286,
    "grid": 24
  }, {
    "paths": ["M444 376c0-114 90-206 204-206s206 92 206 206-92 204-206 204-204-90-204-204zM546 768c0-48 38-86 86-86s84 38 84 86-36 86-84 86-86-38-86-86zM170 614c0-76 62-136 138-136s136 60 136 136-60 136-136 136-138-60-138-136z"],
    "tags": ["bubble_chart"],
    "defaultCode": 59101,
    "grid": 24
  }, {
    "paths": ["M598 512v-86h-172v86h172zM598 682v-84h-172v84h172zM854 342v84h-90c2 14 4 30 4 44v42h86v86h-86v42c0 14-2 28-4 42h90v86h-120c-44 76-128 128-222 128s-178-52-222-128h-120v-86h90c-2-14-4-28-4-42v-42h-86v-86h86v-42c0-14 2-30 4-44h-90v-84h120c20-34 46-62 78-84l-70-70 60-60 94 92c20-4 40-6 60-6s40 2 60 6l94-92 60 60-70 70c32 22 58 50 78 84h120z"],
    "tags": ["bug_report"],
    "defaultCode": 59496,
    "grid": 24
  }, {
    "paths": ["M968 810c18 12 18 42-4 60l-98 98c-18 18-42 18-60 0l-388-388c-98 38-212 18-294-64-86-86-108-214-56-316l188 184 128-128-184-184c102-46 230-30 316 56 82 82 102 196 64 294z"],
    "tags": ["build"],
    "defaultCode": 59497,
    "grid": 24
  }, {
    "paths": ["M470 726h426l-136-180-108 136-76-92zM938 214c24 0 44 18 44 42v512c0 24-20 42-44 42h-512c-24 0-42-18-42-42v-512c0-24 18-42 42-42h512zM214 214h84v596h-84v-596zM42 214h86v596h-86v-596z"],
    "tags": ["burst_mode"],
    "defaultCode": 58428,
    "grid": 24
  }, {
    "paths": ["M768 640v86h-86v-86h86zM768 470v84h-86v-84h86zM854 810v-426h-342v86h86v84h-86v86h86v86h-86v84h342zM426 298v-84h-84v84h84zM426 470v-86h-84v86h84zM426 640v-86h-84v86h84zM426 810v-84h-84v84h84zM256 298v-84h-86v84h86zM256 470v-86h-86v86h86zM256 640v-86h-86v86h86zM256 810v-84h-86v84h86zM512 298h426v598h-852v-768h426v170z"],
    "tags": ["domain"],
    "defaultCode": 59374,
    "grid": 24
  }, {
    "paths": ["M598 298v-84h-172v84h172zM854 298c46 0 84 40 84 86v128c0 46-38 86-84 86h-256v-86h-172v86h-256c-48 0-84-38-84-86v-128c0-46 38-86 84-86h170v-84l86-86h170l86 86v84h172zM426 682h172v-42h298v170c0 48-38 86-86 86h-596c-48 0-86-38-86-86v-170h298v42z"],
    "tags": ["business_center"],
    "defaultCode": 60223,
    "grid": 24
  }, {
    "paths": ["M256 512h128l-170 170-172-170h128c0-188 154-342 342-342 66 0 130 20 182 54l-62 62c-36-20-76-30-120-30-142 0-256 114-256 256zM810 342l172 170h-128c0 188-154 342-342 342-66 0-130-20-182-54l62-62c36 20 76 30 120 30 142 0 256-114 256-256h-128z"],
    "tags": ["cached"],
    "defaultCode": 59498,
    "grid": 24
  }, {
    "paths": ["M768 384c70 0 128 58 128 128v66c0 46-38 84-84 84-22 0-42-8-58-24l-92-92-92 92c-32 32-86 32-118 0l-90-92-92 92c-16 16-36 24-58 24-46 0-84-38-84-84v-66c0-70 58-128 128-128h214v-86h84v86h214zM708 682c28 28 64 44 104 44 32 0 60-10 84-26v196c0 24-18 42-42 42h-684c-24 0-42-18-42-42v-196c24 16 52 26 84 26 40 0 76-16 104-44l46-46 46 46c56 56 152 56 208 0l46-46zM512 256c-46 0-86-40-86-86 0-16 6-32 14-44l72-126 72 126c8 12 14 28 14 44 0 46-38 86-86 86z"],
    "tags": ["cake"],
    "defaultCode": 59369,
    "grid": 24
  }, {
    "paths": ["M282 460c62 120 162 220 282 282l94-94c12-12 30-16 44-10 48 16 100 24 152 24 24 0 42 18 42 42v150c0 24-18 42-42 42-400 0-726-326-726-726 0-24 18-42 42-42h150c24 0 42 18 42 42 0 54 8 104 24 152 4 14 2 32-10 44z"],
    "tags": ["phone"],
    "defaultCode": 57549,
    "grid": 24
  }, {
    "paths": ["M512 384c-68 0-134 10-196 30v132c0 16-10 34-24 40-42 20-80 46-114 78-8 8-18 12-30 12s-22-4-30-12l-106-106c-8-8-12-18-12-30s4-22 12-30c130-124 306-200 500-200s370 76 500 200c8 8 12 18 12 30s-4 22-12 30l-106 106c-8 8-18 12-30 12s-22-4-30-12c-34-32-72-58-114-78-14-6-24-20-24-38v-132c-62-20-128-32-196-32z"],
    "tags": ["call_end"],
    "defaultCode": 57521,
    "grid": 24
  }, {
    "paths": ["M384 214h426v426h-84v-282l-496 496-60-60 496-496h-282v-84z"],
    "tags": ["call_made"],
    "defaultCode": 57522,
    "grid": 24
  }, {
    "paths": ["M320 342l192-192 192 192h-150v272l-256 256-60-60 232-230v-238h-150zM726 870l-146-144 60-60 146 144z"],
    "tags": ["merge_type"],
    "defaultCode": 57938,
    "grid": 24
  }, {
    "paths": ["M836 298l60 60-384 384-298-298v196h-86v-342h342v86h-196l238 238z"],
    "tags": ["call_missed"],
    "defaultCode": 57524,
    "grid": 24
  }, {
    "paths": ["M128 358l60-60 324 324 238-238h-196v-86h342v342h-86v-196l-298 298z"],
    "tags": ["call_missed_outgoing"],
    "defaultCode": 57572,
    "grid": 24
  }, {
    "paths": ["M854 230l-496 496h282v84h-426v-426h84v282l496-496z"],
    "tags": ["call_received"],
    "defaultCode": 57525,
    "grid": 24
  }, {
    "paths": ["M426 170l-98 98 226 226v360h-84v-324l-202-202-98 98v-256h256zM598 170h256v256l-98-98-124 124-60-60 124-124z"],
    "tags": ["call_split"],
    "defaultCode": 57526,
    "grid": 24
  }, {
    "paths": ["M896 810v-128h-768v128h768zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768z"],
    "tags": ["call_to_action"],
    "defaultCode": 57452,
    "grid": 24
  }, {
    "paths": ["M420 928c68.709-118.625 136.494-238.172 206-356l156 270c-74 60-168 96-270 96-32 0-62-4-92-10zM104 640h414l-158 270c-122-46-216-146-256-270zM198 224c71.999 124.667 143.587 249.746 216 374h-320c-6-28-8-56-8-86 0-112 42-212 112-288zM930 426c6 28 8 56 8 86 0 112-42 212-112 288l-204-352-12-22h320zM920 384h-414l158-270c122 46 216 146 256 270zM402 448l-4 4-156-270c74-60 168-96 270-96 32 0 62 4 92 10z"],
    "tags": ["camera"],
    "defaultCode": 58287,
    "grid": 24
  }, {
    "paths": ["M512 726c118 0 214-96 214-214s-96-214-214-214-214 96-214 214 96 214 214 214zM384 86h256l78 84h136c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h136zM376 512c0-76 60-136 136-136s136 60 136 136-60 136-136 136-136-60-136-136z"],
    "tags": ["photo_camera"],
    "defaultCode": 58386,
    "grid": 24
  }, {
    "paths": ["M512 726l-54-118-116-54 116-52 54-118 54 118 116 52-116 54zM512 768c118 0 214-96 214-214s-96-212-214-212-214 94-214 212 96 214 214 214zM384 128h256l78 86h136c46 0 84 38 84 84v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-84 84-84h136z"],
    "tags": ["camera_enhance"],
    "defaultCode": 59644,
    "grid": 24
  }, {
    "paths": ["M298 86v448c0-72 142-108 214-108s214 36 214 108v-448h-428zM726 0c46 0 84 40 84 86v596c0 46-38 86-84 86h-300l128 128-128 128v-86h-212v-84h212v-86h-128c-46 0-84-40-84-86v-596c0-46 38-86 84-86h428zM512 342c-46 0-84-40-84-86s38-86 84-86 86 40 86 86-40 86-86 86zM598 854h212v84h-212v-84z"],
    "tags": ["camera_front"],
    "defaultCode": 58289,
    "grid": 24
  }, {
    "paths": ["M512 256c46 0 84-40 84-86s-38-84-84-84-86 38-86 84 38 86 86 86zM726 0c46 0 84 40 84 86v596c0 46-38 86-84 86h-300l128 128-128 128v-86h-212v-84h212v-86h-128c-46 0-84-40-84-86v-596c0-46 38-86 84-86h428zM598 854h212v84h-212v-84z"],
    "tags": ["camera_rear"],
    "defaultCode": 58290,
    "grid": 24
  }, {
    "paths": ["M854 384v-86h-86v86h86zM854 768v-86h-86v86h86zM682 384v-86h-84v86h84zM682 768v-86h-84v86h84zM512 384v-86h-86v86h86zM512 768v-86h-86v86h86zM598 214h340v640h-340c0 46-40 84-86 84h-342c-46 0-84-38-84-84v-640c0-46 38-86 84-86h44v-42c0-24 18-44 42-44h170c24 0 44 20 44 44v42h42c46 0 86 40 86 86z"],
    "tags": ["camera_roll"],
    "defaultCode": 58291,
    "grid": 24
  }, {
    "paths": ["M726 666l-154-154 154-154-60-60-154 154-154-154-60 60 154 154-154 154 60 60 154-154 154 154zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["cancel"],
    "defaultCode": 58825,
    "grid": 24
  }, {
    "paths": ["M854 598v-256h-218l90 120-70 50c-48.076-65.258-96.637-130.029-144-196-47.366 65.967-95.923 130.744-144 196l-70-50 90-120h-218v256h684zM854 810v-84h-684v84h684zM384 170c-24 0-42 20-42 44s18 42 42 42 42-18 42-42-18-44-42-44zM640 170c-24 0-42 20-42 44s18 42 42 42 42-18 42-42-18-44-42-44zM854 256c48 0 84 38 84 86v468c0 48-36 86-84 86h-684c-48 0-84-38-84-86v-468c0-48 36-86 84-86h94c-4-14-8-28-8-42 0-70 58-128 128-128 44 0 82 22 106 56l22 30 22-30c24-34 62-56 106-56 70 0 128 58 128 128 0 14-4 28-8 42h94z"],
    "tags": ["redeem"],
    "defaultCode": 59569,
    "grid": 24
  }, {
    "paths": ["M854 426v-256h-684v256h684zM854 640v-86h-684v86h684zM854 86c48 0 84 36 84 84v470c0 48-36 86-84 86h-172v212l-170-84-170 84v-212h-172c-48 0-84-38-84-86v-470c0-48 36-84 84-84h684z"],
    "tags": ["card_membership"],
    "defaultCode": 59639,
    "grid": 24
  }, {
    "paths": ["M854 598v-256h-128v84h-86v-84h-256v84h-86v-84h-128v256h684zM854 810v-84h-684v84h684zM384 170v86h256v-86h-256zM854 256c48 0 84 38 84 86v468c0 48-36 86-84 86h-684c-48 0-84-38-84-86v-468c0-48 36-86 84-86h128v-86c0-48 38-84 86-84h256c48 0 86 36 86 84v86h128z"],
    "tags": ["card_travel"],
    "defaultCode": 59640,
    "grid": 24
  }, {
    "paths": ["M704 384c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM704 768c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM512 576c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM320 384c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM320 768c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["casino"],
    "defaultCode": 60224,
    "grid": 24
  }, {
    "paths": ["M42 426c258 0 470 210 470 470h-86c0-212-172-384-384-384v-86zM42 598c166 0 300 132 300 298h-86c0-118-96-214-214-214v-84zM42 768c70 0 128 58 128 128h-128v-128zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-298v-86h298v-596h-768v128h-86v-128c0-46 40-86 86-86h768z"],
    "tags": ["cast"],
    "defaultCode": 58119,
    "grid": 24
  }, {
    "paths": ["M896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-298v-86h298v-596h-768v128h-86v-128c0-46 40-86 86-86h768zM42 426c258 0 470 210 470 470h-86c0-212-172-384-384-384v-86zM810 298v428h-240c-54-168-188-304-356-358v-70h596zM42 598c166 0 300 132 300 298h-86c0-118-96-214-214-214v-84zM42 768c70 0 128 58 128 128h-128v-128z"],
    "tags": ["cast_connected"],
    "defaultCode": 58120,
    "grid": 24
  }, {
    "paths": ["M810 810v-170h86v170c0 46-40 86-86 86h-170v-86h170zM810 128c46 0 86 40 86 86v170h-86v-170h-170v-86h170zM214 214v170h-86v-170c0-46 40-86 86-86h170v86h-170zM214 640v170h170v86h-170c-46 0-86-40-86-86v-170h86zM512 342c94 0 170 76 170 170s-76 170-170 170-170-76-170-170 76-170 170-170z"],
    "tags": ["center_focus_strong"],
    "defaultCode": 58292,
    "grid": 24
  }, {
    "paths": ["M512 598c46 0 86-40 86-86s-40-86-86-86-86 40-86 86 40 86 86 86zM512 342c94 0 170 76 170 170s-76 170-170 170-170-76-170-170 76-170 170-170zM810 810v-170h86v170c0 46-40 86-86 86h-170v-86h170zM810 128c46 0 86 40 86 86v170h-86v-170h-170v-86h170zM214 214v170h-86v-170c0-46 40-86 86-86h170v86h-170zM214 640v170h170v86h-170c-46 0-86-40-86-86v-170h86z"],
    "tags": ["center_focus_weak"],
    "defaultCode": 58293,
    "grid": 24
  }, {
    "paths": ["M512 170l426 684h-852zM512 332l-272 436h544z"],
    "tags": ["change_history"],
    "defaultCode": 59499,
    "grid": 24
  }, {
    "paths": ["M768 342v-86h-512v86h512zM598 598v-86h-342v86h342zM256 384v86h512v-86h-512zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["chat"],
    "defaultCode": 57527,
    "grid": 24
  }, {
    "paths": ["M854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["chat_bubble"],
    "defaultCode": 57546,
    "grid": 24
  }, {
    "paths": ["M854 682v-512h-684v598l86-86h598zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["chat_bubble_outline"],
    "defaultCode": 57547,
    "grid": 24
  }, {
    "paths": ["M384 690l452-452 60 60-512 512-238-238 60-60z"],
    "tags": ["check"],
    "defaultCode": 58826,
    "grid": 24
  }, {
    "paths": ["M426 726l384-384-60-62-324 324-152-152-60 60zM810 128c48 0 86 40 86 86v596c0 46-38 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h596z"],
    "tags": ["check_box"],
    "defaultCode": 59444,
    "grid": 24
  }, {
    "paths": ["M810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596zM810 214h-596v596h596v-596z"],
    "tags": ["check_box_outline_blank"],
    "defaultCode": 59445,
    "grid": 24
  }, {
    "paths": ["M426 726l384-384-60-62-324 324-152-152-60 60zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["check_circle"],
    "defaultCode": 59500,
    "grid": 24
  }, {
    "paths": ["M658 316l-196 196 196 196-60 60-256-256 256-256z"],
    "tags": ["navigate_before"],
    "defaultCode": 58376,
    "grid": 24
  }, {
    "paths": ["M426 256l256 256-256 256-60-60 196-196-196-196z"],
    "tags": ["navigate_next"],
    "defaultCode": 58377,
    "grid": 24
  }, {
    "paths": ["M320 598h384c-32 76-106 128-192 128s-160-52-192-128zM512 810c136.004 0 250.464-89.626 286-214 4 0 8 2 12 2 46 0 86-40 86-86s-40-86-86-86c-4 0-8 2-12 2-35.529-124.35-149.994-214-286-214-136.004 0-250.464 89.626-286 214-4 0-8-2-12-2-46 0-86 40-86 86s40 86 86 86c4 0 8-2 12-2 35.529 124.35 149.994 214 286 214zM978 540c-10 64-56 118-118 136-56.536 118.211-189.668 220-348 220-157.767 0-291.044-100.097-346-220-62-18-110-72-120-136-2-8-4-18-4-28s2-20 4-28c10-64 58-118 120-136 22-48 52-90 92-124 68-60 156-96 254-96 160.584 0 290.218 98.294 346 220 62 18 110 72 120 136 2 8 4 18 4 28s-2 20-4 28zM352 448c0-30 24-54 54-54s52 24 52 54-22 54-52 54-54-24-54-54zM566 448c0-30 22-54 52-54s54 24 54 54-24 54-54 54-52-24-52-54z"],
    "tags": ["child_care"],
    "defaultCode": 60225,
    "grid": 24
  }, {
    "paths": ["M726 854c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM342 854c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM824 678c30 28 50 68 50 112 0 82-66 148-148 148-76 0-138-56-148-128h-90c-10 72-70 128-146 128-82 0-150-66-150-148 0-56 32-106 78-132-10-14-90-188-90-188h-94v-86h148l40 86h622c0 78-28 150-72 208zM554 86c188 0 342 152 342 340h-342v-340z"],
    "tags": ["child_friendly"],
    "defaultCode": 60226,
    "grid": 24
  }, {
    "paths": ["M896 810v-554h-384v554h384zM896 170c46 0 86 40 86 86v554c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-554c0-46 40-86 86-86h768zM554 618h300v64h-300v-64zM554 406h300v64h-300v-64zM554 512h300v64h-300v-64z"],
    "tags": ["chrome_reader_mode"],
    "defaultCode": 59501,
    "grid": 24
  }, {
    "paths": ["M810 274l-238 238 238 238-60 60-238-238-238 238-60-60 238-238-238-238 60-60 238 238 238-238z"],
    "tags": ["close"],
    "defaultCode": 58829,
    "grid": 24
  }, {
    "paths": ["M298 298h598v86h-598v-86zM128 726v-86h598v86h-598zM214 554v-84h596v84h-596z"],
    "tags": ["clear_all"],
    "defaultCode": 57528,
    "grid": 24
  }, {
    "paths": ["M768 470v-44c0-24-18-42-42-42h-128c-24 0-44 18-44 42v172c0 24 20 42 44 42h128c24 0 42-18 42-42v-44h-64v22h-86v-128h86v22h64zM470 470v-44c0-24-20-42-44-42h-128c-24 0-42 18-42 42v172c0 24 18 42 42 42h128c24 0 44-18 44-42v-44h-64v22h-86v-128h86v22h64zM810 170c46 0 86 40 86 86v512c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-512c0-46 38-86 86-86h596z"],
    "tags": ["closed_caption"],
    "defaultCode": 57372,
    "grid": 24
  }, {
    "paths": ["M826 428c110 8 198 100 198 212 0 118-96 214-214 214h-554c-142 0-256-114-256-256 0-132 100-240 228-254 54-102 160-174 284-174 156 0 284 110 314 258z"],
    "tags": ["wb_cloudy"],
    "defaultCode": 58413,
    "grid": 24
  }, {
    "paths": ["M704 682c58 0 106-48 106-106s-48-106-106-106h-22c0-94-76-172-170-172-80 0-146 56-164 130l-6-2c-70 0-128 58-128 128s58 128 128 128h362zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["cloud_circle"],
    "defaultCode": 58046,
    "grid": 24
  }, {
    "paths": ["M426 726l282-282-60-60-222 220-88-88-60 60zM826 428c110 8 198 100 198 212 0 118-96 214-214 214h-554c-142 0-256-114-256-256 0-132 100-240 228-254 54-102 160-174 284-174 156 0 284 110 314 258z"],
    "tags": ["cloud_done"],
    "defaultCode": 58047,
    "grid": 24
  }, {
    "paths": ["M726 554h-128v-170h-172v170h-128l214 214zM826 428c110 8 198 100 198 212 0 118-96 214-214 214h-554c-142 0-256-114-256-256 0-132 100-240 228-254 54-102 160-174 284-174 156 0 284 110 314 258z"],
    "tags": ["cloud_download"],
    "defaultCode": 58048,
    "grid": 24
  }, {
    "paths": ["M330 426h-74c-94 0-170 78-170 172s76 170 170 170h416zM128 224l54-54 714 714-54 54-86-84h-500c-142 0-256-114-256-256 0-138 110-250 246-256zM826 428c110 8 198 100 198 212 0 72-36 136-90 174l-62-62c40-22 66-64 66-112 0-70-58-128-128-128h-64v-22c0-130-104-234-234-234-40 0-76 8-108 26l-64-62c50-32 108-50 172-50 156 0 284 110 314 258z"],
    "tags": ["cloud_off"],
    "defaultCode": 58049,
    "grid": 24
  }, {
    "paths": ["M810 768c70 0 128-58 128-128s-58-128-128-128h-64v-22c0-130-104-234-234-234-108 0-198 72-226 170h-30c-94 0-170 78-170 172s76 170 170 170h554zM826 428c110 8 198 100 198 212 0 118-96 214-214 214h-554c-142 0-256-114-256-256 0-132 100-240 228-254 54-102 160-174 284-174 156 0 284 110 314 258z"],
    "tags": ["cloud_queue"],
    "defaultCode": 58050,
    "grid": 24
  }, {
    "paths": ["M622 708l198-196-198-196 60-60 256 256-256 256zM402 708l-60 60-256-256 256-256 60 60-198 196z"],
    "tags": ["code"],
    "defaultCode": 59503,
    "grid": 24
  }, {
    "paths": ["M86 256h84v598h598v84h-598c-46 0-84-38-84-84v-598zM470 512l-128 170h512l-172-212-126 158zM938 682c0 46-38 86-84 86h-512c-46 0-86-40-86-86v-512c0-46 40-84 86-84h512c46 0 84 38 84 84v512z"],
    "tags": ["photo_library"],
    "defaultCode": 58387,
    "grid": 24
  }, {
    "paths": ["M854 512v-342h-214v342l106-64zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-512c-46 0-86-40-86-86v-512c0-46 40-84 86-84h512zM170 256v598h598v84h-598c-46 0-84-38-84-84v-598h84z"],
    "tags": ["collections_bookmark"],
    "defaultCode": 58417,
    "grid": 24
  }, {
    "paths": ["M746 512c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM618 342c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM406 342c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM278 512c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM512 128c212 0 384 154 384 342 0 118-96 212-214 212h-74c-36 0-64 28-64 64 0 16 6 30 16 42s16 28 16 44c0 36-28 64-64 64-212 0-384-172-384-384s172-384 384-384z"],
    "tags": ["palette"],
    "defaultCode": 58378,
    "grid": 24
  }, {
    "paths": ["M296 810l344-344-82-82-344 344zM884 240c16 16 18 42 0 60l-134 134 82 82-60 60-60-60-382 380h-202v-202l380-382-60-60 60-60 82 82 134-134c16-16 44-16 60 0z"],
    "tags": ["colorize"],
    "defaultCode": 58296,
    "grid": 24
  }, {
    "paths": ["M768 342v-86h-512v86h512zM768 470v-86h-512v86h512zM768 598v-86h-512v86h512zM938 170v768l-170-170h-598c-46 0-84-40-84-86v-512c0-46 38-84 84-84h684c46 0 84 38 84 84z"],
    "tags": ["comment"],
    "defaultCode": 57529,
    "grid": 24
  }, {
    "paths": ["M810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-212v-384l212 256v-554h-212v-86h212zM426 768v-256l-212 256h212zM426 128v-86h86v940h-86v-86h-212c-46 0-86-40-86-86v-596c0-46 40-86 86-86h212z"],
    "tags": ["compare"],
    "defaultCode": 58297,
    "grid": 24
  }, {
    "paths": ["M640 554l-170-170 170-170v128h298v84h-298v128zM384 598v-128l170 170-170 170v-128h-298v-84h298z"],
    "tags": ["compare_arrows"],
    "defaultCode": 59669,
    "grid": 24
  }, {
    "paths": ["M170 256v426h684v-426h-684zM854 768h170v86h-1024v-86h170c-46 0-84-40-84-86v-426c0-46 38-86 84-86h684c46 0 84 40 84 86v426c0 46-38 86-84 86z"],
    "tags": ["laptop"],
    "defaultCode": 58142,
    "grid": 24
  }, {
    "paths": ["M554 362v-84h-84v84h84zM554 554v-84h-84v84h84zM554 746v-84h-84v84h84zM938 426c-46 0-84 40-84 86s38 86 84 86v170c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-170c48 0 84-40 84-86s-38-86-84-86v-170c0-48 38-86 84-86h684c46 0 84 38 84 86v170z"],
    "tags": ["confirmation_number"],
    "defaultCode": 58936,
    "grid": 24
  }, {
    "paths": ["M938 512v-256h-340v256h340zM598 768v-42c0-86-170-132-256-132s-256 46-256 132v42h512zM342 256c-70 0-128 58-128 128s58 128 128 128 128-58 128-128-58-128-128-128zM938 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-852c-46 0-86-40-86-86v-596c0-46 40-86 86-86h852zM896 342l-128 84-128-84v-44l128 86 128-86v44z"],
    "tags": ["contact_mail"],
    "defaultCode": 57552,
    "grid": 24
  }, {
    "paths": ["M762 598c-10-26-16-56-16-86s6-60 16-86h70l64-84-84-86c-56 42-98 100-118 170-8 28-12 56-12 86s4 58 12 86c20 68 62 128 118 170l84-86-64-84h-70zM598 768v-42c0-86-170-132-256-132s-256 46-256 132v42h512zM342 256c-70 0-128 58-128 128s58 128 128 128 128-58 128-128-58-128-128-128zM938 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-852c-46 0-86-40-86-86v-596c0-46 40-86 86-86h852z"],
    "tags": ["contact_phone"],
    "defaultCode": 57551,
    "grid": 24
  }, {
    "paths": ["M726 726v-64c0-72-142-108-214-108s-214 36-214 108v64h428zM512 288c-52 0-96 44-96 96s44 96 96 96 96-44 96-96-44-96-96-96zM854 170c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h684zM170 1024v-86h684v86h-684zM854 0v86h-684v-86h684z"],
    "tags": ["contacts"],
    "defaultCode": 57530,
    "grid": 24
  }, {
    "paths": ["M810 896v-598h-468v598h468zM810 214c46 0 86 38 86 84v598c0 46-40 86-86 86h-468c-46 0-86-40-86-86v-598c0-46 40-84 86-84h468zM682 42v86h-512v598h-84v-598c0-46 38-86 84-86h512z"],
    "tags": ["content_copy"],
    "defaultCode": 57677,
    "grid": 24
  }, {
    "paths": ["M810 128h128v42l-298 300-86-86zM512 534c12 0 22-10 22-22s-10-22-22-22-22 10-22 22 10 22 22 22zM256 854c46 0 86-38 86-86s-40-86-86-86-86 38-86 86 40 86 86 86zM256 342c46 0 86-38 86-86s-40-86-86-86-86 38-86 86 40 86 86 86zM412 326l526 528v42h-128l-298-298-100 100c10 22 14 44 14 70 0 94-76 170-170 170s-170-76-170-170 76-170 170-170c26 0 48 4 70 14l100-100-100-100c-22 10-44 14-70 14-94 0-170-76-170-170s76-170 170-170 170 76 170 170c0 26-4 48-14 70z"],
    "tags": ["content_cut"],
    "defaultCode": 57678,
    "grid": 24
  }, {
    "paths": ["M810 854v-684h-84v128h-428v-128h-84v684h596zM512 86c-24 0-42 18-42 42s18 42 42 42 42-18 42-42-18-42-42-42zM810 86c46 0 86 38 86 84v684c0 46-40 84-86 84h-596c-46 0-86-38-86-84v-684c0-46 40-84 86-84h178c18-50 64-86 120-86s102 36 120 86h178z"],
    "tags": ["content_paste"],
    "defaultCode": 57679,
    "grid": 24
  }, {
    "paths": ["M640 810c164 0 298-134 298-298s-134-298-298-298-298 134-298 298 134 298 298 298zM640 128c212 0 384 172 384 384s-172 384-384 384-384-172-384-384 172-384 384-384zM86 512c0 120 68 222 170 270v92c-148-52-256-196-256-362s108-310 256-362v92c-102 48-170 150-170 270zM682 342v128h128v84h-128v128h-84v-128h-128v-84h128v-128h84z"],
    "tags": ["control_point_duplicate"],
    "defaultCode": 58299,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM506 390c-61.522 0-80 54.457-80 116v12c0 61.538 18.508 116 80 116 37.558 0 70-22.925 70-60h76c0 39.042-21.138 68.404-44 88-25.786 22.102-55.81 36-102 36-109.169 0-164-72.147-164-180v-12c0-51.712 14.52-98.881 40-128 26.398-30.169 68.684-54 124-54 44.274 0 81.256 15.256 104 38 22.005 22.005 42 55.974 42 98h-76c0-10-2-18-6-26s-8-18-14-24c-10.835-10.835-29.352-20-50-20z"],
    "tags": ["copyright"],
    "defaultCode": 59660,
    "grid": 24
  }, {
    "paths": ["M884 300l-78 78-160-160 78-78c16-16 44-16 60 0l100 100c16 16 16 44 0 60zM128 736l472-472 160 160-472 472h-160v-160z"],
    "tags": ["mode_edit"],
    "defaultCode": 57940,
    "grid": 24
  }, {
    "paths": ["M810 598v-86h-128v-128h-84v128h-128v86h128v128h84v-128h128zM854 256c48 0 84 38 84 86v426c0 48-36 86-84 86h-684c-48 0-84-38-84-86v-512c0-48 36-86 84-86h256l86 86h342z"],
    "tags": ["create_new_folder"],
    "defaultCode": 58060,
    "grid": 24
  }, {
    "paths": ["M854 342v-86h-684v86h684zM854 768v-256h-684v256h684zM854 170c48 0 84 38 84 86v512c0 48-36 86-84 86h-684c-48 0-84-38-84-86v-512c0-48 36-86 84-86h684z"],
    "tags": ["payment"],
    "defaultCode": 59553,
    "grid": 24
  }, {
    "paths": ["M298 726h684v84h-172v172h-84v-172h-428c-46 0-84-38-84-84v-428h-172v-84h172v-172h84v684zM726 640v-342h-342v-84h342c46 0 84 38 84 84v342h-84z"],
    "tags": ["crop"],
    "defaultCode": 58302,
    "grid": 24
  }, {
    "paths": ["M810 682v-340h-596v340h596zM810 256c46 0 86 40 86 86v340c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-340c0-46 40-86 86-86h596z"],
    "tags": ["crop_16_9"],
    "defaultCode": 58300,
    "grid": 24
  }, {
    "paths": ["M810 768v-512h-596v512h596zM810 170c46 0 86 40 86 86v512c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-512c0-46 40-86 86-86h596z"],
    "tags": ["crop_3_2"],
    "defaultCode": 58301,
    "grid": 24
  }, {
    "paths": ["M810 726v-428h-596v428h596zM810 214c46 0 86 38 86 84v428c0 46-40 84-86 84h-596c-46 0-86-38-86-84v-428c0-46 40-84 86-84h596z"],
    "tags": ["crop_landscape"],
    "defaultCode": 58307,
    "grid": 24
  }, {
    "paths": ["M810 640v-256h-596v256h596zM810 298c46 0 86 40 86 86v256c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-256c0-46 40-86 86-86h596z"],
    "tags": ["crop_7_5"],
    "defaultCode": 58304,
    "grid": 24
  }, {
    "paths": ["M810 810v-596h-596v596h596zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["crop_din"],
    "defaultCode": 58305,
    "grid": 24
  }, {
    "paths": ["M810 128c46 0 86 40 86 86v170h-86v-170h-170v-86h170zM810 810v-170h86v170c0 46-40 86-86 86h-170v-86h170zM214 640v170h170v86h-170c-46 0-86-40-86-86v-170h86zM128 214c0-46 40-86 86-86h170v86h-170v170h-86v-170z"],
    "tags": ["crop_free"],
    "defaultCode": 58306,
    "grid": 24
  }, {
    "paths": ["M596 524l150 202h-468l116-152 84 102zM810 810v-596h-596v596h596zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["crop_original"],
    "defaultCode": 58308,
    "grid": 24
  }, {
    "paths": ["M726 810v-596h-428v596h428zM726 128c46 0 84 40 84 86v596c0 46-38 86-84 86h-428c-46 0-84-40-84-86v-596c0-46 38-86 84-86h428z"],
    "tags": ["crop_portrait"],
    "defaultCode": 58309,
    "grid": 24
  }, {
    "paths": ["M342 682h512v86h-86v86h-86v-86h-340c-48 0-86-40-86-86v-340h-86v-86h86v-86h86v512zM682 598v-256h-256v-86h256c46 0 86 38 86 86v256h-86zM514 0c268 0 488 208 510 470h-64c-16-160-114-296-254-362l-58 56-162-162c10 0 18-2 28-2zM318 916l58-56 162 162c-10 0-18 2-28 2-268 0-488-208-510-470h64c16 160 114 296 254 362z"],
    "tags": ["crop_rotate"],
    "defaultCode": 58423,
    "grid": 24
  }, {
    "paths": ["M768 768v-512h-512v512h512zM768 170c46 0 86 40 86 86v512c0 46-40 86-86 86h-512c-46 0-86-40-86-86v-512c0-46 40-86 86-86h512z"],
    "tags": ["crop_square"],
    "defaultCode": 58310,
    "grid": 24
  }, {
    "paths": ["M554 128h342v256h-342v-256zM554 896v-426h342v426h-342zM128 896v-256h342v256h-342zM128 554v-426h342v426h-342z"],
    "tags": ["dashboard"],
    "defaultCode": 59505,
    "grid": 24
  }, {
    "paths": ["M512 810c94 0 178-44 232-112l112 66c-78 106-202 174-344 174-236 0-426-190-426-426 0-222 168-402 384-424v128c-144 20-256 146-256 296 0 166 132 298 298 298zM554 88c216 22 384 202 384 424 0 62-12 122-36 174l-112-66c12-34 20-70 20-108 0-150-112-276-256-296v-128z"],
    "tags": ["data_usage"],
    "defaultCode": 57775,
    "grid": 24
  }, {
    "paths": ["M810 854v-470h-596v470h596zM810 170c46 0 86 40 86 86v598c0 46-40 84-86 84h-596c-48 0-86-38-86-84v-598c0-46 38-86 86-86h42v-84h86v84h340v-84h86v84h42zM726 470v84h-86v-84h86zM554 470v84h-84v-84h84zM384 470v84h-86v-84h86z"],
    "tags": ["date_range"],
    "defaultCode": 59670,
    "grid": 24
  }, {
    "paths": ["M86 234h852v86h-852v-86zM86 448h852v86h-852v-86zM86 662h852v84h-852v-84z"],
    "tags": ["dehaze"],
    "defaultCode": 58311,
    "grid": 24
  }, {
    "paths": ["M810 170v86h-596v-86h148l44-42h212l44 42h148zM256 810v-512h512v512c0 46-40 86-86 86h-340c-46 0-86-40-86-86z"],
    "tags": ["delete"],
    "defaultCode": 59506,
    "grid": 24
  }, {
    "paths": ["M662 170h148v86h-596v-86h148l44-42h212zM360 506l92 92-90 90 60 60 90-90 90 90 60-60-90-90 90-92-60-60-90 92-90-92zM256 810v-512h512v512c0 46-40 86-86 86h-340c-46 0-86-40-86-86z"],
    "tags": ["delete_forever"],
    "defaultCode": 59691,
    "grid": 24
  }, {
    "paths": ["M598 214v84h-512v-84h128l42-44h170l44 44h128zM128 768v-426h426v426c0 46-38 86-84 86h-256c-46 0-86-40-86-86zM640 512h256v86h-256v-86zM640 342h298v84h-298v-84zM640 682h170v86h-170v-86z"],
    "tags": ["delete_sweep"],
    "defaultCode": 57708,
    "grid": 24
  }, {
    "paths": ["M554 384h236l-236-234v234zM682 598v-86h-340v86h340zM682 768v-86h-340v86h340zM598 86l256 256v512c0 46-40 84-86 84h-512c-46 0-86-38-86-84l2-684c0-46 38-84 84-84h342z"],
    "tags": ["description"],
    "defaultCode": 59507,
    "grid": 24
  }, {
    "paths": ["M896 598v-428h-768v428h768zM896 86c46 0 86 38 86 84v512c0 46-40 86-86 86h-298l84 128v42h-340v-42l84-128h-298c-46 0-86-40-86-86v-512c0-46 40-84 86-84h768z"],
    "tags": ["desktop_mac"],
    "defaultCode": 58123,
    "grid": 24
  }, {
    "paths": ["M896 682v-512h-768v512h768zM896 86c46 0 86 38 86 84v512c0 46-40 86-86 86h-298v86h84v84h-340v-84h84v-86h-298c-46 0-86-40-86-86v-512c0-46 40-84 86-84h768z"],
    "tags": ["desktop_windows"],
    "defaultCode": 58124,
    "grid": 24
  }, {
    "paths": ["M272 256l240 426 240-426h-480zM128 170h768l-384 684z"],
    "tags": ["details"],
    "defaultCode": 58312,
    "grid": 24
  }, {
    "paths": ["M512 470h170v256h-170v-256zM256 298h214v214h-214v-214zM512 298h170v128h-170v-128zM256 554h214v172h-214v-172zM768 810v-596h-598v596h598zM938 384h-84v86h84v84h-84v86h84v86h-84v84c0 46-40 86-86 86h-598c-46 0-84-40-84-86v-596c0-46 38-86 84-86h598c46 0 86 40 86 86v84h84v86z"],
    "tags": ["developer_board"],
    "defaultCode": 58125,
    "grid": 24
  }, {
    "paths": ["M726 810v-84h84v170c0 46-38 86-84 86h-428c-46 0-84-40-84-86v-170h84v84h428zM426 648l-60 60-196-196 196-196 60 60-134 136zM658 708l-60-60 134-136-134-136 60-60 196 196zM298 214v84h-84v-170c0-46 38-86 84-86l428 2c46 0 84 38 84 84v170h-84v-84h-428z"],
    "tags": ["developer_mode"],
    "defaultCode": 57776,
    "grid": 24
  }, {
    "paths": ["M726 682h170v214h-214v-130l-170-180-170 180v130h-214v-214h170l172-170v-136c-50-18-86-64-86-120 0-70 58-128 128-128s128 58 128 128c0 56-36 102-86 120v136z"],
    "tags": ["device_hub"],
    "defaultCode": 58165,
    "grid": 24
  }, {
    "paths": ["M938 726v-300h-170v300h170zM982 342c24 0 42 18 42 42v426c0 24-18 44-42 44h-256c-24 0-44-20-44-44v-426c0-24 20-42 44-42h256zM170 256v470h428v128h-598v-128h86v-470c0-46 38-86 84-86h768v86h-768z"],
    "tags": ["phonelink"],
    "defaultCode": 58150,
    "grid": 24
  }, {
    "paths": ["M896 768v-342h-170v342h170zM938 342c22 0 44 20 44 42v426c0 22-22 44-44 44h-256c-22 0-42-22-42-44v-426c0-22 20-42 42-42h256zM470 746c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM554 512v76c26 24 44 56 44 94s-18 72-44 96v76h-170v-76c-26-24-42-58-42-96s16-70 42-94v-76h170zM128 256v512h170v86h-170c-46 0-86-40-86-86v-512c0-46 40-86 86-86h768v86h-768z"],
    "tags": ["devices_other"],
    "defaultCode": 58167,
    "grid": 24
  }, {
    "paths": ["M854 662c24 0 42 18 42 42v150c0 24-18 42-42 42-400 0-726-326-726-726 0-24 18-42 42-42h150c24 0 42 18 42 42 0 54 8 104 24 152 4 14 2 32-10 44l-94 94c62 122 162 220 282 282l94-94c12-12 30-14 44-10 48 16 98 24 152 24zM854 214v-44h-44v44h44zM768 128h128v128h-86v86h-42v-214zM640 214v128h-128v-44h86v-42h-86v-128h128v42h-86v44h86zM726 128v214h-44v-214h44z"],
    "tags": ["dialer_sip"],
    "defaultCode": 57531,
    "grid": 24
  }, {
    "paths": ["M512 42c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM512 298c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM768 298c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM768 554c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM512 554c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM768 214c-46 0-86-40-86-86s40-86 86-86 86 40 86 86-40 86-86 86zM256 554c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM256 298c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM256 42c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM512 810c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86z"],
    "tags": ["dialpad"],
    "defaultCode": 57532,
    "grid": 24
  }, {
    "paths": ["M598 618l148-148-148-150v106h-214c-24 0-42 20-42 44v170h84v-128h172v106zM926 482c16 18 16 44 0 60l-384 384c-16 16-44 16-60 0l-384-384c-16-16-16-44 0-60l384-384c16-16 44-16 60 0z"],
    "tags": ["directions"],
    "defaultCode": 58670,
    "grid": 24
  }, {
    "paths": ["M810 874c82 0 150-66 150-148s-68-150-150-150-148 68-148 150 66 148 148 148zM810 512c120 0 214 94 214 214s-94 212-214 212-212-92-212-212 92-214 212-214zM460 448l94 98v264h-84v-212l-138-120c-18-12-24-34-24-60 0-22 6-42 24-60l120-120c12-18 34-24 60-24s46 6 68 24l82 82c38 38 88 64 152 64v86c-90 0-160-34-216-90l-34-34zM214 874c82 0 148-66 148-148s-66-150-148-150-150 68-150 150 68 148 150 148zM214 512c120 0 212 94 212 214s-92 212-212 212-214-92-214-212 94-214 214-214zM662 234c-46 0-86-38-86-84s40-86 86-86 84 40 84 86-38 84-84 84z"],
    "tags": ["directions_bike"],
    "defaultCode": 58671,
    "grid": 24
  }, {
    "paths": ["M256 256v170l256-84 256 84v-170h-512zM168 810l-80-284c-9.564-28.693 7.98-47.327 28-54l54-18v-198c0-46 40-86 86-86h128v-128h256v128h128c46 0 86 40 86 86v198l54 18c20.040 6.68 37.574 25.277 28 54l-80 284h-2c-68 0-130-36-172-84-42 48-102 84-170 84s-128-36-170-84c-42 48-104 84-172 84h-2zM854 896h84v86h-84c-58 0-118-14-172-42-108 56-232 56-340 0-54 28-114 42-172 42h-84v-86h84c60 0 120-20 172-56 104 72 236 72 340 0 52 36 112 56 172 56z"],
    "tags": ["directions_boat"],
    "defaultCode": 58674,
    "grid": 24
  }, {
    "paths": ["M768 470v-214h-512v214h512zM704 726c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM320 726c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM170 682v-426c0-150 154-170 342-170s342 20 342 170v426c0 38-18 72-44 96v76c0 24-18 42-42 42h-42c-24 0-44-18-44-42v-44h-340v44c0 24-20 42-44 42h-42c-24 0-42-18-42-42v-76c-26-24-44-58-44-96z"],
    "tags": ["directions_bus"],
    "defaultCode": 58672,
    "grid": 24
  }, {
    "paths": ["M214 470h596l-64-192h-468zM746 682c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM278 682c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM808 256l88 256v342c0 24-18 42-42 42h-44c-24 0-42-18-42-42v-44h-512v44c0 24-18 42-42 42h-44c-24 0-42-18-42-42v-342l88-256c8-26 34-42 62-42h468c28 0 54 16 62 42z"],
    "tags": ["directions_car"],
    "defaultCode": 58673,
    "grid": 24
  }, {
    "paths": ["M768 426v-212h-512v212h512zM512 726c46 0 86-40 86-86s-40-86-86-86-86 40-86 86 40 86 86 86zM170 662v-448c0-150 154-172 342-172s342 22 342 172v448c0 82-68 148-150 148l64 64v22h-512v-22l64-64c-82 0-150-66-150-148z"],
    "tags": ["directions_railway"],
    "defaultCode": 58676,
    "grid": 24
  }, {
    "paths": ["M422 826l-298-58 16-86 210 42 68-346-78 30v146h-84v-200l222-94c12 0 22-4 34-4 30 0 54 16 72 42l42 68c34 60 102 102 184 102v86c-94 0-178-42-234-106l-26 128 90 84v320h-86v-256l-90-84zM576 234c-46 0-86-40-86-86s40-84 86-84 84 38 84 84-38 86-84 86z"],
    "tags": ["directions_run"],
    "defaultCode": 58726,
    "grid": 24
  }, {
    "paths": ["M768 470v-214h-214v214h214zM704 726c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM470 470v-214h-214v214h214zM320 726c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM512 86c188 0 342 20 342 170v406c0 82-68 148-150 148l64 64v22h-512v-22l64-64c-82 0-150-66-150-148v-406c0-150 154-170 342-170z"],
    "tags": ["directions_transit"],
    "defaultCode": 58677,
    "grid": 24
  }, {
    "paths": ["M418 380l-120 602h90l78-342 88 86v256h86v-320l-90-86 26-128c56 64 140 106 234 106v-84c-82 0-148-44-182-104l-44-68c-18-26-42-42-72-42-12 0-22 4-34 4l-222 94v200h86v-144l76-30zM576 234c-46 0-86-38-86-84s40-86 86-86 86 40 86 86-40 84-86 84z"],
    "tags": ["directions_walk"],
    "defaultCode": 58678,
    "grid": 24
  }, {
    "paths": ["M426 598c46 0 86-40 86-86s-40-86-86-86-84 40-84 86 38 86 84 86zM426 170c188 0 342 154 342 342s-154 342-342 342-340-154-340-342 152-342 340-342zM854 298h84v214h-84v-214zM854 682v-84h84v84h-84z"],
    "tags": ["disc_full"],
    "defaultCode": 58896,
    "grid": 24
  }, {
    "paths": ["M298 384c46 0 86-40 86-86s-40-84-86-84-84 38-84 84 38 86 84 86zM854 128c24 0 42 18 42 42v256c0 24-18 44-42 44h-684c-24 0-42-20-42-44v-256c0-24 18-42 42-42h684zM298 810c46 0 86-38 86-84s-40-86-86-86-84 40-84 86 38 84 84 84zM854 554c24 0 42 20 42 44v256c0 24-18 42-42 42h-684c-24 0-42-18-42-42v-256c0-24 18-44 42-44h684z"],
    "tags": ["dns"],
    "defaultCode": 59509,
    "grid": 24
  }, {
    "paths": ["M782 722c46-58 72-132 72-210 0-188-154-342-342-342-78 0-152 26-210 72zM512 854c78 0 152-26 210-72l-480-480c-46 58-72 132-72 210 0 188 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["not_interested"],
    "defaultCode": 57395,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342 0-76-28-150-74-210l-478 478c60 46 134 74 210 74zM170 512c0 76 28 150 74 210l478-478c-60-46-134-74-210-74-188 0-342 154-342 342zM512 86c234 0 426 192 426 426s-192 426-426 426-426-192-426-426 192-426 426-426z"],
    "tags": ["do_not_disturb_alt"],
    "defaultCode": 58897,
    "grid": 24
  }, {
    "paths": ["M298 554h148l-86-84h-62v84zM96 96l832 832-56 54-118-120c-68 48-152 76-242 76-236 0-426-190-426-426 0-90 28-174 76-242l-120-118zM726 470h-148l-308-308c68-48 152-76 242-76 236 0 426 190 426 426 0 90-28 174-76 242l-198-200h62v-84z"],
    "tags": ["do_not_disturb_off"],
    "defaultCode": 58947,
    "grid": 24
  }, {
    "paths": ["M726 554v-84h-428v84h428zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["remove_circle"],
    "defaultCode": 57692,
    "grid": 24
  }, {
    "paths": ["M682 640v-426h-340v426h340zM682 44c46 0 86 38 86 84v598c0 46-40 84-86 84h-340c-46 0-86-38-86-84v-598c0-46 40-86 86-86zM342 982v-86h340v86h-340z"],
    "tags": ["dock"],
    "defaultCode": 58126,
    "grid": 24
  }, {
    "paths": ["M384 692l452-454 60 60-512 512-238-238 58-60z"],
    "tags": ["done"],
    "defaultCode": 59510,
    "grid": 24
  }, {
    "paths": ["M18 572l60-60 238 238-60 60zM948 238l62 60-512 512-240-238 62-60 178 178zM768 298l-270 272-60-60 270-272z"],
    "tags": ["done_all"],
    "defaultCode": 59511,
    "grid": 24
  }, {
    "paths": ["M554 808c128-18 238-126 256-254h128c-20 214-170 364-384 384v-130zM810 470c-18-128-128-236-256-254v-130c214 20 364 170 384 384h-128zM470 216c-128 20-256 146-256 296s128 276 256 296v130c-214-22-384-204-384-426s170-404 384-426v130z"],
    "tags": ["donut_large"],
    "defaultCode": 59671,
    "grid": 24
  }, {
    "paths": ["M554 634c42-12 66-44 80-80h304c-20 202-170 364-384 384v-304zM634 470c-14-36-38-68-80-80v-304c214 20 364 182 384 384h-304zM470 390c-42 18-86 66-86 122s44 104 86 122v304c-214-22-384-204-384-426s170-404 384-426v304z"],
    "tags": ["donut_small"],
    "defaultCode": 59672,
    "grid": 24
  }, {
    "paths": ["M512 554l352-220-352-206-352 206zM938 342v426c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-426c0-30 16-60 40-74l386-226 386 226c24 14 40 44 40 74z"],
    "tags": ["drafts"],
    "defaultCode": 57681,
    "grid": 24
  }, {
    "paths": ["M170 640v-86h684v86h-684zM854 384v86h-684v-86h684z"],
    "tags": ["drag_handle"],
    "defaultCode": 57949,
    "grid": 24
  }, {
    "paths": ["M214 426h596l-64-192h-468zM746 640c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM278 640c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM808 214l88 256v340c0 24-18 44-42 44h-44c-24 0-42-20-42-44v-42h-512v42c0 24-18 44-42 44h-44c-24 0-42-20-42-44v-340l88-256c8-26 34-44 62-44h468c28 0 54 18 62 44z"],
    "tags": ["time_to_leave"],
    "defaultCode": 58924,
    "grid": 24
  }, {
    "paths": ["M298 512v86h-84v-86h84zM298 342v84h-84v-84h84zM810 512v86h-468v-86h468zM810 342v84h-468v-84h468zM896 726v-512h-768v512h768zM896 128c46 0 86 40 86 86l-2 512c0 46-38 84-84 84h-214v86h-340v-86h-214c-46 0-86-38-86-84v-512c0-46 40-86 86-86h768z"],
    "tags": ["dvr"],
    "defaultCode": 57778,
    "grid": 24
  }, {
    "paths": ["M636 322c6-6 6-16 0-22l-40-40c-6-6-16-6-22 0l-30 30 62 62zM446 512l142-142-62-62-142 142v62h62zM512 86c164 0 298 134 298 298 0 224-298 554-298 554s-298-330-298-554c0-164 134-298 298-298z"],
    "tags": ["edit_location"],
    "defaultCode": 58728,
    "grid": 24
  }, {
    "paths": ["M512 214l284 426h-568zM214 726h596v84h-596v-84z"],
    "tags": ["eject"],
    "defaultCode": 59643,
    "grid": 24
  }, {
    "paths": ["M854 342v-86l-342 214-342-214v86l342 212zM854 170c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h684z"],
    "tags": ["markunread"],
    "defaultCode": 57689,
    "grid": 24
  }, {
    "paths": ["M682 682v-84h-128v-128h-84v128h-128v84h128v128h84v-128h128zM380 256v86h264v-86c0-72-60-132-132-132s-132 60-132 132zM768 342c46 0 86 38 86 84v428c0 46-40 84-86 84h-512c-46 0-86-38-86-84v-428c0-46 40-84 86-84h42v-86c0-118 96-214 214-214s214 96 214 214v86h42z"],
    "tags": ["enhanced_encryption"],
    "defaultCode": 58943,
    "grid": 24
  }, {
    "paths": ["M682 384h172v470h-172v-470zM170 854v-342h172v342h-172zM426 854v-684h172v684h-172z"],
    "tags": ["equalizer"],
    "defaultCode": 57373,
    "grid": 24
  }, {
    "paths": ["M554 554v-256h-84v256h84zM554 726v-86h-84v86h84zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["error"],
    "defaultCode": 57344,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM470 298h84v256h-84v-256zM470 640h84v86h-84v-86z"],
    "tags": ["error_outline"],
    "defaultCode": 57345,
    "grid": 24
  }, {
    "paths": ["M640 790c70 0 132-26 180-68l76 76c-68 62-158 98-256 98-168 0-310-108-362-256h-150v-86h130c-2-14-2-28-2-42s0-28 2-42h-130v-86h150c52-148 194-256 362-256 98 0 188 36 256 98l-76 76c-48-42-112-68-180-68-106 0-200 62-246 150h246v86h-274c-2 14-4 28-4 42s2 28 4 42h274v86h-246c46 88 138 150 246 150z"],
    "tags": ["euro_symbol"],
    "defaultCode": 59686,
    "grid": 24
  }, {
    "paths": ["M342 768l170-298h-86v-214l-170 320h86v192zM768 426c24 0 42-18 42-42s-18-42-42-42-42 18-42 42 18 42 42 42zM844 308c20 20 30 46 30 76v406c0 58-48 106-106 106s-106-48-106-106v-214h-64v320h-428v-682c0-46 40-86 86-86h256c46 0 86 40 86 86v298h42c46 0 86 40 86 86v192c0 24 18 42 42 42s42-18 42-42v-308c-14 6-26 8-42 8-58 0-106-48-106-106 0-46 28-84 68-100l-90-90 46-44z"],
    "tags": ["ev_station"],
    "defaultCode": 58733,
    "grid": 24
  }, {
    "paths": ["M810 810v-468h-596v468h596zM682 42h86v86h42c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h42v-86h86v86h340v-86zM726 512v214h-214v-214h214z"],
    "tags": ["insert_invitation"],
    "defaultCode": 57935,
    "grid": 24
  }, {
    "paths": ["M810 810v-468h-596v468h596zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h42v-86h86v86h340v-86h86v86h42zM706 472l-254 254-136-136 46-46 90 90 208-208z"],
    "tags": ["event_available"],
    "defaultCode": 58900,
    "grid": 24
  }, {
    "paths": ["M810 810v-468h-596v468h596zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h42v-86h86v86h340v-86h86v86h42zM398 726l-46-46 104-104-104-104 46-46 104 104 104-104 44 46-104 104 104 104-44 46-104-104z"],
    "tags": ["event_busy"],
    "defaultCode": 58901,
    "grid": 24
  }, {
    "paths": ["M598 598v84h-300v-84h300zM810 810v-468h-596v468h596zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h42v-86h86v86h340v-86h86v86h42zM726 426v86h-428v-86h428z"],
    "tags": ["event_note"],
    "defaultCode": 58902,
    "grid": 24
  }, {
    "paths": ["M726 554h-428v-340c0-46 40-86 86-86h256c46 0 86 40 86 86v340zM86 426h128v128h-128v-128zM810 426h128v128h-128v-128zM170 896v-256h684v256h-128v-128h-428v128h-128z"],
    "tags": ["event_seat"],
    "defaultCode": 59651,
    "grid": 24
  }, {
    "paths": ["M810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-170h86v170h596v-596h-596v170h-86v-170c0-46 38-86 86-86h596zM430 666l110-112h-412v-84h412l-110-112 60-60 214 214-214 214z"],
    "tags": ["exit_to_app"],
    "defaultCode": 59513,
    "grid": 24
  }, {
    "paths": ["M512 342l256 256-60 60-196-196-196 196-60-60z"],
    "tags": ["expand_less"],
    "defaultCode": 58830,
    "grid": 24
  }, {
    "paths": ["M708 366l60 60-256 256-256-256 60-60 196 196z"],
    "tags": ["expand_more"],
    "defaultCode": 58831,
    "grid": 24
  }, {
    "paths": ["M640 384v-86h-256v428h256v-86h-170v-86h170v-84h-170v-86h170zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["explicit"],
    "defaultCode": 57374,
    "grid": 24
  }, {
    "paths": ["M606 606l162-350-350 162-162 350zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM512 466c26 0 46 20 46 46s-20 46-46 46-46-20-46-46 20-46 46-46z"],
    "tags": ["explore"],
    "defaultCode": 59514,
    "grid": 24
  }, {
    "paths": ["M854 854v-684l-684 684h684zM214 214v84h256v-84h-256zM854 86c46 0 84 38 84 84v684c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-684c0-46 38-84 84-84h684zM640 726h-86v-86h86v-86h86v86h84v86h-84v84h-86v-84z"],
    "tags": ["exposure"],
    "defaultCode": 58314,
    "grid": 24
  }, {
    "paths": ["M810 768h-84v-454l-128 44v-72l200-72h12v554zM170 470h342v84h-342v-84z"],
    "tags": ["exposure_neg_1"],
    "defaultCode": 58315,
    "grid": 24
  }, {
    "paths": ["M86 470h340v84h-340v-84zM702 214c103.361 0 172 46.875 172 150 0 16-2 34-8 50s-12 34-22 50c-21.913 35.061-50.22 70.22-80 100l-122 132h254v72h-368v-64l178-194c27.051-27.051 44.466-50.776 62-80 10.155-16.925 14-31.054 14-56 0-12 0-26-4-36-11.918-29.795-34.301-52-76-52-60.876 0-92 36.935-92 98h-92c0-51.336 20.69-92.69 48-120 31.385-31.385 73.692-50 136-50z"],
    "tags": ["exposure_neg_2"],
    "defaultCode": 58316,
    "grid": 24
  }, {
    "paths": ["M854 768h-86v-454l-128 44v-72l200-72h14v554zM426 298v172h172v84h-172v172h-84v-172h-172v-84h172v-172h84z"],
    "tags": ["exposure_plus_1"],
    "defaultCode": 58317,
    "grid": 24
  }, {
    "paths": ["M342 298v172h170v84h-170v172h-86v-172h-170v-84h170v-172h86zM684 696h254v72h-368v-64l178-194c27.051-27.051 44.466-50.776 62-80 9.657-16.095 16-33.377 16-56 0-27.976-9.972-45.963-22-62-12.776-17.035-30.076-26-60-26-30.802 0-54.673 12.673-70 28-13.992 13.992-22 43.42-22 70h-92c0-51.336 20.69-92.69 48-120 16-16 34-30 58-38s50-12 80-12c28 0 50 4 72 10 20 8 40 16 54 30 26.805 22.976 46 61.985 46 110 0 40.444-14.717 72.348-32 100-10 16-20 34-34 50s-30 34-46 50z"],
    "tags": ["exposure_plus_2"],
    "defaultCode": 58318,
    "grid": 24
  }, {
    "paths": ["M598 432c0-51.604-2.887-85.33-22-114-8-12-18-18-28-24s-22-8-36-8-26 2-36 8-20 12-28 24c-19.070 28.606-22 62.453-22 114v114c0 68.64 9.322 117.593 50 142 10 6 22 8 36 8 33.536 0 49.61-12.416 64-34 17.74-26.61 24-68.817 24-116v-114h-2zM336 446c0-137.059 42.756-232 176-232 93.018 0 143.69 47.837 164 124 8 30 14 64 14 108v88h-2c0 79.48-15.373 138.051-48 180-16 18-34 34-56 42s-46 12-72 12-50-4-72-12-40-24-56-42c-34.893-39.254-48-102.511-48-180v-88z"],
    "tags": ["exposure_zero"],
    "defaultCode": 58319,
    "grid": 24
  }, {
    "paths": ["M874 470c58 0 108 48 108 106s-50 106-108 106h-64v172c0 46-38 84-84 84h-162v-64c0-64-52-114-116-114s-116 50-116 114v64h-162c-46 0-84-38-84-84v-162h64c64 0 114-52 114-116s-50-116-114-116h-64v-162c0-46 38-84 84-84h172v-64c0-58 48-108 106-108s106 50 106 108v64h172c46 0 84 38 84 84v172h64z"],
    "tags": ["extension"],
    "defaultCode": 59515,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342 0-34-6-66-14-96-30 8-62 10-96 10-144 0-270-70-348-180-42 102-124 186-224 230-2 12-2 24-2 36 0 188 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM640 502c30 0 54 22 54 52s-24 54-54 54-54-24-54-54 24-52 54-52zM384 502c30 0 54 22 54 52s-24 54-54 54-54-24-54-54 24-52 54-52z"],
    "tags": ["face"],
    "defaultCode": 59516,
    "grid": 24
  }, {
    "paths": ["M554 256l364 256-364 256v-512zM170 768v-512l364 256z"],
    "tags": ["fast_forward"],
    "defaultCode": 57375,
    "grid": 24
  }, {
    "paths": ["M490 512l364-256v512zM470 768l-364-256 364-256v512z"],
    "tags": ["fast_rewind"],
    "defaultCode": 57376,
    "grid": 24
  }, {
    "paths": ["M512 910l-62-56c-220-200-364-330-364-492 0-132 102-234 234-234 74 0 146 36 192 90 46-54 118-90 192-90 132 0 234 102 234 234 0 162-144 294-364 494z"],
    "tags": ["favorite"],
    "defaultCode": 59517,
    "grid": 24
  }, {
    "paths": ["M516 792c204-184 338-306 338-430 0-86-64-148-150-148-66 0-130 42-152 100h-80c-22-58-86-100-152-100-86 0-150 62-150 148 0 124 134 246 338 430l4 4zM704 128c132 0 234 102 234 234 0 162-144 292-364 492l-62 56-62-54c-220-200-364-332-364-494 0-132 102-234 234-234 74 0 146 36 192 90 46-54 118-90 192-90z"],
    "tags": ["favorite_border"],
    "defaultCode": 59518,
    "grid": 24
  }, {
    "paths": ["M512 298v-84h-384v84h384zM512 470v-86h-384v86h384zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768z"],
    "tags": ["featured_play_list"],
    "defaultCode": 57453,
    "grid": 24
  }, {
    "paths": ["M512 512v-298h-384v298h384zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768z"],
    "tags": ["featured_video"],
    "defaultCode": 57454,
    "grid": 24
  }, {
    "paths": ["M554 426v-170h-84v170h84zM554 598v-86h-84v86h84zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["sms_failed"],
    "defaultCode": 58918,
    "grid": 24
  }, {
    "paths": ["M896 490v-42c0-36-28-64-64-64h-150v256h64v-86h50l36 86h64l-38-90c22-10 38-34 38-60zM538 640l76-256h-64l-44 146-42-146h-64l74 256h64zM342 576v-128c0-36-28-64-64-64h-150v256h150c36 0 64-28 64-64zM896 128c48 0 86 38 86 86v596c0 46-38 86-86 86h-768c-48 0-86-40-86-86v-596c0-48 38-86 86-86h768zM192 448h86v128h-86v-128zM746 448h86v42h-86v-42z"],
    "tags": ["fiber_dvr"],
    "defaultCode": 57437,
    "grid": 24
  }, {
    "paths": ["M170 512c0-188 154-342 342-342s342 154 342 342-154 342-342 342-342-154-342-342z"],
    "tags": ["fiber_manual_record"],
    "defaultCode": 57441,
    "grid": 24
  }, {
    "paths": ["M874 598v-214h-52v192h-48v-150h-54v150h-48v-192h-54v214c0 24 20 42 44 42h170c24 0 42-18 42-42zM576 438v-54h-170v256h170v-54h-106v-46h106v-54h-106v-48h106zM362 640v-256h-52v150l-108-150h-52v256h52v-150l110 150h50zM854 170c48 0 84 38 84 86v512c0 48-36 86-84 86h-684c-48 0-84-38-84-86v-512c0-48 36-86 84-86h684z"],
    "tags": ["fiber_new"],
    "defaultCode": 57438,
    "grid": 24
  }, {
    "paths": ["M854 640v-256h-54v150l-106-150h-54v256h54v-150l108 150h52zM534 640v-256h-64v256h64zM384 490v-42c0-36-28-64-64-64h-150v256h64v-86h86c36 0 64-28 64-64zM854 170c48 0 84 38 84 86v512c0 48-36 86-84 86h-684c-48 0-84-38-84-86v-512c0-48 36-86 84-86h684zM234 448h86v42h-86v-42z"],
    "tags": ["fiber_pin"],
    "defaultCode": 57450,
    "grid": 24
  }, {
    "paths": ["M726 182c148 38 256 170 256 330s-108 292-256 330v-88c100-34 170-130 170-242s-70-208-170-242v-88zM42 512c0-188 154-342 342-342s342 154 342 342-154 342-342 342-342-154-342-342z"],
    "tags": ["fiber_smart_record"],
    "defaultCode": 57442,
    "grid": 24
  }, {
    "paths": ["M214 768h596v86h-596v-86zM810 384l-298 298-298-298h170v-256h256v256h170z"],
    "tags": ["get_app"],
    "defaultCode": 59524,
    "grid": 24
  }, {
    "paths": ["M214 768h596v86h-596v-86zM384 682v-256h-170l298-298 298 298h-170v256h-256z"],
    "tags": ["file_upload"],
    "defaultCode": 58054,
    "grid": 24
  }, {
    "paths": ["M896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86zM680 440l152 200h-470l118-150 84 100z"],
    "tags": ["filter"],
    "defaultCode": 58323,
    "grid": 24
  }, {
    "paths": ["M896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598zM598 640v-342h-86v-84h170v426h-84zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86z"],
    "tags": ["filter_1"],
    "defaultCode": 58320,
    "grid": 24
  }, {
    "paths": ["M726 554v86h-256v-170c0-48 38-86 84-86h86v-86h-170v-84h170c46 0 86 36 86 84v86c0 48-40 86-86 86h-86v84h172zM896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86z"],
    "tags": ["filter_2"],
    "defaultCode": 58321,
    "grid": 24
  }, {
    "paths": ["M726 554c0 48-40 86-86 86h-170v-86h170v-84h-86v-86h86v-86h-170v-84h170c46 0 86 36 86 84v64c0 36-28 64-64 64 36 0 64 28 64 64v64zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86zM896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598z"],
    "tags": ["filter_3"],
    "defaultCode": 58322,
    "grid": 24
  }, {
    "paths": ["M896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598zM640 640v-170h-170v-256h84v170h86v-170h86v426h-86zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86z"],
    "tags": ["filter_4"],
    "defaultCode": 58324,
    "grid": 24
  }, {
    "paths": ["M726 554c0 48-40 86-86 86h-170v-86h170v-84h-170v-256h256v84h-172v86h86c46 0 86 38 86 86v84zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86zM896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598z"],
    "tags": ["filter_5"],
    "defaultCode": 58325,
    "grid": 24
  }, {
    "paths": ["M554 470v84h86v-84h-86zM554 640c-46 0-84-38-84-86v-256c0-48 38-84 84-84h172v84h-172v86h86c46 0 86 38 86 86v84c0 48-40 86-86 86h-86zM896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86z"],
    "tags": ["filter_6"],
    "defaultCode": 58326,
    "grid": 24
  }, {
    "paths": ["M554 640h-84l170-342h-170v-84h256v84zM896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86z"],
    "tags": ["filter_7"],
    "defaultCode": 58327,
    "grid": 24
  }, {
    "paths": ["M554 470v84h86v-84h-86zM554 298v86h86v-86h-86zM554 640c-46 0-84-38-84-86v-64c0-36 28-64 64-64-36 0-64-28-64-64v-64c0-48 38-84 84-84h86c46 0 86 36 86 84v64c0 36-28 64-64 64 36 0 64 28 64 64v64c0 48-40 86-86 86h-86zM896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86z"],
    "tags": ["filter_8"],
    "defaultCode": 58328,
    "grid": 24
  }, {
    "paths": ["M640 384v-86h-86v86h86zM640 214c46 0 86 36 86 84v256c0 48-40 86-86 86h-170v-86h170v-84h-86c-46 0-84-38-84-86v-86c0-48 38-84 84-84h86zM896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86z"],
    "tags": ["filter_9"],
    "defaultCode": 58329,
    "grid": 24
  }, {
    "paths": ["M896 384v-256h-598v598h598v-256h-86v84h-84v-84h-86v-86h86v-86h84v86h86zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598zM470 384h42v-42h-42v42zM598 512c0 48-40 86-86 86h-128v-86h128v-42h-42c-46 0-86-38-86-86v-42c0-48 40-86 86-86h42c46 0 86 38 86 86v170zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86z"],
    "tags": ["filter_9_plus"],
    "defaultCode": 58330,
    "grid": 24
  }, {
    "paths": ["M810 810v-596h-298v256zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596zM512 470l-298 340h298v-340z"],
    "tags": ["filter_b_and_w"],
    "defaultCode": 58331,
    "grid": 24
  }, {
    "paths": ["M512 384c70 0 128 58 128 128s-58 128-128 128-128-58-128-128 58-128 128-128zM810 810v-170h86v170c0 46-40 86-86 86h-170v-86h170zM810 128c46 0 86 40 86 86v170h-86v-170h-170v-86h170zM214 214v170h-86v-170c0-46 40-86 86-86h170v86h-170zM214 640v170h170v86h-170c-46 0-86-40-86-86v-170h86z"],
    "tags": ["filter_center_focus"],
    "defaultCode": 58332,
    "grid": 24
  }, {
    "paths": ["M810 768c70 0 128-58 128-128s-58-128-128-128h-64v-22c0-130-104-234-234-234-76 0-144 36-188 94 108 30 188 130 188 248h-86c0-94-76-172-170-172s-170 78-170 172 76 170 170 170h554zM826 428c110 8 198 100 198 212 0 118-96 214-214 214h-554c-142 0-256-114-256-256 0-132 100-240 228-254 54-102 160-174 284-174 156 0 284 110 314 258z"],
    "tags": ["filter_drama"],
    "defaultCode": 58333,
    "grid": 24
  }, {
    "paths": ["M768 342h-512v426h512zM854 854v-598h-192l-148-150-150 150h-194v598h684zM854 170c46 0 84 40 84 86v598c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-598c0-46 38-86 84-86h172l170-170 170 170h172z"],
    "tags": ["filter_frames"],
    "defaultCode": 58334,
    "grid": 24
  }, {
    "paths": ["M598 256l384 512h-940l256-342 192 256 68-50-120-162z"],
    "tags": ["terrain"],
    "defaultCode": 58724,
    "grid": 24
  }, {
    "paths": ["M256 554v-84h512v84h-512zM128 256h768v86h-768v-86zM426 768v-86h172v86h-172z"],
    "tags": ["filter_list"],
    "defaultCode": 57682,
    "grid": 24
  }, {
    "paths": ["M896 726v-598h-598v598h598zM896 42c46 0 86 40 86 86v598c0 46-40 84-86 84h-598c-46 0-84-38-84-84v-598c0-46 38-86 84-86h598zM128 214v682h682v86h-682c-46 0-86-40-86-86v-682h86z"],
    "tags": ["filter_none"],
    "defaultCode": 58336,
    "grid": 24
  }, {
    "paths": ["M242 842l60-60c48 36 106 60 168 68v86c-86-8-164-42-228-94zM554 850c62-8 120-32 166-68l62 60c-64 52-142 86-228 94v-86zM782 722c36-48 60-104 68-166h86c-8 86-42 162-94 226zM640 512c0 70-58 128-128 128s-128-58-128-128 58-128 128-128 128 58 128 128zM174 554c8 62 32 120 68 166l-60 62c-52-64-86-142-94-228h86zM242 302c-36 48-60 106-68 168h-86c8-86 42-164 94-228zM850 470c-8-62-32-120-68-168l60-60c52 64 86 142 94 228h-86zM782 182l-60 60c-48-36-106-60-168-68v-86c86 8 164 42 228 94zM470 174c-62 8-120 32-168 68l-60-60c64-52 142-86 228-94v86z"],
    "tags": ["filter_tilt_shift"],
    "defaultCode": 58338,
    "grid": 24
  }, {
    "paths": ["M512 682c94 0 170-76 170-170s-76-170-170-170-170 76-170 170 76 170 170 170zM98 750c0-98.433 62.724-204.242 164-238-12-4-24-12-36-18-82-48-128-132-128-220 76-44 174-48 256 0 12 6 24 14 34 22-2-14-4-26-4-40 0-94 52-178 128-222 76 44 128 128 128 222 0 14-2 26-4 40 10-8 22-16 34-22 82-48 180-44 256 0 0 88-46 172-128 220-12 6-24 14-36 18 12 4 24 12 36 18 82 48 128 132 128 220-76 44-174 48-256 0-12-6-24-14-34-22 2 14 4 26 4 40 0 94-52 178-128 222-76-44-128-128-128-222 0-14 2-26 4-40-10 8-22 16-34 22-82 48-180 44-256 0z"],
    "tags": ["filter_vintage"],
    "defaultCode": 58339,
    "grid": 24
  }, {
    "paths": ["M384 554c0-70 58-128 128-128s128 58 128 128-58 128-128 128-128-58-128-128zM854 836l-164-164c22-34 36-74 36-118 0-118-96-212-214-212s-214 94-214 212 96 214 214 214c44 0 84-14 118-36l188 190c-14 10-30 16-50 16h-512c-46 0-86-38-86-84l2-684c0-46 38-84 84-84h342l256 256v494z"],
    "tags": ["find_in_page"],
    "defaultCode": 59520,
    "grid": 24
  }, {
    "paths": ["M710 646l206 208-62 62-208-206c-50 36-110 58-176 58-82 0-158-34-212-88l-88 88v-256h256l-108 108c38 38 94 62 152 62 104 0 188-72 208-170h86c-6 50-26 96-54 134zM470 256c-104 0-190 72-210 170h-86c20-144 146-256 296-256 82 0 156 34 210 88l88-88v256h-256l108-108c-38-38-92-62-150-62z"],
    "tags": ["find_replace"],
    "defaultCode": 59521,
    "grid": 24
  }, {
    "paths": ["M636 938h-6c-68-18-112-44-158-90-60-60-92-138-92-222 0-70 58-126 130-126s132 56 132 126c0 46 38 82 88 82s90-36 90-82c0-160-140-292-310-292-122 0-232 68-282 172-16 34-24 76-24 120 0 34 2 86 28 154 9.157 27.471-30.939 36.654-40 14-20-56-32-110-32-168 0-52 10-98 30-138 56-120 182-198 320-198 194 0 352 152 352 336 0 70-60 124-132 124s-130-54-130-124c0-46-40-84-90-84s-88 38-88 84c0 72 28 140 80 192 40 40 80 62 140 78 12 2 16 14 14 26-2 10-12 16-20 16zM530 626c0 97.515 80.578 182 192 182 19.928 0 65.546-14.722 70 12 2 12-6 24-18 26-24 4-46 4-52 4-50 0-96-12-132-38-64-44-102-112-102-186 0-12 10-22 22-22s20 10 20 22zM416 930c-6 0-10-2-14-6-38-38-58-62-86-114-30-52-46-116-46-184 0-126 108-230 242-230s242 104 242 230c0 12-10 20-22 20s-22-8-22-20c0-104-88-188-198-188s-198 84-198 188c0 62 12 118 38 164 28 50 48 70 80 104 8 8 8 22 0 30-4 4-10 6-16 6zM150 414c-17.624 0-27.785-15.691-18-32 42-60 96-108 160-140 134-70 306-70 440 0 64 32 118 78 160 138 6 10 4 24-6 30s-24 4-30-6c-38-54-86-94-144-124-122-62-278-64-400 0-58 30-108 72-146 126-4 6-10 8-16 8zM760 190c-4 0-8 0-10-2-82-42-154-60-238-60s-166 20-238 60c-23.381 14.029-43.278-24.033-20-38 80-44 166-64 258-64 90 0 170 20 258 64 18.211 10.927 10.406 40-10 40z"],
    "tags": ["fingerprint"],
    "defaultCode": 59661,
    "grid": 24
  }, {
    "paths": ["M256 256h86v512h-86v-512zM786 708l-60 60-256-256 256-256 60 60-196 196z"],
    "tags": ["first_page"],
    "defaultCode": 58844,
    "grid": 24
  }, {
    "paths": ["M878 634l60 62-90 90 60 62-60 60-62-60-90 90-62-60-60 60-62-60 152-152-366-366-152 152-60-62 60-60-60-62 90-90-60-62 60-60 62 60 90-90 62 60 60-60 62 60-152 152 366 366 152-152 60 62z"],
    "tags": ["fitness_center"],
    "defaultCode": 60227,
    "grid": 24
  }, {
    "paths": ["M470 982v-256h84v256h-84zM240 724l92-92 60 60-92 92zM632 692l60-60 92 92-60 60zM512 384c70 0 128 58 128 128s-58 128-128 128-128-58-128-128 58-128 128-128zM726 470h256v84h-256v-84zM784 300l-92 92-60-60 92-92zM554 42v256h-84v-256h84zM392 332l-60 60-92-92 60-60zM298 470v84h-256v-84h256z"],
    "tags": ["flare"],
    "defaultCode": 58340,
    "grid": 24
  }, {
    "paths": ["M718 326h100l-50-156zM810 86l138 384h-82l-30-86h-136l-30 86h-82l138-384h84zM128 86h426l-170 384h170l-298 512v-384h-128v-512z"],
    "tags": ["flash_auto"],
    "defaultCode": 58341,
    "grid": 24
  }, {
    "paths": ["M726 426l-66 114-362-362v-92h428l-172 340h172zM140 128l670 672-54 54-176-178-154 262v-384h-128v-158l-212-214z"],
    "tags": ["flash_off"],
    "defaultCode": 58342,
    "grid": 24
  }, {
    "paths": ["M298 86h428l-172 340h172l-300 512v-384h-128v-468z"],
    "tags": ["flash_on"],
    "defaultCode": 58343,
    "grid": 24
  }, {
    "paths": ["M598 616c-136.472-37.528-274.090-73.91-412-110l-68-20v-220l62 16 40 100 212 56v-352l82 22 118 384 226 60c34 10 54 46 46 80-10 34-44 52-78 44zM106 810h812v86h-812v-86z"],
    "tags": ["flight_land"],
    "defaultCode": 59652,
    "grid": 24
  }, {
    "paths": ["M942 412c8 34-12 68-46 78-137.558 36.442-275.002 72.998-412 110l-226 60-68 20c-37.52-63.813-74.693-127.974-112-192l62-16 84 64 212-56-176-306 82-22 294 274 228-60c34-10 70 12 78 46zM106 810h812v86h-812v-86z"],
    "tags": ["flight_takeoff"],
    "defaultCode": 59653,
    "grid": 24
  }, {
    "paths": ["M810 896v-86h86c0 46-40 86-86 86zM810 554v-84h86v84h-86zM640 214v-86h86v86h-86zM810 726v-86h86v86h-86zM470 982v-940h84v940h-84zM810 128c46 0 86 40 86 86h-86v-86zM128 214c0-46 40-86 86-86h170v86h-170v596h170v86h-170c-46 0-86-40-86-86v-596zM810 384v-86h86v86h-86zM640 896v-86h86v86h-86z"],
    "tags": ["flip"],
    "defaultCode": 58344,
    "grid": 24
  }, {
    "paths": ["M640 726v-86h86v86h-86zM640 214v-86h86v86h-86zM214 298v512h512v86h-512c-48 0-86-40-86-86v-512h86zM810 726v-86h86c0 46-40 86-86 86zM810 384v-86h86v86h-86zM810 554v-84h86v84h-86zM384 726c-48 0-86-40-86-86h86v86zM554 128v86h-84v-86h84zM810 128c46 0 86 40 86 86h-86v-86zM554 640v86h-84v-86h84zM384 128v86h-86c0-46 38-86 86-86zM384 470v84h-86v-84h86zM384 298v86h-86v-86h86z"],
    "tags": ["flip_to_back"],
    "defaultCode": 59522,
    "grid": 24
  }, {
    "paths": ["M298 896v-86h86v86h-86zM470 896v-86h84v86h-84zM810 640v-426h-426v426h426zM810 128c46 0 86 40 86 86v426c0 46-40 86-86 86h-426c-48 0-86-40-86-86v-426c0-46 38-86 86-86h426zM640 896v-86h86v86h-86zM128 384v-86h86v86h-86zM214 896c-48 0-86-40-86-86h86v86zM128 726v-86h86v86h-86zM128 554v-84h86v84h-86z"],
    "tags": ["flip_to_front"],
    "defaultCode": 59523,
    "grid": 24
  }, {
    "paths": ["M426 170l86 86h342c46 0 84 40 84 86v426c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h256z"],
    "tags": ["folder"],
    "defaultCode": 58055,
    "grid": 24
  }, {
    "paths": ["M854 768v-426h-684v426h684zM854 256c46 0 84 40 84 86v426c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h256l86 86h342z"],
    "tags": ["folder_open"],
    "defaultCode": 58056,
    "grid": 24
  }, {
    "paths": ["M810 726v-44c0-56-114-84-170-84s-170 28-170 84v44h340zM640 384c-46 0-86 40-86 86s40 84 86 84 86-38 86-84-40-86-86-86zM854 256c46 0 84 40 84 86v426c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h256l86 86h342z"],
    "tags": ["folder_shared"],
    "defaultCode": 58057,
    "grid": 24
  }, {
    "paths": ["M766 726l-34-142 110-96-144-12-58-134-58 134-144 12 110 96-34 142 126-74zM854 256c46 0 84 40 84 86v426c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h256l86 86h342z"],
    "tags": ["folder_special"],
    "defaultCode": 58903,
    "grid": 24
  }, {
    "paths": ["M680 790h90l-218-556h-80l-218 556h90l48-128h240zM854 86c46 0 84 38 84 84v684c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-684c0-46 38-84 84-84h684zM424 576l88-236 88 236h-176z"],
    "tags": ["font_download"],
    "defaultCode": 57703,
    "grid": 24
  }, {
    "paths": ["M128 128h768v86h-768v-86zM298 298h428v86h-428v-86zM128 554v-84h768v84h-768zM128 896v-86h768v86h-768zM298 640h428v86h-428v-86z"],
    "tags": ["format_align_center"],
    "defaultCode": 57908,
    "grid": 24
  }, {
    "paths": ["M128 128h768v86h-768v-86zM128 384v-86h768v86h-768zM128 554v-84h768v84h-768zM128 726v-86h768v86h-768zM128 896v-86h768v86h-768z"],
    "tags": ["format_align_justify"],
    "defaultCode": 57909,
    "grid": 24
  }, {
    "paths": ["M128 128h768v86h-768v-86zM128 896v-86h768v86h-768zM128 554v-84h768v84h-768zM640 298v86h-512v-86h512zM640 640v86h-512v-86h512z"],
    "tags": ["format_align_left"],
    "defaultCode": 57910,
    "grid": 24
  }, {
    "paths": ["M128 128h768v86h-768v-86zM384 384v-86h512v86h-512zM128 554v-84h768v84h-768zM384 726v-86h512v86h-512zM128 896v-86h768v86h-768z"],
    "tags": ["format_align_right"],
    "defaultCode": 57911,
    "grid": 24
  }, {
    "paths": ["M576 662c36 0 64-28 64-64s-28-64-64-64h-150v128h150zM426 278v128h128c36 0 64-28 64-64s-28-64-64-64h-128zM666 460c56 26 92 82 92 146 0 90-68 162-158 162h-302v-598h268c96 0 170 76 170 172 0 44-28 90-70 118z"],
    "tags": ["format_bold"],
    "defaultCode": 57912,
    "grid": 24
  }, {
    "paths": ["M256 214h598v128h-248l-68 160-90-88 30-72h-102l-120-120v-8zM140 214l12 10 616 618-54 54-242-242-66 156h-128l104-246-296-296z"],
    "tags": ["format_clear"],
    "defaultCode": 57913,
    "grid": 24
  }, {
    "paths": ["M0 854h1024v170h-1024v-170zM810 490c0 0 86 94 86 150 0 46-40 86-86 86s-84-40-84-86c0-56 84-150 84-150zM222 426h410l-206-204zM706 382c26 26 26 66 0 90l-234 234c-12 12-30 20-46 20s-32-8-44-20l-236-234c-26-24-26-64 0-90l220-220-102-102 62-60z"],
    "tags": ["format_color_fill"],
    "defaultCode": 57914,
    "grid": 24
  }, {
    "paths": ["M224 224l624 624-54 54-114-112c-46 40-104 64-168 64-142 0-256-114-256-256 0-52 24-114 56-176l-142-142zM768 598c0 20-2 38-6 56l-366-368c60-86 116-150 116-150s256 292 256 462z"],
    "tags": ["format_color_reset"],
    "defaultCode": 57915,
    "grid": 24
  }, {
    "paths": ["M410 512h204l-102-270zM470 128h84l234 598h-96l-46-128h-268l-48 128h-96zM0 854h1024v170h-1024v-170z"],
    "tags": ["format_color_text"],
    "defaultCode": 57916,
    "grid": 24
  }, {
    "paths": ["M470 554v-84h426v84h-426zM470 384v-86h426v86h-426zM128 128h768v86h-768v-86zM128 896v-86h768v86h-768zM128 512l170-170v340zM470 726v-86h426v86h-426z"],
    "tags": ["format_indent_decrease"],
    "defaultCode": 57917,
    "grid": 24
  }, {
    "paths": ["M470 554v-84h426v84h-426zM470 384v-86h426v86h-426zM128 128h768v86h-768v-86zM470 726v-86h426v86h-426zM128 342l170 170-170 170v-340zM128 896v-86h768v86h-768z"],
    "tags": ["format_indent_increase"],
    "defaultCode": 57918,
    "grid": 24
  }, {
    "paths": ["M426 170h342v128h-120l-144 342h94v128h-342v-128h120l144-342h-94v-128z"],
    "tags": ["format_italic"],
    "defaultCode": 57919,
    "grid": 24
  }, {
    "paths": ["M426 554v-84h512v84h-512zM426 810v-84h512v84h-512zM426 214h512v84h-512v-84zM256 298v428h106l-148 148-150-148h106v-428h-106l150-148 148 148h-106z"],
    "tags": ["format_line_spacing"],
    "defaultCode": 57920,
    "grid": 24
  }, {
    "paths": ["M298 214h598v84h-598v-84zM298 554v-84h598v84h-598zM298 810v-84h598v84h-598zM170 704c36 0 64 30 64 64s-30 64-64 64-64-30-64-64 28-64 64-64zM170 192c36 0 64 28 64 64s-28 64-64 64-64-28-64-64 28-64 64-64zM170 448c36 0 64 28 64 64s-28 64-64 64-64-28-64-64 28-64 64-64z"],
    "tags": ["format_list_bulleted"],
    "defaultCode": 57921,
    "grid": 24
  }, {
    "paths": ["M298 554v-84h598v84h-598zM298 810v-84h598v84h-598zM298 214h598v84h-598v-84zM86 470v-44h128v40l-78 88h78v44h-128v-40l76-88h-76zM128 342v-128h-42v-44h84v172h-42zM86 726v-44h128v172h-128v-44h84v-20h-42v-44h42v-20h-84z"],
    "tags": ["format_list_numbered"],
    "defaultCode": 57922,
    "grid": 24
  }, {
    "paths": ["M768 170h128v342h-342v384c0 24-18 42-42 42h-86c-24 0-42-18-42-42v-470h426v-170h-42v42c0 24-18 44-42 44h-512c-24 0-44-20-44-44v-170c0-24 20-42 44-42h512c24 0 42 18 42 42v42z"],
    "tags": ["format_paint"],
    "defaultCode": 57923,
    "grid": 24
  }, {
    "paths": ["M598 726l84-172h-128v-256h256v256l-84 172h-128zM256 726l86-172h-128v-256h256v256l-86 172h-128z"],
    "tags": ["format_quote"],
    "defaultCode": 57924,
    "grid": 24
  }, {
    "paths": ["M456 544h112l-56-164zM586 598h-150l-30 84h-70l146-384h60l144 384h-68zM810 214h86v-86h-86v86zM896 896v-86h-86v86h86zM726 810v-84h84v-428h-84v-84h-428v84h-84v428h84v84h428zM214 896v-86h-86v86h86zM128 128v86h86v-86h-86zM982 298h-86v428h86v256h-256v-86h-428v86h-256v-256h86v-428h-86v-256h256v86h428v-86h256v256z"],
    "tags": ["format_shapes"],
    "defaultCode": 57950,
    "grid": 24
  }, {
    "paths": ["M128 512v-128h384v128h-128v298h-128v-298h-128zM384 170h554v128h-212v512h-128v-512h-214v-128z"],
    "tags": ["format_size"],
    "defaultCode": 57925,
    "grid": 24
  }, {
    "paths": ["M128 598v-86h768v86h-768zM214 170h596v128h-212v128h-172v-128h-212v-128zM426 810v-128h172v128h-172z"],
    "tags": ["format_strikethrough"],
    "defaultCode": 57926,
    "grid": 24
  }, {
    "paths": ["M896 768l-170 170v-128h-512v-84h512v-128zM384 426c-94 0-170-76-170-170s76-170 170-170h342v84h-86v470h-86v-470h-84v470h-86v-214z"],
    "tags": ["format_textdirection_l_to_r"],
    "defaultCode": 57927,
    "grid": 24
  }, {
    "paths": ["M342 726h512v84h-512v128l-172-170 172-170v128zM426 426c-94 0-170-76-170-170s76-170 170-170h342v84h-86v470h-84v-470h-86v470h-86v-214z"],
    "tags": ["format_textdirection_r_to_l"],
    "defaultCode": 57928,
    "grid": 24
  }, {
    "paths": ["M214 810h596v86h-596v-86zM512 726c-142 0-256-114-256-256v-342h106v342c0 82 68 148 150 148s150-66 150-148v-342h106v342c0 142-114 256-256 256z"],
    "tags": ["format_underlined"],
    "defaultCode": 57929,
    "grid": 24
  }, {
    "paths": ["M726 512c0 24-20 42-44 42h-426l-170 172v-598c0-24 18-42 42-42h554c24 0 44 18 44 42v384zM896 256c24 0 42 18 42 42v640l-170-170h-470c-24 0-42-18-42-42v-86h554v-384h86z"],
    "tags": ["question_answer"],
    "defaultCode": 59567,
    "grid": 24
  }, {
    "paths": ["M512 342v-172l342 342-342 342v-172h-342v-340h342z"],
    "tags": ["forward"],
    "defaultCode": 57684,
    "grid": 24
  }, {
    "paths": ["M564 648c0 6.531 12.65 14 20 14 4 0 10 0 14-4l8-10s4-8 4-12v-86c0 0-4-8-4-12 0-5.505-16.424-14-22-14-4 0-8 2-12 6l-8 8s-6 8-6 12v86s6 8 6 12zM644 606c0 12 0 26-4 34l-12 26s-14 12-22 12-18 4-26 4-18 0-26-4-12-8-20-12c-13.488-6.744-18-39.492-18-60v-30c0-12 0-26 4-34l14-26s12-12 20-12 18-4 26-4 18 0 26 4 14 8 22 12 8 14 12 26 4 22 4 34v30zM466 682h-40v-140l-42 12v-30l76-24h6v182zM170 554c0-188 154-340 342-340v-172l214 214-214 214v-172c-140 0-256 116-256 256s116 256 256 256 256-116 256-256h86c0 188-154 342-342 342s-342-154-342-342z"],
    "tags": ["forward_10"],
    "defaultCode": 57430,
    "grid": 24
  }, {
    "paths": ["M170 554c0-188 154-340 342-340v-172l214 214-214 214v-172c-140 0-256 116-256 256s116 256 256 256 256-116 256-256h86c0 188-154 342-342 342s-342-154-342-342zM568 648c0 6.531 12.65 14 20 14 4 0 10 0 14-4l8-10s4-8 4-12v-86c0 0-4-8-4-12 0-5.505-16.424-14-22-14-4 0-8 2-12 6l-8 8s-4 8-4 12v86s4 8 4 12zM652 606c0 12 0 26-4 34l-12 26s-14 12-22 12-18 4-26 4c-20.252 0-32.299-9.149-46-16-8-4-8-14-12-26s-6-22-6-34v-30c0-12 2-26 6-34l12-26s14-12 22-12 16-4 24-4 18 0 26 4 14 8 22 12 8 14 12 26 4 22 4 34v30zM426 576c16.239 0 30-9.918 30-26v-8s-4-4-4-8-4-4-8-4h-22s-4 4-8 4-4 4-4 8v8h-44c0-19.788 17.639-46 36-46 4 0 16-4 20-4 17.345 0 35.264 5.632 48 12 10.13 5.065 16 24.218 16 38v14s-4 8-4 12-4 8-8 8-10 6-14 10c8 4 18 8 22 16s8 18 8 26 0 18-4 22-8 12-12 16-14 8-22 8-18 4-26 4-16 0-20-4-14-4-22-8c-11.162-5.581-18-27.017-18-42h36v8s4 4 4 8 4 4 8 4h22s4-4 8-4 4-4 4-8v-22s-4-4-4-8-4-4-8-4h-26v-30h16z"],
    "tags": ["forward_30"],
    "defaultCode": 57431,
    "grid": 24
  }, {
    "paths": ["M500 580c-3.584 1.434-14 4.805-14 8 0 4-4 6-4 6h-26l10-94h102v30h-74l-4 38s4 0 4-4 6-2 6-6 4 0 8 0h8c8 0 18 2 22 6s12 8 16 12c8.873 8.873 18 27.257 18 46 0 8 0 18-4 22s-6 14-14 22c-11.246 11.246-26.59 16-46 16-8 0-18 0-22-4s-12-4-20-8c-11.191-5.596-18-22.554-18-38h34c0 14.809 10.59 20 26 20 4 0 8 0 12-4l10-8s4-8 4-12v-26l-4-8-10-10s-8-4-12-4h-8zM170 554c0-188 154-340 342-340v-172l214 214-214 214v-172c-140 0-256 116-256 256s116 256 256 256 256-116 256-256h86c0 188-154 342-342 342s-342-154-342-342z"],
    "tags": ["forward_5"],
    "defaultCode": 57432,
    "grid": 24
  }, {
    "paths": ["M170 810h684v86h-684v-86zM854 342v-128h-86v128h86zM854 128c48 0 84 38 84 86v128c0 46-36 84-84 84h-86v128c0 94-76 172-170 172h-256c-94 0-172-78-172-172v-426h684z"],
    "tags": ["free_breakfast"],
    "defaultCode": 60228,
    "grid": 24
  }, {
    "paths": ["M598 214h212v212h-84v-128h-128v-84zM726 726v-128h84v212h-212v-84h128zM214 426v-212h212v84h-128v128h-84zM298 598v128h128v84h-212v-212h84z"],
    "tags": ["fullscreen"],
    "defaultCode": 58832,
    "grid": 24
  }, {
    "paths": ["M682 342h128v84h-212v-212h84v128zM598 810v-212h212v84h-128v128h-84zM342 342v-128h84v212h-212v-84h128zM214 682v-84h212v212h-84v-128h-128z"],
    "tags": ["fullscreen_exit"],
    "defaultCode": 58833,
    "grid": 24
  }, {
    "paths": ["M768 170v128h-298l212 214-212 214h298v128h-512v-86l278-256-278-256v-86h512z"],
    "tags": ["functions"],
    "defaultCode": 57930,
    "grid": 24
  }, {
    "paths": ["M896 854v-556c0-24-18-42-42-42h-376l50 172h82v-44h46v44h154v44h-54c-14 54-44 106-82 150l116 114-30 32-116-114-38 38 34 118-86 86h300c24 0 42-18 42-42zM596 518c10 20 26 46 48 72 52-62 66-118 66-118h-170l14 46h42zM564 550l26 94 24-22c-20-22-36-46-50-72zM474 452c0-9.841-0.281-22.561-4-30h-168v66h94c-6 26-32 64-90 64-56 0-102-48-102-104s46-104 102-104c32 0 52 14 64 26l4 2 52-50-4-2c-32-30-72-46-116-46-96 0-174 78-174 174s78 174 174 174c98 0 168-70 168-170zM854 214c46 0 84 38 84 84v556c0 46-38 84-84 84h-342l-42-128h-300c-46 0-84-38-84-84v-556c0-46 38-84 84-84h256l38 128h390z"],
    "tags": ["g_translate"],
    "defaultCode": 59687,
    "grid": 24
  }, {
    "paths": ["M704 384h234v256h-234l-128-128zM384 704l128-128 128 128v234h-256v-234zM320 384l128 128-128 128h-234v-256h234zM640 320l-128 128-128-128v-234h256v234z"],
    "tags": ["games"],
    "defaultCode": 57377,
    "grid": 24
  }, {
    "paths": ["M164 404l240 242-120 120-242-240zM526 42l240 242-120 120-242-240zM224 344l120-120 604 604-120 120zM42 896h512v86h-512v-86z"],
    "tags": ["gavel"],
    "defaultCode": 59662,
    "grid": 24
  }, {
    "paths": ["M592 792c30 0 80-36 92-150-92 24-124 92-124 118 0 20 18 32 32 32zM196 294l-74-72c10-12 20-24 36-40 10-10 60-54 116-54 38 0 108 30 108 122 0 58-22 92-56 140-20 28-64 104-78 150-16 46-6 82 14 82 18 0 38-24 48-36 10-10 74-84 98-116 32-40 114-120 210-120 126 0 166 108 172 178h106v106h-104c-18 204-132 262-202 262-76 0-136-60-136-132s68-202 230-230c-4-34-6-76-76-76-54 0-122 82-174 146-48 58-84 104-130 118-99.552 31.437-170-56.487-170-146 0-104 112-252 122-270 12-20 34-56 12-64-14-6-42 22-72 52z"],
    "tags": ["gesture"],
    "defaultCode": 57685,
    "grid": 24
  }, {
    "paths": ["M810 448h-128v42h86v64h-86v86h-64v-256h192v64zM384 384c26 0 42 20 42 42v22h-148v128h84v-64h64v86c0 22-16 42-42 42h-128c-26 0-42-20-42-42v-172c0-22 16-42 42-42h128zM490 384h64v256h-64v-256z"],
    "tags": ["gif"],
    "defaultCode": 59656,
    "grid": 24
  }, {
    "paths": ["M1022 388c2 2 2 8 0 10l-50 64c-2 2-6 4-8 4l-30-6-14 44c-6 10-20 10-26 0l-28-60-46-10-94 224 34 272c0 6-4 8-8 8h-40c-4 0-6-2-8-6l-40-162-20-34-50 196c0 4-4 6-8 6h-42c-4 0-8-4-8-8l46-270h-270l-70 132 16 136c2 6-2 10-8 10h-40c-2 0-6 0-8-4l-56-204-68 78 12 120c2 6-2 10-8 10h-44c-4 0-8-2-8-4l-26-112 42-164v-288s-46-18-46-60h548c0 0 96 2 190-66 0 0-16-44 12-72 0 0 56 40 72 50 20 12 34-10 28-28-4-12-18-56-90-84-9.158-3.053-30.421-4.736-26-18 0-4 4-6 8-6 88 12 140 84 154 116 2 4 40 30 36 76 0 6 0 10 4 14z"],
    "tags": ["goat"],
    "grid": 24
  }, {
    "paths": ["M726 252l-256 132v386c122 6 212 42 212 84 0 46-114 84-256 84s-256-38-256-84c0-32 52-60 128-74v74h86v-768zM768 832c0-36 28-64 64-64s64 28 64 64-28 64-64 64-64-28-64-64z"],
    "tags": ["golf_course"],
    "defaultCode": 60229,
    "grid": 24
  }, {
    "paths": ["M512 810c166 0 298-132 298-298s-132-298-298-298-298 132-298 298 132 298 298 298zM894 470h88v84h-88c-20 178-162 320-340 340v88h-84v-88c-178-20-320-162-340-340h-88v-84h88c20-178 162-320 340-340v-88h84v88c178 20 320 162 340 340zM512 342c94 0 170 76 170 170s-76 170-170 170-170-76-170-170 76-170 170-170z"],
    "tags": ["my_location"],
    "defaultCode": 58716,
    "grid": 24
  }, {
    "paths": ["M512 810c166 0 298-132 298-298s-132-298-298-298-298 132-298 298 132 298 298 298zM894 470h88v84h-88c-20 178-162 320-340 340v88h-84v-88c-178-20-320-162-340-340h-88v-84h88c20-178 162-320 340-340v-88h84v88c178 20 320 162 340 340z"],
    "tags": ["location_searching"],
    "defaultCode": 57783,
    "grid": 24
  }, {
    "paths": ["M694 748l-418-418c-38 50-62 114-62 182 0 166 132 298 298 298 68 0 132-24 182-62zM128 182l54-54 714 714-54 54-88-88c-56 46-124 78-200 86v88h-84v-88c-178-20-320-162-340-340h-88v-84h88c8-76 40-144 86-200zM894 470h88v84h-88c-6 48-20 96-42 136l-64-64c14-34 22-74 22-114 0-166-132-298-298-298-40 0-80 8-114 22l-64-64c42-22 88-36 136-42v-88h84v88c178 20 320 162 340 340z"],
    "tags": ["location_disabled"],
    "defaultCode": 57782,
    "grid": 24
  }, {
    "paths": ["M512 736l-264 160 70-300-232-202 306-26 120-282 120 282 306 26-232 202 70 300z"],
    "tags": ["star"],
    "defaultCode": 59448,
    "grid": 24
  }, {
    "paths": ["M810 470v-256h-596v256h84v84h86v86h86v-86h84v86h86v-86h86v-84h84zM726 768v-86h-86v86h86zM554 768v-86h-84v86h84zM384 768v-86h-86v86h86zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596zM298 384h86v86h-86v-86zM640 384h86v86h-86v-86zM470 384h84v86h86v84h-86v-84h-84v84h-86v-84h86v-86zM726 554v86h84v-86h-84zM298 554h-84v86h84v-86z"],
    "tags": ["gradient"],
    "defaultCode": 58345,
    "grid": 24
  }, {
    "paths": ["M426 170c46 0 86 40 86 86s-40 86-86 86-84-40-84-86 38-86 84-86zM598 342c46 0 84 38 84 84s-38 86-84 86-86-40-86-86 40-84 86-84zM768 512c46 0 86 40 86 86s-40 84-86 84-86-38-86-84 40-86 86-86zM598 682c46 0 84 40 84 86s-38 86-84 86-86-40-86-86 40-86 86-86zM768 342c-46 0-86-40-86-86s40-86 86-86 86 40 86 86-40 86-86 86zM256 682c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM256 342c46 0 86 38 86 84s-40 86-86 86-86-40-86-86 40-84 86-84zM426 512c46 0 86 40 86 86s-40 84-86 84-84-38-84-84 38-86 84-86z"],
    "tags": ["grain"],
    "defaultCode": 58346,
    "grid": 24
  }, {
    "paths": ["M810 426h86v172h-86v-172zM640 768v-512h86v512h-86zM128 598v-172h86v172h-86zM470 938v-852h84v852h-84zM298 768v-512h86v512h-86z"],
    "tags": ["graphic_eq"],
    "defaultCode": 57784,
    "grid": 24
  }, {
    "paths": ["M682 854h62l-62-62v62zM598 854v-148l-24-24h-148v172h172zM342 598v-148l-24-24h-148v172h172zM342 854v-172h-172v172h172zM170 280v62h62zM426 536v62h62zM54 54l916 916-54 54-86-86h-660c-46 0-84-38-84-84v-660l-86-86zM682 170v172h172v-172h-172zM342 170h-62l-86-84h660c46 0 84 38 84 84v660l-84-86v-62h-62l-86-84h148v-172h-172v148l-84-86v-62h-62l-86-84h148v-172h-172v148l-84-86v-62z"],
    "tags": ["grid_off"],
    "defaultCode": 58347,
    "grid": 24
  }, {
    "paths": ["M854 342v-172h-172v172h172zM854 598v-172h-172v172h172zM854 854v-172h-172v172h172zM598 342v-172h-172v172h172zM598 598v-172h-172v172h172zM598 854v-172h-172v172h172zM342 342v-172h-172v172h172zM342 598v-172h-172v172h172zM342 854v-172h-172v172h172zM854 86c46 0 84 38 84 84v684c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-684c0-46 38-84 84-84h684z"],
    "tags": ["grid_on"],
    "defaultCode": 58348,
    "grid": 24
  }, {
    "paths": ["M682 554c100 0 300 50 300 150v106h-256v-106c0-64-34-112-84-148 14-2 28-2 40-2zM342 554c100 0 298 50 298 150v106h-598v-106c0-100 200-150 300-150zM342 470c-70 0-128-58-128-128s58-128 128-128 126 58 126 128-56 128-126 128zM682 470c-70 0-128-58-128-128s58-128 128-128 128 58 128 128-58 128-128 128z"],
    "tags": ["people"],
    "defaultCode": 59387,
    "grid": 24
  }, {
    "paths": ["M554 554c86 0 256 42 256 128v86h-512v-86c0-86 170-128 256-128zM838 562c86 14 186 54 186 120v86h-128v-86c0-50-22-88-58-120zM554 470c-70 0-128-58-128-128s58-128 128-128 128 58 128 128-58 128-128 128zM768 470c-14 0-26-2-38-6 24-34 38-76 38-122s-14-88-38-122c12-4 24-6 38-6 70 0 128 58 128 128s-58 128-128 128zM342 426v86h-128v128h-86v-128h-128v-86h128v-128h86v128h128z"],
    "tags": ["group_add"],
    "defaultCode": 59376,
    "grid": 24
  }, {
    "paths": ["M682 746c58 0 108-48 108-106s-50-106-108-106-106 48-106 106 48 106 106 106zM406 342c0 58 48 106 106 106s106-48 106-106-48-108-106-108-106 50-106 108zM342 746c58 0 106-48 106-106s-48-106-106-106-108 48-108 106 50 106 108 106zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["group_work"],
    "defaultCode": 59526,
    "grid": 24
  }, {
    "paths": ["M618 576v-128h86v128h-86zM554 384v256h172c24 0 42-18 42-42v-172c0-24-18-42-42-42h-172zM470 640v-256h-64v106h-86v-106h-64v256h64v-86h86v86h64zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h596z"],
    "tags": ["hd"],
    "defaultCode": 57426,
    "grid": 24
  }, {
    "paths": ["M106 106c270.848 271.818 543.632 541.7 816 812l-48 46-324-324h-144v-146l-64-64v210h-64v-106h-86v106h-64v-256h64v86h86v-86h16l-234-234zM554 448h-16l-64-64h80c34 0 64 30 64 64v82l-64-64v-18zM746 448v42h86v-42h-86zM746 640h-16l-48-46v-210h150c34 0 64 30 64 64v42c0 26-16 52-38 60l38 90h-64l-38-86h-48v86z"],
    "tags": ["hdr_off"],
    "defaultCode": 58349,
    "grid": 24
  }, {
    "paths": ["M554 576v-128h-84v128h84zM554 384c34 0 64 30 64 64v128c0 34-30 64-64 64h-148v-256h148zM278 470v-86h64v256h-64v-106h-86v106h-64v-256h64v86h86zM832 490v-42h-86v42h86zM896 490c0 26-16 48-38 60l38 90h-64l-38-86h-48v86h-64v-256h150c34 0 64 30 64 64v42z"],
    "tags": ["hdr_on"],
    "defaultCode": 58350,
    "grid": 24
  }, {
    "paths": ["M214 598c46 0 84-40 84-86s-38-86-84-86-86 40-86 86 40 86 86 86zM214 342c94 0 170 76 170 170s-76 170-170 170-172-76-172-170 78-170 172-170zM726 256c142 0 256 114 256 256s-114 256-256 256-256-114-256-256 114-256 256-256z"],
    "tags": ["hdr_strong"],
    "defaultCode": 58353,
    "grid": 24
  }, {
    "paths": ["M726 682c94 0 170-76 170-170s-76-170-170-170-172 76-172 170 78 170 172 170zM726 256c142 0 256 114 256 256s-114 256-256 256-256-114-256-256 114-256 256-256zM214 342c94 0 170 76 170 170s-76 170-170 170-172-76-172-170 78-170 172-170z"],
    "tags": ["hdr_weak"],
    "defaultCode": 58354,
    "grid": 24
  }, {
    "paths": ["M512 42c212 0 384 172 384 384v300c0 70-58 128-128 128h-128v-342h170v-86c0-166-132-298-298-298s-298 132-298 298v86h170v342h-128c-70 0-128-58-128-128v-300c0-212 172-384 384-384z"],
    "tags": ["headset"],
    "defaultCode": 58128,
    "grid": 24
  }, {
    "paths": ["M512 42c212 0 384 172 384 384v428c0 70-58 128-128 128h-256v-86h298v-42h-170v-342h170v-86c0-166-132-298-298-298s-298 132-298 298v86h170v342h-128c-70 0-128-58-128-128v-300c0-212 172-384 384-384z"],
    "tags": ["headset_mic"],
    "defaultCode": 58129,
    "grid": 24
  }, {
    "paths": ["M710 868l156-156-156-154-154 156zM598 470c-24 0-44 18-44 42s20 42 44 42 42-18 42-42-18-42-42-42zM512 640c24 0 42-18 42-42s-18-44-42-44-42 20-42 44 18 42 42 42zM426 554c24 0 44-18 44-42s-20-42-44-42-42 18-42 42 18 42 42 42zM312 468l154-156-154-154-156 156zM512 384c-24 0-42 18-42 42s18 44 42 44 42-20 42-44-18-42-42-42zM756 512l170 170c16 16 16 44 0 60l-184 186c-8 8-18 12-30 12s-24-4-32-12l-168-170-170 170c-16 16-44 16-60 0l-186-186c-16-16-16-44 0-60l170-170-170-168c-16-16-16-46 0-62l186-184c8-8 20-12 30-12 12 0 22 4 30 12l170 170 168-170c16-16 46-16 62 0l184 184c16 16 16 46 0 62z"],
    "tags": ["healing"],
    "defaultCode": 58355,
    "grid": 24
  }, {
    "paths": ["M490 384c0-58 50-106 108-106s106 48 106 106-48 106-106 106-108-48-108-106zM326 112c-70 70-112 166-112 272s42 202 112 272l-60 60c-84-84-138-202-138-332s54-248 138-332zM726 854c46 0 84-40 84-86h86c0 94-76 170-170 170-24 0-48-4-70-14-58-30-92-74-118-152-14-42-38-62-72-88-38-28-84-64-122-134-30-54-46-112-46-166 0-168 132-298 300-298s298 130 298 298h-86c0-120-92-214-212-214s-214 94-214 214c0 40 12 86 34 126 30 56 66 82 100 108 40 30 80 62 102 128 22 64 42 84 72 100 8 4 22 8 34 8z"],
    "tags": ["hearing"],
    "defaultCode": 57379,
    "grid": 24
  }, {
    "paths": ["M642 480c24-24 40-58 40-96 0-94-76-170-170-170s-170 76-170 170h84c0-46 40-86 86-86s86 40 86 86c0 24-10 44-26 60l-52 54c-30 32-50 74-50 120v22h84c0-64 20-88 50-120zM554 810v-84h-84v84h84zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["help"],
    "defaultCode": 59527,
    "grid": 24
  }, {
    "paths": ["M512 256c94 0 170 76 170 170 0 106-128 118-128 214h-84c0-138 128-128 128-214 0-46-40-84-86-84s-86 38-86 84h-84c0-94 76-170 170-170zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM470 768v-86h84v86h-84z"],
    "tags": ["help_outline"],
    "defaultCode": 59645,
    "grid": 24
  }, {
    "paths": ["M618 576v-128h86v128h-86zM768 598v-172c0-24-18-42-42-42h-128c-24 0-44 18-44 42v172c0 24 20 42 44 42h32v64h64v-64h32c24 0 42-18 42-42zM470 640v-256h-64v106h-86v-106h-64v256h64v-86h86v86h64zM810 170c46 0 86 40 86 86v512c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-512c0-46 38-86 86-86h596z"],
    "tags": ["high_quality"],
    "defaultCode": 57380,
    "grid": 24
  }, {
    "paths": ["M724 280l90-90 60 60-90 92zM150 250l60-60 90 90-60 62zM470 86h84v128h-84v-128zM256 598v-214h512v214l-128 128v212h-256v-212z"],
    "tags": ["highlight"],
    "defaultCode": 57951,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM622 342l60 60-110 110 110 110-60 60-110-110-110 110-60-60 110-110-110-110 60-60 110 110z"],
    "tags": ["highlight_off"],
    "defaultCode": 59528,
    "grid": 24
  }, {
    "paths": ["M512 342h64v180l150 90-32 52-182-110v-212zM554 128c212 0 384 172 384 384s-172 384-384 384c-106 0-200-42-270-112l60-62c54 54 128 88 210 88 166 0 300-132 300-298s-134-298-300-298-298 132-298 298h128l-172 172-4-6-166-166h128c0-212 172-384 384-384z"],
    "tags": ["restore"],
    "defaultCode": 59571,
    "grid": 24
  }, {
    "paths": ["M426 854h-212v-342h-128l426-384 426 384h-128v342h-212v-256h-172v256z"],
    "tags": ["home"],
    "defaultCode": 59530,
    "grid": 24
  }, {
    "paths": ["M626 250c44 42 62 100 54 158l-2 18h-82l6-24c6.113-34.638-6.812-70.812-32-96-44-44-64-102-56-160l2-18h82l-4 26c-6 34 4 68 28 94zM796 250c44 42 64 100 56 158l-4 18h-80l4-24c6-34-4-68-28-94l-4-2c-44-44-64-102-56-160l4-18h80l-4 26c-6 34 4 68 28 94zM810 854v-256h-84v256h84zM640 854v-256h-86v256h86zM470 854v-256h-86v256h86zM298 854v-256h-84v256h84zM476 512h462v342c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-342h128v-32c0-52 44-96 96-96 30.769 0 56.308 16.308 72 32l58 66c10 12 22 20 36 30zM214 256c0-48 36-86 84-86s86 38 86 86-38 86-86 86-84-38-84-86z"],
    "tags": ["hot_tub"],
    "defaultCode": 60230,
    "grid": 24
  }, {
    "paths": ["M810 298c94 0 172 78 172 172v384h-86v-128h-768v128h-86v-640h86v384h342v-300h340zM298 554c-70 0-128-58-128-128s58-128 128-128 128 58 128 128-58 128-128 128z"],
    "tags": ["local_hotel"],
    "defaultCode": 58697,
    "grid": 24
  }, {
    "paths": ["M512 490l170-170v-150h-340v150zM682 704l-170-170-170 170v150h340v-150zM256 86h512v256l-170 170 170 170v256h-512v-256l170-170-170-170v-256z"],
    "tags": ["hourglass_empty"],
    "defaultCode": 59531,
    "grid": 24
  }, {
    "paths": ["M256 86h512v256l-170 170 170 170v256h-512v-256l170-170-170-170v-256z"],
    "tags": ["hourglass_full"],
    "defaultCode": 59532,
    "grid": 24
  }, {
    "paths": ["M918 490v-42h-86v42h86zM918 384c34 0 64 30 64 64v42c0 34-30 64-64 64h-86v86h-64v-256h150zM534 448v-64h192v64h-64v192h-64v-192h-64zM298 448v-64h192v64h-64v192h-64v-192h-64zM192 470v-86h64v256h-64v-106h-86v106h-64v-256h64v86h86z"],
    "tags": ["http"],
    "defaultCode": 59650,
    "grid": 24
  }, {
    "paths": ["M644 342v-86c0-72-60-132-132-132s-132 60-132 132v86h264zM512 726c46 0 86-40 86-86s-40-86-86-86-86 40-86 86 40 86 86 86zM768 342c46 0 86 38 86 84v428c0 46-40 84-86 84h-512c-46 0-86-38-86-84v-428c0-46 40-84 86-84h42v-86c0-118 96-214 214-214s214 96 214 214v86h42z"],
    "tags": ["lock"],
    "defaultCode": 59543,
    "grid": 24
  }, {
    "paths": ["M362 576l-148 192h596l-192-256-148 192zM896 810c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596c46 0 86 40 86 86v596z"],
    "tags": ["photo"],
    "defaultCode": 58384,
    "grid": 24
  }, {
    "paths": ["M854 768v-512h-684v512h684zM854 170c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h684zM512 426v86h-86v-86h86zM342 426v86h-86v-86h86zM682 598v84h-84v-84h84zM682 426v86h-84v-86h84z"],
    "tags": ["image_aspect_ratio"],
    "defaultCode": 58357,
    "grid": 24
  }, {
    "paths": ["M896 790v-492c-46-14-98-20-150-20-72 0-176 28-234 64v490c58-36 162-64 234-64 52 0 104 8 150 22zM746 192c88.409 0 181.498 22.075 236 64v622c0 10-12 22-22 22-4 0-6 0-10-2-60-32-134-44-204-44-72 0-176 28-234 64-62-46-150-64-234-64-62 0-146 18-204 46-4 0-6 2-10 2-10 0-22-10-22-20v-626c62-46 152-64 236-64s172 18 234 64c62-46 150-64 234-64z"],
    "tags": ["import_contacts"],
    "defaultCode": 57568,
    "grid": 24
  }, {
    "paths": ["M682 726h128l-170 170-170-170h128v-300h84v300zM384 128l170 170h-128v300h-84v-300h-128z"],
    "tags": ["import_export"],
    "defaultCode": 57539,
    "grid": 24
  }, {
    "paths": ["M510 384h130l-106 76 40 124-104-78-106 78 40-124-106-76h130l42-128zM854 86c46 0 84 36 84 84v214h-84v-214h-768v512h554v86h-86v86h86v84h-342v-84h86v-86h-298c-48 0-86-40-86-86v-512c0-48 38-84 86-84h768zM982 854v-300h-214v300h214zM982 470c24 0 42 18 42 42v384c0 24-18 42-42 42h-214c-24 0-42-18-42-42v-384c0-24 18-42 42-42h214z"],
    "tags": ["important_devices"],
    "defaultCode": 59666,
    "grid": 24
  }, {
    "paths": ["M810 640v-426h-598v426h172c0 70 58 128 128 128s128-58 128-128h170zM810 128c46 0 86 38 86 86v596c0 46-40 86-86 86h-598c-48 0-84-40-84-86v-596c0-48 36-86 84-86h598z"],
    "tags": ["inbox"],
    "defaultCode": 57686,
    "grid": 24
  }, {
    "paths": ["M726 554v-84h-428v84h428zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["indeterminate_check_box"],
    "defaultCode": 59657,
    "grid": 24
  }, {
    "paths": ["M554 384v-86h-84v86h84zM554 726v-256h-84v256h84zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["info"],
    "defaultCode": 59534,
    "grid": 24
  }, {
    "paths": ["M470 384v-86h84v86h-84zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM470 726v-256h84v256h-84z"],
    "tags": ["info_outline"],
    "defaultCode": 59535,
    "grid": 24
  }, {
    "paths": ["M470 682v-128h-428v-84h428v-128l170 170zM896 128c46 0 86 38 86 86v598c0 46-40 84-86 84h-768c-46 0-86-38-86-84v-172h86v172h768v-600h-768v172h-86v-170c0-46 40-86 86-86h768z"],
    "tags": ["input"],
    "defaultCode": 59536,
    "grid": 24
  }, {
    "paths": ["M768 342v-86h-512v86h512zM768 470v-86h-512v86h512zM768 598v-86h-512v86h512zM854 86c46 0 84 38 84 84v768l-170-170h-598c-46 0-84-40-84-86v-512c0-46 38-84 84-84h684z"],
    "tags": ["insert_comment"],
    "defaultCode": 57932,
    "grid": 24
  }, {
    "paths": ["M554 384h236l-236-234v234zM256 86h342l256 256v512c0 46-40 84-86 84h-512c-46 0-86-38-86-84l2-684c0-46 38-84 84-84z"],
    "tags": ["insert_drive_file"],
    "defaultCode": 57933,
    "grid": 24
  }, {
    "paths": ["M512 746c-100 0-184-60-218-148h436c-34 88-118 148-218 148zM362 470c-36 0-64-28-64-64s28-64 64-64 64 28 64 64-28 64-64 64zM662 470c-36 0-64-28-64-64s28-64 64-64 64 28 64 64-28 64-64 64zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["tag_faces"],
    "defaultCode": 58400,
    "grid": 24
  }, {
    "paths": ["M726 298c118 0 212 96 212 214s-94 214-212 214h-172v-82h172c72 0 132-60 132-132s-60-132-132-132h-172v-82h172zM342 554v-84h340v84h-340zM166 512c0 72 60 132 132 132h172v82h-172c-118 0-212-96-212-214s94-214 212-214h172v82h-172c-72 0-132 60-132 132z"],
    "tags": ["link"],
    "defaultCode": 57687,
    "grid": 24
  }, {
    "paths": ["M512 836v-618l-180 180c-48 48-76 114-76 182 0 137.583 118.4 256 256 256zM754 338c134 134 134 348 0 482-66 66-154 100-242 100s-176-34-242-100c-134-134-134-348 0-482l242-242z"],
    "tags": ["invert_colors"],
    "defaultCode": 59537,
    "grid": 24
  }, {
    "paths": ["M512 218l-98 96-60-60 158-158 242 242c104 104 126 258 68 384l-310-308v-196zM512 836v-206l-204-204c-34 44-52 98-52 154 0 137.583 118.4 256 256 256zM882 890l14 16-54 54-116-116c-62 50-138 76-214 76-88 0-176-34-242-100-124-126-132-322-24-456l-118-118 54-54c232.99 232.99 464.706 467.32 700 698z"],
    "tags": ["invert_colors_off"],
    "defaultCode": 57540,
    "grid": 24
  }, {
    "paths": ["M726 726h-214v-64h214v64zM810 810v-596l-596 596h596zM234 320v64h86v86h64v-86h86v-64h-86v-86h-64v86h-86zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["iso"],
    "defaultCode": 58358,
    "grid": 24
  }, {
    "paths": ["M810 426v-84h-84v84h84zM810 554v-84h-84v84h84zM682 426v-84h-84v84h84zM682 554v-84h-84v84h84zM682 726v-86h-340v86h340zM298 426v-84h-84v84h84zM298 554v-84h-84v84h84zM342 470v84h84v-84h-84zM342 342v84h84v-84h-84zM470 470v84h84v-84h-84zM470 342v84h84v-84h-84zM854 214c46 0 84 38 84 84v428c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-428c0-46 38-84 84-84h684z"],
    "tags": ["keyboard"],
    "defaultCode": 58130,
    "grid": 24
  }, {
    "paths": ["M316 334l196 196 196-196 60 60-256 256-256-256z"],
    "tags": ["keyboard_arrow_down"],
    "defaultCode": 58131,
    "grid": 24
  }, {
    "paths": ["M658 686l-60 60-256-256 256-256 60 60-196 196z"],
    "tags": ["keyboard_arrow_left"],
    "defaultCode": 58132,
    "grid": 24
  }, {
    "paths": ["M366 698l196-196-196-196 60-60 256 256-256 256z"],
    "tags": ["keyboard_arrow_right"],
    "defaultCode": 58133,
    "grid": 24
  }, {
    "paths": ["M316 658l-60-60 256-256 256 256-60 60-196-196z"],
    "tags": ["keyboard_arrow_up"],
    "defaultCode": 58134,
    "grid": 24
  }, {
    "paths": ["M896 470v84h-604l152 154-60 60-256-256 256-256 60 60-152 154h604z"],
    "tags": ["keyboard_backspace"],
    "defaultCode": 58135,
    "grid": 24
  }, {
    "paths": ["M256 768v-86h512v86h-512zM512 358l-196 196-60-60 256-256 256 256-60 60z"],
    "tags": ["keyboard_capslock"],
    "defaultCode": 58136,
    "grid": 24
  }, {
    "paths": ["M512 982l-170-172h340zM810 342v-86h-84v86h84zM810 470v-86h-84v86h84zM682 342v-86h-84v86h84zM682 470v-86h-84v86h84zM682 640v-86h-340v86h340zM298 342v-86h-84v86h84zM298 470v-86h-84v86h84zM342 384v86h84v-86h-84zM342 256v86h84v-86h-84zM470 384v86h84v-86h-84zM470 256v86h84v-86h-84zM854 128c46 0 84 40 84 86v426c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-426c0-46 38-86 84-86h684z"],
    "tags": ["keyboard_hide"],
    "defaultCode": 58138,
    "grid": 24
  }, {
    "paths": ["M810 298h86v256h-648l154 154-60 60-256-256 256-256 60 60-154 154h562v-172z"],
    "tags": ["keyboard_return"],
    "defaultCode": 58139,
    "grid": 24
  }, {
    "paths": ["M854 256h84v512h-84v-512zM494 316l60-60 256 256-256 256-60-60 154-154h-606v-84h606z"],
    "tags": ["keyboard_tab"],
    "defaultCode": 58140,
    "grid": 24
  }, {
    "paths": ["M738 512h72c0 146-116 266-256 286v140h-84v-140c-140-20-256-140-256-286h72c0 128 108 218 226 218s226-90 226-218zM512 640c-70 0-128-58-128-128v-256c0-70 58-128 128-128s128 58 128 128v256c0 70-58 128-128 128z"],
    "tags": ["keyboard_voice"],
    "defaultCode": 58141,
    "grid": 24
  }, {
    "paths": ["M342 512h84v214h-84v-214zM342 214h84v128h-84v-128zM768 384v-214h-512v214h512zM768 854v-386h-512v386h512zM768 86c46 0 86 36 86 84v684c0 46-40 84-86 84h-512c-46 0-86-38-86-84v-684c0-48 40-84 86-84h512z"],
    "tags": ["kitchen"],
    "defaultCode": 60231,
    "grid": 24
  }, {
    "paths": ["M752 250l186 262-186 262c-16 22-42 36-70 36h-468c-46 0-86-38-86-84v-428c0-46 40-84 86-84h468c28 0 54 14 70 36z"],
    "tags": ["label"],
    "defaultCode": 59538,
    "grid": 24
  }, {
    "paths": ["M682 726l152-214-152-214h-468v428h468zM752 250l186 262-186 262c-16 22-42 36-70 36h-468c-46 0-86-38-86-84v-428c0-46 40-84 86-84h468c28 0 54 14 70 36z"],
    "tags": ["label_outline"],
    "defaultCode": 59539,
    "grid": 24
  }, {
    "paths": ["M698 598h144c6-28 12-56 12-86s-6-58-12-86h-144c4 28 6 56 6 86s-2 58-6 86zM622 834c78-26 146-82 186-152h-126c-14 54-34 104-60 152zM612 598c4-28 6-56 6-86s-2-58-6-86h-200c-4 28-6 56-6 86s2 58 6 86h200zM512 852c36-52 64-108 82-170h-164c18 62 46 118 82 170zM342 342c14-54 34-104 60-152-78 26-146 82-186 152h126zM216 682c40 70 108 126 186 152-26-48-46-98-60-152h-126zM182 598h144c-4-28-6-56-6-86s2-58 6-86h-144c-6 28-12 56-12 86s6 58 12 86zM512 172c-36 52-64 108-82 170h164c-18-62-46-118-82-170zM808 342c-40-70-108-126-186-152 26 48 46 98 60 152h126zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["language"],
    "defaultCode": 59540,
    "grid": 24
  }, {
    "paths": ["M854 640v-426h-684v426h684zM598 768v-42h-172v42h172zM938 768h86v86h-1024v-86h86v-640h852v640z"],
    "tags": ["laptop_chromebook"],
    "defaultCode": 58143,
    "grid": 24
  }, {
    "paths": ["M512 810c24 0 42-18 42-42s-18-42-42-42-42 18-42 42 18 42 42 42zM170 214v468h684v-468h-684zM854 768h170c0 46-40 86-86 86h-852c-46 0-86-40-86-86h170c-46 0-84-40-84-86v-468c0-46 38-86 84-86h684c46 0 84 40 84 86v468c0 46-38 86-84 86z"],
    "tags": ["laptop_mac"],
    "defaultCode": 58144,
    "grid": 24
  }, {
    "paths": ["M170 214v426h684v-426h-684zM854 768h170v86h-1024v-86h170v-42c-46 0-84-40-84-86v-426c0-46 38-86 84-86h684c46 0 84 40 84 86v426c0 46-38 86-84 86v42z"],
    "tags": ["laptop_windows"],
    "defaultCode": 58145,
    "grid": 24
  }, {
    "paths": ["M682 256h86v512h-86v-512zM238 316l60-60 256 256-256 256-60-60 196-196z"],
    "tags": ["last_page"],
    "defaultCode": 58845,
    "grid": 24
  }, {
    "paths": ["M598 128h298v298h-86v-152l-418 418-60-60 418-418h-152v-86zM810 810v-298h86v298c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h298v86h-298v596h596z"],
    "tags": ["open_in_new"],
    "defaultCode": 59550,
    "grid": 24
  }, {
    "paths": ["M512 682c-128.024-99.309-255.626-199.040-384-298l384-298 384 298c-128.375 98.958-255.974 198.693-384 298zM512 792l314-246 70 54-384 298-384-298 70-54z"],
    "tags": ["layers"],
    "defaultCode": 58683,
    "grid": 24
  }, {
    "paths": ["M140 42l798 800-54 54-160-162-212 164-384-298 70-54 314 246 150-118-60-60-90 68c-128.024-99.309-255.626-199.040-384-298l138-108-180-180zM896 384c-57.761 44.239-114.863 89.137-172 134l-336-336 124-96zM846 640l-62-62 50-38 62 60z"],
    "tags": ["layers_clear"],
    "defaultCode": 58684,
    "grid": 24
  }, {
    "paths": ["M598 896c0-166 132-298 298-298v84c-118 0-214 96-214 214h-84zM768 896c0-70 58-128 128-128v128h-128zM426 896c0-258 212-470 470-470v86c-212 0-384 172-384 384h-86zM426 128c0 166-132 298-298 298v-84c118 0 214-96 214-214h84zM598 128c0 258-210 470-470 470v-86c212 0 384-172 384-384h86zM256 128c0 70-58 128-128 128v-128h128z"],
    "tags": ["leak_add"],
    "defaultCode": 58360,
    "grid": 24
  }, {
    "paths": ["M656 494c70-42 152-68 240-68v86c-64 0-124 16-178 44zM850 688l-68-68c34-14 74-22 114-22v84c-16 0-32 2-46 6zM598 128c0 88-26 170-68 240l-62-62c28-54 44-114 44-178h86zM128 182l54-54 714 714-54 54-122-122c-24 34-38 76-38 122h-84c0-68 24-132 62-182l-62-60c-54 66-86 150-86 242h-86c0-116 42-222 112-304l-106-106c-82 70-188 112-304 112v-86c92 0 178-32 244-86l-62-62c-50 38-114 62-182 62v-84c46 0 88-14 122-38zM426 128c0 40-8 80-22 114l-68-68c4-14 6-30 6-46h84z"],
    "tags": ["leak_remove"],
    "defaultCode": 58361,
    "grid": 24
  }, {
    "paths": ["M512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["lens"],
    "defaultCode": 58362,
    "grid": 24
  }, {
    "paths": ["M810 298v-84h-426v84h426zM640 640v-86h-256v86h256zM810 470v-86h-426v86h426zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-512c-46 0-86-40-86-86v-512c0-46 40-84 86-84h512zM170 256v598h598v84h-598c-46 0-84-38-84-84v-598h84z"],
    "tags": ["library_books"],
    "defaultCode": 57391,
    "grid": 24
  }, {
    "paths": ["M170 256v598h598v84h-598c-46 0-84-38-84-84v-598h84zM768 298v-84h-170v234c-18-14-40-22-64-22-58 0-108 50-108 108s50 106 108 106 106-48 106-106v-236h128zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-512c-46 0-86-40-86-86v-512c0-46 40-84 86-84h512z"],
    "tags": ["library_music"],
    "defaultCode": 57392,
    "grid": 24
  }, {
    "paths": ["M634 558c58-40 92-104 92-174 0-118-96-214-214-214s-214 96-214 214c0 70 34 134 92 174l36 26v98h172v-98zM512 86c164 0 298 134 298 298 0 102-50 190-128 244v98c0 24-18 42-42 42h-256c-24 0-42-18-42-42v-98c-78-54-128-142-128-244 0-164 134-298 298-298zM384 896v-42h256v42c0 24-18 42-42 42h-172c-24 0-42-18-42-42z"],
    "tags": ["lightbulb_outline"],
    "defaultCode": 59663,
    "grid": 24
  }, {
    "paths": ["M128 170h768v172h-768v-172zM554 512v-86h342v86h-342zM128 512v-86h342v86h-342zM810 854v-86h86v86h-86zM640 854v-86h86v86h-86zM470 854v-86h84v86h-84zM298 854v-86h86v86h-86zM128 854v-86h86v86h-86zM682 682v-84h214v84h-214zM406 682v-84h212v84h-212zM128 682v-84h214v84h-214z"],
    "tags": ["line_style"],
    "defaultCode": 59673,
    "grid": 24
  }, {
    "paths": ["M128 170h768v172h-768v-172zM128 554v-128h768v128h-768zM128 854v-44h768v44h-768zM128 726v-86h768v86h-768z"],
    "tags": ["line_weight"],
    "defaultCode": 59674,
    "grid": 24
  }, {
    "paths": ["M832 406c58 0 106 48 106 106s-48 106-106 106c-44 0-82-26-98-64h-124c-16 38-54 64-98 64s-82-26-98-64h-124c-16 38-54 64-98 64-58 0-106-48-106-106s48-106 106-106c44 0 82 26 98 64h124c16-38 54-64 98-64s82 26 98 64h124c16-38 54-64 98-64z"],
    "tags": ["linear_scale"],
    "defaultCode": 57952,
    "grid": 24
  }, {
    "paths": ["M682 256c48 0 86 38 86 86h56c0-78-64-142-142-142v56zM512 810c118 0 214-94 214-212s-96-214-214-214-214 96-214 214 96 212 214 212zM726 384h212v470c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-512c0-46 38-86 84-86h136l78-86h256v128c48 0 86 38 86 86zM682 142v-56c142 0 256 114 256 256h-56c0-110-90-200-200-200zM376 598c0-76 60-138 136-138s136 62 136 138-60 136-136 136-136-60-136-136z"],
    "tags": ["linked_camera"],
    "defaultCode": 58424,
    "grid": 24
  }, {
    "paths": ["M298 298h598v86h-598v-86zM298 726v-86h598v86h-598zM298 554v-84h598v84h-598zM128 384v-86h86v86h-86zM128 726v-86h86v86h-86zM128 554v-84h86v84h-86z"],
    "tags": ["list"],
    "defaultCode": 59542,
    "grid": 24
  }, {
    "paths": ["M642 438c24-24 40-58 40-96 0-94-76-172-170-172s-170 78-170 172h84c0-46 40-86 86-86s86 40 86 86c0 24-10 44-26 60l-52 54c-30 32-50 74-50 120v22h84c0-64 20-90 50-122zM554 768v-86h-84v86h84zM810 86c46 0 86 38 86 84v598c0 46-40 86-86 86h-170l-128 128-128-128h-170c-48 0-86-40-86-86v-598c0-46 38-84 86-84h596z"],
    "tags": ["live_help"],
    "defaultCode": 57542,
    "grid": 24
  }, {
    "paths": ["M384 426l298 172-298 170v-342zM896 854v-512h-768v512h768zM896 256c46 0 86 38 86 86v512c0 46-40 84-86 84h-768c-46 0-86-38-86-84v-512c0-48 40-86 86-86h324l-140-140 30-30 170 170 170-170 30 30-140 140h324z"],
    "tags": ["live_tv"],
    "defaultCode": 58937,
    "grid": 24
  }, {
    "paths": ["M664 716l-46-174 140-116-180-10-66-168-66 168-182 10 142 116-46 174 152-98zM854 512c0 46 38 86 84 86v170c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-170c48 0 84-40 84-86s-38-86-84-86v-170c0-46 38-86 84-86h684c46 0 84 40 84 86v170c-46 0-84 40-84 86z"],
    "tags": ["local_play"],
    "defaultCode": 58707,
    "grid": 24
  }, {
    "paths": ["M896 682l-342-106v234l86 64v64l-150-42-148 42v-64l84-64v-234l-340 106v-84l340-214v-234c0-36 28-64 64-64s64 28 64 64v234l342 214v84z"],
    "tags": ["local_airport"],
    "defaultCode": 58685,
    "grid": 24
  }, {
    "paths": ["M854 768v-512h-684v512h684zM854 170c48 0 84 38 84 86v512c0 48-36 86-84 86h-684c-48 0-84-38-84-86v-512c0-48 36-86 84-86h684zM470 726v-44h-86v-84h170v-44h-128c-24 0-42-18-42-42v-128c0-24 18-42 42-42h44v-44h84v44h86v84h-170v44h128c24 0 42 18 42 42v128c0 24-18 42-42 42h-44v44h-84z"],
    "tags": ["local_atm"],
    "defaultCode": 58686,
    "grid": 24
  }, {
    "paths": ["M318 298h388l76-84h-540zM896 214l-342 384v212h214v86h-512v-86h214v-212l-342-384v-86h768v86z"],
    "tags": ["local_bar"],
    "defaultCode": 58688,
    "grid": 24
  }, {
    "paths": ["M86 896v-86h768v86h-768zM854 342v-128h-86v128h86zM854 128c48 0 84 38 84 86v128c0 48-36 84-84 84h-86v128c0 94-76 172-170 172h-256c-94 0-172-78-172-172v-426h684z"],
    "tags": ["local_cafe"],
    "defaultCode": 58689,
    "grid": 24
  }, {
    "paths": ["M214 554h596l-64-192h-468zM746 768c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM278 768c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM808 342l88 256v340c0 24-18 44-42 44h-44c-24 0-42-20-42-44v-42h-512v42c0 24-18 44-42 44h-44c-24 0-42-20-42-44v-340l88-256c8-26 34-44 62-44h468c28 0 54 18 62 44zM298 214c-36 0-64-28-64-64 0-42 64-116 64-116s64 74 64 116c0 36-28 64-64 64zM512 214c-36 0-64-28-64-64 0-42 64-116 64-116s64 74 64 116c0 36-28 64-64 64zM726 214c-36 0-64-28-64-64 0-42 64-116 64-116s64 74 64 116c0 36-28 64-64 64z"],
    "tags": ["local_car_wash"],
    "defaultCode": 58690,
    "grid": 24
  }, {
    "paths": ["M682 512v-214h-42v86h-42v-86h-44v128h86v86h42zM470 426v-128h-128v44h84v42h-84v128h128v-42h-86v-44h86zM810 298h128v556h-340v-172h-172v172h-340v-556h128v-128h596v128z"],
    "tags": ["local_convenience_store"],
    "defaultCode": 58691,
    "grid": 24
  }, {
    "paths": ["M634 492l-62 62 294 294-60 60-294-294-294 294-60-60 416-416c-30-66-8-158 60-226 82-82 198-96 260-34s48 180-34 262c-68 68-160 88-226 58zM346 570l-180-180c-66-66-66-174 0-240l300 298z"],
    "tags": ["restaurant_menu"],
    "defaultCode": 58721,
    "grid": 24
  }, {
    "paths": ["M782 342l18-172h-576l18 172h540zM512 810c70 0 128-58 128-128 0-86-128-230-128-230s-128 144-128 230c0 70 58 128 128 128zM128 86h768l-86 778c-6 42-40 74-84 74h-428c-44 0-78-32-84-74z"],
    "tags": ["local_drink"],
    "defaultCode": 58692,
    "grid": 24
  }, {
    "paths": ["M512 234c-58 0-106 50-106 108s48 106 106 106 106-48 106-106-48-108-106-108zM238 438c0-42 26-78 62-96-36-18-62-54-62-96 0-58 50-108 108-108 22 0 42 8 60 20v-8c0-58 48-108 106-108s106 50 106 108v8c18-12 38-20 60-20 58 0 108 50 108 108 0 42-26 78-62 96 36 18 62 54 62 96 0 58-50 106-108 106-22 0-42-6-60-18v8c0 58-48 106-106 106s-106-48-106-106v-8c-18 12-38 18-60 18-58 0-108-48-108-106zM512 938c-212 0-384-172-384-384 212 0 384 172 384 384zM512 938c0-212 172-384 384-384 0 212-172 384-384 384z"],
    "tags": ["local_florist"],
    "defaultCode": 58693,
    "grid": 24
  }, {
    "paths": ["M768 426c24 0 42-18 42-42s-18-42-42-42-42 18-42 42 18 42 42 42zM512 426v-212h-256v212h256zM844 308c20 20 30 46 30 76v406c0 58-48 106-106 106s-106-48-106-106v-214h-64v320h-428v-682c0-46 40-86 86-86h256c46 0 86 40 86 86v298h42c46 0 86 40 86 86v192c0 24 18 42 42 42s42-18 42-42v-308c-14 6-26 8-42 8-58 0-106-48-106-106 0-46 28-84 68-100l-90-90 46-44z"],
    "tags": ["local_gas_station"],
    "defaultCode": 58694,
    "grid": 24
  }, {
    "paths": ["M726 768c46 0 84 40 84 86s-38 84-84 84-86-38-86-84 40-86 86-86zM42 86h140l40 84h632c24 0 42 20 42 44 0 8-2 14-6 20l-152 276c-14 26-42 44-74 44h-318l-38 70-2 6c0 6 4 10 10 10h494v86h-512c-46 0-84-40-84-86 0-14 4-28 10-40l58-106-154-324h-86v-84zM298 768c46 0 86 40 86 86s-40 84-86 84-84-38-84-84 38-86 84-86z"],
    "tags": ["shopping_cart"],
    "defaultCode": 59596,
    "grid": 24
  }, {
    "paths": ["M768 598v-172h-170v-170h-172v170h-170v172h170v170h172v-170h170zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["local_hospital"],
    "defaultCode": 58696,
    "grid": 24
  }, {
    "paths": ["M512 854c142 0 256-114 256-256s-114-256-256-256-256 114-256 256 114 256 256 256zM298 170c-24 0-42 20-42 44s18 42 42 42 44-18 44-42-20-44-44-44zM426 170c-24 0-42 20-42 44s18 42 42 42 44-18 44-42-20-44-44-44zM768 86c48 0 86 36 86 84v684c0 48-38 84-86 84h-512c-48 0-86-36-86-84v-684c0-48 38-84 86-84h512zM392 718l240-242c66 66 66 176 0 242s-174 66-240 0z"],
    "tags": ["local_laundry_service"],
    "defaultCode": 58698,
    "grid": 24
  }, {
    "paths": ["M512 342c-70 0-128-58-128-128s58-128 128-128 128 58 128 128-58 128-128 128zM512 492c100-94 236-150 384-150v468c-148 0-284 58-384 152-100-94-236-152-384-152v-468c148 0 284 56 384 150z"],
    "tags": ["local_library"],
    "defaultCode": 58699,
    "grid": 24
  }, {
    "paths": ["M512 554c118 0 214-94 214-212h-86c0 70-58 128-128 128s-128-58-128-128h-86c0 118 96 212 214 212zM512 128c-70 0-128 58-128 128h256c0-70-58-128-128-128zM810 256c46 0 86 40 86 86v512c0 46-40 84-86 84h-596c-46 0-86-38-86-84v-512c0-46 40-86 86-86h84c0-118 96-214 214-214s214 96 214 214h84z"],
    "tags": ["local_mall"],
    "defaultCode": 58700,
    "grid": 24
  }, {
    "paths": ["M768 384v-86h-86v86h86zM768 554v-84h-86v84h86zM768 726v-86h-86v86h86zM342 384v-86h-86v86h86zM342 554v-84h-86v84h86zM342 726v-86h-86v86h86zM768 128h86v768h-86v-86h-86v86h-340v-86h-86v86h-86v-768h86v86h86v-86h340v86h86v-86z"],
    "tags": ["theaters"],
    "defaultCode": 59610,
    "grid": 24
  }, {
    "paths": ["M234 298c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM914 494c16 16 24 36 24 60s-8 44-24 60l-300 300c-16 16-36 24-60 24s-44-8-60-24l-384-384c-16-16-24-36-24-60v-300c0-46 38-84 84-84h300c24 0 44 8 60 24z"],
    "tags": ["local_offer"],
    "defaultCode": 58702,
    "grid": 24
  }, {
    "paths": ["M564 470c46 0 84-40 84-86s-38-86-84-86h-138v172h138zM554 128c142 0 256 114 256 256s-114 256-256 256h-128v256h-170v-768h298z"],
    "tags": ["local_parking"],
    "defaultCode": 58703,
    "grid": 24
  }, {
    "paths": ["M682 598v-86h-128v-128h-84v128h-128v86h128v128h84v-128h128zM896 214v84l-86 256 86 256v86h-768v-86l86-256-86-256v-84h542l62-172 100 38-48 134h112z"],
    "tags": ["local_pharmacy"],
    "defaultCode": 58704,
    "grid": 24
  }, {
    "paths": ["M512 640c46 0 86-40 86-86s-40-84-86-84-86 38-86 84 40 86 86 86zM298 298c0 46 40 86 86 86s86-40 86-86-40-84-86-84-86 38-86 84zM512 86c152 0 290 66 384 170l-384 682-384-682c94-104 232-170 384-170z"],
    "tags": ["local_pizza"],
    "defaultCode": 58706,
    "grid": 24
  }, {
    "paths": ["M768 128v170h-512v-170h512zM810 512c24 0 44-18 44-42s-20-44-44-44-42 20-42 44 18 42 42 42zM682 810v-212h-340v212h340zM810 342c70 0 128 58 128 128v256h-170v170h-512v-170h-170v-256c0-70 58-128 128-128h596z"],
    "tags": ["print"],
    "defaultCode": 59565,
    "grid": 24
  }, {
    "paths": ["M768 790c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM832 406h-106v106h190zM256 790c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM854 342l128 170v214h-86c0 70-58 128-128 128s-128-58-128-128h-256c0 70-58 128-128 128s-128-58-128-128h-86v-470c0-46 40-86 86-86h598v172h128z"],
    "tags": ["local_shipping"],
    "defaultCode": 58712,
    "grid": 24
  }, {
    "paths": ["M214 470h596l-64-192h-468zM746 682c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM278 682c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM808 256l88 256v342c0 24-18 42-42 42h-44c-24 0-42-18-42-42v-44h-512v44c0 24-18 42-42 42h-44c-24 0-42-18-42-42v-342l88-256c8-26 34-42 62-42h106v-86h256v86h106c28 0 54 16 62 42z"],
    "tags": ["local_taxi"],
    "defaultCode": 58713,
    "grid": 24
  }, {
    "paths": ["M810 640v-86h-84v86h84zM810 810v-84h-84v84h84zM554 298v-84h-84v84h84zM554 470v-86h-84v86h84zM554 640v-86h-84v86h84zM554 810v-84h-84v84h84zM298 470v-86h-84v86h84zM298 640v-86h-84v86h84zM298 810v-84h-84v84h84zM640 470h256v426h-768v-598h256v-84l128-128 128 128v256z"],
    "tags": ["location_city"],
    "defaultCode": 59377,
    "grid": 24
  }, {
    "paths": ["M500 490c118.353 116.98 236.568 234.098 354 352l-54 54-144-142c-72 106-144 184-144 184s-298-330-298-554c0-22 4-44 8-66l-136-136 54-54 356 356zM512 278c-32 0-58 14-78 36l-138-136c54-56 132-92 216-92 166 0 298 132 298 298 0 72-30 154-72 234l-154-156c22-20 34-46 34-78 0-58-48-106-106-106z"],
    "tags": ["location_off"],
    "defaultCode": 57543,
    "grid": 24
  }, {
    "paths": ["M512 490c58 0 106-48 106-106s-48-106-106-106-106 48-106 106 48 106 106 106zM512 86c166 0 298 132 298 298 0 224-298 554-298 554s-298-330-298-554c0-166 132-298 298-298z"],
    "tags": ["room", "place"],
    "defaultCode": 59572,
    "grid": 24
  }, {
    "paths": ["M768 854v-428h-512v428h512zM768 342c46 0 86 38 86 84v428c0 46-40 84-86 84h-512c-46 0-86-38-86-84v-428c0-46 40-84 86-84h388v-86c0-72-60-132-132-132s-132 60-132 132h-82c0-118 96-214 214-214s214 96 214 214v86h42zM512 726c-46 0-86-40-86-86s40-86 86-86 86 40 86 86-40 86-86 86z"],
    "tags": ["lock_open"],
    "defaultCode": 59544,
    "grid": 24
  }, {
    "paths": ["M768 854v-428h-512v428h512zM380 256v86h264v-86c0-72-60-132-132-132s-132 60-132 132zM768 342c46 0 86 38 86 84v428c0 46-40 84-86 84h-512c-46 0-86-38-86-84v-428c0-46 40-84 86-84h42v-86c0-118 96-214 214-214s214 96 214 214v86h42zM512 726c-46 0-86-40-86-86s40-86 86-86 86 40 86 86-40 86-86 86z"],
    "tags": ["lock_outline"],
    "defaultCode": 59545,
    "grid": 24
  }, {
    "paths": ["M512 256c258 0 470 212 470 470h-86c0-212-172-384-384-384s-384 172-384 384h-86c0-258 212-470 470-470zM512 426c164 0 298 136 298 300h-84c0-118-96-214-214-214s-214 96-214 214h-84c0-164 134-300 298-300z"],
    "tags": ["looks"],
    "defaultCode": 58364,
    "grid": 24
  }, {
    "paths": ["M640 448v-64c0-48-38-86-84-86h-172v86h172v86h-86v84h86v86h-172v86h172c46 0 84-38 84-86v-64c0-36-28-64-64-64 36 0 64-28 64-64zM812 128c46 0 84 40 84 86v596c0 46-38 86-84 86h-598c-46 0-86-40-86-86v-596c0-46 40-86 86-86h598z"],
    "tags": ["looks_3"],
    "defaultCode": 58363,
    "grid": 24
  }, {
    "paths": ["M640 726v-428h-86v172h-84v-172h-86v256h170v172h86zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["looks_4"],
    "defaultCode": 58365,
    "grid": 24
  }, {
    "paths": ["M640 384v-86h-256v256h170v86h-170v86h170c46 0 86-38 86-86v-86c0-48-40-84-86-84h-84v-86h170zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["looks_5"],
    "defaultCode": 58366,
    "grid": 24
  }, {
    "paths": ["M640 384v-86h-170c-46 0-86 38-86 86v256c0 48 40 86 86 86h84c46 0 86-38 86-86v-86c0-48-40-84-86-84h-84v-86h170zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596zM470 640v-86h84v86h-84z"],
    "tags": ["looks_6"],
    "defaultCode": 58367,
    "grid": 24
  }, {
    "paths": ["M598 726v-428h-172v86h86v342h86zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["looks_one"],
    "defaultCode": 58368,
    "grid": 24
  }, {
    "paths": ["M640 470v-86c0-48-40-86-86-86h-170v86h170v86h-84c-46 0-86 36-86 84v172h256v-86h-170v-86h84c46 0 86-36 86-84zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["looks_two"],
    "defaultCode": 58369,
    "grid": 24
  }, {
    "paths": ["M512 768v-128l170 170-170 172v-128c-188 0-342-154-342-342 0-66 20-130 54-182l62 62c-20 36-30 76-30 120 0 142 114 256 256 256zM512 170c188 0 342 154 342 342 0 66-20 130-54 182l-62-62c20-36 30-76 30-120 0-142-114-256-256-256v128l-170-170 170-172v128z"],
    "tags": ["sync"],
    "defaultCode": 58919,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426v342c0 46-38 84-84 84h-342c-236 0-426-190-426-426s190-426 426-426zM554 298v172h172v84h-172v172h-84v-172h-172v-84h172v-172h84z"],
    "tags": ["loupe"],
    "defaultCode": 58370,
    "grid": 24
  }, {
    "paths": ["M86 490c0-152 124-276 276-276h150v84h-150c-106 0-192 86-192 192s86 192 192 192h22v-84l128 128-128 128v-86h-22c-152 0-276-126-276-278zM598 682h340v86h-340v-86zM598 448h340v86h-340v-86zM598 214h340v84h-340v-84z"],
    "tags": ["low_priority"],
    "defaultCode": 57709,
    "grid": 24
  }, {
    "paths": ["M736 652c20-20 32-46 32-76 0-58-48-106-106-106-30 0-56 10-76 30l-32 32-30-32c-20-20-46-30-76-30-58 0-106 48-106 106 0 30 10 56 30 76l182 182zM234 298c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM914 494c16 16 24 36 24 60s-8 44-24 60l-300 300c-16 16-36 24-60 24s-44-8-60-24l-384-384c-16-16-24-36-24-60v-300c0-46 38-84 84-84h300c24 0 44 8 60 24z"],
    "tags": ["loyalty"],
    "defaultCode": 59546,
    "grid": 24
  }, {
    "paths": ["M512 470l342-214h-684zM854 768v-426l-342 212-342-212v426h684zM854 170c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h684z"],
    "tags": ["mail_outline"],
    "defaultCode": 57569,
    "grid": 24
  }, {
    "paths": ["M640 810v-506l-256-90v506zM874 128c12 0 22 10 22 22v644c0 10-8 18-16 20l-240 82-256-90-228 88-6 2c-12 0-22-10-22-22v-644c0-10 8-18 16-20l240-82 256 90 228-88z"],
    "tags": ["map"],
    "defaultCode": 58715,
    "grid": 24
  }, {
    "paths": ["M854 256c46 0 84 40 84 86v512c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-512c0-46 38-86 84-86h86v-256h342v170h-256v342h84v-256h428z"],
    "tags": ["markunread_mailbox"],
    "defaultCode": 59547,
    "grid": 24
  }, {
    "paths": ["M726 726v-428h-428v428h428zM896 470h-86v84h86v86h-86v86c0 46-38 84-84 84h-86v86h-86v-86h-84v86h-86v-86h-86c-46 0-84-38-84-84v-86h-86v-86h86v-84h-86v-86h86v-86c0-46 38-84 84-84h86v-86h86v86h84v-86h86v86h86c46 0 84 38 84 84v86h86v86zM554 554v-84h-84v84h84zM640 384v256h-256v-256h256z"],
    "tags": ["memory"],
    "defaultCode": 58146,
    "grid": 24
  }, {
    "paths": ["M128 256h768v86h-768v-86zM128 554v-84h768v84h-768zM128 768v-86h768v86h-768z"],
    "tags": ["menu"],
    "defaultCode": 58834,
    "grid": 24
  }, {
    "paths": ["M768 342v-86h-512v86h512zM768 470v-86h-512v86h512zM768 598v-86h-512v86h512zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["message"],
    "defaultCode": 57545,
    "grid": 24
  }, {
    "paths": ["M738 470h72c0 146-116 266-256 286v140h-84v-140c-140-20-256-140-256-286h72c0 128 108 216 226 216s226-88 226-216zM512 598c-70 0-128-58-128-128v-256c0-70 58-128 128-128s128 58 128 128v256c0 70-58 128-128 128z"],
    "tags": ["mic"],
    "defaultCode": 57385,
    "grid": 24
  }, {
    "paths": ["M738 470h72c0 146-116 266-256 286v140h-84v-140c-140-20-256-140-256-286h72c0 128 108 216 226 216s226-88 226-216zM460 210v264c0 28 24 50 52 50s50-22 50-50l2-264c0-28-24-52-52-52s-52 24-52 52zM512 598c-70 0-128-58-128-128v-256c0-70 58-128 128-128s128 58 128 128v256c0 70-58 128-128 128z"],
    "tags": ["mic_none"],
    "defaultCode": 57386,
    "grid": 24
  }, {
    "paths": ["M182 128l714 714-54 54-178-178c-32 20-72 32-110 38v140h-84v-140c-140-20-256-140-256-286h72c0 128 108 216 226 216 34 0 68-8 98-22l-70-70c-8 2-18 4-28 4-70 0-128-58-128-128v-32l-256-256zM640 476l-256-254v-8c0-70 58-128 128-128s128 58 128 128v262zM810 470c0 50-14 98-38 140l-52-54c12-26 18-54 18-86h72z"],
    "tags": ["mic_off"],
    "defaultCode": 57387,
    "grid": 24
  }, {
    "paths": ["M214 598h596l-192-256-148 192-108-128zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["mms"],
    "defaultCode": 58904,
    "grid": 24
  }, {
    "paths": ["M938 170v768l-170-170h-598c-46 0-84-40-84-86v-512c0-46 38-84 84-84h684c46 0 84 38 84 84z"],
    "tags": ["mode_comment"],
    "defaultCode": 57939,
    "grid": 24
  }, {
    "paths": ["M572 772c74-14 134-56 134-134 0-108-94-146-180-168s-112-46-112-82c0-40 38-70 102-70 68 0 92 32 94 80h84c-2-66-42-124-122-144v-84h-114v84c-74 16-132 62-132 136 0 88 72 130 178 156 96 22 114 56 114 92 0 26-18 68-102 68-78 0-110-36-114-80h-84c4 82 68 128 140 144v84h114v-82zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["monetization_on"],
    "defaultCode": 57955,
    "grid": 24
  }, {
    "paths": ["M228 174l622 624-54 54-94-96c-26 24-64 40-104 48v92h-128v-92c-82-18-152-70-158-164h94c4 50 40 90 128 90 58 0 88-20 102-40l-150-148c-100-30-166-80-166-168l-146-146zM534 294c-26 0-48 4-66 12l-62-62c20-10 42-18 64-24v-92h128v94c90 22 134 88 136 162h-94c-2-54-30-90-106-90z"],
    "tags": ["money_off"],
    "defaultCode": 57948,
    "grid": 24
  }, {
    "paths": ["M854 810v-512h-342v44c120 0 214 92 214 212s-94 214-214 214v-76c-76 0-136-62-136-138s60-136 136-136v274c76 0 136-62 136-138s-60-136-136-136v-76c-120 0-214 92-214 212s94 214 214 214v42h342zM854 214c46 0 84 38 84 84v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-84 84-84h138l76-86h256l76 86h138z"],
    "tags": ["monochrome_photos"],
    "defaultCode": 58371,
    "grid": 24
  }, {
    "paths": ["M512 598c100 0 184 60 218 148h-436c34-88 118-148 218-148zM362 470c-36 0-64-28-64-64s28-64 64-64 64 28 64 64-28 64-64 64zM662 470c-36 0-64-28-64-64s28-64 64-64 64 28 64 64-28 64-64 64zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["mood_bad"],
    "defaultCode": 59379,
    "grid": 24
  }, {
    "paths": ["M810 576c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM598 576c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM384 576c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM938 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-636c-30 0-56-16-72-38l-230-346 230-346c16-22 38-38 68-38h640z"],
    "tags": ["more"],
    "defaultCode": 58905,
    "grid": 24
  }, {
    "paths": ["M512 426c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM768 426c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM256 426c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86z"],
    "tags": ["more_horiz"],
    "defaultCode": 58835,
    "grid": 24
  }, {
    "paths": ["M512 682c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM512 426c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM512 342c-46 0-86-40-86-86s40-86 86-86 86 40 86 86-40 86-86 86z"],
    "tags": ["more_vert"],
    "defaultCode": 58836,
    "grid": 24
  }, {
    "paths": ["M810 726c70 0 128-58 128-128s-58-128-128-128-128 58-128 128 58 128 128 128zM334 640h-120v-86h120c-18-50-66-84-120-84-70 0-128 58-128 128s58 128 128 128c54 0 102-36 120-86zM830 386c110 8 194 98 194 212 0 120-94 212-214 212s-212-92-212-212c0-26 4-52 12-76l-118 118h-70c-20 98-104 170-208 170-120 0-214-92-214-212s94-214 214-214h494l-86-86h-152v-84h188z"],
    "tags": ["motorcycle"],
    "defaultCode": 59675,
    "grid": 24
  }, {
    "paths": ["M470 46v338h-300c0-174 132-318 300-338zM170 640v-170h684v170c0 188-154 342-342 342s-342-154-342-342zM554 46c168 20 300 164 300 338h-300v-338z"],
    "tags": ["mouse"],
    "defaultCode": 58147,
    "grid": 24
  }, {
    "paths": ["M682 426l-170 172-170-172h84v-128h172v128h84zM810 640v-426h-598v426h172c0 70 58 128 128 128s128-58 128-128h170zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-598c-48 0-84-40-84-86v-596c0-46 36-86 84-86h598z"],
    "tags": ["move_to_inbox"],
    "defaultCode": 57704,
    "grid": 24
  }, {
    "paths": ["M768 170h170v598c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h44l84 172h128l-84-172h84l86 172h128l-86-172h86l86 172h128z"],
    "tags": ["movie_creation"],
    "defaultCode": 58372,
    "grid": 24
  }, {
    "paths": ["M722 510l88-40-88-40-40-88-40 88-88 40 88 40 40 88zM480 650l118-52-118-54-54-118-52 118-118 54 118 52 52 118zM768 170h170v598c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h44l84 128h128l-84-128h84l86 128h128l-86-128h86l86 128h128z"],
    "tags": ["movie_filter"],
    "defaultCode": 58426,
    "grid": 24
  }, {
    "paths": ["M938 296l-130 146c46 74 78 164 88 262h-86c-8-70-30-136-62-194l-172 194-170-172-256 256-64-64 320-320 170 172 122-140c-72-84-172-138-288-138-100 0-192 40-264 104l-60-60c88-78 200-128 324-128 138 0 258 60 346 158l122-136z"],
    "tags": ["multiline_chart"],
    "defaultCode": 59103,
    "grid": 24
  }, {
    "paths": ["M512 128h256v170h-170v428c0 94-78 170-172 170s-170-76-170-170 76-172 170-172c32 0 60 10 86 24v-450z"],
    "tags": ["music_note"],
    "defaultCode": 58373,
    "grid": 24
  }, {
    "paths": ["M342 640c0-70 58-128 128-128 14 0 28 4 42 8v-264h214v86h-128v300c0 70-58 126-128 126s-128-58-128-128zM896 810v-596h-768v596h768zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768z"],
    "tags": ["music_video"],
    "defaultCode": 57443,
    "grid": 24
  }, {
    "paths": ["M554 688v166h256v84h-596v-84h256v-168c-142-24-250-146-250-294 0-166 134-300 300-300s298 134 298 300c0 154-116 278-264 296z"],
    "tags": ["nature"],
    "defaultCode": 58374,
    "grid": 24
  }, {
    "paths": ["M192 470c-36 0-64-28-64-64s28-64 64-64 64 28 64 64-28 64-64 64zM946 392c0 154-116 278-264 296v166h128v84h-682v-212h-42v-172c0-24 18-42 42-42h128c24 0 42 18 42 42v172h-42v128h342v-168c-142-24-250-146-250-294 0-166 134-300 300-300s298 134 298 300z"],
    "tags": ["nature_people"],
    "defaultCode": 58375,
    "grid": 24
  }, {
    "paths": ["M512 86l320 780-30 30-290-128-290 128-30-30z"],
    "tags": ["navigation"],
    "defaultCode": 58717,
    "grid": 24
  }, {
    "paths": ["M896 128l-322 768h-42l-112-292-292-112v-42z"],
    "tags": ["near_me"],
    "defaultCode": 58729,
    "grid": 24
  }, {
    "paths": ["M938 938h-852l852-852v852z"],
    "tags": ["network_cell"],
    "defaultCode": 57785,
    "grid": 24
  }, {
    "paths": ["M214 554c86-86 200-126 312-122l-56 122c-62 8-124 38-172 86zM726 640c-16-16-34-30-52-42l24-124c40 20 78 46 112 80zM896 470c-52-52-112-92-176-118l22-120c88 32 170 82 240 152zM42 384c160-160 380-220 586-184l-50 114c-160-20-328 34-450 156zM678 214c12 0 22 8 22 20l-104 550v2c-8 38-44 68-84 68-48 0-86-38-86-86 0-14 4-30 10-42l222-496c3.146-9.438 9.124-16 20-16z"],
    "tags": ["network_check"],
    "defaultCode": 58944,
    "grid": 24
  }, {
    "paths": ["M896 682v-64c0-36-28-64-64-64s-64 28-64 64v64h128zM938 682c24 0 44 20 44 44v170c0 24-20 42-44 42h-212c-24 0-44-18-44-42v-170c0-24 20-44 44-44v-64c0-58 48-106 106-106s106 48 106 106v64zM832 426c-106 0-192 86-192 192v12c-26 24-42 58-42 96v128h-556l812-812v386c-8 0-14-2-22-2z"],
    "tags": ["network_locked"],
    "defaultCode": 58906,
    "grid": 24
  }, {
    "paths": ["M872.5 466.828c0.568 0.445 1.068 0.837 1.5 1.172l-362 448-362-448c0.431-0.335 0.931-0.727 1.5-1.172l-135.5-168.828c20-14 210-170 496-170s476 156 496 170z"],
    "tags": ["network_wifi"],
    "defaultCode": 57786,
    "grid": 24
  }, {
    "paths": ["M554 554v-256h-84v256h84zM554 726v-86h-84v86h84zM982 512l-104 118 14 158-154 34-80 136-146-62-146 62-80-134-154-36 14-158-104-118 104-120-14-156 154-34 80-136 146 62 146-62 80 136 154 34-14 158z"],
    "tags": ["new_releases"],
    "defaultCode": 57393,
    "grid": 24
  }, {
    "paths": ["M470 790l170-172-170-170-44 42 128 128-128 128zM426 214v84h172v-84h-172zM598 128c46.645 0 84 38.997 84 86v84h172c46 0 84 40 84 86v470c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-470c0-46 38-86 84-86h172v-84c0-46 38-86 84-86h172z"],
    "tags": ["next_week"],
    "defaultCode": 57706,
    "grid": 24
  }, {
    "paths": ["M768 256v512h-512v-512h170v86h-84v340h340v-340h-128v96c26 14 44 42 44 74 0 46-40 86-86 86s-86-40-86-86c0-32 18-60 44-74v-96c0-46 38-86 84-86h214zM854 854v-684h-684v684h684zM854 86c46 0 84 38 84 84v684c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-684c0-46 38-84 84-84h684z"],
    "tags": ["nfc"],
    "defaultCode": 57787,
    "grid": 24
  }, {
    "paths": ["M380 256v52l-78-78c12-106 100-188 210-188 118 0 214 96 214 214v86h42c46 0 86 38 86 84v356l-442-440h232v-86c0-72-60-132-132-132s-132 60-132 132zM896 930l-52 52-48-48c-8 2-18 4-28 4h-512c-46 0-86-38-86-84v-428c0-32 20-60 46-74l-88-86 52-52z"],
    "tags": ["no_encryption"],
    "defaultCode": 58945,
    "grid": 24
  }, {
    "paths": ["M156 166l746 744-56 56-80-82c-12 6-26 12-40 12h-428c-46 0-84-40-84-86v-478l-112-112zM810 214v498l-484-484 100-100h300c46 0 84 40 84 86z"],
    "tags": ["signal_cellular_no_sim"],
    "defaultCode": 57806,
    "grid": 24
  }, {
    "paths": ["M640 234v236h234zM938 426v342c0 46-38 84-84 84l-684 2c-46 0-84-40-84-86v-512c0-46 38-86 84-86h512z"],
    "tags": ["note"],
    "defaultCode": 57455,
    "grid": 24
  }, {
    "paths": ["M554 384h236l-236-234v234zM682 682v-84h-128v-128h-84v128h-128v84h128v128h84v-128h128zM598 86l256 256v512c0 46-40 84-86 84h-512c-46 0-86-38-86-84l2-684c0-46 38-84 84-84h342z"],
    "tags": ["note_add"],
    "defaultCode": 59548,
    "grid": 24
  }, {
    "paths": ["M768 682l86 86v42h-684v-42l86-86v-212c0-132 70-240 192-270v-30c0-36 28-64 64-64s64 28 64 64v30c122 30 192 140 192 270v212zM512 938c-48 0-86-38-86-84h172c0 46-40 84-86 84z"],
    "tags": ["notifications"],
    "defaultCode": 59380,
    "grid": 24
  }, {
    "paths": ["M512 938c-48 0-86-38-86-84h170c0 49.675-37.225 84-84 84zM768 470v212l86 86v42h-684v-42l86-86v-212c0-132 70-240 192-270v-30c0-36 28-64 64-64s64 28 64 64v30c122 30 192 140 192 270zM852 448c-6-114-64-212-150-274l60-60c102 78 170 198 176 334h-86zM324 174c-88 62-146 160-152 274h-86c6-136 74-256 176-334z"],
    "tags": ["notifications_active"],
    "defaultCode": 59383,
    "grid": 24
  }, {
    "paths": ["M682 726v-256c0-106-64-192-170-192s-170 86-170 192v256h340zM768 682l86 86v42h-684v-42l86-86v-212c0-132 70-240 192-270v-30c0-36 28-64 64-64s64 28 64 64v30c122 30 192 140 192 270v212zM512 938c-46 0-86-38-86-84h172c0 46-40 84-86 84z"],
    "tags": ["notifications_none"],
    "defaultCode": 59381,
    "grid": 24
  }, {
    "paths": ["M768 626l-382-402c10-4 20-10 30-14h2l12-6c6-2 12-2 18-4v-30c0-36 28-64 64-64s64 28 64 64v30c122 30 192 138 192 270v156zM512 938c-48 0-86-36-86-84h172c0 48-38 84-86 84zM334 262c187.235 193.432 375.34 385.994 562 580l-54 54-86-86h-586v-42l86-86v-214c0-54 12-104 34-146l-120-118 54-56z"],
    "tags": ["notifications_off"],
    "defaultCode": 59382,
    "grid": 24
  }, {
    "paths": ["M618 418v-76h-212v76h118l-118 146v76h212v-76h-118zM768 682l86 86v42h-684v-42l86-86v-212c0-130 70-240 192-270v-30c0-36 28-64 64-64s64 28 64 64v30c122 30 192 140 192 270v212zM512 938c-48 0-86-38-86-84h172c0 46-40 84-86 84z"],
    "tags": ["notifications_paused"],
    "defaultCode": 59384,
    "grid": 24
  }, {
    "paths": ["M440 598l286-286-60-60-226 226-82-82-60 60zM726 768v-86h-428v86h428zM512 86c234 0 426 192 426 426s-192 426-426 426-426-192-426-426 192-426 426-426z"],
    "tags": ["offline_pin"],
    "defaultCode": 59658,
    "grid": 24
  }, {
    "paths": ["M682 470l-298 170v-342zM896 726v-512h-768v512h768zM896 128c46 0 86 38 86 86l-2 512c0 46-38 84-84 84h-214v86h-340v-86h-214c-48 0-86-38-86-84v-512c0-48 38-86 86-86h768z"],
    "tags": ["ondemand_video"],
    "defaultCode": 58938,
    "grid": 24
  }, {
    "paths": ["M256 598h512c0-86-28-138-76-186l-180-188-180 186c-48 48-76 102-76 188zM754 342c66 66 100 154 100 240s-34 176-100 242-154 100-242 100-176-34-242-100-100-156-100-242 34-174 100-240l242-242z"],
    "tags": ["opacity"],
    "defaultCode": 59676,
    "grid": 24
  }, {
    "paths": ["M512 426l170 172h-128v256h-84v-256h-128zM810 170c48 0 86 40 86 86v512c0 46-40 86-86 86h-170v-86h170v-426h-596v426h170v86h-170c-48 0-86-40-86-86v-512c0-46 38-86 86-86h596z"],
    "tags": ["open_in_browser"],
    "defaultCode": 59549,
    "grid": 24
  }, {
    "paths": ["M598 640v128h128l-214 214-214-214h128v-128h172zM982 512l-214 214v-128h-128v-172h128v-128zM384 426v172h-128v128l-214-214 214-214v128h128zM426 384v-128h-128l214-214 214 214h-128v128h-172z"],
    "tags": ["open_with"],
    "defaultCode": 59551,
    "grid": 24
  }, {
    "paths": ["M810 128c46 0 86 40 86 86v256h-214l44-172-172 44v-214h256zM726 726l-44-172h214v256c0 46-40 86-86 86h-256v-214zM342 554l-44 172 172-44v214h-256c-46 0-86-40-86-86v-256h214zM128 214c0-46 40-86 86-86h256v214l-172-44 44 172h-214v-256z"],
    "tags": ["pages"],
    "defaultCode": 59385,
    "grid": 24
  }, {
    "paths": ["M716 776l60-60-124-124c18-30 30-64 30-102 0-106-86-192-192-192s-192 86-192 192 86 192 192 192c38 0 72-12 102-30zM854 170c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h684zM490 384c58 0 108 48 108 106s-50 108-108 108-106-50-106-108 48-106 106-106z"],
    "tags": ["pageview"],
    "defaultCode": 59552,
    "grid": 24
  }, {
    "paths": ["M982 234v620c0 94-78 170-172 170h-310c-46 0-90-18-122-50l-336-342s54-52 56-52c10-8 22-12 34-12 10 0 18 2 26 6 2 0 184 104 184 104v-508c0-36 28-64 64-64s64 28 64 64v300h42v-406c0-36 28-64 64-64s64 28 64 64v406h42v-364c0-36 28-64 64-64s64 28 64 64v364h44v-236c0-36 28-64 64-64s64 28 64 64z"],
    "tags": ["pan_tool"],
    "defaultCode": 59685,
    "grid": 24
  }, {
    "paths": ["M362 534l-148 192h596l-192-256-148 192zM982 768c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-512c0-46 40-86 86-86h768c46 0 86 40 86 86v512z"],
    "tags": ["panorama"],
    "defaultCode": 58379,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["radio_button_unchecked"],
    "defaultCode": 59446,
    "grid": 24
  }, {
    "paths": ["M914 170c14 0 24 10 24 28v628c0 18-10 28-24 28-4 0-8-2-12-4-126-46-258-70-390-70s-264 24-390 70c-4 2-8 4-12 4-14 0-24-12-24-28v-628c0-18 10-28 24-28 4 0 8 2 12 4 126 46 258 70 390 70s264-24 390-70c4-2 8-4 12-4zM854 280c-110 34-226 48-342 48s-232-16-342-48v464c110-32 226-48 342-48s232 16 342 48v-464z"],
    "tags": ["panorama_horizontal"],
    "defaultCode": 58381,
    "grid": 24
  }, {
    "paths": ["M280 854h464c-32-110-48-226-48-342s16-232 48-342h-464c32 110 48 226 48 342s-16 232-48 342zM850 902c2 4 4 8 4 12 0 14-12 24-28 24h-628c-18 0-28-10-28-24 0-4 2-8 4-12 46-126 70-258 70-390s-24-264-70-390c-2-4-4-8-4-12 0-14 10-24 28-24h628c18 0 28 10 28 24 0 4-2 8-4 12-46 126-70 258-70 390s24 264 70 390z"],
    "tags": ["panorama_vertical"],
    "defaultCode": 58382,
    "grid": 24
  }, {
    "paths": ["M512 170c116 0 224 12 340 32l38 6 12 38c24 88 36 178 36 266s-12 178-36 266l-12 38-38 6c-116 20-224 32-340 32s-224-12-340-32l-38-6-12-38c-24-88-36-178-36-266s12-178 36-266l12-38 38-6c116-20 224-32 340-32zM512 256c-104 0-202 10-312 28-20 76-30 152-30 228s10 152 30 228c110 18 208 28 312 28s202-10 312-28c20-76 30-152 30-228s-10-152-30-228c-110-18-208-28-312-28z"],
    "tags": ["panorama_wide_angle"],
    "defaultCode": 58383,
    "grid": 24
  }, {
    "paths": ["M512 726c118 0 214-96 214-214 0-14-2-28-4-42h-90c4 14 8 28 8 42 0 70-58 128-128 128h-170c40 52 100 86 170 86zM512 298c-118 0-214 96-214 214 0 14 2 28 4 42h90c-4-14-8-28-8-42 0-70 58-128 128-128h170c-40-52-100-86-170-86zM854 170c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h136l78-84h256l78 84h136z"],
    "tags": ["party_mode"],
    "defaultCode": 59386,
    "grid": 24
  }, {
    "paths": ["M598 214h170v596h-170v-596zM256 810v-596h170v596h-170z"],
    "tags": ["pause"],
    "defaultCode": 57396,
    "grid": 24
  }, {
    "paths": ["M640 682v-340h-86v340h86zM470 682v-340h-86v340h86zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["pause_circle_filled"],
    "defaultCode": 57397,
    "grid": 24
  }, {
    "paths": ["M554 682v-340h86v340h-86zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM384 682v-340h86v340h-86z"],
    "tags": ["pause_circle_outline"],
    "defaultCode": 57398,
    "grid": 24
  }, {
    "paths": ["M704 278c-46 0-86 38-86 84s40 86 86 86 86-40 86-86-40-84-86-84zM704 512c-82 0-150-68-150-150s68-148 150-148 150 66 150 148-68 150-150 150zM320 278c-46 0-86 38-86 84s40 86 86 86 86-40 86-86-40-84-86-84zM320 512c-82 0-150-68-150-150s68-148 150-148 150 66 150 148-68 150-150 150zM918 746v-52c0-24-110-76-214-76-46 0-90 12-128 24 14 16 22 32 22 52v52h320zM534 746v-52c0-24-110-76-214-76s-214 52-214 76v52h428zM704 554c92 0 278 48 278 140v116h-940v-116c0-92 186-140 278-140 52 0 130 16 192 44 62-28 140-44 192-44z"],
    "tags": ["people_outline"],
    "defaultCode": 59388,
    "grid": 24
  }, {
    "paths": ["M598 554v-170c0-46-40-86-86-86s-86 40-86 86v170c0 46 40 86 86 86s86-40 86-86zM854 214c46 0 84 38 84 84v512c0 46-38 86-84 86h-300v-90c120-20 214-126 214-252h-86c0 94-76 172-170 172s-170-78-170-172h-86c0 126 94 232 214 252v90h-300c-46 0-84-40-84-86v-512c0-46 38-84 84-84h136l78-86h256l78 86h136z"],
    "tags": ["perm_camera_mic"],
    "defaultCode": 59554,
    "grid": 24
  }, {
    "paths": ["M768 768v-42c0-86-170-132-256-132s-256 46-256 132v42h512zM512 256c-70 0-128 58-128 128s58 128 128 128 128-58 128-128-58-128-128-128zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h42v-86h86v86h340v-86h86v86h42z"],
    "tags": ["perm_contact_calendar"],
    "defaultCode": 59555,
    "grid": 24
  }, {
    "paths": ["M810 874c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM968 832l46 34c4 4 4 10 2 14l-42 74c-2 4-10 8-14 6l-52-22c-10 8-24 14-36 20l-8 58c0 6-6 8-12 8h-84c-6 0-12-2-12-8l-8-58c-14-6-24-12-36-20l-52 22c-6 2-12-2-14-6l-42-74c-2-4-2-10 2-14l46-34c0-6-2-14-2-22s2-14 2-20l-46-36c-4-4-4-10-2-14l42-74c2-4 10-6 14-4l52 22c12-8 24-16 36-22l8-56c0-6 6-8 12-8h84c6 0 12 2 12 8l8 56c14 6 24 14 36 22l52-22c6-2 12 0 14 4l42 74c2 4 2 10-2 14l-46 36c2 6 2 12 2 20s-2 16-2 22zM810 490c-176 0-320 144-320 320 0 14 2 30 4 44h-494l854-854-2 494c-14-2-28-4-42-4z"],
    "tags": ["perm_data_setting"],
    "defaultCode": 59556,
    "grid": 24
  }, {
    "paths": ["M726 810v-596h-428v596h428zM726 44c46 0 84 38 84 84v768c0 46-38 86-84 86h-428c-46 0-84-40-84-86v-768c0-46 38-86 84-86zM554 470v256h-84v-256h84zM554 298v86h-84v-86h84z"],
    "tags": ["perm_device_information"],
    "defaultCode": 59557,
    "grid": 24
  }, {
    "paths": ["M512 554c114 0 342 58 342 172v128h-684v-128c0-114 228-172 342-172zM512 170c94 0 170 78 170 172s-76 170-170 170-170-76-170-170 76-172 170-172zM512 636c-126 0-260 62-260 90v46h520v-46c0-28-134-90-260-90zM512 252c-50 0-90 40-90 90s40 88 90 88 90-38 90-88-40-90-90-90z"],
    "tags": ["person_outline"],
    "defaultCode": 59391,
    "grid": 24
  }, {
    "paths": ["M298 640h598l-150-192-106 128-150-192zM938 170c46 0 86 40 86 86v426c0 46-40 86-86 86h-682c-46 0-86-40-86-86l2-512c0-46 38-84 84-84h256l86 84h340zM86 256v598h768v84h-768c-46 0-86-38-86-84v-598h86z"],
    "tags": ["perm_media"],
    "defaultCode": 59559,
    "grid": 24
  }, {
    "paths": ["M512 128h384v298h-256l-128 128v-426zM854 662c24 0 42 18 42 42v150c0 24-18 42-42 42-400 0-726-326-726-726 0-24 18-42 42-42h150c24 0 42 18 42 42 0 54 8 104 24 152 4 14 2 32-10 44l-94 94c62 120 162 220 282 282l94-94c12-12 30-14 44-10 48 16 98 24 152 24z"],
    "tags": ["perm_phone_msg"],
    "defaultCode": 59560,
    "grid": 24
  }, {
    "paths": ["M470 342h84v-86h-84v86zM554 682v-256h-84v256h84zM512 128c216 0 378 80 512 182l-512 628-512-630c134-102 296-180 512-180z"],
    "tags": ["perm_scan_wifi"],
    "defaultCode": 59561,
    "grid": 24
  }, {
    "paths": ["M512 598c114 0 342 56 342 170v86h-684v-86c0-114 228-170 342-170zM512 512c-94 0-170-76-170-170s76-172 170-172 170 78 170 172-76 170-170 170z"],
    "tags": ["person"],
    "defaultCode": 59389,
    "grid": 24
  }, {
    "paths": ["M640 598c114 0 342 56 342 170v86h-684v-86c0-114 228-170 342-170zM256 426h128v86h-128v128h-86v-128h-128v-86h128v-128h86v128zM640 512c-94 0-170-76-170-170s76-172 170-172 170 78 170 172-76 170-170 170z"],
    "tags": ["person_add"],
    "defaultCode": 59390,
    "grid": 24
  }, {
    "paths": ["M768 682v-38c0-86-170-132-256-132s-256 46-256 132v38h512zM512 226c-64 0-116 52-116 116s52 114 116 114 116-50 116-114-52-116-116-116zM810 86c46 0 86 38 86 84v598c0 46-40 86-86 86h-170l-128 128-128-128h-170c-48 0-86-40-86-86v-598c0-46 38-84 86-84h596z"],
    "tags": ["person_pin"],
    "defaultCode": 58714,
    "grid": 24
  }, {
    "paths": ["M512 598c72 0 134-36 170-92 0-56-114-88-170-88s-170 32-170 88c36 56 98 92 170 92zM512 170c-46 0-86 40-86 86 0 48 40 86 86 86s86-38 86-86c0-46-40-86-86-86zM512 86c164 0 298 134 298 298 0 224-298 554-298 554s-298-330-298-554c0-164 134-298 298-298z"],
    "tags": ["person_pin_circle"],
    "defaultCode": 58730,
    "grid": 24
  }, {
    "paths": ["M896 726v-512h-768v512h768zM896 128c46 0 86 38 86 86l-2 512c0 46-38 84-84 84h-214v86h-340v-86h-214c-48 0-86-38-86-84v-512c0-48 38-86 86-86h768z"],
    "tags": ["personal_video"],
    "defaultCode": 58939,
    "grid": 24
  }, {
    "paths": ["M740 634c56 56 126 116 112 204-12 44-44 88-100 100-32 6-130-18-236-18h-8c-106 0-204 24-236 18-56-12-88-56-100-100-12-86 56-148 112-204 38-44 68-80 106-124 20-24 44-46 74-56 4-2 10-4 14-4 12-2 22-2 34-2s24 0 34 2c4 0 10 2 14 4 30 10 54 32 74 56 38 44 68 80 106 124zM726 406c0-58 48-108 106-108s106 50 106 108-48 106-106 106-106-48-106-106zM534 234c0-58 48-106 106-106s106 48 106 106-48 108-106 108-106-50-106-108zM278 234c0-58 48-106 106-106s106 48 106 106-48 108-106 108-106-50-106-108zM86 406c0-58 48-108 106-108s106 50 106 108-48 106-106 106-106-48-106-106z"],
    "tags": ["pets"],
    "defaultCode": 59677,
    "grid": 24
  }, {
    "paths": ["M736 768v-598h-448v598h448zM598 896v-42h-172v42h172zM682 42c70 0 128 58 128 128v684c0 70-58 128-128 128h-340c-70 0-128-58-128-128v-684c0-70 58-128 128-128h340z"],
    "tags": ["phone_android"],
    "defaultCode": 58148,
    "grid": 24
  }, {
    "paths": ["M854 662c24 0 42 18 42 42v150c0 24-18 42-42 42-400 0-726-326-726-726 0-24 18-42 42-42h150c24 0 42 18 42 42 0 54 8 104 24 152 4 14 2 32-10 44l-94 94c62 122 162 220 282 282l94-94c12-12 30-14 44-10 48 16 98 24 152 24zM768 308v80l40-40zM768 124v80l40-40zM628 406l-30-30 118-120-118-120 30-30 98 98v-162h20l122 122-92 92 92 92-122 122h-20v-162z"],
    "tags": ["phone_bluetooth_speaker"],
    "defaultCode": 58907,
    "grid": 24
  }, {
    "paths": ["M854 662c24 0 42 18 42 42v150c0 24-18 42-42 42-400 0-726-326-726-726 0-24 18-42 42-42h150c24 0 42 18 42 42 0 54 8 104 24 152 4 14 2 32-10 44l-94 94c62 122 162 220 282 282l94-94c12-12 30-14 44-10 48 16 98 24 152 24zM768 470v-128h-170v-172h170v-128l214 214z"],
    "tags": ["phone_forwarded"],
    "defaultCode": 58908,
    "grid": 24
  }, {
    "paths": ["M640 512c0-70-58-128-128-128v-86c118 0 214 96 214 214h-86zM810 512c0-166-132-298-298-298v-86c212 0 384 172 384 384h-86zM854 662c24 0 42 18 42 42v150c0 24-18 42-42 42-400 0-726-326-726-726 0-24 18-42 42-42h150c24 0 42 18 42 42 0 54 8 104 24 152 4 14 2 32-10 44l-94 94c62 122 162 220 282 282l94-94c12-12 30-14 44-10 48 16 98 24 152 24z"],
    "tags": ["phone_in_talk"],
    "defaultCode": 58909,
    "grid": 24
  }, {
    "paths": ["M682 768v-598h-384v598h384zM490 938c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM662 42c58 0 106 50 106 108v724c0 58-48 108-106 108h-342c-58 0-106-50-106-108v-724c0-58 48-108 106-108h342z"],
    "tags": ["phone_iphone"],
    "defaultCode": 58149,
    "grid": 24
  }, {
    "paths": ["M820 170v-20c0-40-34-74-74-74s-72 34-72 74v20h146zM854 170c24 0 42 20 42 44v170c0 24-18 42-42 42h-214c-24 0-42-18-42-42v-170c0-24 18-44 42-44v-20c0-58 48-108 106-108s108 50 108 108v20zM854 662c24 0 42 18 42 42v150c0 24-18 42-42 42-400 0-726-326-726-726 0-24 18-42 42-42h150c24 0 42 18 42 42 0 54 8 104 24 152 4 14 2 32-10 44l-94 94c62 122 162 220 282 282l94-94c12-12 30-14 44-10 48 16 98 24 152 24z"],
    "tags": ["phone_locked"],
    "defaultCode": 58910,
    "grid": 24
  }, {
    "paths": ["M1012 712c8 8 12 18 12 30s-4 22-12 30l-106 106c-8 8-18 12-30 12s-22-4-30-12c-34-32-72-60-114-80-14-6-24-22-24-38v-132c-62-20-128-30-196-30s-134 10-196 30v132c0 18-10 34-24 40-42 20-80 46-114 78-8 8-18 12-30 12s-22-4-30-12l-106-106c-8-8-12-18-12-30s4-22 12-30c130-124 306-200 500-200s370 76 500 200zM278 234v150h-64v-256h256v64h-150l192 192 256-256 42 42-298 300z"],
    "tags": ["phone_missed"],
    "defaultCode": 58911,
    "grid": 24
  }, {
    "paths": ["M810 128h86v298h-86v-298zM854 662c24 0 42 18 42 42v150c0 24-18 42-42 42-400 0-726-326-726-726 0-24 18-42 42-42h150c24 0 42 18 42 42 0 54 8 104 24 152 4 14 2 32-10 44l-94 94c62 122 162 220 282 282l94-94c12-12 30-14 44-10 48 16 98 24 152 24zM726 128v298h-86v-298h86z"],
    "tags": ["phone_paused"],
    "defaultCode": 58912,
    "grid": 24
  }, {
    "paths": ["M810 42c46 0 86 40 86 86v768c0 46-40 86-86 86h-426c-46 0-86-40-86-86v-128h86v86h426v-684h-426v86h-86v-128c0-46 40-86 86-86h426zM554 350l-170 170 170 172-42 42-170-170-172 170-42-42 170-172-170-170 42-42 172 170 170-170z"],
    "tags": ["phonelink_erase"],
    "defaultCode": 57563,
    "grid": 24
  }, {
    "paths": ["M406 470v-64c0-34-30-56-64-56s-64 22-64 56v64h128zM460 470c26 0 52 24 52 54v150c0 26-26 52-56 52h-234c-26 0-52-26-52-56v-150c0-26 26-50 52-50v-64c0-60 60-108 120-108s118 48 118 108v64zM810 42c46 0 86 40 86 86v768c0 46-40 86-86 86h-426c-46 0-86-40-86-86v-128h86v86h426v-684h-426v86h-86v-128c0-46 40-86 86-86h426z"],
    "tags": ["phonelink_lock"],
    "defaultCode": 57564,
    "grid": 24
  }, {
    "paths": ["M982 342c24 0 42 18 42 42v426c0 24-18 44-42 44h-8l-128-128h92v-300h-170v222l-86-86v-178c0-24 20-42 44-42h256zM170 268v458h458zM82 70c276.214 276.452 551.97 553.364 828 830l-54 54-100-100h-756v-128h86v-470c0-20 8-40 20-54l-78-78zM938 256h-562l-86-86h648v86z"],
    "tags": ["phonelink_off"],
    "defaultCode": 58151,
    "grid": 24
  }, {
    "paths": ["M598 854v-684h-428v684h428zM598 42c46 0 84 40 84 86v768c0 46-38 86-84 86h-428c-46 0-84-40-84-86v-768c0-46 38-86 84-86h428zM768 418c52 56 52 132 0 184l-42-44c22-30 22-68 0-98zM858 328c106 102 106 266 0 364l-44-44c76-82 76-200 0-276z"],
    "tags": ["phonelink_ring"],
    "defaultCode": 57565,
    "grid": 24
  }, {
    "paths": ["M810 42c46 0 86 40 86 86v768c0 46-40 86-86 86h-426c-46 0-86-40-86-86v-128h86v86h426v-684h-426v86h-86v-128c0-46 40-86 86-86h426zM342 598c46 0 84-40 84-86s-38-86-84-86-86 40-86 86 40 86 86 86zM504 534l46 38c4 4 8 8 4 12l-42 74c-4 4-8 4-12 4l-56-22c-12 8-26 18-38 22l-10 54c-4 4-8 10-12 10h-86c-4 0-12-6-8-10l-8-54c-12-4-26-14-38-22l-60 18c-4 4-10-2-14-6l-42-72c0-4 0-8 4-16l48-34v-44l-48-34c-4-4-8-8-4-12l42-74c4-4 10-4 14-4l54 22c12-8 28-18 40-22l8-54c4-4 8-10 12-10h86c8 0 12 6 12 10l10 54c12 4 26 14 38 22l56-18c4-4 8 2 12 6l42 72c0 4 0 8-4 12l-46 34v44z"],
    "tags": ["phonelink_setup"],
    "defaultCode": 57566,
    "grid": 24
  }, {
    "paths": ["M256 810h512l-164-218-128 164-92-110zM256 170v342l106-64 108 64v-342h-214zM768 86c46 0 86 38 86 84v684c0 46-40 84-86 84h-512c-46 0-86-38-86-84v-684c0-46 40-84 86-84h512z"],
    "tags": ["photo_album"],
    "defaultCode": 58385,
    "grid": 24
  }, {
    "paths": ["M566 458l116 54-116 54-54 116-54-116-116-54 116-54 54-116zM726 426l-40-88-88-40 88-40 40-88 40 88 88 40-88 40zM812 426h84v384c0 46-38 86-84 86h-598c-46 0-86-40-86-86v-596c0-46 40-86 86-86h384v86h-384v596h598v-384z"],
    "tags": ["photo_filter"],
    "defaultCode": 58427,
    "grid": 24
  }, {
    "paths": ["M214 726h596l-192-256-148 192-108-128zM896 128c42 0 86 44 86 86v596c0 42-44 86-86 86h-768c-46 0-86-40-86-86v-596c0-42 44-86 86-86h768z"],
    "tags": ["photo_size_select_actual"],
    "defaultCode": 58418,
    "grid": 24
  }, {
    "paths": ["M128 810h426l-136-182-106 138-78-92zM42 470h598v426h-512c-46 0-86-40-86-86v-340zM214 128h84v86h-84v-86zM384 128h86v86h-86v-86zM128 128v86h-86c0-42 44-86 86-86zM726 810h84v86h-84v-86zM726 128h84v86h-84v-86zM42 298h86v86h-86v-86zM896 128c42 0 86 44 86 86h-86v-86zM896 298h86v86h-86v-86zM554 128h86v86h-86v-86zM982 810c0 42-44 86-86 86v-86h86zM896 470h86v84h-86v-84zM896 640h86v86h-86v-86z"],
    "tags": ["photo_size_select_large"],
    "defaultCode": 58419,
    "grid": 24
  }, {
    "paths": ["M298 128v86h-84v-86h84zM470 128v86h-86v-86h86zM128 470v84h-86v-84h86zM128 128v86h-86c0-42 44-86 86-86zM810 810v86h-84v-86h84zM810 128v86h-84v-86h84zM640 810v86h-86v-86h86zM128 298v86h-86v-86h86zM128 896c-46 0-86-40-86-86v-170h428v256h-342zM896 128c42 0 86 44 86 86h-86v-86zM982 298v86h-86v-86h86zM640 128v86h-86v-86h86zM982 810c0 42-44 86-86 86v-86h86zM982 470v84h-86v-84h86zM982 640v86h-86v-86h86z"],
    "tags": ["photo_size_select_small"],
    "defaultCode": 58420,
    "grid": 24
  }, {
    "paths": ["M598 490v-128h42v128h-42zM170 256v598h598v84h-598c-46 0-84-38-84-84v-598h84zM384 406v-44h42v44h-42zM874 362v-64h-128v256h64v-84h64v-64h-64v-44h64zM704 490v-128c0-36-28-64-64-64h-106v256h106c36 0 64-28 64-64zM490 406v-44c0-36-28-64-64-64h-106v256h64v-84h42c36 0 64-28 64-64zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-512c-46 0-86-40-86-86v-512c0-46 40-84 86-84h512z"],
    "tags": ["picture_as_pdf"],
    "defaultCode": 58389,
    "grid": 24
  }, {
    "paths": ["M896 812v-600h-768v600h768zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768zM810 298v256h-340v-256h340z"],
    "tags": ["picture_in_picture"],
    "defaultCode": 59562,
    "grid": 24
  }, {
    "paths": ["M896 812v-600h-768v600h768zM982 810c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-598c0-46 40-84 86-84h768c46 0 86 38 86 84v598zM810 470v256h-340v-256h340z"],
    "tags": ["picture_in_picture_alt"],
    "defaultCode": 59665,
    "grid": 24
  }, {
    "paths": ["M556 556h382c-20 202-180 362-382 382v-382zM556 86c202 20 362 180 382 382h-382v-382zM470 86v852c-216-22-384-204-384-426s168-404 384-426z"],
    "tags": ["pie_chart"],
    "defaultCode": 59076,
    "grid": 24
  }, {
    "paths": ["M554 850c154-20 276-142 296-296h-296v296zM170 512c0 174 132 316 300 338v-676c-168 20-300 164-300 338zM554 174v296h296c-20-154-142-276-296-296zM512 86c234 0 426 192 426 426s-192 426-426 426-426-192-426-426 192-426 426-426z"],
    "tags": ["pie_chart_outlined"],
    "defaultCode": 59077,
    "grid": 24
  }, {
    "paths": ["M214 854h596v84h-596v-84zM426 342c0 46 40 84 86 84 48 0 86-38 86-84s-40-86-86-86-86 40-86 86zM768 342c0 192-256 468-256 468s-256-276-256-468c0-142 114-256 256-256s256 114 256 256z"],
    "tags": ["pin_drop"],
    "defaultCode": 58718,
    "grid": 24
  }, {
    "paths": ["M342 214l468 298-468 298v-596z"],
    "tags": ["play_arrow"],
    "defaultCode": 57399,
    "grid": 24
  }, {
    "paths": ["M426 704l256-192-256-192v384zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["play_circle_filled"],
    "defaultCode": 57400,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM426 704v-384l256 192z"],
    "tags": ["play_circle_outline"],
    "defaultCode": 57401,
    "grid": 24
  }, {
    "paths": ["M256 598h86c0 94 76 170 170 170s170-76 170-170h86c0 142-114 256-256 256s-256-114-256-256zM470 214h84v238h150l-192 192-192-192h150v-238z"],
    "tags": ["play_for_work"],
    "defaultCode": 59654,
    "grid": 24
  }, {
    "paths": ["M86 682v-84h340v84h-340zM768 598h170v84h-170v172h-86v-172h-170v-84h170v-172h86v172zM598 256v86h-512v-86h512zM598 426v86h-512v-86h512z"],
    "tags": ["playlist_add"],
    "defaultCode": 57403,
    "grid": 24
  }, {
    "paths": ["M918 490l64 64-298 300-194-192 64-64 130 128zM86 682v-84h340v84h-340zM598 256v86h-512v-86h512zM598 426v86h-512v-86h512z"],
    "tags": ["playlist_add_check"],
    "defaultCode": 57445,
    "grid": 24
  }, {
    "paths": ["M726 554l212 128-212 128v-256zM86 640v-86h554v86h-554zM810 214v84h-724v-84h724zM810 384v86h-724v-86h724z"],
    "tags": ["playlist_play"],
    "defaultCode": 57439,
    "grid": 24
  }, {
    "paths": ["M618 260l192-46v554h-84v-452l-108 22v-78zM426 342v170h172v86h-172v170h-84v-170h-172v-86h172v-170h84z"],
    "tags": ["plus_one"],
    "defaultCode": 59392,
    "grid": 24
  }, {
    "paths": ["M810 170l192 342-192 342h-170l192-342-112-198-336 540h-170l-192-342 192-342h170l-192 342 112 198 336-540h170z"],
    "tags": ["polymer"],
    "defaultCode": 59563,
    "grid": 24
  }, {
    "paths": ["M598 234c0-58 48-106 106-106s106 48 106 106-48 108-106 108-106-50-106-108zM370 512c-24 0-34-6-50-16-8-6-18-10-32-16l138-138-42-44c-48-48-92-64-170-64v-106c106 0 168 20 234 86l274 272c-6 4-12 8-18 10-16 10-26 16-50 16s-32-6-48-16c-20-12-46-26-94-26s-74 14-94 26c-16 10-24 16-48 16zM938 704c-48 0-72-16-92-28-16-10-26-14-50-14s-32 4-48 14c-20 12-46 28-94 28s-72-16-92-28c-16-10-26-14-50-14s-32 4-48 14c-20 12-46 28-94 28s-72-16-92-28c-16-10-26-14-50-14s-32 4-48 14c-20 12-46 28-94 28v-86c24 0 32-4 48-14 20-12 46-28 94-28s72 16 92 28c16 10 26 14 50 14s32-4 48-14c20-12 46-28 94-28s72 16 92 28c16 10 26 14 50 14s32-4 48-14c20-12 46-28 94-28s72 16 92 28c16 10 26 14 50 14v86zM938 896c-48 0-72-16-92-28-16-10-26-14-50-14s-32 4-48 14c-20 12-46 28-94 28s-72-16-92-28c-16-10-26-14-50-14s-32 4-48 14c-20 12-46 28-94 28s-74-16-94-28c-16-10-24-14-48-14s-34 4-50 14c-20 12-44 28-92 28v-86c24 0 32-4 48-14 20-12 46-28 94-28s72 16 92 28c16 10 26 14 50 14s32-4 48-14c20-12 46-28 94-28s74 16 94 28c16 10 24 14 48 14s34-4 50-14c20-12 44-28 92-28s74 16 94 28c16 10 24 14 48 14v86z"],
    "tags": ["pool"],
    "defaultCode": 60232,
    "grid": 24
  }, {
    "paths": ["M140 106l42 44 714 714-54 54-320-322h-2l-8 2c-46 0-86-40-86-86l2-8-68-68c-12 24-18 48-18 76 0 64 34 118 84 148l-42 74c-76-44-128-128-128-222 0-52 14-98 40-138l-60-62c-40 56-66 124-66 200 0 126 68 236 170 296l-42 74c-128-74-212-212-212-370 0-98 32-190 88-262l-88-90zM512 170c-58 0-112 14-160 40l-62-62c64-40 140-62 222-62 236 0 426 190 426 426 0 82-22 158-62 222l-64-62c26-48 42-102 42-160 0-188-154-342-342-342zM750 608l-70-70c2-8 2-18 2-26 0-94-76-170-170-170-8 0-18 0-26 2l-70-70c30-12 62-18 96-18 142 0 256 114 256 256 0 34-6 66-18 96z"],
    "tags": ["portable_wifi_off"],
    "defaultCode": 57550,
    "grid": 24
  }, {
    "paths": ["M810 810v-596h-596v596h596zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596zM704 694v32h-384v-32c0-64 128-96 192-96s192 32 192 96zM512 522c-52 0-96-44-96-96s44-96 96-96 96 44 96 96-44 96-96 96z"],
    "tags": ["portrait"],
    "defaultCode": 58390,
    "grid": 24
  }, {
    "paths": ["M684 298c42 0 84 44 84 86v234l-150 150v128h-212v-128l-150-150v-234c0-42 42-86 84-86h2v-170h84v170h172v-170h84z"],
    "tags": ["power"],
    "defaultCode": 58940,
    "grid": 24
  }, {
    "paths": ["M682 640v-86h214v86h-214zM384 640v-86h214v86h-214zM86 640v-86h212v86h-212zM86 384h810v86h-810v-86z"],
    "tags": ["power_input"],
    "defaultCode": 58166,
    "grid": 24
  }, {
    "paths": ["M760 220c82 70 136 176 136 292 0 212-172 384-384 384s-384-172-384-384c0-116 54-222 136-292l60 60c-66 54-110 138-110 232 0 166 132 298 298 298s298-132 298-298c0-94-42-176-110-230zM554 128v426h-84v-426h84z"],
    "tags": ["power_settings_new"],
    "defaultCode": 59564,
    "grid": 24
  }, {
    "paths": ["M682 554v172h-128v212h-128v-212h-84v-300c0-70 58-128 128-128s128 58 128 128c50 20 84 70 84 128zM384 170c0-48 38-84 86-84s84 36 84 84-36 86-84 86-86-38-86-86z"],
    "tags": ["pregnant_woman"],
    "defaultCode": 59678,
    "grid": 24
  }, {
    "paths": ["M426 512h-84l170-170 170 170h-84v170h-172v-170zM896 812v-600h-768v600h768zM896 128c48 0 86 38 86 86v596c0 48-38 86-86 86h-768c-48 0-86-38-86-86v-596c0-48 38-86 86-86h768z"],
    "tags": ["present_to_all"],
    "defaultCode": 57567,
    "grid": 24
  }, {
    "paths": ["M426 128h172v512h-172v-512zM426 810c0-48 38-84 86-84s86 36 86 84-38 86-86 86-86-38-86-86z"],
    "tags": ["priority_high"],
    "defaultCode": 58949,
    "grid": 24
  }, {
    "paths": ["M764 742c56-60 90-142 90-230 0-142-88-266-214-316v18c0 46-40 84-86 84h-84v86c0 24-20 42-44 42h-84v86h256c24 0 42 18 42 42v128h42c38 0 70 26 82 60zM470 850v-82c-46 0-86-40-86-86v-42l-204-204c-6 24-10 50-10 76 0 174 132 318 300 338zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["public"],
    "defaultCode": 59403,
    "grid": 24
  }, {
    "paths": ["M214 598l298-300 298 300h-170v256h-256v-256h-170zM214 170h596v86h-596v-86z"],
    "tags": ["publish"],
    "defaultCode": 57941,
    "grid": 24
  }, {
    "paths": ["M726 256h212v86h-128v384c0 70-58 128-128 128s-128-58-128-128 58-128 128-128c14 0 30 4 44 8v-350zM128 682v-84h342v84h-342zM640 426v86h-512v-86h512zM640 256v86h-512v-86h512z"],
    "tags": ["queue_music"],
    "defaultCode": 57405,
    "grid": 24
  }, {
    "paths": ["M1024 768l-192 192-64-64 128-128-128-128 64-64zM554 426h128v86h-128v128h-84v-128h-128v-86h128v-128h84v128zM896 128c46 0 86 38 86 86v340h-86v-340h-768v512h640v84h-86v86h-340v-86h-214c-48 0-86-38-86-84v-512c0-48 38-86 86-86h768z"],
    "tags": ["queue_play_next"],
    "defaultCode": 57446,
    "grid": 24
  }, {
    "paths": ["M854 512v-170h-684v170h512v-86h86v86h86zM298 854c70 0 128-58 128-128s-58-128-128-128-128 58-128 128 58 128 128 128zM138 262l540-220 28 72-352 142h500c48 0 84 38 84 86v512c0 46-36 84-84 84h-684c-48 0-84-38-84-84v-512c0-36 20-68 52-80z"],
    "tags": ["radio"],
    "defaultCode": 57406,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM512 298c118 0 214 96 214 214s-96 214-214 214-214-96-214-214 96-214 214-214z"],
    "tags": ["radio_button_checked"],
    "defaultCode": 59447,
    "grid": 24
  }, {
    "paths": ["M768 598v-86h-234l-86 86h320zM256 598h106l294-294c8-8 8-22 0-30l-76-76c-8-8-22-8-30 0l-294 294v106zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["rate_review"],
    "defaultCode": 58720,
    "grid": 24
  }, {
    "paths": ["M128 938v-852l64 64 64-64 64 64 64-64 64 64 64-64 64 64 64-64 64 64 64-64 64 64 64-64v852l-64-64-64 64-64-64-64 64-64-64-64 64-64-64-64 64-64-64-64 64-64-64zM768 384v-86h-512v86h512zM768 554v-84h-512v84h512zM768 726v-86h-512v86h512z"],
    "tags": ["receipt"],
    "defaultCode": 59568,
    "grid": 24
  }, {
    "paths": ["M534 726v-32c0-64-128-96-192-96s-192 32-192 96v32h384zM342 330c-52 0-96 44-96 96s44 96 96 96 96-44 96-96-44-96-96-96zM598 214c24 0 42 18 42 42v512c0 24-18 42-42 42h-512c-24 0-44-18-44-42v-512c0-24 20-42 44-42h512zM726 810v-596h84v596h-84zM896 214h86v596h-86v-596z"],
    "tags": ["recent_actors"],
    "defaultCode": 57407,
    "grid": 24
  }, {
    "paths": ["M856 86c166 172 166 430 0 596l-70-68c118-136 118-332 0-460zM716 228c86 94 86 224 0 310l-72-72c36-50 36-116 0-166zM384 640c114 0 342 56 342 170v86h-684v-86c0-114 228-170 342-170zM214 384c0-94 76-170 170-170s170 76 170 170-76 170-170 170-170-76-170-170z"],
    "tags": ["record_voice_over"],
    "defaultCode": 59679,
    "grid": 24
  }, {
    "paths": ["M786 452l152-154v384h-384l156-154c-60-50-136-80-220-80-152 0-280 98-324 234l-100-32c58-178 226-308 424-308 114 0 218 42 296 110z"],
    "tags": ["redo"],
    "defaultCode": 57690,
    "grid": 24
  }, {
    "paths": ["M754 270l100-100v300h-300l138-138c-46-46-110-76-180-76-142 0-256 114-256 256s114 256 256 256c112 0 208-70 242-170h88c-38 148-170 256-330 256-188 0-340-154-340-342s152-342 340-342c94 0 180 38 242 100z"],
    "tags": ["refresh"],
    "defaultCode": 58837,
    "grid": 24
  }, {
    "paths": ["M810 554h-596v-84h596v84z"],
    "tags": ["remove"],
    "defaultCode": 57691,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM298 470h428v84h-428v-84z"],
    "tags": ["remove_circle_outline"],
    "defaultCode": 57693,
    "grid": 24
  }, {
    "paths": ["M682 426v86h-340v-86h340zM896 726v-512h-768v512h768zM896 128c46 0 86 38 86 86l-2 512c0 46-38 84-84 84h-214v86h-340v-86h-214c-48 0-86-38-86-84v-512c0-48 38-86 86-86h768z"],
    "tags": ["remove_from_queue"],
    "defaultCode": 57447,
    "grid": 24
  }, {
    "paths": ["M512 384c70 0 128 58 128 128s-58 128-128 128-128-58-128-128 58-128 128-128zM512 726c118 0 214-96 214-214s-96-214-214-214-214 96-214 214 96 214 214 214zM512 192c214 0 396 132 470 320-74 188-256 320-470 320s-396-132-470-320c74-188 256-320 470-320z"],
    "tags": ["visibility"],
    "defaultCode": 59636,
    "grid": 24
  }, {
    "paths": ["M298 768c46 0 86 40 86 86s-40 84-86 84-84-38-84-84 38-86 84-86zM664 554l-384-384h574c24 0 42 20 42 44 0 8-2 14-6 20l-152 276c-14 26-42 44-74 44zM316 640h216l-86-86h-100l-38 70-2 6c0 6 4 10 10 10zM970 970l-54 54-122-122c-16 22-40 36-68 36-46 0-86-38-86-84 0-28 14-54 36-70l-60-58h-318c-46 0-84-40-84-86 0-14 4-28 10-40l58-106-94-198-188-188 54-54z"],
    "tags": ["remove_shopping_cart"],
    "defaultCode": 59688,
    "grid": 24
  }, {
    "paths": ["M128 214h768v84h-768v-84zM128 470v-86h768v86h-768zM128 810v-84h768v84h-768zM128 640v-86h768v86h-768z"],
    "tags": ["reorder"],
    "defaultCode": 59646,
    "grid": 24
  }, {
    "paths": ["M726 726v-172h84v256h-512v128l-170-170 170-170v128h428zM298 298v172h-84v-256h512v-128l170 170-170 170v-128h-428z"],
    "tags": ["repeat"],
    "defaultCode": 57408,
    "grid": 24
  }, {
    "paths": ["M554 640h-64v-170h-64v-44l86-42h42v256zM726 726v-172h84v256h-512v128l-170-170 170-170v128h428zM298 298v172h-84v-256h512v-128l170 170-170 170v-128h-428z"],
    "tags": ["repeat_one"],
    "defaultCode": 57409,
    "grid": 24
  }, {
    "paths": ["M512 214c188 0 342 152 342 340s-154 342-342 342-342-154-342-342h86c0 142 114 256 256 256s256-114 256-256-114-256-256-256v172l-214-214 214-214v172z"],
    "tags": ["replay"],
    "defaultCode": 57410,
    "grid": 24
  }, {
    "paths": ["M564 648c0 6.531 12.65 14 20 14 4 0 10 0 14-4l8-10s4-8 4-12v-86c0 0-4-8-4-12 0-5.505-16.424-14-22-14-4 0-8 2-12 6l-8 8s-6 8-6 12v86s6 8 6 12zM648 606c0 12 0 26-4 34l-12 26s-14 12-22 12-18 4-26 4-18 0-26-4-12-8-20-12c-13.488-6.744-18-39.492-18-60v-30c0-12 0-26 4-34l14-26s12-12 20-12 18-4 26-4 18 0 26 4 14 8 22 12 8 14 12 26 4 22 4 34v30zM466 682h-40v-140l-42 12v-30l76-24h6v182zM512 214c188 0 342 152 342 340s-154 342-342 342-342-154-342-342h86c0 140 116 256 256 256s256-116 256-256-116-256-256-256v172l-214-214 214-214v172z"],
    "tags": ["replay_10"],
    "defaultCode": 57433,
    "grid": 24
  }, {
    "paths": ["M572 648c0 7.531 13.843 14 22 14 4 0 8 0 12-4l8-10s4-8 4-12v-86c0-4-4-8-4-12 0-4.671-15.121-14-20-14-4 0-10 2-14 6l-8 8s-4 8-4 12v86s4 8 4 12zM652 606c0 12 0 26-4 34l-12 26s-14 12-22 12-18 4-26 4c-20.252 0-32.299-9.149-46-16-8-4-8-14-12-26s-6-22-6-34v-30c0-12 2-26 6-34l12-26s14-12 22-12 16-4 24-4 18 0 26 4 14 8 22 12 8 14 12 26 4 22 4 34v30zM426 576c16.239 0 30-9.918 30-26v-8s-4-4-4-8-4-4-8-4h-22s-4 4-8 4-4 4-4 8v8h-44c0-19.788 17.639-46 36-46 4 0 16-4 20-4 17.345 0 35.264 5.632 48 12 10.13 5.065 16 24.218 16 38v14s-4 8-4 12-4 8-8 8-10 6-14 10c8 4 18 8 22 16s8 18 8 26 0 18-4 22-8 12-12 16-14 8-22 8-18 4-26 4-16 0-20-4-14-4-22-8c-11.162-5.581-18-27.017-18-42h36v8s4 4 4 8 4 4 8 4h22s4-4 8-4 4-4 4-8v-22s-4-4-4-8-4-4-8-4h-26v-30h16zM512 214c188 0 342 152 342 340s-154 342-342 342-342-154-342-342h86c0 140 116 256 256 256s256-116 256-256-116-256-256-256v172l-214-214 214-214v172z"],
    "tags": ["replay_30"],
    "defaultCode": 57434,
    "grid": 24
  }, {
    "paths": ["M504 580c-3.584 1.434-14 4.805-14 8 0 4-4 6-4 6h-30l10-94h102v30h-74l-4 38s4 0 4-4 6-2 6-6 4 0 8 0h8c8 0 18 2 22 6s12 8 16 12c8.873 8.873 18 27.257 18 46 0 8 0 18-4 22s-6 14-14 22-12 8-16 12-18 4-26 4-18 0-22-4-12-4-20-8c-11.191-5.596-18-22.554-18-38h34c0 14.809 10.59 20 26 20 4 0 8 0 12-4l10-8s4-8 4-12v-26l-4-8-10-10s-8-4-12-4h-8zM512 214c188 0 342 152 342 340s-154 342-342 342-342-154-342-342h86c0 140 116 256 256 256s256-116 256-256-116-256-256-256v172l-214-214 214-214v172z"],
    "tags": ["replay_5"],
    "defaultCode": 57435,
    "grid": 24
  }, {
    "paths": ["M426 384c298 42 428 256 470 470-106-150-256-218-470-218v174l-298-298 298-298v170z"],
    "tags": ["reply"],
    "defaultCode": 57694,
    "grid": 24
  }, {
    "paths": ["M554 384c298 42 428 256 470 470-106-150-256-218-470-218v174l-298-298 298-298v170zM298 342l-170 170 170 170v128l-298-298 298-298v128z"],
    "tags": ["reply_all"],
    "defaultCode": 57695,
    "grid": 24
  }, {
    "paths": ["M554 554v-256h-84v256h84zM512 738c30 0 56-26 56-56s-26-54-56-54-56 24-56 54 26 56 56 56zM672 128l224 224v320l-224 224h-320l-224-224v-320l224-224h320z"],
    "tags": ["report"],
    "defaultCode": 57696,
    "grid": 24
  }, {
    "paths": ["M554 598v-172h-84v172h84zM554 768v-86h-84v86h84zM42 896l470-810 470 810h-940z"],
    "tags": ["warning"],
    "defaultCode": 57346,
    "grid": 24
  }, {
    "paths": ["M682 256c0-76 96-170 214-170v852h-106v-340h-108v-342zM470 384v-298h84v298c0 90-70 164-160 170v384h-106v-384c-90-6-160-80-160-170v-298h86v298h84v-298h86v298h86z"],
    "tags": ["restaurant"],
    "defaultCode": 58732,
    "grid": 24
  }, {
    "paths": ["M512 768c118 0 214-96 214-214s-96-212-214-212c-76 0-142 40-180 98l-54-56v170h170l-68-68c24-48 74-80 132-80 82 0 150 66 150 148s-68 150-150 150c-50 0-96-26-122-64h-74c32 76 108 128 196 128zM598 86l256 256v512c0 46-40 84-86 84h-512c-46 0-86-38-86-84l2-684c0-46 38-84 84-84h342z"],
    "tags": ["restore_page"],
    "defaultCode": 59689,
    "grid": 24
  }, {
    "paths": ["M274 418c0 0-148-148-152-150l60-62 152 152zM554 86v212h-84v-212h84zM902 268c-4 2-152 150-152 150l-60-60 152-152zM1012 712c8 8 12 18 12 30s-4 22-12 30l-106 106c-8 8-18 12-30 12s-22-4-30-12c-34-32-72-60-114-80-14-6-24-22-24-38v-132c-62-20-128-30-196-30s-134 10-196 30v132c0 18-10 34-24 40-42 20-80 46-114 78-8 8-18 12-30 12s-22-4-30-12l-106-106c-8-8-12-18-12-30s4-22 12-30c130-124 306-200 500-200s370 76 500 200z"],
    "tags": ["ring_volume"],
    "defaultCode": 57553,
    "grid": 24
  }, {
    "paths": ["M590 332c166 34 294 176 306 350h-768c12-174 140-316 306-350-4-10-8-22-8-34 0-46 40-84 86-84s86 38 86 84c0 12-4 24-8 34zM86 726h852v84h-852v-84z"],
    "tags": ["room_service"],
    "defaultCode": 60233,
    "grid": 24
  }, {
    "paths": ["M826 284c150 150 150 392 0 542-74 76-174 112-272 112-64 0-126-16-184-48l64-62c38 18 78 26 120 26 76 0 154-30 212-88 116-116 116-306 0-422-58-58-136-88-212-88v138l-180-180 180-182v138c98 0 198 38 272 114zM158 550l156 156 156-156-156-156zM314 274l276 276-276 276-278-276z"],
    "tags": ["rotate_90_degrees_ccw"],
    "defaultCode": 58392,
    "grid": 24
  }, {
    "paths": ["M554 174c168 20 300 164 300 338s-132 318-300 338v-86c122-20 214-126 214-252s-92-232-214-252v166l-194-190 194-194v132zM302 782l62-62c32 24 68 38 106 44v86c-60-8-118-30-168-68zM260 554c6 38 20 74 42 106l-60 60c-38-50-60-106-68-166h86zM304 364c-22 32-38 68-44 106h-86c8-60 32-116 70-166z"],
    "tags": ["rotate_left"],
    "defaultCode": 58393,
    "grid": 24
  }, {
    "paths": ["M720 660c24-32 38-68 44-106h86c-8 60-30 116-68 166zM554 764c38-6 74-20 106-44l62 62c-50 38-108 60-168 68v-86zM850 470h-86c-6-38-20-74-44-106l62-60c38 50 60 106 68 166zM664 236l-194 190v-166c-122 20-214 126-214 252s92 232 214 252v86c-168-20-300-164-300-338s132-318 300-338v-132z"],
    "tags": ["rotate_right"],
    "defaultCode": 58394,
    "grid": 24
  }, {
    "paths": ["M896 342v212h-86v-212c0-70-58-128-128-128h-212v-86h212c118 0 214 96 214 214zM128 896v-86h86v86h-86zM298 896v-86h86v86h-86zM470 896v-86h84v86h-84zM298 214v-86h86v86h-86zM128 214v-86h86v86h-86zM128 384v-86h86v86h-86zM128 726v-86h86v86h-86zM128 554v-84h86v84h-86zM810 726v-86h86v86h-86zM810 810h86v86h-86v-86z"],
    "tags": ["rounded_corner"],
    "defaultCode": 59680,
    "grid": 24
  }, {
    "paths": ["M640 768v-86h-86v86h86zM490 768v-86h-84v86h84zM342 768v-86h-86v86h86zM810 554c46 0 86 40 86 86v170c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-170c0-46 40-86 86-86h426v-170h86v170h84zM824 286l-34 34c-30-30-70-42-108-42s-76 12-106 42l-34-34c38-38 88-60 140-60s104 22 142 60zM862 252c-52-46-116-72-180-72s-126 26-178 72l-34-34c60-60 136-90 212-90s154 30 214 90z"],
    "tags": ["router"],
    "defaultCode": 58152,
    "grid": 24
  }, {
    "paths": ["M896 896l-128 128-128-128v-64l-302-302c-14 2-28 2-40 2v-92c70 2 154-36 200-86l60-66c15.214-15.214 40.308-32 70-32h2c52 0 96 44 96 96v246c0 36-16 68-40 92l-152-152v-98c-26 22-62 44-98 60l268 268h64zM640 42c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM362 618l108 108h-86l-150 148-64-64z"],
    "tags": ["rowing"],
    "defaultCode": 59681,
    "grid": 24
  }, {
    "paths": ["M170 430c234 0 424 190 424 424h-122c0-166-136-302-302-302v-122zM170 190c366 0 664 298 664 664h-120c0-300-244-544-544-544v-120zM170 760c0-52 42-92 94-92s92 40 92 92-40 94-92 94-94-42-94-94z"],
    "tags": ["rss_feed"],
    "defaultCode": 57573,
    "grid": 24
  }, {
    "paths": ["M726 86l128 128-128 128v-86h-342v-86h342v-84zM768 598v-128h-170v128h170zM470 854c24 0 42-20 42-44s-18-42-42-42-44 18-44 42 20 44 44 44zM854 726h84v84h-340c0 70-58 128-128 128s-128-58-128-128h-86c-46 0-86-38-86-84v-128h300v-128h-172v84l-128-128 128-128v86h470c46 0 86 40 86 86v256z"],
    "tags": ["rv_hookup"],
    "defaultCode": 58946,
    "grid": 24
  }, {
    "paths": ["M214 768h596l-192-256-148 192-108-128zM214 512c166 0 298-134 298-300h-86c0 118-94 214-212 214v86zM214 212v130c70 0 128-60 128-130h-128zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596z"],
    "tags": ["satellite"],
    "defaultCode": 58722,
    "grid": 24
  }, {
    "paths": ["M640 384v-170h-426v170h426zM512 810c70 0 128-58 128-128s-58-128-128-128-128 58-128 128 58 128 128 128zM726 128l170 170v512c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h512z"],
    "tags": ["save"],
    "defaultCode": 57697,
    "grid": 24
  }, {
    "paths": ["M810 726v-86h-426v86h426zM298 726v-86h-84v86h84zM844 456c30 8 52 44 52 78v234c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-170c0-46 40-86 86-86h536l-600-218 30-80z"],
    "tags": ["scanner"],
    "defaultCode": 58153,
    "grid": 24
  }, {
    "paths": ["M512 128l470 256v342h-86v-296l-384 210-470-256zM214 562l298 164 298-164v172l-298 162-298-162v-172z"],
    "tags": ["school"],
    "defaultCode": 59404,
    "grid": 24
  }, {
    "paths": ["M460 426v44h104v-44c0-28-24-50-52-50s-52 22-52 50zM426 682c-24 0-42-18-42-42v-128c0-24 18-42 42-42v-44c0-46 38-84 86-84 46 0 86 36 86 84v44c24 0 42 18 42 42v128c0 24-18 42-42 42h-172zM810 726v-428h-596v428h596zM896 214c46 0 86 38 86 84v428c0 46-40 84-86 84h-768c-46 0-86-38-86-84v-428c0-46 40-84 86-84h768z"],
    "tags": ["screen_lock_landscape"],
    "defaultCode": 57790,
    "grid": 24
  }, {
    "paths": ["M726 810v-596h-428v596h428zM726 42c46 0 84 40 84 86v768c0 46-38 86-84 86h-428c-46 0-84-40-84-86v-768c0-46 38-86 84-86h428zM460 426v44h104v-44c0-28-24-50-52-50s-52 22-52 50zM426 682c-24 0-42-18-42-42v-128c0-24 18-42 42-42v-44c0-46 38-84 86-84 46 0 86 36 86 84v44c24 0 42 18 42 42v128c0 24-18 42-42 42h-172z"],
    "tags": ["screen_lock_portrait"],
    "defaultCode": 57791,
    "grid": 24
  }, {
    "paths": ["M716 106v22h146v-22c0-40-32-72-72-72s-74 32-74 72zM682 384c-24 0-42-18-42-42v-172c0-24 18-42 42-42v-22c0-58 50-106 108-106s106 48 106 106v22c24 0 42 18 42 42v172c0 24-18 42-42 42h-214zM362 874l56-56 162 162-28 2c-268 0-488-208-510-470h64c16 160 116 296 256 362zM992 544c26 24 26 66 0 92l-272 270c-24 26-64 26-90 0l-512-512c-26-24-26-64 0-90l270-272c24-26 66-26 92 0l104 104-60 60-90-88-242 240 484 484 240-242-94-94 60-60z"],
    "tags": ["screen_lock_rotation"],
    "defaultCode": 57792,
    "grid": 24
  }, {
    "paths": ["M320 916l58-56 162 162-28 2c-268 0-488-208-510-470h64c16 160 114 296 254 362zM632 904l272-272-512-512-272 272zM436 74l514 514c26 24 26 64 0 90l-272 272c-24 26-64 26-90 0l-514-514c-26-24-26-64 0-90l272-272c24-26 64-26 90 0zM704 108l-58 56-162-162 28-2c268 0 488 208 510 470h-64c-16-160-114-296-254-362z"],
    "tags": ["screen_rotation"],
    "defaultCode": 57793,
    "grid": 24
  }, {
    "paths": ["M554 618l172-160-172-160v92c-166 24-232 136-256 250 60-80 138-116 256-116v94zM854 768h170v86h-1024v-86h170c-48 0-84-40-84-86v-426c0-48 36-86 84-86h684c46 0 84 38 84 86v426c0 46-38 86-84 86z"],
    "tags": ["screen_share"],
    "defaultCode": 57570,
    "grid": 24
  }, {
    "paths": ["M768 342v-172h-86v172h86zM640 342v-172h-86v172h86zM512 342v-172h-86v172h86zM768 86c46 0 86 38 86 84v684c0 46-40 84-86 84h-512c-46 0-86-38-86-84l2-512 254-256h342z"],
    "tags": ["sd_storage"],
    "defaultCode": 57794,
    "grid": 24
  }, {
    "paths": ["M406 598c106 0 192-86 192-192s-86-192-192-192-192 86-192 192 86 192 192 192zM662 598l212 212-64 64-212-212v-34l-12-12c-48 42-112 66-180 66-154 0-278-122-278-276s124-278 278-278 276 124 276 278c0 68-24 132-66 180l12 12h34z"],
    "tags": ["search"],
    "defaultCode": 59574,
    "grid": 24
  }, {
    "paths": ["M512 42l384 172v256c0 236-164 458-384 512-220-54-384-276-384-512v-256zM512 512v382c158-50 276-206 298-382h-298zM512 512v-376l-298 132v244h298z"],
    "tags": ["security"],
    "defaultCode": 58154,
    "grid": 24
  }, {
    "paths": ["M384 384v256h256v-256h-256zM298 726v-428h428v428h-428zM640 214v-86h86v86h-86zM640 896v-86h86v86h-86zM810 726v-86h86v86h-86zM810 384v-86h86v86h-86zM810 896v-86h86c0 46-40 86-86 86zM810 554v-84h86v84h-86zM470 896v-86h84v86h-84zM384 128v86h-86v-86h86zM128 726v-86h86v86h-86zM214 896c-46 0-86-40-86-86h86v86zM810 128c46 0 86 40 86 86h-86v-86zM554 128v86h-84v-86h84zM128 384v-86h86v86h-86zM298 896v-86h86v86h-86zM128 554v-84h86v84h-86zM128 214c0-46 40-86 86-86v86h-86z"],
    "tags": ["select_all"],
    "defaultCode": 57698,
    "grid": 24
  }, {
    "paths": ["M86 896v-298l640-86-640-86v-298l896 384z"],
    "tags": ["send"],
    "defaultCode": 57699,
    "grid": 24
  }, {
    "paths": ["M512 598c100 0 184 60 218 148h-70c-30-50-84-84-148-84s-118 34-148 84h-70c34-88 118-148 218-148zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM298 406c0-36 28-64 64-64s64 28 64 64-28 64-64 64-64-28-64-64zM598 406c0-36 28-64 64-64s64 28 64 64-28 64-64 64-64-28-64-64z"],
    "tags": ["sentiment_dissatisfied"],
    "defaultCode": 59409,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM298 406c0-36 28-64 64-64s64 28 64 64-28 64-64 64-64-28-64-64zM598 406c0-36 28-64 64-64s64 28 64 64-28 64-64 64-64-28-64-64zM384 598h256v64h-256v-64z"],
    "tags": ["sentiment_neutral"],
    "defaultCode": 59410,
    "grid": 24
  }, {
    "paths": ["M512 682c64 0 118-34 148-84h70c-34 88-118 148-218 148s-184-60-218-148h70c30 50 84 84 148 84zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM298 406c0-36 28-64 64-64s64 28 64 64-28 64-64 64-64-28-64-64zM598 406c0-36 28-64 64-64s64 28 64 64-28 64-64 64-64-28-64-64z"],
    "tags": ["sentiment_satisfied"],
    "defaultCode": 59411,
    "grid": 24
  }, {
    "paths": ["M512 598c100 0 184 60 218 148h-436c34-88 118-148 218-148zM334 512l-46-46 46-44-46-46 46-44 44 44 46-44 46 44-46 46 46 44-46 46-46-46zM690 332l46 44-46 46 46 44-46 46-44-46-46 46-46-46 46-44-46-46 46-44 46 44zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["sentiment_very_dissatisfied"],
    "defaultCode": 59412,
    "grid": 24
  }, {
    "paths": ["M512 746c-100 0-184-60-218-148h436c-34 88-118 148-218 148zM378 424l-44 46-46-46 90-90 92 90-46 46zM554 424l92-90 90 90-46 46-44-46-46 46zM512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["sentiment_very_satisfied"],
    "defaultCode": 59413,
    "grid": 24
  }, {
    "paths": ["M512 662c82 0 150-68 150-150s-68-150-150-150-150 68-150 150 68 150 150 150zM830 554l90 70c8 6 10 18 4 28l-86 148c-6 10-16 12-26 8l-106-42c-22 16-46 32-72 42l-16 112c-2 10-10 18-20 18h-172c-10 0-18-8-20-18l-16-112c-26-10-50-24-72-42l-106 42c-10 4-20 2-26-8l-86-148c-6-10-4-22 4-28l90-70c-2-14-2-28-2-42s0-28 2-42l-90-70c-8-6-10-18-4-28l86-148c6-10 16-12 26-8l106 42c22-16 46-32 72-42l16-112c2-10 10-18 20-18h172c10 0 18 8 20 18l16 112c26 10 50 24 72 42l106-42c10-4 20-2 26 8l86 148c6 10 4 22-4 28l-90 70c2 14 2 28 2 42s0 28-2 42z"],
    "tags": ["settings"],
    "defaultCode": 59576,
    "grid": 24
  }, {
    "paths": ["M736 512c0-10 0-20-2-30l64-48c6-4 6-14 2-20l-60-104c-4-6-12-8-18-6l-74 30c-16-12-32-22-50-30l-12-78c-2-6-6-12-14-12h-120c-8 0-12 4-14 12l-12 80c-18 8-34 16-50 28l-74-30c-6-2-14 2-18 8l-60 102c-4 6-4 16 2 20l64 48c-2 10-2 20-2 30s0 20 2 30l-64 48c-6 4-6 14-2 20l60 104c4 6 12 8 18 6l74-30c16 12 32 22 50 30l12 78c2 6 6 12 14 12h120c8 0 12-4 14-12l12-80c18-8 34-16 50-28l74 30c6 2 14-2 18-8l60-102c4-6 4-16-2-20l-64-48c2-10 2-20 2-30zM810 128c48 0 86 40 86 86v596c0 46-38 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h596zM512 426c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86z"],
    "tags": ["settings_applications"],
    "defaultCode": 59577,
    "grid": 24
  }, {
    "paths": ["M512 128c212 0 384 172 384 384s-172 384-384 384c-88 0-170-30-234-80l60-60c50 34 110 54 174 54 166 0 298-132 298-298s-132-298-298-298-298 132-298 298h128l-172 170-170-170h128c0-212 172-384 384-384zM598 512c0 46-40 86-86 86s-86-40-86-86 40-86 86-86 86 40 86 86z"],
    "tags": ["settings_backup_restore"],
    "defaultCode": 59578,
    "grid": 24
  }, {
    "paths": ["M634 610l-80-80v160zM554 164v160l80-80zM756 244l-184 182 184 184-244 244h-42v-324l-196 196-60-60 238-240-238-238 60-60 196 196v-324h42zM640 1024v-86h86v86h-86zM298 1024v-86h86v86h-86zM470 1024v-86h84v86h-84z"],
    "tags": ["settings_bluetooth"],
    "defaultCode": 59579,
    "grid": 24
  }, {
    "paths": ["M512 384v256c70 0 128-58 128-128s-58-128-128-128zM342 682v-106l-64-64 64-64v-106h106l64-64 64 64h106v106l64 64-64 64v106h-106l-64 64-64-64h-106zM896 812v-600h-768v600h768zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768z"],
    "tags": ["settings_brightness"],
    "defaultCode": 59581,
    "grid": 24
  }, {
    "paths": ["M682 682v-512h-340v512h340zM682 0c46 0 86 40 86 86v682c0 46-40 86-86 86h-340c-46 0-86-40-86-86v-682c0-46 40-86 86-86h340zM640 1024v-86h86v86h-86zM470 1024v-86h84v86h-84zM298 1024v-86h86v86h-86z"],
    "tags": ["settings_cell"],
    "defaultCode": 59580,
    "grid": 24
  }, {
    "paths": ["M758 234l232 278-232 278-66-54 186-224-186-224zM470 554v-84h84v84h-84zM726 470v84h-86v-84h86zM298 554v-84h86v84h-86zM332 288l-186 224 186 224-66 54-232-278 232-278z"],
    "tags": ["settings_ethernet"],
    "defaultCode": 59582,
    "grid": 24
  }, {
    "paths": ["M512 42c258 0 470 212 470 470h-86c0-212-172-384-384-384s-384 172-384 384h-86c0-258 212-470 470-470zM554 610v140l146 146-60 60-128-128-128 128-60-60 146-146v-140c-38-16-64-54-64-98 0-58 48-106 106-106s106 48 106 106c0 44-26 82-64 98zM512 214c166 0 298 132 298 298h-84c0-118-96-214-214-214s-214 96-214 214h-84c0-166 132-298 298-298z"],
    "tags": ["settings_input_antenna"],
    "defaultCode": 59583,
    "grid": 24
  }, {
    "paths": ["M726 682v-84h256v84c0 56-36 102-86 120v180h-86v-180c-50-18-84-64-84-120zM554 86v170h86v256h-256v-256h86v-170c0-24 18-44 42-44s42 20 42 44zM896 256h86v256h-256v-256h84v-170c0-24 20-44 44-44s42 20 42 44v170zM42 682v-84h256v84c0 56-34 102-84 120v180h-86v-180c-50-18-86-64-86-120zM384 682v-84h256v84c0 56-36 102-86 120v180h-84v-180c-50-18-86-64-86-120zM214 86v170h84v256h-256v-256h86v-170c0-24 18-44 42-44s44 20 44 44z"],
    "tags": ["settings_input_composite"],
    "defaultCode": 59585,
    "grid": 24
  }, {
    "paths": ["M342 170v128h84v-84h44v84h84v-84h44v84h84v-128h-340zM768 298h42v256l-128 256v128h-340v-128l-128-256v-256h42v-128c0-46 40-84 86-84h340c46 0 86 38 86 84v128z"],
    "tags": ["settings_input_hdmi"],
    "defaultCode": 59586,
    "grid": 24
  }, {
    "paths": ["M662 640c36 0 64 28 64 64s-28 64-64 64-64-28-64-64 28-64 64-64zM746 426c36 0 64 28 64 64s-28 64-64 64-64-28-64-64 28-64 64-64zM512 896c212 0 384-172 384-384s-172-384-384-384-384 172-384 384 172 384 384 384zM512 42c258 0 470 212 470 470s-212 470-470 470-470-212-470-470 212-470 470-470zM362 640c36 0 64 28 64 64s-28 64-64 64-64-28-64-64 28-64 64-64zM640 278c0 36-28 64-64 64h-128c-36 0-64-28-64-64s28-64 64-64h128c36 0 64 28 64 64zM342 490c0 36-28 64-64 64s-64-28-64-64 28-64 64-64 64 28 64 64z"],
    "tags": ["settings_input_svideo"],
    "defaultCode": 59587,
    "grid": 24
  }, {
    "paths": ["M896 812v-600h-768v600h768zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768zM598 682l-86 108-86-108h172zM256 426v172l-106-86zM768 426l106 86-106 86v-172zM512 234l86 108h-172z"],
    "tags": ["settings_overscan"],
    "defaultCode": 59588,
    "grid": 24
  }, {
    "paths": ["M810 384h86v86h-86v-86zM854 662c24 0 42 18 42 42v150c0 24-18 42-42 42-400 0-726-326-726-726 0-24 18-42 42-42h150c24 0 42 18 42 42 0 54 8 104 24 152 4 14 2 32-10 44l-94 94c62 120 162 220 282 282l94-94c12-12 30-14 44-10 48 16 98 24 152 24zM726 384v86h-86v-86h86zM554 384v86h-84v-86h84z"],
    "tags": ["settings_phone"],
    "defaultCode": 59589,
    "grid": 24
  }, {
    "paths": ["M640 1024v-86h86v86h-86zM706 190c88 62 148 164 148 280 0 188-154 340-342 340s-342-152-342-340c0-116 60-218 148-280l60 60c-74 46-122 128-122 220 0 142 114 256 256 256s256-114 256-256c0-92-50-174-124-218zM554 86v426h-84v-426h84zM470 1024v-86h84v86h-84zM298 1024v-86h86v86h-86z"],
    "tags": ["settings_power"],
    "defaultCode": 59590,
    "grid": 24
  }, {
    "paths": ["M512 0c130 0 248 52 332 138l-60 60c-70-70-166-112-272-112s-202 42-272 112l-60-60c84-84 202-138 332-138zM300 258c54-54 130-88 212-88s158 34 212 88l-60 60c-38-38-94-62-152-62s-114 24-152 62zM512 640c46 0 86-40 86-86s-40-84-86-84-86 38-86 84 40 86 86 86zM640 384c24 0 42 18 42 42v512c0 24-18 44-42 44h-256c-24 0-42-20-42-44v-512c0-24 18-42 42-42h256z"],
    "tags": ["settings_remote"],
    "defaultCode": 59591,
    "grid": 24
  }, {
    "paths": ["M896 812v-600h-768v600h768zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768zM384 682c-70 0-128-58-128-128 0-66 50-120 114-126h8c24-50 74-86 134-86 76 0 138 56 148 128h2c58 0 106 48 106 106s-48 106-106 106h-278z"],
    "tags": ["settings_system_daydream"],
    "defaultCode": 57795,
    "grid": 24
  }, {
    "paths": ["M810 426c0 146-116 268-256 288v140h-84v-140c-140-20-256-142-256-288h72c0 128 108 218 226 218s226-90 226-218h72zM640 1024v-86h86v86h-86zM470 1024v-86h84v86h-84zM512 554c-70 0-128-58-128-128v-256c0-70 58-128 128-128s128 58 128 128v256c0 70-58 128-128 128zM298 1024v-86h86v86h-86z"],
    "tags": ["settings_voice"],
    "defaultCode": 59592,
    "grid": 24
  }, {
    "paths": ["M768 686c68 0 124 56 124 124s-56 126-124 126-124-58-124-126c0-10 0-20 2-28l-302-176c-24 22-54 34-88 34-70 0-128-58-128-128s58-128 128-128c34 0 64 12 88 34l300-174c-2-10-4-20-4-30 0-70 58-128 128-128s128 58 128 128-58 128-128 128c-34 0-64-14-88-36l-300 176c2 10 4 20 4 30s-2 20-4 30l304 176c22-20 52-32 84-32z"],
    "tags": ["share"],
    "defaultCode": 59405,
    "grid": 24
  }, {
    "paths": ["M384 768l320-214-320-170v384zM426 170v86h172v-86h-172zM682 256h256v554c0 48-36 86-84 86h-684c-48 0-84-38-84-86v-554h256v-86c0-48 36-84 84-84h172c48 0 84 36 84 84v86z"],
    "tags": ["shop"],
    "defaultCode": 59593,
    "grid": 24
  }, {
    "paths": ["M512 640l234-170-234-128v298zM512 128v86h170v-86h-170zM768 214h214v468c0 48-38 86-86 86h-598c-48 0-84-38-84-86v-468h212v-86c0-48 38-86 86-86h170c48 0 86 38 86 86v86zM128 384v470h682c0 48-36 84-84 84h-598c-48 0-86-36-86-84v-470h86z"],
    "tags": ["shop_two"],
    "defaultCode": 59594,
    "grid": 24
  }, {
    "paths": ["M512 726c46 0 86-40 86-86s-40-86-86-86-86 40-86 86 40 86 86 86zM384 384h256l-128-188zM734 384h204c24 0 44 18 44 42-34.625 138.041-73.705 271.628-110 408-10 36-42 62-82 62h-556c-40 0-72-26-82-62l-108-396c-2-4-2-8-2-12 0-24 20-42 44-42h204l186-280c8-12 22-18 36-18s28 6 36 18z"],
    "tags": ["shopping_basket"],
    "defaultCode": 59595,
    "grid": 24
  }, {
    "paths": ["M170 554h428v86h-428v-86zM170 384h684v86h-684v-86z"],
    "tags": ["short_text"],
    "defaultCode": 57953,
    "grid": 24
  }, {
    "paths": ["M150 788l-64-64 320-320 170 172 302-340 60 60-362 408-170-172z"],
    "tags": ["show_chart"],
    "defaultCode": 59105,
    "grid": 24
  }, {
    "paths": ["M632 572l134 134 88-88v236h-236l88-88-134-134zM618 170h236v236l-88-88-536 536-60-60 536-536zM452 392l-60 60-222-222 60-60z"],
    "tags": ["shuffle"],
    "defaultCode": 57411,
    "grid": 24
  }, {
    "paths": ["M86 938l852-852v852h-852z"],
    "tags": ["signal_cellular_4_bar"],
    "defaultCode": 57800,
    "grid": 24
  }, {
    "paths": ["M86 938l852-852v256h-170v596h-682zM854 938v-84h84v84h-84zM854 768v-342h84v342h-84z"],
    "tags": ["signal_cellular_connected_no_internet_4_bar"],
    "defaultCode": 57805,
    "grid": 24
  }, {
    "paths": ["M938 86v852h-852zM854 292l-562 562h562v-562z"],
    "tags": ["signal_cellular_null"],
    "defaultCode": 57807,
    "grid": 24
  }, {
    "paths": ["M204 192l734 736-54 54-84-86h-758l378-378-270-272zM896 42v734l-366-366z"],
    "tags": ["signal_cellular_off"],
    "defaultCode": 57808,
    "grid": 24
  }, {
    "paths": ["M512 916l-496-618c20-14 210-170 496-170s476 156 496 170z"],
    "tags": ["signal_wifi_4_bar"],
    "defaultCode": 57816,
    "grid": 24
  }, {
    "paths": ["M662 618v112l-150 188-494-620c18-12 208-170 494-170s476 158 494 170l-88 112c-12-4-26-4-44-4-120 0-212 92-212 212zM938 682v-64c0-34-30-64-64-64s-64 30-64 64v64h128zM982 682c22 0 42 22 42 44v170c0 22-20 42-42 42h-214c-22 0-42-20-42-42v-170c0-22 20-44 42-44v-64c0-60 46-106 106-106s108 46 108 106v64z"],
    "tags": ["signal_wifi_4_bar_lock"],
    "defaultCode": 57817,
    "grid": 24
  }, {
    "paths": ["M140 62c244.604 245.396 490.948 489.052 734 736l-54 54-142-142-166 206-496-618c10-8 64-52 156-94l-86-88zM1008 298l-232 290-442-440c54-12 114-20 178-20 286 0 476 156 496 170z"],
    "tags": ["signal_wifi_off"],
    "defaultCode": 57818,
    "grid": 24
  }, {
    "paths": ["M726 640v-170h-86v170h86zM554 554v-84h-84v84h84zM554 810v-170h-84v170h84zM384 640v-170h-86v170h86zM726 810v-84h-86v84h86zM384 810v-84h-86v84h86zM852 170l2 684c0 46-40 84-86 84h-512c-46 0-86-38-86-84v-512l256-256h342c46 0 84 38 84 84z"],
    "tags": ["sim_card"],
    "defaultCode": 58155,
    "grid": 24
  }, {
    "paths": ["M554 554v-212h-84v212h84zM554 726v-86h-84v86h84zM768 86c46 0 86 38 86 84v684c0 46-40 84-86 84h-512c-46 0-86-38-86-84l2-512 254-256h342z"],
    "tags": ["sim_card_alert"],
    "defaultCode": 58916,
    "grid": 24
  }, {
    "paths": ["M682 256h86v512h-86v-512zM256 768v-512l362 256z"],
    "tags": ["skip_next"],
    "defaultCode": 57412,
    "grid": 24
  }, {
    "paths": ["M406 512l362-256v512zM256 256h86v512h-86v-512z"],
    "tags": ["skip_previous"],
    "defaultCode": 57413,
    "grid": 24
  }, {
    "paths": ["M810 810v-596h-596v596h596zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-46 0-86-40-86-86v-596c0-46 40-86 86-86h596zM426 342l214 170-214 170v-340z"],
    "tags": ["slideshow"],
    "defaultCode": 58395,
    "grid": 24
  }, {
    "paths": ["M938 512c0 220-168 402-382 424v-86c168-22 298-166 298-338s-130-316-298-338v-86c214 22 382 204 382 424zM242 842l60-60c48 36 106 60 168 68v86c-86-8-164-42-228-94zM174 554c8 62 32 120 68 166l-60 62c-52-64-86-142-94-228h86zM242 302c-36 48-60 106-68 168h-86c8-86 42-164 94-228zM470 174c-62 8-120 32-168 68l-60-60c64-52 142-86 228-94v86zM556 418l126 94c-85.639 63.694-170.958 127.709-256 192z"],
    "tags": ["slow_motion_video"],
    "defaultCode": 57448,
    "grid": 24
  }, {
    "paths": ["M726 810v-596h-428v596h428zM726 44c46 0 84 38 84 84v768c0 46-38 86-84 86h-428c-46 0-84-40-84-86v-768c0-46 38-86 84-86z"],
    "tags": ["stay_primary_portrait"],
    "defaultCode": 57558,
    "grid": 24
  }, {
    "paths": ["M726 680l-126-126h126v126zM618 372c-78 0-142-66-142-144s64-142 142-142v64c-44 0-78 30-78 74s34 86 78 86h66c80 0 148 58 148 134v68h-64v-54c0-56-40-86-84-86h-66zM804 208c80 38 134 120 134 216v88h-64v-88c0-96-74-174-170-174v-64c44 0 78-36 78-80h64c0 40-16 76-42 102zM768 554h64v128h-64v-128zM874 554h64v128h-64v-128zM86 256l52-54 726 726-54 54-298-300h-426v-128h298z"],
    "tags": ["smoke_free"],
    "defaultCode": 60234,
    "grid": 24
  }, {
    "paths": ["M684 436c80 0 148 56 148 134v70h-64v-56c0-56-40-86-84-86h-66c-78 0-142-66-142-144s64-142 142-142v64c-44 0-78 30-78 74s34 86 78 86h66zM804 330c80 38 134 120 134 214v96h-64v-96c0-96-74-172-170-172v-64c44 0 78-36 78-80s-34-78-78-78v-64c78 0 142 64 142 142 0 40-16 76-42 102zM768 682h64v128h-64v-128zM874 682h64v128h-64v-128zM86 682h640v128h-640v-128z"],
    "tags": ["smoking_rooms"],
    "defaultCode": 60235,
    "grid": 24
  }, {
    "paths": ["M726 470v-86h-86v86h86zM554 470v-86h-84v86h84zM384 470v-86h-86v86h86zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["textsms"],
    "defaultCode": 57560,
    "grid": 24
  }, {
    "paths": ["M384 470v-86h256v76l-154 180h154v86h-256v-78l154-178h-154zM512 854c166 0 298-134 298-300s-132-298-298-298-298 132-298 298 132 300 298 300zM512 170c212 0 384 172 384 384s-172 384-384 384-384-172-384-384 172-384 384-384zM938 244l-54 66-196-166 54-64zM336 144l-196 164-54-64 196-164z"],
    "tags": ["snooze"],
    "defaultCode": 57414,
    "grid": 24
  }, {
    "paths": ["M128 554v-84h512v84h-512zM128 256h768v86h-768v-86zM128 768v-86h256v86h-256z"],
    "tags": ["sort"],
    "defaultCode": 57700,
    "grid": 24
  }, {
    "paths": ["M672 688h260v68h-364v-54l252-366h-250v-68h354v54zM212 582h166l-84-222zM260 268h70l192 488h-78l-40-104h-218l-40 104h-78zM438 826h198l-100 100zM638 198h-202l100-100z"],
    "tags": ["sort_by_alpha"],
    "defaultCode": 57427,
    "grid": 24
  }, {
    "paths": ["M660 410c-54 30-104 68-148 114-44-46-94-84-148-114 10-118 58-232 150-324 90 90 138 204 146 324zM86 426c190.34 0 343.492 108.446 426 234 82.593-125.685 235.712-234 426-234 0 226-142 418-342 490-28 10-54 16-84 22-30-4-58-12-84-22-200-72-342-264-342-490z"],
    "tags": ["spa"],
    "defaultCode": 60236,
    "grid": 24
  }, {
    "paths": ["M768 384h86v256h-684v-256h86v170h512v-170z"],
    "tags": ["space_bar"],
    "defaultCode": 57942,
    "grid": 24
  }, {
    "paths": ["M512 512c70 0 128 58 128 128s-58 128-128 128-128-58-128-128 58-128 128-128zM512 854c118 0 214-96 214-214s-96-214-214-214-214 96-214 214 96 214 214 214zM512 170c-48 0-86 40-86 86s38 86 86 86c46 0 86-40 86-86s-40-86-86-86zM726 86c46 0 84 38 84 84v684c0 46-38 84-84 84h-428c-46 0-84-38-84-84v-684c0-46 38-84 84-84h428z"],
    "tags": ["speaker"],
    "defaultCode": 58157,
    "grid": 24
  }, {
    "paths": ["M256 214v682h426v86h-426c-48 0-86-40-86-86v-682h86zM490 534c0-58 50-108 108-108s106 50 106 108-48 106-106 106-108-48-108-106zM598 704c94 0 170-76 170-170s-76-172-170-172-172 78-172 172 78 170 172 170zM598 128c-46 0-86 38-86 86s40 84 86 84 84-36 84-84-38-86-84-86zM776 42c42 0 78 36 78 78v614c0 42-36 76-78 76h-358c-42 0-76-34-76-76v-614c0-42 34-78 76-78h358z"],
    "tags": ["speaker_group"],
    "defaultCode": 58158,
    "grid": 24
  }, {
    "paths": ["M768 342v-86h-342v86h342zM768 470v-86h-342v86h342zM640 598v-86h-214v86h214zM342 342v-86h-86v86h86zM342 470v-86h-86v86h86zM342 598v-86h-86v86h86zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["speaker_notes"],
    "defaultCode": 59597,
    "grid": 24
  }, {
    "paths": ["M854 86c46 0 84 38 84 84v512c0 46-36 84-82 86l-298-298h210v-86h-296l-42-42h338v-86h-342v82l-252-252h680zM256 470h86l-86-86v86zM342 598v-86h-86v86h86zM54 74l884 884-54 54-244-244h-384l-170 170v-724l-86-86z"],
    "tags": ["speaker_notes_off"],
    "defaultCode": 59690,
    "grid": 24
  }, {
    "paths": ["M640 854v-342h-256v342h256zM634 428c26 0 48 22 48 48v414c0 26-22 48-48 48h-244c-26 0-48-22-48-48v-414c0-26 22-50 48-50zM512 42c128 0 246 54 330 138l-60 60c-70-70-164-112-270-112s-200 42-270 112l-60-60c84-84 202-138 330-138zM298 302c54-54 130-88 214-88s160 34 214 88l-62 60c-38-38-92-62-152-62s-114 24-152 62z"],
    "tags": ["speaker_phone"],
    "defaultCode": 57554,
    "grid": 24
  }, {
    "paths": ["M922 494l60 60-406 406-216-218 60-60 156 158zM274 470h176l-88-236zM532 682l-50-128h-240l-48 128h-90l218-554h80l218 554h-88z"],
    "tags": ["spellcheck"],
    "defaultCode": 59598,
    "grid": 24
  }, {
    "paths": ["M512 658l160 96-42-182 142-124-188-16-72-172-72 172-188 16 142 124-42 182zM938 394l-232 202 70 300-264-160-264 160 70-300-232-202 306-26 120-282 120 282z"],
    "tags": ["star_border"],
    "defaultCode": 59450,
    "grid": 24
  }, {
    "paths": ["M512 658l160 96-42-182 142-124-188-16-72-172v398zM938 394l-232 202 70 300-264-160-264 160 70-300-232-202 306-26 120-282 120 282z"],
    "tags": ["star_half"],
    "defaultCode": 59449,
    "grid": 24
  }, {
    "paths": ["M692 768l-48-206 160-138-210-18-82-192-82 194-210 16 160 138-48 206 180-108zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["stars"],
    "defaultCode": 59600,
    "grid": 24
  }, {
    "paths": ["M810 298h-596v428h596v-428zM44 298c0-46 38-84 84-84h768c46 0 86 38 86 84v428c0 46-40 84-86 84h-768c-46 0-86-38-86-84z"],
    "tags": ["stay_primary_landscape"],
    "defaultCode": 57557,
    "grid": 24
  }, {
    "paths": ["M256 256h512v512h-512v-512z"],
    "tags": ["stop"],
    "defaultCode": 57415,
    "grid": 24
  }, {
    "paths": ["M298 640c40-56 90-88 156-104l-68-68c-50 48-74 108-88 172zM102 74l842 842-54 54-116-116h-774v-86h170c-48 0-84-38-84-84v-428c0-26 10-46 28-62l-66-66zM938 684c0 32-18 60-44 74l-236-236 68-64-172-158v90c-8 2-14 2-22 4l-224-222h546c46 0 84 36 84 84v428zM906 768h118v86h-34z"],
    "tags": ["stop_screen_share"],
    "defaultCode": 57571,
    "grid": 24
  }, {
    "paths": ["M170 470v84h86v-84h-86zM86 598v-172h852v172h-852zM256 298v-84h-86v84h86zM86 170h852v172h-852v-172zM170 726v84h86v-84h-86zM86 854v-172h852v172h-852z"],
    "tags": ["storage"],
    "defaultCode": 57819,
    "grid": 24
  }, {
    "paths": ["M512 768v-170h-256v170h256zM896 598h-42v256h-86v-256h-170v256h-428v-256h-42v-86l42-214h684l42 214v86zM854 170v86h-684v-86h684z"],
    "tags": ["store_mall_directory"],
    "defaultCode": 58723,
    "grid": 24
  }, {
    "paths": ["M896 682v-340h-86v170h-84v-170h-86v170h-86v-170h-84v170h-86v-170h-86v170h-84v-170h-86v340h768zM896 256c46 0 86 40 86 86v340c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-340c0-46 40-86 86-86h768z"],
    "tags": ["straighten"],
    "defaultCode": 58396,
    "grid": 24
  }, {
    "paths": ["M490 256c0 76 32 146 82 196l-418 418c-16-16-26-36-26-60v-596c0-46 40-86 86-86h308c-20 38-32 82-32 128zM554 256c0-118 96-214 214-214s214 96 214 214-96 214-214 214-214-96-214-214zM536 612c64-48 146-78 232-78 44 0 88 8 128 22v254c0 46-40 86-86 86h-298v-234c0-20 10-38 24-50z"],
    "tags": ["streetview"],
    "defaultCode": 58734,
    "grid": 24
  }, {
    "paths": ["M400 560c0 76.243 48.309 108 124 108 52.313 0 98-21.34 98-72 0-47.832-25.37-58.685-60-76-6-2-16-6-24-8h-410v-86h768v86h-166c2 4 6 10 8 14 8 20 14 44 14 70 0 92.509-60.376 138.965-134 160-28 8-58 12-92 12-20 0-42-2-62-6-43.831-8.766-81.207-20.905-112-44-45.673-34.254-78-79.826-78-158h126zM622 320c0-61.554-39.204-90-102-90-45.146 0-79.257 14.514-94 44-4 8-6 18-6 28 0 20 12 38 32 52 16 10 32 20 60 30h-196c-2-4-6-6-8-10-12-20-16-44-16-72 0-57.483 29.861-98.689 64-126 41.082-28.758 95.625-48 166-48 70.131 0 128.265 20.039 166 54 35.121 31.608 62 75.894 62 138h-128z"],
    "tags": ["strikethrough_s"],
    "defaultCode": 57943,
    "grid": 24
  }, {
    "paths": ["M250 842v-270l148 356h-62c-46 0-86-40-86-86zM336 374c24 0 42-20 42-44s-18-42-42-42-42 18-42 42 18 44 42 44zM940 680c18 44-2 94-46 112l-314 130c-10 4-22 6-34 6-34 0-64-20-78-52l-212-512c-4-12-6-22-6-34 0-32 20-62 52-76l316-130c12-4 22-6 34-6 32 0 62 20 76 52zM108 838c-44-18-64-66-46-110l104-250v384z"],
    "tags": ["style"],
    "defaultCode": 58397,
    "grid": 24
  }, {
    "paths": ["M470 384l60 60-154 154h392v-428h86v512h-478l154 154-60 60-256-256z"],
    "tags": ["subdirectory_arrow_left"],
    "defaultCode": 58841,
    "grid": 24
  }, {
    "paths": ["M810 640l-256 256-60-60 154-154h-478v-512h86v428h392l-154-154 60-60z"],
    "tags": ["subdirectory_arrow_right"],
    "defaultCode": 58842,
    "grid": 24
  }, {
    "paths": ["M170 214h684v84h-684v-84zM170 640v-86h684v86h-684zM854 384v86h-684v-86h684zM598 726v84h-428v-84h428z"],
    "tags": ["subject"],
    "defaultCode": 59602,
    "grid": 24
  }, {
    "paths": ["M682 682l-256-138v278zM938 512v342c0 46-38 84-84 84h-684c-46 0-84-38-84-84v-342c0-46 38-86 84-86h684c46 0 84 40 84 86zM768 86v84h-512v-84h512zM854 342h-684v-86h684v86z"],
    "tags": ["subscriptions"],
    "defaultCode": 57444,
    "grid": 24
  }, {
    "paths": ["M854 598v-86h-428v86h428zM854 768v-86h-172v86h172zM598 768v-86h-428v86h428zM170 512v86h172v-86h-172zM854 170c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h684z"],
    "tags": ["subtitles"],
    "defaultCode": 57416,
    "grid": 24
  }, {
    "paths": ["M768 678v-294c0-112-114-128-256-128-128 0-256 16-256 128v294c0 62 50 112 112 112l-48 48v16h72l64-64h120l64 64h64v-16l-48-48c62 0 112-50 112-112zM760 120c114 44 178 138 178 258v560h-852v-560c0-120 64-214 178-258 76-30 168-34 248-34s172 4 248 34zM300 384h426v214h-426v-214zM320 682c0-24 18-42 42-42s44 18 44 42-20 44-44 44-42-20-42-44zM618 682c0-24 20-42 44-42s42 18 42 42-18 44-42 44-44-20-44-44z"],
    "tags": ["subway"],
    "defaultCode": 58735,
    "grid": 24
  }, {
    "paths": ["M384 554c28 0 64 4 102 12-88 48-102 112-102 148v96h-298v-106c0-100 198-150 298-150zM704 598c78 0 234 38 234 116v96h-468v-96c0-78 156-116 234-116zM384 470c-70 0-128-58-128-128s58-128 128-128 128 58 128 128-58 128-128 128zM704 512c-58 0-106-48-106-106s48-108 106-108 106 50 106 108-48 106-106 106z"],
    "tags": ["supervisor_account"],
    "defaultCode": 59603,
    "grid": 24
  }, {
    "paths": ["M512 426c46 0 86 40 86 86s-40 86-86 86-86-40-86-86 40-86 86-86zM754 754c66-66 100-154 100-242s-34-176-100-242l-62 62c50 50 76 114 76 180s-24 132-74 182zM512 682c94 0 170-76 170-170s-76-170-170-170-170 76-170 170 76 170 170 170zM332 692c-50-50-76-114-76-180s24-132 74-182l-60-60c-66 66-100 154-100 242s34 176 100 242zM854 170c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h684z"],
    "tags": ["surround_sound"],
    "defaultCode": 57417,
    "grid": 24
  }, {
    "paths": ["M768 170l170 172h-128v298c0 94-76 170-170 170s-170-76-170-170v-298c0-46-40-86-86-86s-86 40-86 86v298h128l-170 170-170-170h128v-298c0-94 76-172 170-172s170 78 170 172v298c0 46 40 86 86 86s86-40 86-86v-298h-128z"],
    "tags": ["swap_calls"],
    "defaultCode": 57559,
    "grid": 24
  }, {
    "paths": ["M896 384l-170 170v-128h-300v-84h300v-128zM298 470v128h300v84h-300v128l-170-170z"],
    "tags": ["swap_horiz"],
    "defaultCode": 59604,
    "grid": 24
  }, {
    "paths": ["M384 128l170 170h-128v300h-84v-300h-128zM682 726h128l-170 170-170-170h128v-300h84v300z"],
    "tags": ["swap_vert"],
    "defaultCode": 59605,
    "grid": 24
  }, {
    "paths": ["M746 640h-106v-170h-86v170h-106l150 150zM278 384h106v170h86v-170h106l-150-150zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["swap_vertical_circle"],
    "defaultCode": 59606,
    "grid": 24
  }, {
    "paths": ["M640 662l150-150-150-150v108h-256v-108l-150 150 150 150v-108h256v108zM854 170c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h136l78-84h256l78 84h136z"],
    "tags": ["switch_camera"],
    "defaultCode": 58398,
    "grid": 24
  }, {
    "paths": ["M554 662l150-150-150-150v108h-256v-108l-148 150 148 150v-108h256v108zM768 406l170-172v556l-170-172v150c0 24-18 42-42 42h-598c-24 0-42-18-42-42v-512c0-24 18-42 42-42h598c24 0 42 18 42 42v150z"],
    "tags": ["switch_video"],
    "defaultCode": 58399,
    "grid": 24
  }, {
    "paths": ["M854 170l-102 102c62 62 102 146 102 240 0 66-20 128-52 180l-64-62c18-36 30-76 30-118 0-70-30-134-76-180l-94 94v-256h256zM122 230l54-54 670 672-54 54-100-100c-30 18-62 32-96 40v-88c12-4 24-10 34-16l-344-344c-18 36-30 76-30 118 0 70 30 134 76 180l94-94v256h-256l102-102c-62-62-102-146-102-240 0-66 20-128 52-180zM426 270c-12 4-22 10-32 16l-62-64c30-18 60-32 94-40v88z"],
    "tags": ["sync_disabled"],
    "defaultCode": 58920,
    "grid": 24
  }, {
    "paths": ["M470 554v-256h84v256h-84zM896 170l-100 102c62 62 100 146 100 240 0 160-108 292-256 330v-88c100-34 170-130 170-242 0-70-28-134-74-180l-96 94v-256h256zM470 726v-86h84v86h-84zM128 512c0-160 108-292 256-330v88c-100 34-170 130-170 242 0 70 28 134 74 180l96-94v256h-256l100-102c-62-62-100-146-100-240z"],
    "tags": ["sync_problem"],
    "defaultCode": 58921,
    "grid": 24
  }, {
    "paths": ["M682 554l-170 172-170-172h128v-212h84v212h128zM726 810v-596h-428v596h428zM726 44c46 0 84 38 84 84v768c0 46-38 86-84 86h-428c-46 0-84-40-84-86v-768c0-46 38-86 84-86z"],
    "tags": ["system_update"],
    "defaultCode": 58922,
    "grid": 24
  }, {
    "paths": ["M896 150c46 0 86 38 86 84v598c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-598c0-46 40-84 86-84h256v84h-256v598h768v-598h-256v-84h256zM512 704l-170-170h128v-384h84v384h128z"],
    "tags": ["system_update_alt"],
    "defaultCode": 59607,
    "grid": 24
  }, {
    "paths": ["M896 810v-426h-342v-170h-426v596h768zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768z"],
    "tags": ["tab"],
    "defaultCode": 59608,
    "grid": 24
  }, {
    "paths": ["M726 896v-86h84v86h-84zM554 896v-86h86v86h-86zM896 554v-84h86v84h-86zM896 896v-86h86c0 46-40 86-86 86zM214 214v-86h84v86h-84zM214 896v-86h84v86h-84zM384 214v-86h86v86h-86zM896 726v-86h86v86h-86zM896 128c46 0 86 40 86 86v170h-428v-256h342zM128 896c-46 0-86-40-86-86h86v86zM42 726v-86h86v86h-86zM384 896v-86h86v86h-86zM42 214c0-46 40-86 86-86v86h-86zM42 554v-84h86v84h-86zM42 384v-86h86v86h-86z"],
    "tags": ["tab_unselected"],
    "defaultCode": 59609,
    "grid": 24
  }, {
    "paths": ["M810 768v-512h-596v512h596zM896 170c46 0 86 40 86 86l-2 512c0 46-38 86-84 86h-768c-46 0-86-40-86-86v-512c0-46 40-86 86-86h768z"],
    "tags": ["tablet"],
    "defaultCode": 58159,
    "grid": 24
  }, {
    "paths": ["M822 810v-682h-620v682h620zM598 938v-42h-172v42h172zM768 0c70 0 128 58 128 128v768c0 70-58 128-128 128h-512c-70 0-128-58-128-128v-768c0-70 58-128 128-128h512z"],
    "tags": ["tablet_android"],
    "defaultCode": 58160,
    "grid": 24
  }, {
    "paths": ["M810 810v-682h-640v682h640zM490 982c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM790 0c58 0 106 48 106 106v812c0 58-48 106-106 106h-598c-58 0-106-48-106-106v-812c0-58 48-106 106-106h598z"],
    "tags": ["tablet_mac"],
    "defaultCode": 58161,
    "grid": 24
  }, {
    "paths": ["M726 44c46 0 84 38 84 84v726c0 46-38 84-84 84h-90c-4-60-18-116-40-170h130v-554h-428v256c-28-12-54-22-84-28v-314c0-46 38-86 84-86zM86 512c260 0 468 210 468 470h-84c0-212-172-384-384-384v-86zM86 854c70 0 128 58 128 128h-128v-128zM86 682c166 0 298 134 298 300h-86c0-118-94-214-212-214v-86z"],
    "tags": ["tap_and_play"],
    "defaultCode": 58923,
    "grid": 24
  }, {
    "paths": ["M918 384v128h-128v298h-128v-298h-128v-128h384zM106 170h556v128h-214v512h-128v-512h-214v-128z"],
    "tags": ["text_fields"],
    "defaultCode": 57954,
    "grid": 24
  }, {
    "paths": ["M512 256l-80 214h160zM406 546l-40 94h-88l202-470h64l202 470h-88l-40-94h-212zM214 726h596v84h-596v-84z"],
    "tags": ["text_format"],
    "defaultCode": 57701,
    "grid": 24
  }, {
    "paths": ["M396 896l500-500v122l-378 378h-122zM896 810c0 45.948-40.071 86-86 86h-84l170-170v84zM214 128h84l-170 170v-84c0-46 40-86 86-86zM506 128h122l-500 500v-122zM832 132c30 8 54 30 62 60l-702 700c-29.35-8.386-51.612-30.641-60-60z"],
    "tags": ["texture"],
    "defaultCode": 58401,
    "grid": 24
  }, {
    "paths": ["M810 128h172v512h-172v-512zM640 128c46 0 86 40 86 86v426c0 24-10 44-26 60l-280 282-46-46c-12-12-18-26-18-44v-14l42-196h-270c-46 0-86-38-86-84l2-4h-2v-82c0-12 2-22 6-32l130-300c12-30 42-52 78-52h384z"],
    "tags": ["thumb_down"],
    "defaultCode": 59611,
    "grid": 24
  }, {
    "paths": ["M982 426l-2 4h2v82c0 12-2 22-6 32l-130 300c-12 30-42 52-78 52h-384c-46 0-86-40-86-86v-426c0-24 10-44 26-60l280-282 46 46c12 12 18 26 18 44v14l-42 196h270c46 0 86 38 86 84zM42 896v-512h172v512h-172z"],
    "tags": ["thumb_up"],
    "defaultCode": 59612,
    "grid": 24
  }, {
    "paths": ["M960 426c36 0 64 28 64 64v278c0 18-6 34-18 46l-212 210-34-34c-8-8-14-20-14-34 9.903-48.764 20.016-97.317 30-146h-222c-24 0-42-18-42-42v-54c0-8 2-14 4-22l98-226c10-22 32-40 58-40h288zM512 256v54c0 8-2 14-4 22l-98 226c-10 22-32 40-58 40h-288c-36 0-64-28-64-64v-278c0-18 6-34 18-46l212-210 34 34c8 8 14 20 14 34-9.903 48.764-20.016 97.317-30 146h222c24 0 42 18 42 42z"],
    "tags": ["thumbs_up_down"],
    "defaultCode": 59613,
    "grid": 24
  }, {
    "paths": ["M512 854c188 0 342-154 342-342s-154-342-342-342-342 154-342 342 154 342 342 342zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426zM692 332c100 100 102 260 2 360s-262 100-362 0l180-180v-256c66 0 130 26 180 76z"],
    "tags": ["timelapse"],
    "defaultCode": 58402,
    "grid": 24
  }, {
    "paths": ["M982 342c0 46-40 84-86 84-8 0-16 0-22-2l-152 152c2 6 4 14 4 22 0 46-40 84-86 84s-86-38-86-84c0-8 2-16 4-22l-110-110c-6 2-14 4-22 4s-16-2-22-4l-194 194c2 6 4 14 4 22 0 46-40 86-86 86s-86-40-86-86 40-84 86-84c8 0 16 0 22 2l194-194c-2-6-2-14-2-22 0-46 38-86 84-86s86 40 86 86c0 8 0 16-2 22l108 108c6-2 14-2 22-2s16 0 22 2l152-150c-2-6-4-14-4-22 0-46 40-86 86-86s86 40 86 86z"],
    "tags": ["timeline"],
    "defaultCode": 59682,
    "grid": 24
  }, {
    "paths": ["M512 854c166 0 298-134 298-300s-132-298-298-298-298 132-298 298 132 300 298 300zM812 316c52 66 84 148 84 238 0 212-172 384-384 384s-384-172-384-384 172-384 384-384c90 0 174 34 240 86l60-62c22 18 42 38 60 60zM470 598v-256h84v256h-84zM640 42v86h-256v-86h256z"],
    "tags": ["timer"],
    "defaultCode": 58405,
    "grid": 24
  }, {
    "paths": ["M550 564v-108c0-46.336-4.565-80.274-20-106-10.651-21.301-30.408-30-60-30-12 0-26 2-36 6-38.752 23.251-46 67.987-46 132v106c0 26 0 48 4 66s12 30 18 42c11.183 22.366 28.34 32 60 32 30.847 0 49.232-10.465 60-32 6-12 12-24 16-42s4-40 4-66zM304 470c0-128.235 41.373-218 166-218 51.866 0 95.697 16.753 120 48 30.427 39.121 44 97.117 44 170v82c0 127.815-39.287 220-164 220-124.183 0-166-92.158-166-220v-82zM872 446c-32.637 0-60 13.357-60 46 0 29.093 15.625 31.050 38 40 10 4 24 8 38 10 22 4 38 10 56 16s32 16 44 24 20 20 26 32 10 24 10 42c0 61.841-40.186 88.062-88 104-18 6-38 8-60 8-71.904 0-126.918-28.808-148-78-6-14-10-28-10-44h82c0 42.578 34.153 60 76 60 37.394 0 66-11.786 66-46 0-27.148-17.025-33.61-38-42-25.468-10.187-69.818-18.182-96-28-16-6-28-14-40-22-22.109-14.739-38-37.152-38-72 0-55.126 40.755-89.585 84-104 18-6 36-8 58-8 81.863 0 150 38.271 150 118h-84c0-24.555-15.687-44.922-36-50-8-2-20-6-30-6zM0 330l202-74h12v512h-86v-410l-128 44v-72z"],
    "tags": ["timer_10"],
    "defaultCode": 58403,
    "grid": 24
  }, {
    "paths": ["M748 446c-31.882 0-62 15.146-62 46 0 27.366 18.619 31.448 40 40 10 4 22 8 36 10 22 4 40 10 58 16s32 16 44 24 20 20 26 32 10 24 10 42c0 61.841-40.186 88.062-88 104-18 6-40 8-62 8-70.791 0-125.226-29.528-146-78-6-14-10-28-10-44h80c0 40.848 37.077 60 78 60 37.394 0 66-11.786 66-46 0-27.148-17.025-33.61-38-42-10-4-26-8-42-12-37.616-7.523-69.901-20.601-96-38-21.057-14.038-36-38.904-36-72 0-55.126 40.755-89.585 84-104 18-6 36-8 58-8 81.863 0 150 38.271 150 118h-84c0-26.038-16.411-44.603-38-50-8-2-18-6-28-6zM430 506c49.449 18.543 84 50.968 84 116 0 51.199-17.71 87.282-48 110-28.071 24.061-68.907 40-120 40-93.754 0-168-50.495-168-144h86c0 23.009 8.297 45.722 22 56 14.704 11.028 35.068 20 60 20 54.151 0 84-28.151 84-82 0-57.252-34.133-82-92-82h-52v-66h50c41.016 0 70.217-16.541 82-46 4-10 4-20 4-32 0-49.775-24.914-76-76-76-37.446 0-59.461 14.922-72 40-4 8-6 18-6 30h-84c0-68.668 45.9-107.96 96-128 20-6 42-10 66-10 97.425 0 160 46.959 160 144 0 56.969-36.756 90.378-76 110z"],
    "tags": ["timer_3"],
    "defaultCode": 58404,
    "grid": 24
  }, {
    "paths": ["M512 854c54 0 106-16 150-42l-408-408c-26 44-40 96-40 150 0 166 132 300 298 300zM128 170l758 758-54 54-108-108c-62 40-134 64-212 64-212 0-384-172-384-384 0-78 24-152 64-212l-118-118zM470 402v-60h84v146zM640 42v86h-256v-86h256zM812 194l60 60-60 62c52 66 84 148 84 238 0 78-24 152-64 212l-62-62c26-44 40-96 40-150 0-166-132-298-298-298-54 0-104 14-148 40l-64-62c60-40 134-64 212-64 90 0 174 32 240 84z"],
    "tags": ["timer_off"],
    "defaultCode": 58406,
    "grid": 24
  }, {
    "paths": ["M214 170h596v128h-234v512h-128v-512h-234v-128z"],
    "tags": ["title"],
    "defaultCode": 57956,
    "grid": 24
  }, {
    "paths": ["M810 554v-84h86v84h-86zM810 298h86v86h-86v-86zM810 726v-86h86v86h-86zM128 726v-86h598v86h-598zM128 554v-84h598v84h-598zM128 384v-86h598v86h-598z"],
    "tags": ["toc"],
    "defaultCode": 59614,
    "grid": 24
  }, {
    "paths": ["M298 426h214v214h-214v-214zM810 810v-468h-596v468h596zM810 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-596c0-46 38-86 86-86h42v-86h86v86h340v-86h86v86h42z"],
    "tags": ["today"],
    "defaultCode": 59615,
    "grid": 24
  }, {
    "paths": ["M128 512c0 112 70 208 170 242v88c-148-38-256-170-256-330s108-292 256-330v88c-100 34-170 130-170 242zM640 768c142 0 256-114 256-256s-114-256-256-256-256 114-256 256 114 256 256 256zM640 170c188 0 342 154 342 342s-154 342-342 342-342-154-342-342 154-342 342-342z"],
    "tags": ["toll"],
    "defaultCode": 59616,
    "grid": 24
  }, {
    "paths": ["M842 598c4-14 6-30 8-44h-296v44h288zM778 726c10-14 22-30 30-44h-254v44h224zM554 850c44-6 86-20 124-40h-124v40zM554 426v44h296c-2-14-4-30-8-44h-288zM554 298v44h254c-8-14-20-30-30-44h-224zM554 174v40h124c-38-20-80-34-124-40zM470 850v-676c-168 20-300 164-300 338s132 318 300 338zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z"],
    "tags": ["tonality"],
    "defaultCode": 58407,
    "grid": 24
  }, {
    "paths": ["M804 678c22 10 38 32 38 58v8l-32 226c-4 32-30 54-62 54h-290c-18 0-32-6-44-18l-212-212 34-34c8-8 20-14 34-14 4 0 6 2 10 2l146 30v-458c0-36 28-64 64-64s64 28 64 64v256h34c8 0 14 2 22 4zM384 480c-52-34-86-94-86-160 0-106 86-192 192-192s192 86 192 192c0 66-32 126-84 160v-160c0-58-50-106-108-106s-106 48-106 106v160z"],
    "tags": ["touch_app"],
    "defaultCode": 59667,
    "grid": 24
  }, {
    "paths": ["M512 512c0 128-106 234-234 234s-236-106-236-234h470zM512 512c-128 0-234-106-234-234s106-236 234-236v470zM512 512c128 0 234 106 234 234s-106 236-234 236v-470zM512 512c0-128 106-234 234-234s236 106 236 234h-470z"],
    "tags": ["toys"],
    "defaultCode": 58162,
    "grid": 24
  }, {
    "paths": ["M814 210c78 78 124 184 124 302 0 236-190 426-426 426s-426-190-426-426 190-426 426-426h42v352c26 14 44 42 44 74 0 46-40 86-86 86s-86-40-86-86c0-32 18-60 44-74v-90c-74 20-128 84-128 164 0 94 76 170 170 170s170-76 170-170c0-46-20-88-50-120l60-60c46 46 76 110 76 180 0 142-114 256-256 256s-256-114-256-256c0-126 92-232 214-252v-86c-168 20-300 164-300 338 0 188 154 342 342 342s342-154 342-342c0-94-38-180-100-242z"],
    "tags": ["track_changes"],
    "defaultCode": 59617,
    "grid": 24
  }, {
    "paths": ["M512 384c48 0 86-40 86-86 0-48-40-84-86-84-48 0-86 36-86 84 0 46 38 86 86 86zM512 598c48 0 86-40 86-86s-40-86-86-86c-48 0-86 40-86 86s38 86 86 86zM512 810c48 0 86-38 86-84s-40-86-86-86c-48 0-86 40-86 86s38 84 86 84zM854 426c0 80-54 146-128 166v48h128c0 80-54 144-128 164v50c0 24-20 42-44 42h-340c-24 0-44-18-44-42v-50c-74-20-128-84-128-164h128v-48c-74-20-128-86-128-166h128v-48c-74-20-128-84-128-164h128v-44c0-24 20-42 44-42h340c24 0 44 18 44 42v44h128c0 80-54 144-128 164v48h128z"],
    "tags": ["traffic"],
    "defaultCode": 58725,
    "grid": 24
  }, {
    "paths": ["M704 726c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM554 426h214v-170h-214v170zM470 426v-170h-214v170h214zM320 726c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM512 86c188 0 342 20 342 170v406c0 82-68 148-150 148l64 64v22h-86l-84-86h-162l-84 86h-96v-22l64-64c-82 0-150-66-150-148v-406c0-150 172-170 342-170z"],
    "tags": ["train"],
    "defaultCode": 58736,
    "grid": 24
  }, {
    "paths": ["M726 598v-214h-428v214h428zM512 790c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM810 722c0 72-38 132-110 132h4l64 64v20h-86l-84-84h-162l-84 84h-96v-20l68-68c-60-14-110-66-110-128v-360c0-118 120-144 254-148l34-64h-204v-64h428v64h-140l-32 64c146 4 256 28 256 148v360z"],
    "tags": ["tram"],
    "defaultCode": 58737,
    "grid": 24
  }, {
    "paths": ["M246 380l-118 602h90l74-342 92 86v256h86v-322l-88-88 26-128c56 68 138 110 232 110v-84c-78 0-148-44-186-106l-40-68c-14-26-42-40-72-40-10 0-22 2-32 6l-224 92v200h84v-142l76-32zM406 234c-46 0-86-38-86-84s40-86 86-86 84 40 84 86-38 84-84 84zM832 842v-74l106 106-106 108v-76h-234v-64h234zM704 662h234v64h-234v74l-106-106 106-108v76z"],
    "tags": ["transfer_within_a_station"],
    "defaultCode": 58738,
    "grid": 24
  }, {
    "paths": ["M426 342v-86h256c46 0 86 40 86 86v256h-86v-256h-256zM938 768h-170v86h86l-128 128-128-128h84v-86h-340c-46 0-86-40-86-86v-340h-170v-86h170v-86h-86l128-128 128 128h-84v512h596v86z"],
    "tags": ["transform"],
    "defaultCode": 58408,
    "grid": 24
  }, {
    "paths": ["M678 726h138l-70-186zM790 426l192 512h-86l-48-128h-202l-48 128h-86l192-512h86zM550 642l-34 88-132-132-214 212-60-60 218-214c-54-60-96-124-128-194h86c26 50 58 98 98 142 62-68 108-146 136-228h-478v-86h300v-84h84v84h300v86h-126c-32 100-84 196-158 278l-2 2z"],
    "tags": ["translate"],
    "defaultCode": 59618,
    "grid": 24
  }, {
    "paths": ["M682 768l98-98-208-208-170 170-316-316 60-60 256 256 170-170 268 268 98-98v256h-256z"],
    "tags": ["trending_down"],
    "defaultCode": 59619,
    "grid": 24
  }, {
    "paths": ["M938 512l-170 170v-128h-640v-84h640v-128z"],
    "tags": ["trending_flat"],
    "defaultCode": 59620,
    "grid": 24
  }, {
    "paths": ["M682 256h256v256l-98-98-268 268-170-170-256 256-60-60 316-316 170 170 208-208z"],
    "tags": ["trending_up"],
    "defaultCode": 59621,
    "grid": 24
  }, {
    "paths": ["M640 384v-256h86v86h170v84h-170v86h-86zM896 554h-426v-84h426v84zM298 384h86v256h-86v-86h-170v-84h170v-86zM554 896h-84v-256h84v86h342v84h-342v86zM128 214h426v84h-426v-84zM128 726h256v84h-256v-84z"],
    "tags": ["tune"],
    "defaultCode": 58409,
    "grid": 24
  }, {
    "paths": ["M896 726v-512h-768v512h768zM896 128c46 0 86 40 86 86l-2 512c0 46-38 84-84 84h-214v86h-340v-86h-214c-46 0-86-38-86-84v-512c0-46 40-86 86-86h768z"],
    "tags": ["tv"],
    "defaultCode": 58163,
    "grid": 24
  }, {
    "paths": ["M218 214h588l-40-44h-512zM512 406l-234 234h148v86h172v-86h148zM876 222c12 14 20 36 20 56v532c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-532c0-20 8-42 20-56l58-70c12-14 30-24 50-24h512c20 0 38 10 50 24z"],
    "tags": ["unarchive"],
    "defaultCode": 57705,
    "grid": 24
  }, {
    "paths": ["M534 342c198 0 364 130 424 308l-100 32c-44-136-172-234-324-234-84 0-160 30-220 80l156 154h-384v-384l152 154c78-68 182-110 296-110z"],
    "tags": ["undo"],
    "defaultCode": 57702,
    "grid": 24
  }, {
    "paths": ["M708 230l-196 196-196-196 60-60 136 136 136-136zM316 794l196-196 196 196-60 60-136-136-136 136z"],
    "tags": ["unfold_less"],
    "defaultCode": 58838,
    "grid": 24
  }, {
    "paths": ["M512 776l136-136 60 60-196 196-196-196 60-60zM512 248l-136 136-60-60 196-196 196 196-60 60z"],
    "tags": ["unfold_more"],
    "defaultCode": 58839,
    "grid": 24
  }, {
    "paths": ["M534 342v180l148 90-30 52-182-110v-212h64zM896 432h-290l118-120c-116-116-306-120-422-4s-116 300 0 416 306 116 422 0c58-58 86-124 86-208h86c0 84-36 194-112 268-150 148-394 148-544 0s-150-388 0-536 390-148 540 0l116-120v304z"],
    "tags": ["update"],
    "defaultCode": 59683,
    "grid": 24
  }, {
    "paths": ["M640 298h170v172h-42v84c0 48-38 86-86 86h-128v130c30 16 52 48 52 84 0 52-42 94-94 94s-94-42-94-94c0-36 22-68 52-84v-130h-128c-48 0-86-38-86-86v-88c-30-16-52-46-52-82 0-52 42-94 94-94s94 42 94 94c0 36-20 66-50 82v88h128v-340h-86l128-172 128 172h-86v340h128v-84h-42v-172z"],
    "tags": ["usb"],
    "defaultCode": 57824,
    "grid": 24
  }, {
    "paths": ["M426 726l342-342-60-60-282 280-110-110-60 60zM512 42l384 172v256c0 236-164 458-384 512-220-54-384-276-384-512v-256z"],
    "tags": ["verified_user"],
    "defaultCode": 59624,
    "grid": 24
  }, {
    "paths": ["M170 810h684v86h-684v-86zM682 554l-170 172-170-172h128v-426h84v426h128z"],
    "tags": ["vertical_align_bottom"],
    "defaultCode": 57944,
    "grid": 24
  }, {
    "paths": ["M170 470h684v84h-684v-84zM682 214l-170 170-170-170h128v-172h84v172h128zM342 810l170-170 170 170h-128v172h-84v-172h-128z"],
    "tags": ["vertical_align_center"],
    "defaultCode": 57945,
    "grid": 24
  }, {
    "paths": ["M170 128h684v86h-684v-86zM342 470l170-172 170 172h-128v426h-84v-426h-128z"],
    "tags": ["vertical_align_top"],
    "defaultCode": 57946,
    "grid": 24
  }, {
    "paths": ["M682 810v-596h-340v596h340zM704 128c36 0 64 28 64 64v640c0 36-28 64-64 64h-384c-36 0-64-28-64-64v-640c0-36 28-64 64-64h384zM810 726v-428h86v428h-86zM938 384h86v256h-86v-256zM128 726v-428h86v428h-86zM0 640v-256h86v256h-86z"],
    "tags": ["vibration"],
    "defaultCode": 58925,
    "grid": 24
  }, {
    "paths": ["M598 554v-84h-128v-128h-86v128h-128v84h128v128h86v-128h128zM726 448l170-170v468l-170-170v150c0 24-20 42-44 42h-512c-24 0-42-18-42-42v-428c0-24 18-42 42-42h512c24 0 44 18 44 42v150z"],
    "tags": ["video_call"],
    "defaultCode": 57456,
    "grid": 24
  }, {
    "paths": ["M896 682v-468h-768v468h768zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768z"],
    "tags": ["video_label"],
    "defaultCode": 57457,
    "grid": 24
  }, {
    "paths": ["M512 618l256-192-256-192v384zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-512c-46 0-86-40-86-86v-512c0-46 40-84 86-84h512zM170 256v598h598v84h-598c-46 0-84-38-84-84v-598h84z"],
    "tags": ["video_library"],
    "defaultCode": 57418,
    "grid": 24
  }, {
    "paths": ["M726 448l170-170v468l-170-170v150c0 24-20 42-44 42h-512c-24 0-42-18-42-42v-428c0-24 18-42 42-42h512c24 0 44 18 44 42v150z"],
    "tags": ["videocam"],
    "defaultCode": 57419,
    "grid": 24
  }, {
    "paths": ["M140 86l756 756-54 54-136-136c-6 4-16 8-24 8h-512c-24 0-42-18-42-42v-428c0-24 18-42 42-42h32l-116-116zM896 278v456l-478-478h264c24 0 44 18 44 42v150z"],
    "tags": ["videocam_off"],
    "defaultCode": 57420,
    "grid": 24
  }, {
    "paths": ["M832 512c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM662 640c36 0 64-28 64-64s-28-64-64-64-64 28-64 64 28 64 64 64zM470 554v-84h-128v-128h-86v128h-128v84h128v128h86v-128h128zM896 256c46 0 86 40 86 86v340c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-340c0-46 40-86 86-86h768z"],
    "tags": ["videogame_asset"],
    "defaultCode": 58168,
    "grid": 24
  }, {
    "paths": ["M854 128c24 0 42 18 42 42v256c0 24-18 44-42 44h-726c-24 0-42-20-42-44v-256c0-24 18-42 42-42h726zM854 554c24 0 42 20 42 44v256c0 24-18 42-42 42h-726c-24 0-42-18-42-42v-256c0-24 18-44 42-44h726z"],
    "tags": ["view_agenda"],
    "defaultCode": 59625,
    "grid": 24
  }, {
    "paths": ["M342 768v-554h384v554h-384zM768 214h128v554h-128v-554zM170 768v-554h128v554h-128z"],
    "tags": ["view_array"],
    "defaultCode": 59626,
    "grid": 24
  }, {
    "paths": ["M768 256h170v470h-170v-470zM86 726v-470h170v470h-170zM298 810v-640h428v640h-428z"],
    "tags": ["view_carousel"],
    "defaultCode": 59627,
    "grid": 24
  }, {
    "paths": ["M682 214h214v554h-214v-554zM170 768v-554h214v554h-214zM426 768v-554h214v554h-214z"],
    "tags": ["view_column"],
    "defaultCode": 59628,
    "grid": 24
  }, {
    "paths": ["M768 214h170v170h-170v-170zM768 810v-170h170v170h-170zM554 810v-170h172v170h-172zM342 810v-170h170v170h-170zM128 810v-170h170v170h-170zM768 598v-172h170v172h-170zM554 214h172v170h-172v-170zM342 384v-170h170v170h-170zM554 598v-172h172v172h-172zM342 598v-172h170v172h-170zM128 598v-172h170v172h-170zM128 384v-170h170v170h-170z"],
    "tags": ["view_comfy"],
    "defaultCode": 58410,
    "grid": 24
  }, {
    "paths": ["M128 214h810v256h-810v-256zM426 810v-298h512v298h-512zM128 810v-298h256v298h-256z"],
    "tags": ["view_compact"],
    "defaultCode": 58411,
    "grid": 24
  }, {
    "paths": ["M86 128h810v128h-810v-128zM854 342c24 0 42 18 42 42v256c0 24-18 42-42 42h-726c-24 0-42-18-42-42v-256c0-24 18-42 42-42h726zM86 896v-128h810v128h-810z"],
    "tags": ["view_day"],
    "defaultCode": 59629,
    "grid": 24
  }, {
    "paths": ["M170 214h684v84h-684v-84zM170 470v-86h684v86h-684zM170 810v-84h684v84h-684zM170 640v-86h684v86h-684z"],
    "tags": ["view_headline"],
    "defaultCode": 59630,
    "grid": 24
  }, {
    "paths": ["M384 214h512v170h-512v-170zM384 810v-170h512v170h-512zM384 598v-172h512v172h-512zM170 384v-170h172v170h-172zM170 810v-170h172v170h-172zM170 598v-172h172v172h-172z"],
    "tags": ["view_list"],
    "defaultCode": 59631,
    "grid": 24
  }, {
    "paths": ["M682 214h214v256h-214v-256zM426 470v-256h214v256h-214zM682 768v-256h214v256h-214zM426 768v-256h214v256h-214zM170 768v-256h214v256h-214zM170 470v-256h214v256h-214z"],
    "tags": ["view_module"],
    "defaultCode": 59632,
    "grid": 24
  }, {
    "paths": ["M426 214h470v256h-470v-256zM682 768v-256h214v256h-214zM170 768v-554h214v554h-214zM426 768v-256h214v256h-214z"],
    "tags": ["view_quilt"],
    "defaultCode": 59633,
    "grid": 24
  }, {
    "paths": ["M170 214h726v256h-726v-256zM170 768v-256h726v256h-726z"],
    "tags": ["view_stream"],
    "defaultCode": 59634,
    "grid": 24
  }, {
    "paths": ["M554 214c24 0 44 18 44 42v512c0 24-20 42-44 42h-128c-24 0-42-18-42-42v-512c0-24 18-42 42-42h128zM854 214c24 0 42 18 42 42v512c0 24-18 42-42 42h-128c-24 0-44-18-44-42v-512c0-24 20-42 44-42h128zM256 214c24 0 42 18 42 42v512c0 24-18 42-42 42h-128c-24 0-42-18-42-42v-512c0-24 18-42 42-42h128z"],
    "tags": ["view_week"],
    "defaultCode": 59635,
    "grid": 24
  }, {
    "paths": ["M512 768c188 0 342-114 342-256s-154-256-342-256-342 114-342 256 154 256 342 256zM896 128c46 0 86 40 86 86v596c0 46-40 86-86 86h-768c-46 0-86-40-86-86v-596c0-46 40-86 86-86h768z"],
    "tags": ["vignette"],
    "defaultCode": 58421,
    "grid": 24
  }, {
    "paths": ["M506 384h6c70 0 128 58 128 128v8zM322 418c-14 28-24 60-24 94 0 118 96 214 214 214 34 0 66-10 94-24l-66-66c-8 2-18 4-28 4-70 0-128-58-128-128 0-10 2-20 4-28zM86 182l54-54 756 756-54 54c-47.968-47.365-96.266-94.401-144-142-58 24-120 36-186 36-214 0-396-132-470-320 34-84 90-156 160-212-39.017-38.983-77.307-78.693-116-118zM512 298c-28 0-54 6-78 16l-92-92c52-20 110-30 170-30 214 0 394 132 468 320-32 80-82 148-146 202l-124-124c10-24 16-50 16-78 0-118-96-214-214-214z"],
    "tags": ["visibility_off"],
    "defaultCode": 59637,
    "grid": 24
  }, {
    "paths": ["M768 598v-342l-170 136v-136h-342v342h342v-138zM854 86c46 0 84 38 84 84v512c0 46-38 86-84 86h-598l-170 170v-768c0-46 38-84 84-84h684z"],
    "tags": ["voice_chat"],
    "defaultCode": 58926,
    "grid": 24
  }, {
    "paths": ["M790 640c82 0 148-68 148-150s-66-148-148-148-150 66-150 148 68 150 150 150zM234 640c82 0 150-68 150-150s-68-148-150-148-148 66-148 148 66 150 148 150zM790 256c130 0 234 104 234 234s-104 236-234 236h-556c-130 0-234-106-234-236s104-234 234-234 236 104 236 234c0 56-20 110-54 150h192c-34-40-54-94-54-150 0-130 106-234 236-234z"],
    "tags": ["voicemail"],
    "defaultCode": 57561,
    "grid": 24
  }, {
    "paths": ["M214 384h170l214-214v684l-214-214h-170v-256zM790 512c0 76-44 140-108 172v-344c64 32 108 96 108 172z"],
    "tags": ["volume_down"],
    "defaultCode": 57421,
    "grid": 24
  }, {
    "paths": ["M298 384h172l212-214v684l-212-214h-172v-256z"],
    "tags": ["volume_mute"],
    "defaultCode": 57422,
    "grid": 24
  }, {
    "paths": ["M512 170v180l-90-90zM182 128l714 714-54 54-88-88c-46 36-98 64-156 78v-88c36-10 68-28 96-50l-182-182v288l-214-214h-170v-256h202l-202-202zM810 512c0-136-88-250-212-286v-88c172 38 298 192 298 374 0 64-16 126-44 178l-64-66c14-34 22-72 22-112zM704 512c0 10 0 18-2 26l-104-104v-94c64 32 106 96 106 172z"],
    "tags": ["volume_off"],
    "defaultCode": 57423,
    "grid": 24
  }, {
    "paths": ["M598 138c172 38 298 192 298 374s-126 336-298 374v-88c124-36 212-150 212-286s-88-250-212-286v-88zM704 512c0 76-42 140-106 172v-344c64 32 106 96 106 172zM128 384h170l214-214v684l-214-214h-170v-256z"],
    "tags": ["volume_up"],
    "defaultCode": 57424,
    "grid": 24
  }, {
    "paths": ["M298 598c46 0 86-40 86-86s-40-86-86-86-84 40-84 86 38 86 84 86zM540 426h442v172h-86v170h-170v-170h-186c-34 100-130 170-242 170-142 0-256-114-256-256s114-256 256-256c112 0 208 70 242 170z"],
    "tags": ["vpn_key"],
    "defaultCode": 57562,
    "grid": 24
  }, {
    "paths": ["M426 894v-84c-46 0-84-38-84-84v-44l-206-204c-6 24-8 50-8 76 0 174 130 320 298 340zM808 512h86c2 14 2 28 2 42 0 236-190 428-426 428s-428-192-428-428 192-426 428-426c44 0 88 8 128 20v108c0 46-40 86-86 86h-86v84c0 24-18 44-42 44h-86v84h256c24 0 44 20 44 44v128h42c38 0 70 24 82 58 56-60 88-142 88-230 0-14 0-28-2-42zM904 170v-20c0-40-32-74-72-74s-72 34-72 74v20h144zM938 170c24 0 44 20 44 44v170c0 24-20 42-44 42h-212c-24 0-44-18-44-42v-170c0-24 20-44 44-44v-20c0-58 48-108 106-108s106 50 106 108v20z"],
    "tags": ["vpn_lock"],
    "defaultCode": 58927,
    "grid": 24
  }, {
    "paths": ["M170 554v300h300v84h-300c-46 0-84-38-84-84v-300h84zM854 854v-300h84v300c0 46-38 84-84 84h-300v-84h300zM854 86c46 0 84 38 84 84v300h-84v-300h-300v-84h300zM726 362c0 36-28 64-64 64s-64-28-64-64 28-64 64-64 64 28 64 64zM426 554l128 158 86-114 128 170h-512zM170 170v300h-84v-300c0-46 38-84 84-84h300v84h-300z"],
    "tags": ["wallpaper"],
    "defaultCode": 57788,
    "grid": 24
  }, {
    "paths": ["M256 512c0 142 114 256 256 256s256-114 256-256-114-256-256-256-256 114-256 256zM854 512c0 108-52 206-130 268l-42 244h-340l-42-244c-80-62-130-160-130-268s50-206 130-268l42-244h340l42 244c78 62 130 160 130 268z"],
    "tags": ["watch"],
    "defaultCode": 58164,
    "grid": 24
  }, {
    "paths": ["M692 692l34-56-192-116v-222h-64v256zM512 86c234 0 426 192 426 426s-192 426-426 426-426-192-426-426 192-426 426-426z"],
    "tags": ["watch_later"],
    "defaultCode": 59684,
    "grid": 24
  }, {
    "paths": ["M440 682h80l-136-384h-86l-136 384h82l30-84h136zM938 298h78l-88 384h-74l-64-260-64 260h-76l-4-18c-56 112-170 190-304 190-188 0-342-154-342-342s154-342 342-342c108 0 204 50 266 128h32l52 270 64-270h68l64 270zM292 540l50-156 48 156h-98z"],
    "tags": ["wb_auto"],
    "defaultCode": 58412,
    "grid": 24
  }, {
    "paths": ["M736 774l60-58 76 76-60 60zM854 448h128v86h-128v-86zM640 270c76 44 128 126 128 220 0 142-114 256-256 256s-256-114-256-256c0-94 52-176 128-220v-206h256v206zM170 448v86h-128v-86h128zM470 958v-126h84v126h-84zM152 792l76-78 60 60-76 78z"],
    "tags": ["wb_incandescent"],
    "defaultCode": 58414,
    "grid": 24
  }, {
    "paths": ["M212 852l-60-62 76-76 60 60zM152 190l60-60 76 76-60 60zM872 792l-60 60-76-78 60-60zM554 958h-84v-126h84v126zM812 130l60 60-76 76-60-60zM470 24h84v126h-84v-126zM214 618v-256h596v256h-596z"],
    "tags": ["wb_iridescent"],
    "defaultCode": 58422,
    "grid": 24
  }, {
    "paths": ["M152 792l76-78 60 60-76 78zM470 958v-126h84v126h-84zM512 234c142 0 256 114 256 256s-114 256-256 256-256-114-256-256 114-256 256-256zM854 448h128v86h-128v-86zM736 774l60-58 76 76-60 60zM872 190l-76 76-60-60 76-76zM554 24v126h-84v-126h84zM170 448v86h-128v-86h128zM288 206l-60 60-76-76 60-60z"],
    "tags": ["wb_sunny"],
    "defaultCode": 58416,
    "grid": 24
  }, {
    "paths": ["M704 256c-48 0-86-38-86-86s38-84 86-84 86 36 86 84-38 86-86 86zM320 256c-48 0-86-38-86-86s38-84 86-84 86 36 86 84-38 86-86 86zM768 938h-128v-256h-128l108-324c12-34 46-60 82-60h4c36 0 70 26 82 60l108 324h-128v256zM234 938v-320h-64v-234c0-46 40-86 86-86h128c46 0 86 40 86 86v234h-64v320h-172z"],
    "tags": ["wc"],
    "defaultCode": 58941,
    "grid": 24
  }, {
    "paths": ["M854 768v-384h-172v384h172zM640 554v-170h-470v170h470zM640 768v-170h-470v170h470zM854 170c46 0 84 40 84 86v512c0 46-38 86-84 86h-684c-46 0-84-40-84-86v-512c0-46 38-86 84-86h684z"],
    "tags": ["web"],
    "defaultCode": 57425,
    "grid": 24
  }, {
    "paths": ["M810 768v-426h-596v426h596zM810 170c48 0 86 40 86 86v512c0 46-40 86-86 86h-596c-48 0-86-40-86-86v-512c0-46 38-86 86-86h596z"],
    "tags": ["web_asset"],
    "defaultCode": 57449,
    "grid": 24
  }, {
    "paths": ["M768 214c46 0 86 38 86 84v92c-50 18-86 64-86 120v88h-512v-88c0-56-36-102-86-120v-92c0-46 40-84 86-84h512zM896 426c46 0 86 40 86 86v214c0 46-40 84-86 84h-768c-46 0-86-38-86-84v-214c0-46 40-86 86-86s86 40 86 86v128h596v-128c0-46 40-86 86-86z"],
    "tags": ["weekend"],
    "defaultCode": 57707,
    "grid": 24
  }, {
    "paths": ["M500 810c114 0 204-90 204-204 0-60-8-116-24-172-44 58-122 94-198 110s-120 62-120 132c0 74 62 134 138 134zM576 28c166 134 278 340 278 570 0 188-154 340-342 340s-342-152-342-340c0-144 52-278 138-380v16c0 88 66 158 154 158s146-70 146-158c0-92-32-206-32-206z"],
    "tags": ["whatshot"],
    "defaultCode": 59406,
    "grid": 24
  }, {
    "paths": ["M710 72l242 242-242 240h186v342h-342v-342h156l-240-240v156h-342v-342h342v186zM128 896v-342h342v342h-342z"],
    "tags": ["widgets"],
    "defaultCode": 57789,
    "grid": 24
  }, {
    "paths": ["M214 554c166-164 432-164 596 0l-84 86c-118-118-310-118-428 0zM384 726c70-70 186-70 256 0l-128 128zM42 384c260-258 682-258 940 0l-86 86c-212-212-556-212-768 0z"],
    "tags": ["wifi"],
    "defaultCode": 58942,
    "grid": 24
  }, {
    "paths": ["M938 682v-64c0-36-28-64-64-64s-64 28-64 64v64h128zM982 682c24 0 42 20 42 44v170c0 24-18 42-42 42h-214c-24 0-42-18-42-42v-170c0-24 18-44 42-44v-64c0-58 48-106 106-106s108 48 108 106v64zM874 406c-118 0-212 94-212 212v122l-150 198-512-682c142-108 320-170 512-170s370 62 512 170l-114 152c-12-2-24-2-36-2z"],
    "tags": ["wifi_lock"],
    "defaultCode": 57825,
    "grid": 24
  }, {
    "paths": ["M512 128c236 0 426 190 426 426 0 158-84 296-212 370l-44-74c102-60 172-170 172-296 0-188-154-340-342-340s-342 152-342 340c0 126 68 236 170 296l-42 74c-128-74-212-212-212-370 0-236 190-426 426-426zM768 554c0 94-52 178-128 222l-42-74c50-30 84-84 84-148 0-94-76-170-170-170s-170 76-170 170c0 64 34 118 84 148l-42 74c-76-44-128-128-128-222 0-142 114-256 256-256s256 114 256 256zM512 470c46 0 86 38 86 84s-40 86-86 86-86-40-86-86 40-84 86-84z"],
    "tags": ["wifi_tethering"],
    "defaultCode": 57826,
    "grid": 24
  }, {
    "paths": ["M598 256v-86h-172v86h172zM854 256c48 0 84 38 84 86v468c0 48-36 86-84 86h-684c-48 0-84-38-84-86v-468c0-48 36-86 84-86h172v-86c0-48 36-84 84-84h172c48 0 84 36 84 84v86h172z"],
    "tags": ["work"],
    "defaultCode": 59641,
    "grid": 24
  }, {
    "paths": ["M726 470c94 0 170 76 170 170s-76 170-170 170h-86v86l-128-128 128-128v86h96c46 0 86-40 86-86s-40-86-86-86h-566v-84h556zM854 214v84h-684v-84h684zM170 810v-84h256v84h-256z"],
    "tags": ["wrap_text"],
    "defaultCode": 57947,
    "grid": 24
  }, {
    "paths": ["M726 598l212 212-62 64-214-214v-32l-12-12c-48 42-112 66-180 66-52 0-100-14-142-38l64-62c24 10 50 16 78 16 106 0 192-86 192-192s-86-192-192-192-192 86-192 192h148l-176 170-164-170h106c0-150 124-278 278-278s278 124 278 278c0 70-26 132-68 180l12 12h34z"],
    "tags": ["youtube_searched_for"],
    "defaultCode": 59642,
    "grid": 24
  }, {
    "paths": ["M512 426h-86v86h-42v-86h-86v-42h86v-86h42v86h86v42zM406 598c106 0 192-86 192-192s-86-192-192-192-192 86-192 192 86 192 192 192zM662 598l212 212-64 64-212-212v-34l-12-12c-48 42-112 66-180 66-154 0-278-122-278-276s124-278 278-278 276 124 276 278c0 68-24 132-66 180l12 12h34z"],
    "tags": ["zoom_in"],
    "defaultCode": 59647,
    "grid": 24
  }, {
    "paths": ["M298 384h214v42h-214v-42zM406 598c106 0 192-86 192-192s-86-192-192-192-192 86-192 192 86 192 192 192zM662 598l212 212-64 64-212-212v-34l-12-12c-48 42-112 66-180 66-154 0-278-122-278-276s124-278 278-278 276 124 276 278c0 68-24 132-66 180l12 12h34z"],
    "tags": ["zoom_out"],
    "defaultCode": 59648,
    "grid": 24
  }, {
    "paths": ["M896 640v256h-256l98-98-124-122 62-62 122 124zM384 896h-256v-256l98 98 122-124 62 62-124 122zM128 384v-256h256l-98 98 124 122-62 62-122-124zM640 128h256v256l-98-98-122 124-62-62 124-122z"],
    "tags": ["zoom_out_map"],
    "defaultCode": 58731,
    "grid": 24
  }],
  "colorThemes": [],
  "colorThemeIdx": 0,
  "preferences": {
    "showGlyphs": true,
    "showQuickUse": true,
    "showQuickUse2": true,
    "showSVGs": true,
    "fontPref": {
      "prefix": "icon-",
      "metadata": {
        "fontFamily": "icomoon"
      },
      "metrics": {
        "emSize": 1024,
        "baseline": 6.25,
        "whitespace": 50
      },
      "embed": false
    },
    "imagePref": {
      "prefix": "icon-",
      "png": true,
      "useClassSelector": true,
      "color": 0,
      "bgColor": 16777215,
      "classSelector": ".icon",
      "name": "icomoon"
    },
    "historySize": 50,
    "showCodes": true,
    "gridSize": 16
  },
  "IcoMoonType": "icon-set"
};
/* harmony default export */ var material_icons = (materialIcons);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/icons/xIcon.vue?vue&type=script&lang=js&






//
//
//
//
//
//
//
//
//
//
//
//

 // TODO: handle icon not found by mode, by name;

var SIZE_VALUE = {
  HERO: "40px",
  XXLARGE: "32px",
  XLARGE: "28px",
  LARGE: "22px",
  MEDIUM: "18px",
  FAIR: "16px",
  BASE: "14px",
  SMALL: "12px",
  TINY: "10px"
};
/* harmony default export */ var xIconvue_type_script_lang_js_ = ({
  name: 'x-icon',
  props: {
    // currenty support 2 type of icon (font-awesome, material-icons)
    mode: {
      type: String,
      default: 'font-awesome'
    },
    name: {
      type: String,
      required: true
    },
    size: {
      type: String,
      default: SIZE_VALUE.BASE
    },
    hero: Boolean,
    xxlarge: Boolean,
    xlarge: Boolean,
    large: Boolean,
    medium: Boolean,
    fair: Boolean,
    base: Boolean,
    small: Boolean,
    tiny: Boolean,
    color: {
      type: String,
      default: "#000"
    },
    background: {
      type: String,
      default: "transparent"
    },
    padding: {
      type: String,
      default: "5px"
    },
    clickable: Boolean
  },
  computed: {
    pathValue: function pathValue() {
      var index = -1;
      var self = this;

      if (this.mode === "font-awesome") {
        index = font_awesome.selection.findIndex(function (n) {
          var parts = n.name.split(",").map(function (n) {
            return n.trim();
          });
          return parts.indexOf(self.name) === -1 ? false : true;
        });
      } else if (this.mode === "material-icons") {
        index = material_icons.selection.findIndex(function (n) {
          var parts = n.ligatures.split(",").map(function (n) {
            return n.trim();
          });
          return parts.indexOf(self.name) === -1 ? false : true;
        });
      }

      if (index === -1) {
        index = 0;
      }

      if (this.mode === "font-awesome") {
        return font_awesome.icons[index].paths[0];
      } else if (this.mode === "material-icons") {
        return material_icons.icons[index].paths[0];
      }

      return 0;
    },
    sizeValue: function sizeValue() {
      var sizeHierarki = ["hero", "xxlarge", "xlarge", "large", "medium", "fair", "base", "small", "tiny"];
      var value = this.size || SIZE_VALUE.BASE;

      for (var i = 0; i < sizeHierarki.length; i++) {
        var currentCheckpoint = sizeHierarki[i];

        if (this[currentCheckpoint]) {
          value = SIZE_VALUE[currentCheckpoint.toUpperCase()];
          break;
        }
      }

      return value;
    }
  },
  data: function data() {
    return {
      onLoad: true
    };
  },
  methods: {}
});
// CONCATENATED MODULE: ./src/components/icons/xIcon.vue?vue&type=script&lang=js&
 /* harmony default export */ var icons_xIconvue_type_script_lang_js_ = (xIconvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/icons/xIcon.vue?vue&type=style&index=0&id=6e5f93c1&lang=scss&scoped=true&
var xIconvue_type_style_index_0_id_6e5f93c1_lang_scss_scoped_true_ = __webpack_require__("d7c8");

// CONCATENATED MODULE: ./src/components/icons/xIcon.vue






/* normalize component */

var xIcon_component = normalizeComponent(
  icons_xIconvue_type_script_lang_js_,
  xIconvue_type_template_id_6e5f93c1_scoped_true_render,
  xIconvue_type_template_id_6e5f93c1_scoped_true_staticRenderFns,
  false,
  null,
  "6e5f93c1",
  null
  
)

/* harmony default export */ var xIcon = (xIcon_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/buttons/xButton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// TODO: button with style 'none'{default}, 'ripple', 
// TODO: button with gradient or solid{default}
// TODO: button with spinners



/* harmony default export */ var xButtonvue_type_script_lang_js_ = ({
  name: 'x-button',
  components: {
    xIcon: xIcon
  },
  mixins: [styleMixin, dimensionMixin],
  props: {
    texture: {
      type: String,
      default: "flat"
    },
    // size of the button, can string or number
    size: {
      type: String,
      default: "base"
    },
    margin: {
      type: String,
      default: "2px"
    },
    // make button text to uppercase
    uppercase: {
      type: Boolean,
      default: false
    },
    // enable or disable ripple effect when button click
    ripple: {
      type: Boolean,
      default: true
    },
    schema: {
      type: String,
      default: "default"
    },
    backgroundColor: {
      type: String,
      default: ''
    },
    color: {
      type: String,
      default: ''
    },
    href: {
      type: String,
      default: undefined
    },
    openInNewTab: {
      type: Boolean,
      default: false
    },
    block: {
      type: Boolean,
      default: false
    },
    disabled: {
      type: Boolean,
      default: false
    },
    ghost: {
      type: Boolean,
      default: false
    },
    noBorder: {
      type: Boolean,
      default: false
    },
    shape: {
      type: String,
      default: 'rectangle'
    },
    dropdown: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      ancorElem: undefined,
      showOption: false,
      inHover: false,
      bufferHoverTimePassed: false
    };
  },
  created: function created() {},
  mounted: function mounted() {
    var _this = this;

    this.$nextTick(function () {
      _this._setLuminacesColor();
    });
    this.ancorElem = this.$el.getElementsByTagName('a')[0];
    this.setColorsByScheme(this.schema);
    this.setPeparedPropColors();

    this._setLocalCssVariables({
      '--size-value': this.sizeValue,
      '--size-half-value': this.sizeHalfValue,
      '--size-double-value': this.sizeDoubleValue,
      '--pointer-events-value': this.pointerEventsValue
    });
  },
  computed: {
    sizeValue: function sizeValue() {
      return this._normalizeValue(this.size);
    },
    sizeHalfValue: function sizeHalfValue() {
      return this._normalizeHalfValue(this.size);
    },
    sizeDoubleValue: function sizeDoubleValue() {
      return this._normalizeDoubleValue(this.size);
    },
    sizeHalfInHalfValue: function sizeHalfInHalfValue() {
      return this._normalizeHalfInHalfValue(this.size);
    },
    sizeQuarterValue: function sizeQuarterValue() {
      return this._normalizeQuarterValue(this.size);
    },
    anyAncorOnChild: function anyAncorOnChild() {
      return this.ancorElem ? true : false;
    },
    sizeValueByAncorCalc: function sizeValueByAncorCalc() {
      if (this.anyAncorOnChild && !this.dropdown) {
        return 0;
      } else {
        if (this.shape === 'round') {
          return this.sizeHalfInHalfValue;
        } else {
          return this.sizeValue;
        }
      }
    },
    pointerEventsValue: function pointerEventsValue() {
      return this.disabled ? 'none' : 'auto';
    }
  },
  methods: {
    hoverChange: function hoverChange(e) {
      var self = this;

      if (e.type === 'mouseenter') {
        this.inHover = true;
        this.showOption = true;
      } else if (e.type === 'mouseleave') {
        this.inHover = false;
        setTimeout(function () {
          if (!self.inHover) {
            self.showOption = false;
          }
        }, 300);
      }
    },
    setPeparedPropColors: function setPeparedPropColors() {
      if (this.backgroundColor) {
        this._setLocalCssVariables({
          '--bg-color-value': this.backgroundColor
        });
      }

      if (this.color) {
        this._setLocalCssVariables({
          '--color-value': this.color
        });
      }
    },
    setColorsByScheme: function setColorsByScheme(val) {
      var currentColors = this._getCurrentColors();

      var hex = "";
      var onHex = "";

      if (currentColors.actions) {
        hex = currentColors.actions[val];
        onHex = currentColors.onActions[val];

        if (!hex) {
          // default if none of color provided
          hex = currentColors.brands.primary;
          onHex = currentColors.onBrands.primary;
        }
      }

      this._setLocalCssVariables({
        '--bg-color-value': hex,
        '--color-value': onHex
      });
    },
    onClick: function onClick() {
      if (!this.disabled) {
        if (!this.dropdown) {
          if (this.href) {
            if (this.openInNewTab) {
              window.open(this.href, '_blank');
            } else {
              window.location = this.href;
            }
          }
        } else {
          this.showOption = !this.showOption;
        }
      }
    }
  },
  watch: {
    schema: function schema(val) {
      this.setColorsByScheme(val);
    },
    backgroundColor: function backgroundColor(val) {
      this._setLocalCssVariables({
        '--bg-color-value': val
      });
    },
    color: function color(val) {
      this._setLocalCssVariables({
        '--color-value': val
      });
    },
    disabled: function disabled(val) {
      this._setLocalCssVariables({
        '--pointer-events-value': val ? 'none' : 'auto'
      });
    }
  }
});
// CONCATENATED MODULE: ./src/components/buttons/xButton.vue?vue&type=script&lang=js&
 /* harmony default export */ var buttons_xButtonvue_type_script_lang_js_ = (xButtonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/buttons/xButton.vue?vue&type=style&index=0&id=bd3ba3b8&lang=scss&scoped=true&
var xButtonvue_type_style_index_0_id_bd3ba3b8_lang_scss_scoped_true_ = __webpack_require__("bc9e");

// CONCATENATED MODULE: ./src/components/buttons/xButton.vue






/* normalize component */

var xButton_component = normalizeComponent(
  buttons_xButtonvue_type_script_lang_js_,
  xButtonvue_type_template_id_bd3ba3b8_scoped_true_render,
  xButtonvue_type_template_id_bd3ba3b8_scoped_true_staticRenderFns,
  false,
  null,
  "bd3ba3b8",
  null
  
)

/* harmony default export */ var xButton = (xButton_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/buttons/xChildNavigator.vue?vue&type=template&id=079d284d&scoped=true&
var xChildNavigatorvue_type_template_id_079d284d_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-child-navigator"},[(_vm.type==='by-length')?[_c('div',{staticClass:"item item-chevron pointer"},[_c('x-icon',{attrs:{"name":"chevron-left","size":"8px","padding":"0"},on:{"click":function($event){return _vm.goToVeryFirst()}}})],1),_vm._l((_vm.lengthConvert),function(item,index){return _c('div',{key:index,staticClass:"item pointer",class:{
        'active': _vm.activedIndex === index,
        'item__round': _vm.shape === 'round',
        'item__rectangle': _vm.shape === 'rectangle'
      },on:{"click":function($event){return _vm.childOnClick(item, index)}}},[_c('div',{staticClass:"item--text pointer"},[(!_vm.noNumber)?_c('span',[_vm._v(_vm._s(item+1))]):_vm._e()])])}),_c('div',{staticClass:"item item-chevron pointer"},[_c('x-icon',{attrs:{"name":"chevron-right","size":"8px","padding":"0"},on:{"click":function($event){return _vm.goToVeryEnd()}}})],1)]:_vm._l((_vm.items),function(item,index){return _c('div',{key:index,staticClass:"item"})})],2)}
var xChildNavigatorvue_type_template_id_079d284d_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/buttons/xChildNavigator.vue?vue&type=template&id=079d284d&scoped=true&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.number.constructor.js
var es6_number_constructor = __webpack_require__("c5f6");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/buttons/xChildNavigator.vue?vue&type=script&lang=js&

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var xChildNavigatorvue_type_script_lang_js_ = ({
  name: 'x-child-navigator',
  components: {
    xIcon: xIcon
  },
  props: {
    type: {
      type: String,
      default: "by-length"
    },
    length: {
      type: Number,
      default: 1
    },
    items: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    shape: {
      type: String,
      default: "round"
    },
    active: {
      type: Number,
      default: 0
    },
    noNumber: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      activedIndex: 0
    };
  },
  mounted: function mounted() {
    this.activedIndex = this.active;
  },
  computed: {
    lengthConvert: function lengthConvert() {
      var array = [];

      for (var i = 0; i < this.length; i++) {
        array.push(i);
      }

      return array;
    }
  },
  methods: {
    goToVeryFirst: function goToVeryFirst() {
      this.activedIndex = 0;
      this.$emit('child-clicked', 0);
    },
    childOnClick: function childOnClick(item, index) {
      this.activedIndex = index;
      this.$emit('child-clicked', item);
    },
    goToVeryEnd: function goToVeryEnd() {
      this.activedIndex = this.length - 1;
      this.$emit('child-clicked', this.length - 1);
    }
  },
  watch: {
    active: function active(newVal) {
      this.activedIndex = newVal;
    }
  }
});
// CONCATENATED MODULE: ./src/components/buttons/xChildNavigator.vue?vue&type=script&lang=js&
 /* harmony default export */ var buttons_xChildNavigatorvue_type_script_lang_js_ = (xChildNavigatorvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/buttons/xChildNavigator.vue?vue&type=style&index=0&id=079d284d&lang=scss&scoped=true&
var xChildNavigatorvue_type_style_index_0_id_079d284d_lang_scss_scoped_true_ = __webpack_require__("48bb");

// CONCATENATED MODULE: ./src/components/buttons/xChildNavigator.vue






/* normalize component */

var xChildNavigator_component = normalizeComponent(
  buttons_xChildNavigatorvue_type_script_lang_js_,
  xChildNavigatorvue_type_template_id_079d284d_scoped_true_render,
  xChildNavigatorvue_type_template_id_079d284d_scoped_true_staticRenderFns,
  false,
  null,
  "079d284d",
  null
  
)

/* harmony default export */ var xChildNavigator = (xChildNavigator_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/panels/xColorPanel.vue?vue&type=template&id=0e2bd75a&scoped=true&
var xColorPanelvue_type_template_id_0e2bd75a_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-color-panel"},[_c('div',{staticClass:"area brand-area"},[_c('p',[_vm._v(" Brand Colors ")]),_c('div',{staticClass:"color-band primary"},[_vm._v(" Primary \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.brands.primary))])]),_c('div',{staticClass:"color-band secondary"},[_vm._v("Secondary \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.brands.secondary))])]),_c('div',{staticClass:"color-band accent"},[_vm._v("Accent \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.brands.accent))])])]),_c('div',{staticClass:"area shade-area"},[_c('p',[_vm._v(" Shade Colors ")]),_c('div',{staticClass:"color-band black"},[_vm._v("Black \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.shade.black))])]),_c('div',{staticClass:"color-band semi-black"},[_vm._v("Semi Black \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.shade.semiBlack))])]),_c('div',{staticClass:"color-band gray"},[_vm._v("Gray \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.shade.gray))])]),_c('div',{staticClass:"color-band semi-white"},[_vm._v("Semi White \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.shade.semiWhite))])]),_c('div',{staticClass:"color-band white"},[_vm._v("White \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.shade.white))])])]),_c('div',{staticClass:"area action-area"},[_c('p',[_vm._v(" Action Colors ")]),_c('div',{staticClass:"color-band success"},[_vm._v("Success \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.actions.success))])]),_c('div',{staticClass:"color-band error"},[_vm._v("Error \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.actions.error))])]),_c('div',{staticClass:"color-band warning"},[_vm._v("Warning \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.actions.warning))])]),_c('div',{staticClass:"color-band info"},[_vm._v("Info \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.actions.info))])])]),_c('div',{staticClass:"area form-area"},[_c('p',[_vm._v(" Form Colors ")]),_c('div',{staticClass:"color-band frame"},[_vm._v(" Frame \n      "),_c('span',{staticClass:"hex",on:{"click":_vm.copyToClipBoard}},[_vm._v(_vm._s(_vm.colors.forms.frame))])])])])}
var xColorPanelvue_type_template_id_0e2bd75a_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/panels/xColorPanel.vue?vue&type=template&id=0e2bd75a&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/panels/xColorPanel.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

 // todo: styling 

/* harmony default export */ var xColorPanelvue_type_script_lang_js_ = ({
  name: 'x-color-panel',
  mixins: [dimensionMixin, styleMixin],
  data: function data() {
    return {
      colors: {
        brands: {
          primary: "",
          secondary: "",
          accent: ""
        },
        onBrands: {
          primary: "",
          secondary: "",
          accent: ""
        },
        shade: {
          black: "",
          semiBlack: "",
          gray: "",
          semiWhite: "",
          white: ""
        },
        actions: {
          success: "",
          error: "",
          warning: "",
          info: ""
        },
        onActions: {
          success: "",
          error: "",
          warning: "",
          info: ""
        },
        forms: {
          frame: "",
          text: ""
        }
      }
    };
  },
  mounted: function mounted() {
    var self = this;
    setTimeout(function () {
      self.colors = self._getCurrentColors();
    }, 100);
  },
  methods: {
    copyToClipBoard: function copyToClipBoard(ev) {
      var selection = window.getSelection();
      var range = document.createRange();
      var element = ev.target;
      range.selectNodeContents(element);
      selection.removeAllRanges();
      selection.addRange(range);
      document.execCommand('copy');
      selection.removeAllRanges();
    }
  }
});
// CONCATENATED MODULE: ./src/components/panels/xColorPanel.vue?vue&type=script&lang=js&
 /* harmony default export */ var panels_xColorPanelvue_type_script_lang_js_ = (xColorPanelvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/panels/xColorPanel.vue?vue&type=style&index=0&id=0e2bd75a&lang=scss&scoped=true&
var xColorPanelvue_type_style_index_0_id_0e2bd75a_lang_scss_scoped_true_ = __webpack_require__("bc90");

// CONCATENATED MODULE: ./src/components/panels/xColorPanel.vue






/* normalize component */

var xColorPanel_component = normalizeComponent(
  panels_xColorPanelvue_type_script_lang_js_,
  xColorPanelvue_type_template_id_0e2bd75a_scoped_true_render,
  xColorPanelvue_type_template_id_0e2bd75a_scoped_true_staticRenderFns,
  false,
  null,
  "0e2bd75a",
  null
  
)

/* harmony default export */ var xColorPanel = (xColorPanel_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sliders/xSlidingWindow.vue?vue&type=template&id=71d0e315&scoped=true&
var xSlidingWindowvue_type_template_id_71d0e315_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-sliding-window"},[_c('div',{staticClass:"window-glass",style:({ 'background-color': _vm.backgroundColor, 'padding-top': _vm.topBottomGap, 'padding-bottom': _vm.topBottomGap })},[(_vm.roundSideNavigation)?[(!_vm.hideSideNavigation && _vm.necessaryToHaveNavigation)?_c('div',{staticClass:"round-side-navigation round-side-navigation--right",style:({ 
            height: _vm.adjustedHeightValue, 
            width: _vm.halfAdjustedHeightValue,
            'border-bottom-left-radius': _vm.doubleAdjustedHeightValue, 
            'border-top-left-radius': _vm.doubleAdjustedHeightValue 
          }),on:{"click":_vm.goToNextIndex}},[_c('x-icon',{staticClass:"round-side-navigation--action unselectable",attrs:{"color":"black","name":"angle-right","size":_vm.halfAdjustedHeightValue}})],1):_vm._e(),(!_vm.hideSideNavigation && _vm.necessaryToHaveNavigation)?_c('div',{staticClass:"round-side-navigation round-side-navigation--left",style:({ 
            height: _vm.adjustedHeightValue,
            width: _vm.halfAdjustedHeightValue,
            'border-bottom-right-radius': _vm.doubleAdjustedHeightValue, 
            'border-top-right-radius': _vm.doubleAdjustedHeightValue 
          }),on:{"click":_vm.goToPrevIndex}},[_c('x-icon',{staticClass:"round-side-navigation--action unselectable",attrs:{"color":"black","name":"angle-left","size":_vm.halfAdjustedHeightValue}})],1):_vm._e()]:[(!_vm.hideSideNavigation && _vm.necessaryToHaveNavigation)?_c('div',{staticClass:"side-nav side-nav--right",style:({ height: _vm.adjustedHeightValue }),on:{"click":_vm.goToNextIndex}},[_c('x-icon',{staticClass:"side-nav--action",attrs:{"color":"white","name":"angle-right","size":"50"}})],1):_vm._e(),(!_vm.hideSideNavigation && _vm.necessaryToHaveNavigation)?_c('div',{staticClass:"side-nav side-nav--left",style:({ height: _vm.adjustedHeightValue }),on:{"click":_vm.goToPrevIndex}},[_c('x-icon',{staticClass:"side-nav--action",attrs:{"color":"white","name":"angle-left","size":"50"}})],1):_vm._e()],_c('div',{staticClass:"item-container",style:({ height: _vm.slotHeight,  border: _vm.borderColor })},[_c('div',{staticClass:"global-title-box"},[_c('span',[_vm._v(_vm._s(_vm.globalTitle))]),_c('span',[_vm._v(_vm._s(_vm.globalSubtitle))])]),_c('div',{staticClass:"sliding-glass",class:{'blacken-glass': (_vm.globalTitle || _vm.blacken)},style:(_vm.slideTranslateObj)},[_c('div',{staticClass:"side-border",style:({ width: _vm.halfSlotGap, height: _vm.slotHeight })}),(!_vm.slotMode)?_vm._l((_vm.windowItems),function(item,index){return _c('div',{key:index,staticClass:"item unselectable",style:({ 'margin-right': _vm.slotGap }),on:{"click":function($event){return _vm.childClicked(item)}}},[_c('p',{staticClass:"item--label"},[_vm._v(_vm._s(item.name))]),_c('img',{staticClass:"item--slot unselectable",style:({
              width: _vm.slotWidth,
              height: _vm.slotHeight
            }),attrs:{"src":item.item_image_url}})])}):[_vm._t("default",[_vm._v("Insert item here")])]],2)])],2),(!_vm.hideBottomNavigation && _vm.necessaryToHaveNavigation)?_c('div',{class:{
      'bottom-nav': !_vm.embedBottomNavigation,
      'embed-bottom-nav': _vm.embedBottomNavigation
      }},[_c('x-child-navigator',{attrs:{"no-number":"","active":_vm.currentIndex,"length":_vm.lengthOfIndex},on:{"child-clicked":_vm.childNavigatorClicked}})],1):_vm._e()])}
var xSlidingWindowvue_type_template_id_71d0e315_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/sliders/xSlidingWindow.vue?vue&type=template&id=71d0e315&scoped=true&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.number.parse-int.js
var es6_number_parse_int = __webpack_require__("04ff");

// EXTERNAL MODULE: ./node_modules/hammerjs/hammer.js
var hammer = __webpack_require__("c8b5");
var hammer_default = /*#__PURE__*/__webpack_require__.n(hammer);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sliders/xSlidingWindow.vue?vue&type=script&lang=js&


//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




 // TODO: style the text
// TODO: left space and logo header
// TODO: background image background

/* harmony default export */ var xSlidingWindowvue_type_script_lang_js_ = ({
  name: 'x-sliding-window',
  components: {
    xChildNavigator: xChildNavigator,
    xIcon: xIcon
  },
  mixins: [styleMixin, dimensionMixin],
  props: {
    slotMode: {
      type: Boolean,
      default: false
    },
    // item to be placed in sliding window
    // array of object { name, item_image_url }
    // these props used when it is not in slotMode
    windowItems: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    // width of one item
    slotWidth: {
      type: String,
      default: "300px"
    },
    // height of one item
    slotHeight: {
      type: String,
      default: "300px"
    },
    // gap between item
    slotGap: {
      type: String,
      default: "20px"
    },
    topBottomGap: {
      type: String,
      default: "0"
    },
    // background color behind the items
    backgroundColor: {
      type: String,
      default: "#000"
    },
    // border color
    borderColor: {
      type: String,
      default: "none"
    },
    // items per slide
    itemsPerSlide: {
      type: Number,
      default: 1
    },
    // hide navigation 
    hideBottomNavigation: {
      type: Boolean,
      default: false
    },
    hideSideNavigation: {
      type: Boolean,
      default: false
    },
    // embed navigation
    embedBottomNavigation: {
      type: Boolean,
      default: false
    },
    // round side navigation {
    roundSideNavigation: {
      type: Boolean,
      default: false
    },
    // auto slide
    autoSlide: {
      type: Boolean,
      default: false
    },
    autoSlideInterval: {
      type: Number,
      default: 3000
    },
    // global title
    globalTitle: {
      type: String,
      default: ''
    },
    globalSubtitle: {
      type: String,
      default: ''
    },
    // manually decide to blacken the slide
    blacken: {
      type: Boolean,
      default: false
    }
  },
  computed: {
    adjustedHeightValue: function adjustedHeightValue() {
      var slotHeight = Number.parseInt(this.slotHeight);
      var topBottomGap = Number.parseInt(this.topBottomGap);

      var measurementUnit = this._getMeasurementUnit(this.slotHeight);

      var value = slotHeight + topBottomGap * 2;

      if (this.roundSideNavigation) {
        value = value / 3;
      }

      var valueWithMeasurement = "".concat(value).concat(measurementUnit);
      return valueWithMeasurement;
    },
    halfAdjustedHeightValue: function halfAdjustedHeightValue() {
      var value = Number.parseInt(this.adjustedHeightValue);

      var measurementUnit = this._getMeasurementUnit(this.adjustedHeightValue);

      var valueWithMeasurement = "".concat(Number.parseInt(value / 2)).concat(measurementUnit);
      return valueWithMeasurement;
    },
    doubleAdjustedHeightValue: function doubleAdjustedHeightValue() {
      var value = Number.parseInt(this.adjustedHeightValue);

      var measurementUnit = this._getMeasurementUnit(this.adjustedHeightValue);

      var valueWithMeasurement = "".concat(Number.parseInt(value * 2)).concat(measurementUnit);
      return valueWithMeasurement;
    },
    slideTranslateObj: function slideTranslateObj() {
      var slotWidth = Number.parseInt(this.slotWidth);
      var slotGap = Number.parseInt(this.slotGap);

      var measurementUnit = this._getMeasurementUnit(this.slotWidth);

      var value = {
        transform: "translateX(-".concat((slotWidth + slotGap) * this.currentIndex * this.usedItemPerSlide).concat(measurementUnit, ")")
      };
      return value;
    },
    halfSlotGap: function halfSlotGap() {
      var slotGap = Number.parseInt(this.slotGap);

      var measurementUnit = this._getMeasurementUnit(this.slotGap);

      var value = "".concat(slotGap / 2).concat(measurementUnit);
      return value;
    },
    maximumItemsSlideByWindowWidth: function maximumItemsSlideByWindowWidth() {
      this.findWindowWidth();
      var oneStep = Number.parseInt(this.slotGap) + Number.parseInt(this.slotWidth);
      var maxSlide = 1;

      if (this.windowWidth !== 0) {
        maxSlide = Math.floor(this.windowWidth / oneStep);
      }

      return maxSlide;
    },
    usedItemPerSlide: function usedItemPerSlide() {
      var slide = this.itemsPerSlide;
      var maximumSlide = this.maximumItemsSlideByWindowWidth;

      if (this.itemsPerSlide > maximumSlide) {
        slide = maximumSlide;
      }

      return slide;
    },
    lengthOfIndex: function lengthOfIndex() {
      var itemLength = this.slotItems.length;

      if (!this.slotMode) {
        itemLength = this.windowItems.length;
      }

      var adjustedItemLength = Math.ceil(itemLength / this.usedItemPerSlide);
      return adjustedItemLength;
    },
    necessaryToHaveNavigation: function necessaryToHaveNavigation() {
      var itemsCount = this.lengthOfIndex;
      return itemsCount > 1 ? true : false;
    }
  },
  data: function data() {
    return {
      currentIndex: 0,
      windowWidth: 0,
      slotItems: [],
      swipeDetector: undefined,
      autoSlideDirection: "right",
      autoSlideTimer: undefined,
      slotCheckingInterval: undefined
    };
  },
  mounted: function mounted() {
    var self = this;
    this.findWindowWidth();
    this.setupTouchEvent();

    if (this.slotMode) {
      this.lockItemDimension();
    }

    if (this.autoSlide) {
      self.autoSlideTimer = setInterval(function () {
        self.triggerAutoSlide();
      }, self.autoSlideInterval);
    }
  },
  methods: {
    triggerAutoSlide: function triggerAutoSlide() {
      var self = this;

      if (self.autoSlideDirection === 'right') {
        if (this.currentIndex !== this.lengthOfIndex - 1) {
          self.currentIndex++;
        } else {
          self.autoSlideDirection = 'left';
        }
      } else {
        if (this.currentIndex !== 0) {
          this.currentIndex--;
        } else {
          self.autoSlideDirection = 'right';
        }
      }
    },
    setupTouchEvent: function setupTouchEvent() {
      var self = this;
      var slidingGlass = self.$el.getElementsByClassName('sliding-glass')[0];
      this.swipeDetector = new hammer_default.a(slidingGlass, {
        threshold: 1,
        velocity: 0.1
      });
      this.swipeDetector.on('swipeleft', function () {
        self.goToNextIndex();
      });
      this.swipeDetector.on('swiperight', function () {
        self.goToPrevIndex();
      });
    },
    lockItemDimension: function lockItemDimension() {
      var _this = this;

      //TODO: find more effecient solution
      this.slotItems = this.$el.getElementsByClassName('pesona-sliding-window-item');

      if (this.slotItems.length === 0) {
        if (!this.slotCheckingInterval) {
          this.slotCheckingInterval = setInterval(function () {
            _this.lockItemDimension();
          }, 1);
        }
      } else {
        if (this.slotCheckingInterval) {
          clearInterval(this.slotCheckingInterval);
          this.slotCheckingInterval = undefined;
        }

        for (var i = 0; i < this.slotItems.length; i++) {
          var element = this.slotItems[i];
          element.style.width = this.slotWidth;
          element.style.height = this.slotHeight;
          element.style.marginRight = this.slotGap;
        }
      }
    },
    childNavigatorClicked: function childNavigatorClicked(index) {
      this.currentIndex = index;
    },
    goToPrevIndex: function goToPrevIndex() {
      if (this.currentIndex !== 0) {
        this.currentIndex--;
      }
    },
    goToNextIndex: function goToNextIndex() {
      if (this.currentIndex !== this.lengthOfIndex - 1) {
        this.currentIndex++;
      }
    },
    childClicked: function childClicked(item) {
      this.$emit('item-click', item);
    },
    findWindowWidth: function findWindowWidth() {
      if (this.$el) {
        var slidingGlass = this.$el.getElementsByClassName('sliding-glass')[0];
        this.windowWidth = slidingGlass.clientWidth;
      }
    }
  }
});
// CONCATENATED MODULE: ./src/components/sliders/xSlidingWindow.vue?vue&type=script&lang=js&
 /* harmony default export */ var sliders_xSlidingWindowvue_type_script_lang_js_ = (xSlidingWindowvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/sliders/xSlidingWindow.vue?vue&type=style&index=0&id=71d0e315&lang=scss&scoped=true&
var xSlidingWindowvue_type_style_index_0_id_71d0e315_lang_scss_scoped_true_ = __webpack_require__("fed0");

// CONCATENATED MODULE: ./src/components/sliders/xSlidingWindow.vue






/* normalize component */

var xSlidingWindow_component = normalizeComponent(
  sliders_xSlidingWindowvue_type_script_lang_js_,
  xSlidingWindowvue_type_template_id_71d0e315_scoped_true_render,
  xSlidingWindowvue_type_template_id_71d0e315_scoped_true_staticRenderFns,
  false,
  null,
  "71d0e315",
  null
  
)

/* harmony default export */ var xSlidingWindow = (xSlidingWindow_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sliders/xSlidingWindowItem.vue?vue&type=template&id=21c6431a&scoped=true&
var xSlidingWindowItemvue_type_template_id_21c6431a_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-sliding-window-item"},[_c('div',{staticClass:"pesona-sliding-window-item--container"},[_vm._t("default")],2),(!_vm.useOnlyBackgroundColor)?_c('img',{staticClass:"pesona-sliding-window-item--background unselectable",attrs:{"src":_vm.backgroundImage}}):_vm._e(),(_vm.useOnlyBackgroundColor)?_c('div',{staticClass:"pesona-sliding-window-item--background-color",style:({'background-color': _vm.backgroundColor })}):_vm._e()])}
var xSlidingWindowItemvue_type_template_id_21c6431a_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/sliders/xSlidingWindowItem.vue?vue&type=template&id=21c6431a&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sliders/xSlidingWindowItem.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ var xSlidingWindowItemvue_type_script_lang_js_ = ({
  name: 'x-sliding-window-item',
  props: {
    backgroundImage: {
      type: String,
      default: ''
    },
    backgroundColor: {
      type: String,
      default: '#000'
    }
  },
  computed: {
    useOnlyBackgroundColor: function useOnlyBackgroundColor() {
      return this.backgroundImage === '' ? true : false;
    }
  },
  data: function data() {
    return {};
  },
  mounted: function mounted() {},
  methods: {}
});
// CONCATENATED MODULE: ./src/components/sliders/xSlidingWindowItem.vue?vue&type=script&lang=js&
 /* harmony default export */ var sliders_xSlidingWindowItemvue_type_script_lang_js_ = (xSlidingWindowItemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/sliders/xSlidingWindowItem.vue?vue&type=style&index=0&id=21c6431a&lang=scss&scoped=true&
var xSlidingWindowItemvue_type_style_index_0_id_21c6431a_lang_scss_scoped_true_ = __webpack_require__("6323");

// CONCATENATED MODULE: ./src/components/sliders/xSlidingWindowItem.vue






/* normalize component */

var xSlidingWindowItem_component = normalizeComponent(
  sliders_xSlidingWindowItemvue_type_script_lang_js_,
  xSlidingWindowItemvue_type_template_id_21c6431a_scoped_true_render,
  xSlidingWindowItemvue_type_template_id_21c6431a_scoped_true_staticRenderFns,
  false,
  null,
  "21c6431a",
  null
  
)

/* harmony default export */ var xSlidingWindowItem = (xSlidingWindowItem_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layouts/xLayoutTopDown.vue?vue&type=template&id=7898840a&scoped=true&
var xLayoutTopDownvue_type_template_id_7898840a_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-layout-top-down"},[_c('div',{staticClass:"container"},[_c('div',{staticClass:"header",style:({ position: _vm.currentHeaderPosition })},[_vm._t("header")],2),_c('div',{staticClass:"content-wrapper"},[_c('div',{staticClass:"main"},[_vm._t("main")],2),_c('div',{staticClass:"footer"},[_vm._t("footer")],2)])])])}
var xLayoutTopDownvue_type_template_id_7898840a_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/layouts/xLayoutTopDown.vue?vue&type=template&id=7898840a&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layouts/xLayoutTopDown.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ var xLayoutTopDownvue_type_script_lang_js_ = ({
  name: 'x-layout-top-down',
  props: {
    // to make the header sticky
    stickyHeader: {
      type: Boolean,
      default: true
    }
  },
  computed: {
    currentHeaderPosition: function currentHeaderPosition() {
      var position = 'sticky';

      if (!this.stickyHeader) {
        position = 'unset';
      }

      return position;
    }
  },
  data: function data() {
    return {};
  },
  mounted: function mounted() {},
  methods: {}
});
// CONCATENATED MODULE: ./src/components/layouts/xLayoutTopDown.vue?vue&type=script&lang=js&
 /* harmony default export */ var layouts_xLayoutTopDownvue_type_script_lang_js_ = (xLayoutTopDownvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/layouts/xLayoutTopDown.vue?vue&type=style&index=0&id=7898840a&lang=scss&scoped=true&
var xLayoutTopDownvue_type_style_index_0_id_7898840a_lang_scss_scoped_true_ = __webpack_require__("922b");

// CONCATENATED MODULE: ./src/components/layouts/xLayoutTopDown.vue






/* normalize component */

var xLayoutTopDown_component = normalizeComponent(
  layouts_xLayoutTopDownvue_type_script_lang_js_,
  xLayoutTopDownvue_type_template_id_7898840a_scoped_true_render,
  xLayoutTopDownvue_type_template_id_7898840a_scoped_true_staticRenderFns,
  false,
  null,
  "7898840a",
  null
  
)

/* harmony default export */ var xLayoutTopDown = (xLayoutTopDown_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layouts/xLoCenter.vue?vue&type=template&id=38d79ba9&scoped=true&
var xLoCentervue_type_template_id_38d79ba9_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-layout-center"},[_c('div',{staticClass:"container"},[_c('div',{staticClass:"content"},[_vm._t("default")],2)])])}
var xLoCentervue_type_template_id_38d79ba9_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/layouts/xLoCenter.vue?vue&type=template&id=38d79ba9&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layouts/xLoCenter.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ var xLoCentervue_type_script_lang_js_ = ({
  name: 'x-lo-center'
});
// CONCATENATED MODULE: ./src/components/layouts/xLoCenter.vue?vue&type=script&lang=js&
 /* harmony default export */ var layouts_xLoCentervue_type_script_lang_js_ = (xLoCentervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/layouts/xLoCenter.vue?vue&type=style&index=0&id=38d79ba9&lang=scss&scoped=true&
var xLoCentervue_type_style_index_0_id_38d79ba9_lang_scss_scoped_true_ = __webpack_require__("4cc9");

// CONCATENATED MODULE: ./src/components/layouts/xLoCenter.vue






/* normalize component */

var xLoCenter_component = normalizeComponent(
  layouts_xLoCentervue_type_script_lang_js_,
  xLoCentervue_type_template_id_38d79ba9_scoped_true_render,
  xLoCentervue_type_template_id_38d79ba9_scoped_true_staticRenderFns,
  false,
  null,
  "38d79ba9",
  null
  
)

/* harmony default export */ var xLoCenter = (xLoCenter_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layouts/xLoDashboard.vue?vue&type=template&id=0ca8b559&scoped=true&
var xLoDashboardvue_type_template_id_0ca8b559_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-layout-dashboard"},[_c('div',{staticClass:"container"},[_c('div',{staticClass:"side-nav"},[_vm._t("sidenav")],2),_c('div',{staticClass:"inner-container"},[_c('div',{staticClass:"header-toolbar"},[_vm._t("toolbar")],2),_c('div',{staticClass:"content"},[_vm._t("content")],2)])])])}
var xLoDashboardvue_type_template_id_0ca8b559_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/layouts/xLoDashboard.vue?vue&type=template&id=0ca8b559&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/layouts/xLoDashboard.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// TODO: make a toolbar component

/* harmony default export */ var xLoDashboardvue_type_script_lang_js_ = ({
  name: 'x-lo-dashboard',
  mixins: [styleMixin],
  mounted: function mounted() {
    var currentColor = this._getCurrentColors();

    var targetColor = this._colorLuminance(currentColor.brands.secondary, -0.1);

    this._setLocalCssVariables({
      '--pesona-brand-color-secondary-darken-10': targetColor
    });
  }
});
// CONCATENATED MODULE: ./src/components/layouts/xLoDashboard.vue?vue&type=script&lang=js&
 /* harmony default export */ var layouts_xLoDashboardvue_type_script_lang_js_ = (xLoDashboardvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/layouts/xLoDashboard.vue?vue&type=style&index=0&id=0ca8b559&lang=scss&scoped=true&
var xLoDashboardvue_type_style_index_0_id_0ca8b559_lang_scss_scoped_true_ = __webpack_require__("37a8");

// CONCATENATED MODULE: ./src/components/layouts/xLoDashboard.vue






/* normalize component */

var xLoDashboard_component = normalizeComponent(
  layouts_xLoDashboardvue_type_script_lang_js_,
  xLoDashboardvue_type_template_id_0ca8b559_scoped_true_render,
  xLoDashboardvue_type_template_id_0ca8b559_scoped_true_staticRenderFns,
  false,
  null,
  "0ca8b559",
  null
  
)

/* harmony default export */ var xLoDashboard = (xLoDashboard_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/navbars/xNavbar.vue?vue&type=template&id=c3bdeef8&scoped=true&
var xNavbarvue_type_template_id_c3bdeef8_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-navbar"},[_c('div',{staticClass:"container",style:({ height: _vm.navbarHeight })},[(_vm.topping)?_c('div',{staticClass:"topping-wrapper"},[_c('div',{staticClass:"topping"},[_vm._t("topping")],2)]):_vm._e(),_c('div',{staticClass:"bottom-wrapper"},[_c('div',{staticClass:"right-side"},[_vm._t("right-side")],2),_c('div'),_c('div',{staticClass:"left-side"},[_vm._t("left-side")],2),_c('div',{staticClass:"left-action"},[_vm._t("left-action")],2)])])])}
var xNavbarvue_type_template_id_c3bdeef8_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/navbars/xNavbar.vue?vue&type=template&id=c3bdeef8&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/navbars/xNavbar.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var xNavbarvue_type_script_lang_js_ = ({
  name: 'x-navbar',
  mixins: [styleMixin],
  props: {
    height: {
      type: String,
      default: '64px'
    },
    backgroundColor: {
      type: String,
      default: '#000'
    },
    topping: {
      type: Boolean,
      default: false
    }
  },
  computed: {
    navbarHeight: function navbarHeight() {
      // TODO: store this in css variable instead of hardcoded
      var self = this;
      var heightValue = parseInt(self.height);

      if (self.topping) {
        heightValue = heightValue + 36;
      }

      return "".concat(heightValue, "px");
    }
  },
  data: function data() {
    return {};
  },
  mounted: function mounted() {},
  methods: {}
});
// CONCATENATED MODULE: ./src/components/navbars/xNavbar.vue?vue&type=script&lang=js&
 /* harmony default export */ var navbars_xNavbarvue_type_script_lang_js_ = (xNavbarvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/navbars/xNavbar.vue?vue&type=style&index=0&id=c3bdeef8&lang=scss&scoped=true&
var xNavbarvue_type_style_index_0_id_c3bdeef8_lang_scss_scoped_true_ = __webpack_require__("ea85");

// CONCATENATED MODULE: ./src/components/navbars/xNavbar.vue






/* normalize component */

var xNavbar_component = normalizeComponent(
  navbars_xNavbarvue_type_script_lang_js_,
  xNavbarvue_type_template_id_c3bdeef8_scoped_true_render,
  xNavbarvue_type_template_id_c3bdeef8_scoped_true_staticRenderFns,
  false,
  null,
  "c3bdeef8",
  null
  
)

/* harmony default export */ var xNavbar = (xNavbar_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sidenavs/xSidenav.vue?vue&type=template&id=3c8281b3&scoped=true&
var xSidenavvue_type_template_id_3c8281b3_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-sidenav"},[_c('div',{staticClass:"container",class:[_vm.state],style:(_vm.widthByState)},[_c('div',{staticClass:"header"},[(_vm.state === 'open')?_c('div',{staticClass:"logo"},[_vm._t("logo")],2):_vm._e(),_c('div',{staticClass:"navigation-action",on:{"click":_vm.navActionClicked}},[(_vm.state === 'open')?_c('x-icon',{attrs:{"mode":"material-icons","name":"menu","xlarge":""}}):_vm._e(),(_vm.state === 'shrink')?_c('x-icon',{attrs:{"mode":"material-icons","name":"close","xlarge":""}}):_vm._e(),(_vm.state === 'close')?_c('x-icon',{staticClass:"open-nav",attrs:{"mode":"material-icons","name":"keyboard_arrow_right","xlarge":""}}):_vm._e()],1)]),(_vm.withSearch && _vm.state === 'open')?_c('div',{staticClass:"search-area"},[_c('x-text-field',{attrs:{"prepend-icon-name":"search","label":"Search"},on:{"input":_vm.searchContent}})],1):_vm._e(),(_vm.state === 'open' || _vm.state === 'shrink')?_c('div',{attrs:{"id":"navigation-content"},on:{"click":_vm.eventBubble}},[_vm._t("default")],2):_vm._e()])])}
var xSidenavvue_type_template_id_3c8281b3_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/sidenavs/xSidenav.vue?vue&type=template&id=3c8281b3&scoped=true&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("f3e2");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__("6762");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__("2fdb");

// CONCATENATED MODULE: ./src/mixins/dataTypeMixin.js
/* harmony default export */ var dataTypeMixin = ({
  methods: {
    _isString: function _isString(value) {
      return typeof value === 'string' || value instanceof String;
    },
    _isNumber: function _isNumber(value) {
      return typeof value === 'number' && isFinite(value);
    },
    _isBoolean: function _isBoolean(value) {
      return typeof value === "boolean";
    },
    _isArray: function _isArray(value) {
      return value instanceof Array;
    }
  }
});
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/inputs/xTextField.vue?vue&type=template&id=3b6c567f&scoped=true&
var xTextFieldvue_type_template_id_3b6c567f_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._g({staticClass:"pesona-text-field"},_vm.emitAllExceptInput()),[_c('div',{staticClass:"container",class:{
         'material-mode': _vm.mode === 'material',
         'antd-mode': _vm.mode === 'antd',
         'infocus': _vm.inFocus,
         'inhover': _vm.inHover
       },on:{"mouseenter":_vm.hoverChange,"mouseleave":_vm.hoverChange}},[_c('div',{staticClass:"prepend-icon"},[(_vm.prependIconName)?_c('x-icon',{attrs:{"name":_vm.prependIconName,"color":_vm.frameColor}}):_vm._e()],1),_c('label',{class:{
      'floating-label': _vm.floatLabel
    }},[_vm._v(_vm._s(_vm.label))]),_c('input',{ref:"customInput",class:{
        'any-prepend ': _vm.anyPrepend
      },attrs:{"placeholder":_vm.placeholder},domProps:{"value":_vm.value},on:{"input":_vm.emitInputed,"focusin":_vm.focusChange,"focusout":_vm.focusChange}})])])}
var xTextFieldvue_type_template_id_3b6c567f_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/inputs/xTextField.vue?vue&type=template&id=3b6c567f&scoped=true&

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js
var get_own_property_descriptor = __webpack_require__("268f");
var get_own_property_descriptor_default = /*#__PURE__*/__webpack_require__.n(get_own_property_descriptor);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js
var get_own_property_symbols = __webpack_require__("e265");
var get_own_property_symbols_default = /*#__PURE__*/__webpack_require__.n(get_own_property_symbols);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/keys.js
var keys = __webpack_require__("a4bb");
var keys_default = /*#__PURE__*/__webpack_require__.n(keys);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js
var define_property = __webpack_require__("85f2");
var define_property_default = /*#__PURE__*/__webpack_require__.n(define_property);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js

function _defineProperty(obj, key, value) {
  if (key in obj) {
    define_property_default()(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js




function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    var ownKeys = keys_default()(source);

    if (typeof get_own_property_symbols_default.a === 'function') {
      ownKeys = ownKeys.concat(get_own_property_symbols_default()(source).filter(function (sym) {
        return get_own_property_descriptor_default()(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/inputs/xTextField.vue?vue&type=script&lang=js&

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


 // TODO: do styling
// TODO: integrate icon position and prefix surfix text
// TODO: integrate loader
// TODO: integrate validation, error and hint, counter
// TODO: masking
// TODO: clearable input
// TODO: disable and readonly

/* harmony default export */ var xTextFieldvue_type_script_lang_js_ = ({
  name: 'x-text-field',
  components: {
    xIcon: xIcon
  },
  mixins: [dimensionMixin, styleMixin],
  props: {
    value: {
      default: ''
    },
    label: {
      type: String,
      default: "Label"
    },
    placeholder: {
      type: String,
      default: ''
    },
    prependIconName: {
      type: String,
      default: ''
    },
    mode: {
      type: String,
      default: 'material'
    },
    isPassword: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      inFocus: false,
      inHover: false,
      frameColor: undefined,
      formColorTemplate: undefined,
      shadeColorTemplate: undefined
    };
  },
  mounted: function mounted() {
    var _this = this;

    var currentColor = this._getCurrentColors();

    this.formColorTemplate = currentColor.forms;
    this.shadeColorTemplate = currentColor.shade;

    if (this.mode === 'antd') {
      this.frameColor = this.shadeColorTemplate.semiWhite;
    }

    this.$nextTick(function () {
      if (_this.isPassword) {
        _this.$refs.customInput.type = "password";
      }
    });
  },
  computed: {
    floatLabel: function floatLabel() {
      return !this.placeholder && !this.inFocus && !this.value;
    },
    anyPrepend: function anyPrepend() {
      return this.prependIconName ? true : false;
    }
  },
  methods: {
    emitInputed: function emitInputed() {
      this.$emit('input', this.$refs.customInput.value);
    },
    focusChange: function focusChange(e) {
      if (e.type === 'focusout') {
        if (this.mode === 'material') {
          this.frameColor = this.formColorTemplate.text;
        }

        this.inFocus = false;
      } else if (e.type === 'focusin') {
        if (this.mode === 'material') {
          this.frameColor = this.formColorTemplate.frame;
        }

        this.inFocus = true;
      }
    },
    hoverChange: function hoverChange(e) {
      if (e.type === 'mouseenter') {
        this.inHover = true;
      } else if (e.type === 'mouseleave') {
        this.inHover = false;
      }
    },
    emitAllExceptInput: function emitAllExceptInput() {
      var _this2 = this;

      return _objectSpread({}, this.$listeners, {
        input: function input(event) {
          return _this2.$emit('input', event.target.value);
        }
      });
    }
  }
});
// CONCATENATED MODULE: ./src/components/inputs/xTextField.vue?vue&type=script&lang=js&
 /* harmony default export */ var inputs_xTextFieldvue_type_script_lang_js_ = (xTextFieldvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/inputs/xTextField.vue?vue&type=style&index=0&id=3b6c567f&lang=scss&scoped=true&
var xTextFieldvue_type_style_index_0_id_3b6c567f_lang_scss_scoped_true_ = __webpack_require__("81ed");

// CONCATENATED MODULE: ./src/components/inputs/xTextField.vue






/* normalize component */

var xTextField_component = normalizeComponent(
  inputs_xTextFieldvue_type_script_lang_js_,
  xTextFieldvue_type_template_id_3b6c567f_scoped_true_render,
  xTextFieldvue_type_template_id_3b6c567f_scoped_true_staticRenderFns,
  false,
  null,
  "3b6c567f",
  null
  
)

/* harmony default export */ var xTextField = (xTextField_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sidenavs/xSidenav.vue?vue&type=script&lang=js&





//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



 // TODO size (auto / overwrite)
// TODO mode (push, over)
// TODO backdrop (true, false)
// TODO responsive
// TODO media query for shrink open and close
// TODO: make non icon navbar items and item list

/* harmony default export */ var xSidenavvue_type_script_lang_js_ = ({
  components: {
    xIcon: xIcon,
    xTextField: xTextField
  },
  mixins: [dataTypeMixin, styleMixin],
  name: 'x-sidenav',
  props: {
    height: {
      type: String,
      default: '64px'
    },
    withSearch: {
      type: Boolean,
      default: false
    }
  },
  computed: {
    widthByState: function widthByState() {
      var style = {
        width: '280px'
      };

      if (this.state === 'close') {
        style.width = '0';
      } else if (this.state === 'shrink') {
        style.width = '65px';
      }

      return style;
    }
  },
  data: function data() {
    return {
      state: 'open',
      sideNavItem: undefined,
      sideNavList: undefined,
      scrollbar: undefined,
      searchQuery: ''
    };
  },
  mounted: function mounted() {
    this.mountSimpleBar();
    var sideNav = this.$el;
    this.sideNavItem = sideNav.getElementsByClassName('pesona-sidenav-item');
    this.sideNavList = sideNav.getElementsByClassName('pesona-sidenav-list');
  },
  methods: {
    mountSimpleBar: function mountSimpleBar() {
      var self = this;
      __webpack_require__.e(/* import() | simplebar */ 3).then(__webpack_require__.bind(null, "a6f9")).then(__webpack_require__.e(/* import() | simplebar-style */ 2).then(__webpack_require__.t.bind(null, "8195", 7))).then(__webpack_require__.e(/* import() | simplebar-overwrite */ 1).then(__webpack_require__.t.bind(null, "10eb", 7))).then(function (_ref) {
        var SimpleBar = _ref.default;
        self.scrollbar = new SimpleBar(document.getElementById('navigation-content'), {
          autoHide: true,
          classNames: {
            content: 'simplebar-content',
            scrollContent: 'simplebar-scroll-content',
            scrollbar: 'simplebar-scrollbar',
            track: 'simplebar-track'
          }
        });
      }).catch(function (error) {
        return "An error (".concat(error.message, ") occurred while loading the perfect-scrollbar component");
      });
    },
    navActionClicked: function navActionClicked() {
      if (this.state === 'open') {
        this.state = 'shrink';
      } else if (this.state === 'shrink') {
        this.state = 'close';
      } else {
        this.state = 'open';
        this.mountSimpleBar();
      }

      this.$emit('stateChange', this.state);
    },
    eventBubble: function eventBubble(ev) {
      var self = this;

      if (this.state === 'open') {
        var element = ev.target;
        var foundElement = false;

        while (!foundElement) {
          var includeItem = false;
          var includeList = false;
          var isUnfold = false;

          if (self._isString(element.className)) {
            includeItem = element.className.includes('pesona-sidenav-item');
            includeList = element.className.includes('pesona-sidenav-list');
            isUnfold = element.className.includes('unfold');
          }

          if (includeList && isUnfold) {
            element.className = 'pesona-sidenav-list';
            foundElement = true;
          } else if (includeList) {
            this.removeAllUnfoldElement();
            element.className = "".concat(element.className, " unfold");
            foundElement = true;
          } else if (includeItem) {
            this.removeAllActiveElement();
            element.className = "".concat(element.className, " active");
            foundElement = true;
          } else {
            if (element.tagName === 'HTML' || element.tagName === 'DIV' && element.className === 'pesona-sidenav') {
              break;
            }

            element = element.parentElement;
          }
        }
      }
    },
    removeAllActiveElement: function removeAllActiveElement() {
      if (this.sideNavItem) {
        for (var i = 0; i < this.sideNavItem.length; i++) {
          this.sideNavItem[i].className = this.sideNavItem[i].className.split(' ')[0];
        }
      }
    },
    removeAllUnfoldElement: function removeAllUnfoldElement() {
      if (this.sideNavList) {
        for (var i = 0; i < this.sideNavList.length; i++) {
          this.sideNavList[i].className = this.sideNavList[i].className.split(' ')[0];
        }
      }
    },
    searchContent: function searchContent(query) {
      var self = this;
      self.searchQuery = query;
      var el = self.$el;
      var aArray = el.getElementsByClassName('pesona-sidenav-item');

      for (var i = 0; i < aArray.length; i++) {
        aArray[i].style.display = "block";
        var getText = aArray[i].getElementsByClassName('text')[0].innerText.toLowerCase();

        if (!getText.includes(self.searchQuery.toLowerCase())) {
          aArray[i].style.display = "none";
        }
      }

      var aArrayList = el.getElementsByClassName('pesona-sidenav-list');

      for (var _i = 0; _i < aArrayList.length; _i++) {
        var display = false;
        aArrayList[_i].style.display = "block";

        var listHeaderText = aArrayList[_i].children[0].getElementsByClassName('text')[0].innerText.toLowerCase();

        if (listHeaderText.includes(self.searchQuery.toLowerCase())) {
          var childItems = aArrayList[_i].getElementsByClassName('pesona-sidenav-item');

          childItems.forEach(function (n) {
            n.style.display = 'block';
          });
        } else {
          aArrayList[_i].getElementsByClassName('pesona-sidenav-item').forEach(function (n) {
            if (n.style.display !== 'none') {
              display = true;
            }
          });

          if (!display) {
            aArrayList[_i].style.display = "none";
          }
        }
      }

      var aArrayHeader = el.getElementsByClassName('pesona-sidenav-title');

      for (var _i2 = 0; _i2 < aArrayHeader.length; _i2++) {
        var siblingEl = aArrayHeader[_i2].nextElementSibling;
        var _display = false;
        aArrayHeader[_i2].style.display = "block";

        for (var j = 0; j < aArray.length + aArrayList.length; j++) {
          if (siblingEl) {
            if (siblingEl.className === 'pesona-sidenav-title') {
              break;
            } else {
              if (siblingEl.style.display !== 'none') {
                _display = true;
              }

              siblingEl = siblingEl.nextElementSibling;
            }
          } else {
            break;
          }
        }

        if (!_display) {
          aArrayHeader[_i2].style.display = "none";
        }
      }
    }
  }
});
// CONCATENATED MODULE: ./src/components/sidenavs/xSidenav.vue?vue&type=script&lang=js&
 /* harmony default export */ var sidenavs_xSidenavvue_type_script_lang_js_ = (xSidenavvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/sidenavs/xSidenav.vue?vue&type=style&index=0&id=3c8281b3&lang=scss&scoped=true&
var xSidenavvue_type_style_index_0_id_3c8281b3_lang_scss_scoped_true_ = __webpack_require__("b8e6");

// CONCATENATED MODULE: ./src/components/sidenavs/xSidenav.vue






/* normalize component */

var xSidenav_component = normalizeComponent(
  sidenavs_xSidenavvue_type_script_lang_js_,
  xSidenavvue_type_template_id_3c8281b3_scoped_true_render,
  xSidenavvue_type_template_id_3c8281b3_scoped_true_staticRenderFns,
  false,
  null,
  "3c8281b3",
  null
  
)

/* harmony default export */ var xSidenav = (xSidenav_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sidenavs/xSidenavItem.vue?vue&type=template&id=ea4b8d44&scoped=true&
var xSidenavItemvue_type_template_id_ea4b8d44_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-sidenav-item"},[_c('div',{staticClass:"container",class:{ 
      'wraped': (_vm.isWarped && !_vm.isShrink), 
      'shrink': _vm.isShrink
    },on:{"click":_vm.containerClicked}},[(_vm.icon)?_c('div',{staticClass:"item icon"},[_c('x-icon',{attrs:{"mode":_vm.iconMode,"name":_vm.icon,"xxlarge":"","padding":"0"}})],1):_vm._e(),(_vm.state === 'open')?_c('div',{staticClass:"item text",style:(_vm.textStyle)},[_vm._t("default")],2):_vm._e()])])}
var xSidenavItemvue_type_template_id_ea4b8d44_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/sidenavs/xSidenavItem.vue?vue&type=template&id=ea4b8d44&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sidenavs/xSidenavItem.vue?vue&type=script&lang=js&


//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var xSidenavItemvue_type_script_lang_js_ = ({
  components: {
    xIcon: xIcon
  },
  name: 'x-sidenav-item',
  props: {
    icon: {
      type: String,
      default: 'help'
    },
    iconMode: {
      type: String,
      default: 'material-icons'
    }
  },
  computed: {
    textStyle: function textStyle() {
      var style = {};
      style.transform = 'translateY(-10px)';
      return style;
    },
    isShrink: function isShrink() {
      return this.state === 'shrink' ? true : false;
    }
  },
  data: function data() {
    return {
      state: 'open',
      isWarped: false
    };
  },
  mounted: function mounted() {
    var _this = this;

    var parentElName = this.$el.parentElement.parentElement.className;

    if (parentElName.includes('pesona-sidenav-list')) {
      this.isWarped = true;
    }

    this.$el.addEventListener("click", function () {
      var ancorElement = _this.$el.getElementsByTagName('A');

      if (ancorElement.length >= 1) {
        var ancorEl = ancorElement[0];
        ancorEl.click();
      }
    });
    this.$parent.$on('stateChange', this.changeInternalState);
  },
  methods: {
    containerClicked: function containerClicked(ev) {
      this.$emit('click', ev);
    },
    changeInternalState: function changeInternalState(state) {
      this.state = state;
    }
  }
});
// CONCATENATED MODULE: ./src/components/sidenavs/xSidenavItem.vue?vue&type=script&lang=js&
 /* harmony default export */ var sidenavs_xSidenavItemvue_type_script_lang_js_ = (xSidenavItemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/sidenavs/xSidenavItem.vue?vue&type=style&index=0&id=ea4b8d44&lang=scss&scoped=true&
var xSidenavItemvue_type_style_index_0_id_ea4b8d44_lang_scss_scoped_true_ = __webpack_require__("7b60");

// CONCATENATED MODULE: ./src/components/sidenavs/xSidenavItem.vue






/* normalize component */

var xSidenavItem_component = normalizeComponent(
  sidenavs_xSidenavItemvue_type_script_lang_js_,
  xSidenavItemvue_type_template_id_ea4b8d44_scoped_true_render,
  xSidenavItemvue_type_template_id_ea4b8d44_scoped_true_staticRenderFns,
  false,
  null,
  "ea4b8d44",
  null
  
)

/* harmony default export */ var xSidenavItem = (xSidenavItem_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sidenavs/xSidenavList.vue?vue&type=template&id=3915892d&scoped=true&
var xSidenavListvue_type_template_id_3915892d_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-sidenav-list"},[_c('div',{staticClass:"container",class:[_vm.state]},[(_vm.icon && _vm.state !== 'shrink')?_c('div',{staticClass:"icon"},[_c('x-icon',{attrs:{"mode":_vm.iconMode,"name":_vm.icon,"xxlarge":"","padding":"0"}})],1):_vm._e(),_c('div',{staticClass:"text",class:{ 'bolder': _vm.showList }},[_vm._v("\n      "+_vm._s(_vm.text)+"\n    ")]),(_vm.state !== 'shrink')?_c('div',{staticClass:"indicator"},[(_vm.showList)?_c('x-icon',{attrs:{"mode":"material-icons","name":"keyboard_arrow_up","large":"","padding":"0"}}):_vm._e(),(!_vm.showList)?_c('x-icon',{attrs:{"mode":"material-icons","name":"keyboard_arrow_down","large":"","padding":"0"}}):_vm._e()],1):_vm._e()]),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showList),expression:"showList"}],staticClass:"list"},[_vm._t("default")],2)])}
var xSidenavListvue_type_template_id_3915892d_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/sidenavs/xSidenavList.vue?vue&type=template&id=3915892d&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sidenavs/xSidenavList.vue?vue&type=script&lang=js&


//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var xSidenavListvue_type_script_lang_js_ = ({
  components: {
    xIcon: xIcon
  },
  name: 'x-sidenav-list',
  props: {
    icon: {
      type: String,
      default: 'help'
    },
    iconMode: {
      type: String,
      default: 'material-icons'
    },
    text: {
      type: String,
      default: ''
    }
  },
  computed: {},
  data: function data() {
    return {
      showList: false,
      state: 'open'
    };
  },
  mounted: function mounted() {
    var self = this;
    setInterval(function () {
      if (self.state === 'shrink') {
        self.$emit('stateChange', 'shrink');
        self.showList = true;
      } else {
        if (self.anyUnfoldClass(self.$el)) {
          self.showList = true;
        } else {
          self.showList = false;
        }
      }
    }, 200);
    this.$parent.$on('stateChange', this.changeInternalState);
  },
  methods: {
    anyUnfoldClass: function anyUnfoldClass(el) {
      return el.className.split(' ').indexOf('unfold') === -1 ? false : true;
    },
    changeInternalState: function changeInternalState(state) {
      this.state = state;
    }
  }
});
// CONCATENATED MODULE: ./src/components/sidenavs/xSidenavList.vue?vue&type=script&lang=js&
 /* harmony default export */ var sidenavs_xSidenavListvue_type_script_lang_js_ = (xSidenavListvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/sidenavs/xSidenavList.vue?vue&type=style&index=0&id=3915892d&lang=scss&scoped=true&
var xSidenavListvue_type_style_index_0_id_3915892d_lang_scss_scoped_true_ = __webpack_require__("ecbe");

// CONCATENATED MODULE: ./src/components/sidenavs/xSidenavList.vue






/* normalize component */

var xSidenavList_component = normalizeComponent(
  sidenavs_xSidenavListvue_type_script_lang_js_,
  xSidenavListvue_type_template_id_3915892d_scoped_true_render,
  xSidenavListvue_type_template_id_3915892d_scoped_true_staticRenderFns,
  false,
  null,
  "3915892d",
  null
  
)

/* harmony default export */ var xSidenavList = (xSidenavList_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sidenavs/xSidenavTitle.vue?vue&type=template&id=7fa52edb&scoped=true&
var xSidenavTitlevue_type_template_id_7fa52edb_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-sidenav-title"},[(_vm.state === 'open')?_c('div',{staticClass:"container"},[_vm._t("default")],2):_vm._e(),(_vm.state === 'shrink')?_c('div',{staticClass:"shrink-container"}):_vm._e()])}
var xSidenavTitlevue_type_template_id_7fa52edb_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/sidenavs/xSidenavTitle.vue?vue&type=template&id=7fa52edb&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/sidenavs/xSidenavTitle.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
/* harmony default export */ var xSidenavTitlevue_type_script_lang_js_ = ({
  name: 'x-sidenav-title',
  data: function data() {
    return {
      state: 'open'
    };
  },
  methods: {
    changeInternalState: function changeInternalState(state) {
      this.state = state;
    }
  },
  mounted: function mounted() {
    this.$parent.$on('stateChange', this.changeInternalState);
  }
});
// CONCATENATED MODULE: ./src/components/sidenavs/xSidenavTitle.vue?vue&type=script&lang=js&
 /* harmony default export */ var sidenavs_xSidenavTitlevue_type_script_lang_js_ = (xSidenavTitlevue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/sidenavs/xSidenavTitle.vue?vue&type=style&index=0&id=7fa52edb&lang=scss&scoped=true&
var xSidenavTitlevue_type_style_index_0_id_7fa52edb_lang_scss_scoped_true_ = __webpack_require__("5952");

// CONCATENATED MODULE: ./src/components/sidenavs/xSidenavTitle.vue






/* normalize component */

var xSidenavTitle_component = normalizeComponent(
  sidenavs_xSidenavTitlevue_type_script_lang_js_,
  xSidenavTitlevue_type_template_id_7fa52edb_scoped_true_render,
  xSidenavTitlevue_type_template_id_7fa52edb_scoped_true_staticRenderFns,
  false,
  null,
  "7fa52edb",
  null
  
)

/* harmony default export */ var xSidenavTitle = (xSidenavTitle_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/dialogs/xDialog.vue?vue&type=template&id=7d3f96d7&scoped=true&
var xDialogvue_type_template_id_7d3f96d7_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-dialog"},[_c('div',{staticClass:"container"},[_c('div',{staticClass:"activator-space"},[(_vm.showActivator)?_vm._t("activator"):_vm._e()],2),_c('transition',{attrs:{"name":"fade"}},[(_vm.value)?_c('x-lo-center',{staticClass:"content-wrapper"},[_c('div',{staticClass:"content",class:{ twitching: _vm.showTwitching }},[_vm._t("default")],2),_c('div',{ref:"overlay",staticClass:"overlay",on:{"click":function($event){return _vm.overlayClicked()}}})]):_vm._e()],1)],1)])}
var xDialogvue_type_template_id_7d3f96d7_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/dialogs/xDialog.vue?vue&type=template&id=7d3f96d7&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/dialogs/xDialog.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var xDialogvue_type_script_lang_js_ = ({
  components: {
    xLoCenter: xLoCenter
  },
  mixins: [styleMixin],
  name: 'x-dialog',
  props: {
    value: {
      type: Boolean,
      default: false
    },
    persistent: {
      type: Boolean,
      default: false
    }
  },
  computed: {},
  data: function data() {
    return {
      showTwitching: false,
      showActivator: true
    };
  },
  watch: {
    value: function value() {
      this.showActivator = true;
    }
  },
  methods: {
    overlayClicked: function overlayClicked() {
      var self = this;

      if (!self.persistent) {
        self.$emit('input', false);
      } else {
        self.showTwitching = true;
        setTimeout(function () {
          self.showTwitching = false;
        }, 100);
      }
    }
  }
});
// CONCATENATED MODULE: ./src/components/dialogs/xDialog.vue?vue&type=script&lang=js&
 /* harmony default export */ var dialogs_xDialogvue_type_script_lang_js_ = (xDialogvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/dialogs/xDialog.vue?vue&type=style&index=0&id=7d3f96d7&lang=scss&scoped=true&
var xDialogvue_type_style_index_0_id_7d3f96d7_lang_scss_scoped_true_ = __webpack_require__("4c60");

// CONCATENATED MODULE: ./src/components/dialogs/xDialog.vue






/* normalize component */

var xDialog_component = normalizeComponent(
  dialogs_xDialogvue_type_script_lang_js_,
  xDialogvue_type_template_id_7d3f96d7_scoped_true_render,
  xDialogvue_type_template_id_7d3f96d7_scoped_true_staticRenderFns,
  false,
  null,
  "7d3f96d7",
  null
  
)

/* harmony default export */ var xDialog = (xDialog_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cards/xCard.vue?vue&type=template&id=bc086f08&scoped=true&
var xCardvue_type_template_id_bc086f08_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"pesona-card"},[_c('div',{staticClass:"container",style:({
      width: _vm.providedWidth,
      height: _vm.providedHeight
    })},[_c('div',{staticClass:"header"},[_vm._t("header")],2),_c('div',{staticClass:"content"},[_vm._t("content")],2),_c('div',{staticClass:"actions"},[_vm._t("actions")],2)])])}
var xCardvue_type_template_id_bc086f08_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cards/xCard.vue?vue&type=template&id=bc086f08&scoped=true&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cards/xCard.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var xCardvue_type_script_lang_js_ = ({
  components: {},
  mixins: [styleMixin],
  name: 'x-card',
  props: {
    width: {
      type: String,
      default: ''
    },
    height: {
      type: String,
      default: ''
    }
  },
  computed: {
    providedWidth: function providedWidth() {
      return this.width;
    },
    providedHeight: function providedHeight() {
      return this.height;
    }
  }
});
// CONCATENATED MODULE: ./src/components/cards/xCard.vue?vue&type=script&lang=js&
 /* harmony default export */ var cards_xCardvue_type_script_lang_js_ = (xCardvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/cards/xCard.vue?vue&type=style&index=0&id=bc086f08&lang=scss&scoped=true&
var xCardvue_type_style_index_0_id_bc086f08_lang_scss_scoped_true_ = __webpack_require__("f798");

// CONCATENATED MODULE: ./src/components/cards/xCard.vue






/* normalize component */

var xCard_component = normalizeComponent(
  cards_xCardvue_type_script_lang_js_,
  xCardvue_type_template_id_bc086f08_scoped_true_render,
  xCardvue_type_template_id_bc086f08_scoped_true_staticRenderFns,
  false,
  null,
  "bc086f08",
  null
  
)

/* harmony default export */ var xCard = (xCard_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"5af1fc3a-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/inputs/xCheckbox.vue?vue&type=template&id=5bf8c154&scoped=true&
var xCheckboxvue_type_template_id_5bf8c154_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._g({staticClass:"pesona-checkbox"},_vm.emitAll()),[_c('label',{staticClass:"container",class:{
         'antd-container': _vm.mode === 'antd',
         'material-container': _vm.mode === 'material',
         'part-of-group': _vm.isPartOfGroup,
         'infocus': _vm.inFocus,
         'inhover': _vm.inHover
       },on:{"mouseenter":_vm.hoverChange,"mouseleave":_vm.hoverChange}},[_vm._v(_vm._s(_vm.label)+"\n      "),_c('input',{ref:"customInput",attrs:{"type":"checkbox"},domProps:{"checked":_vm.internalIsChecked},on:{"change":_vm.emitInputed,"focusin":_vm.focusChange,"focusout":_vm.focusChange}}),_c('span',{class:{
        'antd-checkbox': _vm.mode === 'antd',
        'material': _vm.mode === 'material'}})])])}
var xCheckboxvue_type_template_id_5bf8c154_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/inputs/xCheckbox.vue?vue&type=template&id=5bf8c154&scoped=true&

// EXTERNAL MODULE: ./node_modules/lodash/lodash.js
var lodash = __webpack_require__("2ef0");
var lodash_default = /*#__PURE__*/__webpack_require__.n(lodash);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/inputs/xCheckbox.vue?vue&type=script&lang=js&


//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var xCheckboxvue_type_script_lang_js_ = ({
  name: 'x-text-field',
  components: {},
  mixins: [dimensionMixin, styleMixin, dataTypeMixin],
  props: {
    // for v-model
    value: {
      default: false
    },
    //for value
    val: {
      default: undefined
    },
    label: {
      type: String,
      default: "Label"
    },
    mode: {
      type: String,
      default: 'antd'
    }
  },
  data: function data() {
    return {
      inFocus: false,
      inHover: false,
      isPartOfGroup: false,
      internalIsChecked: false,
      internalModelValue: undefined
    };
  },
  mounted: function mounted() {
    var _this = this;

    this.$nextTick(function () {
      _this.internalModelValue = _this.value;

      if (_this._isArray(_this.value)) {
        _this.isPartOfGroup = true;

        var index = _this.value.findIndex(function (v) {
          return lodash_default.a.isEqual(v, _this.val);
        });

        if (index === -1) {
          _this.internalIsChecked = false;
        } else {
          _this.internalIsChecked = true;
        }
      } else {
        _this.internalIsChecked = _this.internalModelValue;
      }
    });
  },
  computed: {},
  methods: {
    emitInputed: function emitInputed() {
      var _this2 = this;

      if (this.isPartOfGroup) {
        var tempValue = this.$refs.customInput.checked;
        var tempArr = this.internalModelValue;

        if (tempValue) {
          tempArr.push(this.val);
        } else {
          var indexFound = tempArr.findIndex(function (v) {
            return lodash_default.a.isEqual(v, _this2.val);
          });
          tempArr.splice(indexFound, 1);
        }

        this.$emit('input', tempArr);
      } else {
        this.$emit('input', this.$refs.customInput.checked);
      }
    },
    focusChange: function focusChange(e) {
      if (e.type === 'focusout') {
        if (this.mode === 'material') {
          this.frameColor = this.formColorTemplate.text;
        }

        this.inFocus = false;
      } else if (e.type === 'focusin') {
        if (this.mode === 'material') {
          this.frameColor = this.formColorTemplate.frame;
        }

        this.inFocus = true;
      }
    },
    hoverChange: function hoverChange(e) {
      if (e.type === 'mouseenter') {
        this.inHover = true;
      } else if (e.type === 'mouseleave') {
        this.inHover = false;
      }
    },
    emitAll: function emitAll() {
      return _objectSpread({}, this.$listeners);
    }
  }
});
// CONCATENATED MODULE: ./src/components/inputs/xCheckbox.vue?vue&type=script&lang=js&
 /* harmony default export */ var inputs_xCheckboxvue_type_script_lang_js_ = (xCheckboxvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/components/inputs/xCheckbox.vue?vue&type=style&index=0&id=5bf8c154&lang=scss&scoped=true&
var xCheckboxvue_type_style_index_0_id_5bf8c154_lang_scss_scoped_true_ = __webpack_require__("6224");

// CONCATENATED MODULE: ./src/components/inputs/xCheckbox.vue






/* normalize component */

var xCheckbox_component = normalizeComponent(
  inputs_xCheckboxvue_type_script_lang_js_,
  xCheckboxvue_type_template_id_5bf8c154_scoped_true_render,
  xCheckboxvue_type_template_id_5bf8c154_scoped_true_staticRenderFns,
  false,
  null,
  "5bf8c154",
  null
  
)

/* harmony default export */ var xCheckbox = (xCheckbox_component.exports);
// CONCATENATED MODULE: ./src/main.js




















var componentCatalog = [xTheme, xButton, xChildNavigator, xIcon, xColorPanel, xSlidingWindow, xSlidingWindowItem, xLayoutTopDown, xLoCenter, xLoDashboard, xNavbar, xSidenav, xSidenavItem, xSidenavList, xSidenavTitle, xDialog, xCard, xTextField, xCheckbox];

var install = function install(Vue) {
  for (var i = 0; i < componentCatalog.length; i++) {
    Vue.component(componentCatalog[i].name, componentCatalog[i]);
  }
};


/* harmony default export */ var main = (install);
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js
/* concated harmony reexport xTheme */__webpack_require__.d(__webpack_exports__, "xTheme", function() { return xTheme; });
/* concated harmony reexport xButton */__webpack_require__.d(__webpack_exports__, "xButton", function() { return xButton; });
/* concated harmony reexport xChildNavigator */__webpack_require__.d(__webpack_exports__, "xChildNavigator", function() { return xChildNavigator; });
/* concated harmony reexport xIcon */__webpack_require__.d(__webpack_exports__, "xIcon", function() { return xIcon; });
/* concated harmony reexport xColorPanel */__webpack_require__.d(__webpack_exports__, "xColorPanel", function() { return xColorPanel; });
/* concated harmony reexport xSlidingWindow */__webpack_require__.d(__webpack_exports__, "xSlidingWindow", function() { return xSlidingWindow; });
/* concated harmony reexport xSlidingWindowItem */__webpack_require__.d(__webpack_exports__, "xSlidingWindowItem", function() { return xSlidingWindowItem; });
/* concated harmony reexport xLoCenter */__webpack_require__.d(__webpack_exports__, "xLoCenter", function() { return xLoCenter; });
/* concated harmony reexport xLoDashboard */__webpack_require__.d(__webpack_exports__, "xLoDashboard", function() { return xLoDashboard; });
/* concated harmony reexport xNavbar */__webpack_require__.d(__webpack_exports__, "xNavbar", function() { return xNavbar; });
/* concated harmony reexport xSidenav */__webpack_require__.d(__webpack_exports__, "xSidenav", function() { return xSidenav; });
/* concated harmony reexport xSidenavItem */__webpack_require__.d(__webpack_exports__, "xSidenavItem", function() { return xSidenavItem; });
/* concated harmony reexport xSidenavList */__webpack_require__.d(__webpack_exports__, "xSidenavList", function() { return xSidenavList; });
/* concated harmony reexport xSidenavTitle */__webpack_require__.d(__webpack_exports__, "xSidenavTitle", function() { return xSidenavTitle; });


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (main);



/***/ }),

/***/ "fda1":
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__("1b55");


/***/ }),

/***/ "fda6":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("f3e0");
module.exports = __webpack_require__("a7d3").Object.keys;


/***/ }),

/***/ "fdef":
/***/ (function(module, exports) {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "fe47":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xTheme_vue_vue_type_style_index_0_id_09c96fd6_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("b77e");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xTheme_vue_vue_type_style_index_0_id_09c96fd6_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xTheme_vue_vue_type_style_index_0_id_09c96fd6_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xTheme_vue_vue_type_style_index_0_id_09c96fd6_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "fed0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSlidingWindow_vue_vue_type_style_index_0_id_71d0e315_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("2cbf");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSlidingWindow_vue_vue_type_style_index_0_id_71d0e315_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSlidingWindow_vue_vue_type_style_index_0_id_71d0e315_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_xSlidingWindow_vue_vue_type_style_index_0_id_71d0e315_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ })

/******/ });
});
//# sourceMappingURL=pesona.umd.js.map